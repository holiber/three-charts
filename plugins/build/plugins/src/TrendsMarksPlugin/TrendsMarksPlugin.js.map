{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.js","webpack:///webpack/bootstrap 0c485c696d4c3d6592cb","webpack:///./plugins/src/TrendsMarksPlugin/index.ts","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts","webpack:///./~/three-chart/build/index.js","webpack:///./~/three-chart/build/ThreeChart.js","webpack:///./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","this","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","__export","hasOwnProperty","__extends","d","b","__","constructor","prototype","Object","create","three_chart_1","TrendsMarksWidget_1","TREND_MARK_SIDE","EVENTS","AXIS_MARK_DEFAULT_OPTIONS","trendName","title","description","descriptionColor","value","iconColor","orientation","TOP","width","height","offset","margin","TrendsMarksPlugin","_super","trendsMarksPluginOptions","items","rects","onInitialStateApplied","bindEvents","onMarksChangeHandler","onStateChanged","getOptions","getItems","getItem","markName","createMark","options","marksOptions","newMarkOptions","concat","chartState","setState","pluginsState","_a","name","onChange","cb","ee","subscribe","CHANGE","_this","trendsManager","onSegmentsRebuilded","updateMarksSegments","screen","onZoomFrame","calclulateMarksPositions","onInitialStateAppliedHandler","trendsMarksOptions","actualMarksNames","_i","trendsMarksOptions_1","length","marks","Utils","getUid","toString","push","error","deepMerge","mark","TrendMark","indexOf","emit","createMarkRect","segment","state","left","getPointOnXAxis","xVal","top","getPointOnYAxis","yVal","isTopSideMark","newOffset","row","markRect","hasIntersection","rect","rectsIntersect","_setOffset","_setRow","trends","getTrendMarks","marksArr","xVals","_setSegment","sort","a","trend","getTrend","points","segments","getSegmentsForXValues","markInd","trendMarks","NAME","pluginWidgets","TrendsMarksWidget","ChartPlugin","type","TREND_TYPE","LINE","endXVal","endYVal","maxYVal","minYVal","PerspectiveCamera","THREE","State_1","Utils_1","AxisWidget_1","GridWidget_1","TrendsLoadingWidget_1","AxisMarksWidget_1","BorderWidget_1","TrendsIndicatorWidget_1","TrendsLineWidget_1","TrendsCandleWidget_1","TrendsBeaconWidget_1","deps_1","MAX_DATA_LENGTH","Chart","$container","plugins","widgets","REVISION","style","getComputedStyle","parseInt","ChartState","installedWidgets","zoomThrottled","throttle","zoomValue","origin","zoom","init","installWidget","Widget","widgetName","data","w","h","showStats","autoRender","scene","Scene","isStopped","enabled","renderer","renderers","antialias","alpha","setPixelRatio","devicePixelRatio","setClearColor","backgroundColor","backgroundOpacity","setSize","appendChild","domElement","$el","display","stats","Stats","setupCamera","widgetsClasses","widgetOptions","WidgetConstructor","widget","add","getObject3D","renderLoop","isDestroyed","begin","render","fpsLimit","fps","delay","setTimeout","requestAnimationFrame","end","camera","stop","run","destroy","unbindEvents","forceContextLoss","wtf","context","getState","controls","addEventListener","ev","onMouseWheel","onMouseMove","onMouseDown","onMouseUp","onTouchMove","onTouchEnd","autoResize","resizeSensor","ResizeSensor","onChartContainerResizeHandler","clientWidth","clientHeight","unsubscribers","onTrendsChange","autoscroll","onTransformationFrame","onScreenTransformHandler","onResize","onChartResize","detach","e","remove","forEach","unsubscribe","camSettings","getCameraSettings","FOV","aspect","near","far","fov","updateProjectionMatrix","position","set","x","y","z","cameraInitialPosition","clone","scrollX","scrollX_1","setX","scrollY","scrollY_1","setY","autoScroll","oldTrendsMaxX","prevState","computedData","maxXVal","trendsMaxXDelta","maxVisibleX","getScreenRightVal","paddingRightX","getPaddingRight","currentScroll","xAxis","range","scroll","scrollDelta","onScrollStop","cursor","dragMode","clientX","clientY","stopPropagation","preventDefault","zoomOrigin","layerX","wheelDeltaY","touches","MAX_ZOOM_VALUE","MIN_ZOOM_VALUE","Math","min","max","autoScrollIsEnabled","then","createPreviewChart","userOptions","previewChartOptions","animations","Grid","Axis","TrendsGradient","window","CanvasRenderer","WebGLRenderer","TrendsLineWidget","TrendsCandlesWidget","AxisWidget","GridWidget","TrendsBeaconWidget","TrendsIndicatorWidget","TrendsLoadingWidget","AxisMarksWidget","BorderWidget","TweenLite","isPlainObject","EE2","es6_promise_1","Promise","dom","k","children","l","document","createElement","cssText","g","performance","Date","now","r","Panel","f","self","memory","t","addPanel","showPanel","update","usedJSHeapSize","jsHeapSizeLimit","setMode","Infinity","round","u","n","q","getContext","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","v","drawImage","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","_gsScope","_gsQueue","_gsDefine","Animation","SimpleTimeline","_slice","i","_applyCycle","vars","targets","alt","cycle","val","TweenMax","target","duration","_cycle","_yoyo","yoyo","_repeat","repeat","_repeatDelay","repeatDelay","_dirty","_tinyNum","TweenLiteInternals","_internals","_isSelector","isSelector","_isArray","isArray","to","_blankArray","version","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_uncache","updateTo","resetDuration","curRatio","ratio","immediate","immediateRender","_startTime","_timeline","_time","_enabled","insert","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","prevTime","_totalTime","_init","inv","pt","endValue","s","_next","time","suppressEvents","force","totalDur","_totalDuration","totalDuration","prevTotalTime","prevCycle","prevRawPrevTime","_rawPrevTime","isComplete","callback","cycleDuration","pow","rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","_active","_easeType","_easePower","_onUpdate","_callback","lazyTweens","_lazy","_paused","_startAt","onStart","onRepeat","from","runBackwards","fromTo","fromVars","toVars","startAt","staggerTo","allTo","stagger","onCompleteAll","onCompleteAllParams","onCompleteAllScope","finalComplete","onComplete","apply","onCompleteScope","arguments","callbackScope","fromCycle","copy","selector","reverse","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","params","scope","useFrames","onCompleteParams","onReverseComplete","onReverseCompleteParams","overwrite","isTweening","_getChildrenOf","timeline","includeTimelines","cnt","tween","_first","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","complete","tweens","delayedCalls","timelines","allTrue","isDC","totalTime","killChildTweensOf","parent","tl","tweenLookup","curParent","parentNode","_changePause","pause","paused","pauseAll","resumeAll","globalTimeScale","_timeScale","frame","progress","totalProgress","TimelineLite","_labels","smoothChildTiming","_sortChildren","onUpdate","join","_swapSelfInParams","align","_lazyTweens","_lazyRender","lazyRender","_globals","globals","_copy","_pauseCallback","pauseCallback","_forcingPlayhead","_hasPause","Engine","_parseTimeOrLabel","exportRoot","ignoreDelayedCalls","next","_remove","curTime","child","beforeRawTime","Array","addLabel","rawTime","_pauseTime","removeLabel","skipDisable","last","_last","append","offsetOrLabel","insertMultiple","appendMultiple","label","addPause","getLabelTime","timeOrLabel","appendIfAbsent","ignore","isNaN","charAt","Number","substr","seek","gotoAndPlay","play","gotoAndStop","prevStart","prevTimeScale","prevPaused","internalForce","pauseTween","_hasPausedChild","_prev","endTime","getChildren","nested","ignoreBeforeTime","disabled","_contains","recent","_recent","shiftChildren","amount","adjustLabels","labels","_kill","changed","clear","ignoreTimeline","uncapped","timeScale","prev","usesFrames","Ease","TimelineMax","_easeNone","addCallback","removeCallback","removePause","tweenTo","ease","abs","tweenFromTo","fromPosition","toPosition","dur","_locked","backwards","wrap","recTotalTime","recCycle","recRawPrevTime","recTime","getActive","all","isActive","getLabelAfter","getLabelsArray","getLabelBefore","currentLabel","_RAD2DEG","PI","_r1","_r2","_r3","_corProps","Segment","da","ca","ba","_correlate","cubicToQuadratic","q1","q2","q3","q4","mab","mbc","mcd","mabc","mbcd","m8","_calculateControlPoints","curviness","quad","basic","correlate","ii","cp1","p1","p2","p3","seg","m1","m2","mm","cp2","qb","r1","r2","splice","_parseAnchors","values","prepend","tmp","bezierThrough","quadratic","obj","props","first","j","seamless","unshift","sqrt","_parseBezierData","inc","soft","cur","_addCubicLengths","steps","resolution","d1","bez","index","_parseLengthData","lengths","total","threshold","curLS","BezierPlugin","plugin","propName","priority","API","_target","_func","_round","_props","_timeRes","timeResolution","second","autoRotate","orientToBezier","isFunc","_autoRotate","_overwriteProps","parseFloat","_beziers","_segCount","ld","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","func","notStart","curIndex","curSeg","ar","b2","x1","y1","x2","y2","conv","atan2","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","prop","cssp","pluginValues","setRatio","_transform","_enableTransforms","_gsTransform","proxy","rotation","_onInitTween","_tween","_roundProps","lookup","op","bezier","TweenPlugin","_hasPriority","_suffixMap","_cs","_specialProps","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","right","bottom","fontSize","padding","perspective","lineHeight","_numExp","_relNumExp","_valuesExp","_NaNExp","_suffixExp","_opacityExp","_opacityValExp","_alphaFilterExp","_rgbhslExp","_capsExp","_camelExp","_urlExp","_camelFunc","toUpperCase","_horizExp","_ieGetMatrixExp","_ieSetMatrixExp","_commasOutsideParenExp","_complexExp","_DEG2RAD","_forcePT","_doc","_createElement","createElementNS","_tempDiv","_tempImg","_agent","navigator","userAgent","_autoRound","_reqSafariFix","_isSafari","_isFirefox","_isSafariLT6","_ieVers","_supportsOpacity","exec","RegExp","$1","test","opacity","_getIEOpacity","currentStyle","filter","_log","console","log","_prefixCSS","_prefix","_checkPropPrefix","undefined","toLowerCase","_getComputedStyle","defaultView","_getStyle","getStyle","cs","calc","dflt","rv","getPropertyValue","replace","_convertToPixels","convertToPixels","sfx","recurse","horiz","node","neg","precise","pix","cache","body","_gsCache","removeChild","cacheWidths","_calculateOffset","calculateOffset","dim","_getAllStyles","tr","_transformPropCSS","_transformProp","_getTransform","skewX","scaleX","scaleY","_supports3D","rotationX","rotationY","scaleZ","filters","_cssDif","s1","s2","forceLookup","difs","mpt","MiniPropTween","firstMPT","_dimensions","_margins","_getDimension","nodeName","getBBox","_isSVG","offsetWidth","offsetHeight","_parsePosition","recObj","split","oxp","oyp","oxr","oyr","ox","oy","_parseChange","_parseVal","_parseAngle","directionalEnd","cap","dif","result","isRelative","_colorLookup","aqua","lime","silver","black","maroon","teal","blue","navy","white","fuchsia","olive","yellow","orange","gray","purple","green","red","pink","cyan","transparent","_hue","_parseColor","parseColor","toHSL","wasHSL","match","_formatColors","colors","_colorExp","charIndex","parsed","color","temp","colorStringFilter","combined","lastIndex","defaultStringFilter","_getFormatter","clr","collapsible","multi","dColor","dVals","pfx","delim","numVals","dSfx","formatter","vals","_getEdgeParser","parse","str","xs0","xs1","shallow","bpt","start","transform","oldForce","xp","firstPT","rxp","pr","_addNonTweeningNumericPT","overwriteProp","_parseComplex","parseComplex","clrs","ea","autoRound","xi","ni","bv","bnums","enums","bn","hasAlpha","cv","useHSL","appendXtra","xfirst","pad","SpecialProp","prefix","format","defaultValue","keyword","defaults","_registerPluginProp","pluginName","pluginClass","com","greensock","kwd","bi","ei","registerSpecialProp","onInitTween","useSVGTransformAttr","_transformProps","_transformOriginProp","Transform","force3D","defaultForce3D","_SVGElement","SVGElement","_useSVGTransformAttr","_createSVG","container","attributes","element","reg","setAttributeNS","_docElement","documentElement","_forceSVGTransformAttr","chrome","svg","getBoundingClientRect","_parseSVGOrigin","local","decoratee","absolute","smoothOrigin","skipRecord","tm","_getMatrix","xOrigin","yOrigin","tx","ty","determinant","xOriginOld","yOriginOld","_identity2DMatrix","xOffset","yOffset","setAttribute","_canGetBBox","getCTM","force2D","rnd","isDefault","dec","none","_removeProp","getAttribute","getTransform","rec","invX","zOrigin","a11","a21","a31","a41","a12","a22","a32","a42","a13","a23","a33","a14","a24","a34","a43","angle","t1","t2","t3","t4","cos","sin","removeAttribute","_setIETransformRatio","ang","skew","clip","xPercent","yPercent","dx","dy","mult","marg","ieOffsetX","ieOffsetY","_setTransformRatio","set3DTransformRatio","setTransformRatio","sx","sy","sz","isSVG","comma","zero","skewType","tan","skewY","_lastParsedTransform","originalGSTransform","endRotations","transformOriginString","parseTransform","orig","has3D","hasChange","dr","matrix","transformOrigin","svgOrigin","scale","transformPerspective","directionalRotation","shortRotation","rotationZ","shortRotationX","shortRotationY","_transformType","ea1","es2","bs2","bs","es","en","esfx","bsfx","rel","hn","vn","em","bp","backgroundPositionX","backgroundPositionY","pct","overlap","src","clipTop","clipRight","clipBottom","clipLeft","bw","_setIEOpacityRatio","skip","xn1","isAutoAlpha","removeProperty","_setClassNameRatio","_gsClassPT","difData","cnpt","cnptLookup","_classNamePT","_setClearPropsRatio","transformParse","clearTransform","nodeType","_vars","pt2","zIndex","tpt","threeD","_addLazySet","className","WebkitBackfaceVisibility","_linkCSSP","pop","sp","isStr","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","lazySet","autoAlpha","visibility","_getChildStyles","slice","childNodes","cascadeTo","results","_reservedProps","reservedProps","_targets","activate","RoundPropsPlugin","_roundLinkedList","blob","_onInitAllProps","rp","roundProps","rpt","_propLookup","pg","_add","_addTween","finals","useRadians","GreenSockGlobals","gs","_2PI","_HALF_PI","_class","_create","C","_easeReg","register","_wrap","EaseOut","EaseIn","EaseInOut","aliases","easeOut","easeIn","easeInOut","EasePoint","gap","_createBack","overshoot","_p1","_p2","config","Back","SlowMo","linearRatio","power","yoyoMode","_p","_p3","SteppedEase","RoughEase","_createElastic","taper","randomize","clamp","template","strength","bump","pnt","random","invert","def","amplitude","period","asin","find","map","moduleName","_exports","_namespace","ns","_emptyFunc","array","_ticker","_tickerActive","_defLookup","Definition","dependencies","sc","gsClass","_classes","check","missing","cl","hasModule","_baseParams","extraParams","_type","_power","_params","_easeMap","names","types","na","ta","easing","pw","linear","Linear","swing","Quad","EventDispatcher","_listeners","_eventTarget","useParam","list","listener","wake","up","removeEventListener","dispatchEvent","_reqAnimFrame","_cancelAnimFrame","cancelAnimationFrame","_getTime","getTime","_lastUpdate","useRAF","_self","_useRAF","_lagThreshold","_adjustedLag","_tickWord","_fps","_req","_id","_gap","_nextTime","_tick","manual","elapsed","dispatch","tick","adjustedLag","sleep","clearTimeout","visibilityState","Ticker","events","reversed","_checkTimeout","atTime","resume","restart","includeDelay","startTime","includeSelf","eventCallback","includeRepeats","pauseTime","raw","prevTween","st","jquery","targ","_overwrite","_overwriteLookup","defaultOverwrite","_siblings","_register","_applyOverwrite","css","_plugins","_overwrittenProps","defaultEase","autoSleep","$","jQuery","querySelectorAll","getElementById","_lazyLookup","_numbersExp","_setRatio","fp","_blobDif","startNums","endNums","num","nonNumbers","currentNum","_addPropTween","funcParam","stringFilter","getterName","blobDif","_tweenLookup","_tweenLookupNum","onUpdateParams","onUpdateScope","onStartParams","onStartScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","easeParams","autoCSS","onOverwrite","auto","concurrent","allOnStart","preexisting","true","false","_nextGCFrame","_updateRoot","scrub","_gsTweenID","_onOverwrite","overwrittenTween","overwritingTween","killedProps","mode","siblings","curTween","overlaps","oCount","zeroDur","globalStart","_checkOverlap","reference","ts","initPlugins","startVars","_initProps","propLookup","overwrittenProps","_priority","_onDisable","_onEnable","simultaneousOverwrite","killProps","record","killed","_tempKill","onlyActive","_propName","overwriteProps","initAll","Plugin","__webpack_amd_options__","SpriteCanvasMaterial","parameters","Material","Color","program","setValues","material","_renderData","_elements","_lights","_projector","Projector","_canvas","canvas","_canvasWidth","_canvasHeight","_canvasWidthHalf","floor","_canvasHeightHalf","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_pixelRatio","_context","_clearColor","_clearAlpha","_contextGlobalAlpha","_contextGlobalCompositeOperation","_contextStrokeStyle","_contextFillStyle","_contextLineWidth","_contextLineCap","_contextLineJoin","_contextLineDash","_camera","_v1","_v2","_v3","_v4","_v5","RenderableVertex","_v6","_v1x","_v1y","_v2x","_v2y","_v3x","_v3y","_v4x","_v4y","_v5x","_v5y","_v6x","_v6y","_color","_color1","_color2","_color3","_color4","_diffuseColor","_emissiveColor","_lightColor","_patterns","_image","_uvs","_uv1x","_uv1y","_uv2x","_uv2y","_uv3x","_uv3y","_clipBox","Box2","_clearBox","_elemBox","_ambientLight","_directionalLights","_pointLights","_vector3","Vector3","_centroid","_normal","_normalViewMatrix","Matrix3","setLineDash","autoClear","sortObjects","sortElements","info","vertices","faces","supportsVertexTextures","setFaceCulling","getContextAttributes","getPixelRatio","updateStyle","setViewport","setScissor","setScissorTest","setClearColorHex","hex","warn","getClearColor","getClearAlpha","getMaxAnisotropy","isEmpty","intersect","expandByScalar","clearRect","setBlending","NormalBlending","setOpacity","setFillStyle","makeEmpty","clearColor","clearDepth","clearStencil","Camera","setTransform","translate","projectScene","elements","lights","getNormalMatrix","matrixWorldInverse","calculateLights","el","RenderableSprite","renderSprite","RenderableLine","v1","v2","positionScreen","setFromPoints","intersectsBox","renderLine","RenderableFace","v3","overdraw","expand","renderFace3","union","setRGB","ll","light","lightColor","AmbientLight","DirectionalLight","PointLight","calculateLight","normal","lightPosition","setFromMatrixPosition","matrixWorld","normalize","dot","intensity","multiplyScalar","subVectors","distance","distanceTo","blending","dist","SpriteMaterial","texture","pattern","textureToPattern","bitmap","image","cx","cy","save","rotate","restore","setStrokeStyle","beginPath","moveTo","lineTo","LineBasicMaterial","setLineWidth","linewidth","setLineCap","linecap","setLineJoin","linejoin","vertexColors","VertexColors","colorStyle1","colorStyle2","grad","createLinearGradient","addColorStop","exception","stroke","LineDashedMaterial","dashSize","gapSize","uv1","uv2","uv3","drawTriangle","MeshLambertMaterial","MeshPhongMaterial","emissive","FaceColors","multiply","positionWorld","divideScalar","normalModel","wireframe","strokePath","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fillPath","MeshBasicMaterial","mapping","UVMapping","uvs","patternPath","envMap","SphericalReflectionMapping","vertexNormalsModel","applyMatrix3","MeshNormalMaterial","addScalar","x0","y0","closePath","fill","CompressedTexture","DataTexture","repeatX","wrapS","RepeatWrapping","repeatY","wrapT","createPattern","u0","v0","u1","u2","det","idet","offsetX","offsetY","clipImage","pixels","globalCompositeOperation","AdditiveBlending","SubtractiveBlending","lineWidth","lineCap","lineJoin","strokeStyle","RenderableObject","object","renderOrder","vertexNormalsLength","Vector2","Vector4","visible","vertex","_object","_objectCount","_objectPool","_objectPoolLength","_vertex","_vertexCount","_vertexPool","_vertexPoolLength","_face","_faceCount","_facePool","_facePoolLength","_line","_lineCount","_linePool","_linePoolLength","_sprite","_spriteCount","_spritePool","_spritePoolLength","objects","_vector4","Box3","_boundingBox","_points3","_points4","_viewMatrix","Matrix4","_viewProjectionMatrix","_modelMatrix","_modelViewProjectionMatrix","_normalMatrix","_frustum","Frustum","_clippedVertex1PositionScreen","_clippedVertex2PositionScreen","projectVector","vector","project","unprojectVector","unproject","pickingRay","RenderList","normals","normalMatrix","setObject","projectVertex","applyMatrix4","invW","pushVertex","getNextVertexInPool","pushNormal","pushUv","checkTriangleVisibility","checkBackfaceCulling","pushLine","getNextLineInPool","pushTriangle","side","DoubleSide","getNextFaceInPool","fromArray","uv","renderList","autoUpdate","updateMatrixWorld","getInverse","multiplyMatrices","projectionMatrix","setFromMatrix","traverseVisible","Light","Mesh","Line","Sprite","frustumCulled","intersectsObject","getNextObjectInPool","applyProjection","painterSort","o","ol","geometry","BufferGeometry","groups","positions","indices","group","count","Geometry","faceVertexUvs","isFaceMaterial","MultiMaterial","objectMaterials","vl","morphTargets","morphInfluences","morphTargetInfluences","influence","targetVertex","fl","face","materials","materialIndex","FrontSide","BackSide","negate","faceVertexNormals","vertexNormals","nl","vertexUvs","step","LineSegments","clipLine","getNextSpriteInPool","line","sprite","alpha1","alpha2","bc1near","bc2near","bc1far","bc2far","lerp","isObject","isObjectObject","ctor","prot","defaultMaxListeners","_events","_conf","configure","conf","delimiter","maxListeners","wildcard","newListener","listenerTree","EventEmitter","searchListenerTree","handlers","tree","listeners","leaf","len","branch","xTree","xxTree","isolatedBranch","endReached","typeLength","currentType","nextType","**","growListenerTree","shift","warned","trace","setMaxListeners","event","once","fn","many","ttl","Error","off","_origin","on","_all","args","handler","onAny","addListener","leafs","iLeaf","offAny","fns","removeListener","removeAllListeners","listenersAny","EventEmitter2","EventQueue","attachResizeEvent","resized","resizedAttached","styleChild","innerHTML","fixed","expandChild","shrink","shrinkChild","lastWidth","lastHeight","reset","scrollLeft","scrollWidth","scrollTop","scrollHeight","addEvent","attachEvent","onScroll","elementType","isCollectionTyped","Elements","EventEmmiter_1","Widget_1","TrendsManager_1","Screen_1","AxisMarks_1","interfaces_1","CHART_STATE_EVENTS","INITIAL_STATE_APPLIED","READY","DESTROY","TREND_CHANGE","TRENDS_CHANGE","ZOOM","RESIZE","SCROLL","SCROLL_STOP","PLUGINS_STATE_CHANGED","initialState","AXIS_RANGE_TYPE","ALL","dataType","AXIS_DATA_TYPE","NUMBER","gridMinSize","yAxis","RELATIVE_END","trendChangeSpeed","trendChangeEase","zoomSpeed","zoomEase","easeNone","scrollSpeed","scrollEase","autoScrollSpeed","autoScrollEase","eventEmitterMaxListeners","isReady","TrendsManager","calculatedOptions","installPlugins","getComputedData","savePrevState","Screen","xAxisMarks","AxisMarks","AXIS_TYPE","X","yAxisMarks","Y","initListeners","onDestroy","onReady","onTrendChange","onZoom","onPluginsStateChange","newState","eventData","silent","stateData","changedProps","key","trendsData","trendOptions","newStateContainsData","keys","recalculateResult","recalculateState","emitChangedStateEvents","patch","actualData","widgetsOptions","WidgetClass","defaultOptions","getDefaultOptions","ChartWidget","cursorOptions","isMouseDrag","oldX","currentX","deltaXVal","pxToValueByXAxis","chartWasResized","scrollXChanged","needToRecalculateXAxis","zeroVal","xAxisPatch","recalculateXAxis","needToRecalculateYAxis","AUTO","isMirrorMode","yAxisPatch","recalculateYAxis","allChangedProps","computeAll","getEndXVal","minXVal","getStartXVal","copyProps","scrollStopEventNeeded","scrollChangeEventsNeeded","zoomEventsNeeded","resizeEventNeeded","pluginStateChangedEventNeeded","PluginClass","PluginWidget","setupChartState","getPlugin","changedTrends","newData","handleTrendsChange","axisRange","isInitialize","scaleFactor","currentScaleFactor","rangeLength","needToRecalculateZoom","rangeMoreThenMaxValue","maxLength","rangeLessThenMinValue","minLength","fixScale","yAxisRange","trendsEndXVal","trendsStartXVal","xRange","xFrom","xTo","xRangeLength","needToZoom","maxY","getMaxYVal","minY","getMinYVal","trendLastY","distanceFromZeroValForMaxY","distanceFromZeroValForMinY","maxDistanceFromZeroVal","paddingTopInPercents","paddingBottomInPercents","rangeLengthInPercents","visibleRangeLength","fromVal","toVal","maxScreenY","getScreenYByValue","minScreenY","currentAxisRange","newZoom","currentRange","nextRange","newScroll","resolve","animationTime","zoomToRange","scrollToEnd","getValueOnXAxis","valueToPxByXAxis","valueToPxByYAxis","pxToValueByYAxis","getValueByScreenX","getValueByScreenY","getScreenXByValue","getScreenXByPoint","getPointByScreenX","screenX","getPointOnChart","getScreenLeftVal","eventName","listenersCount","deepmerge","mergeArrays","dst","obj1","obj2","deepCopy","JSON","stringify","toFixed","digitsCount","maxDigits","intVal","intStr","lengthDiff","afterPointDigitsCount","afterPointStr","bindEvent","createTexture","ctx","Texture","needsUpdate","createPixelPerfectTexture","minFilter","NearestFilter","msg","currentId","getDistance","num1","num2","binarySearchClosestInd","arr","mid","lo","hi","binarySearchClosest","ind","left1","top1","width1","height1","left2","top2","width2","height2","right1","right2","bottom1","bottom2","getHexColor","rgb","ms","isThrottled","savedArgs","savedThis","wrapper","msToTimeString","timestamp","getRandomItem","srcObject","dstObject","excludeProps","unsubscriber","Trend_1","SEGMENTS_REBUILDED","trendsCalculatedOptions","createTrend","getCalculatedOptions","getEnabledTrends","enabledTrends","allTrends","getData","firstTrendData","getExtremumYVal","extremumIsMax","fromX","toX","compareFn","trends_1","trendData","trendYValues","dataItem","NaN","_loop_1","this_1","onRebuild","Trend","TrendSegments_1","PREPEND_REQUEST","DEFAULT_OPTIONS","maxSegmentLength","lineColor","hasGradient","hasBeacon","settingsForTypes","CANDLE","minSegmentLengthInPx","maxSegmentLengthInPx","dataset","prepareData","TrendSegments","checkForPrependRequest","changedOptions","appendData","rawData","updatedTrendData","changeData","prependData","allData","newData_1","item","statePatch","filteredData","data_1","getFirstItem","getLastItem","setOptions","onPrependRequest","onDataChange","onChangeCb","prependRequest","minScreenX","needToRequest","requestedDataLength","reject","currentData","isPrepend","initialItem","MAX_ANIMATED_SEGMENTS","REBUILD","DISLPAYED_RANGE_CHANGED","ANIMATION_FRAME","segmentsById","animatedSegmentsIds","segmentsLength","animatedSegmentsForAppend","animatedSegmentsForPrepend","nextEmptyId","startSegmentId","endSegmentId","tryToRebuildSegments","onTrendChangeHandler","onZoomHandler","recalculateDisplayedRange","onDestroyHandler","appendAnimation","prependAnimation","segmentsRebuilded","needToRebuildSegments","isAppend","getEndSegment","getStartSegment","trendTypeName","trendTypesSettings","trendTypeSettings","needToRebuild","segmentLength","currentSegmentLengthInPx","currentMaxSegmentLengthInPx","ceil","stopAllAnimations","segmentsAreRebuilded","_b","firstDisplayedSegment","lastDisplayedSegment","displayedRange","displayedRangeChanged","valueInd","lastValueInd","hasValue","startXVal","getNext","valueInPoint","onAnimationFrame","onDisplayedRangeChanged","allocateNextSegment","TrendSegment","prevSegment","nextId","prevId","allocatePrevSegment","nextSegment","needRebuildSegments","startItemInd","initialSegment","initialAnimationState","createAnimationState","itemInd","itemIsInserted","appendItem","isLastItem","isCompleted","recalculateItems","segmentIsReadyForAnimate","startYVal","targetAnimationState","prevItem","animationsOptions","segmentId","segment_1","currentAnimationState","animate","prependItem","nextItem","animation","onAnimationFrameHandler","objectToAnimate","animationValue","coefficient","animatedSegmentsIds_1","targetValue","initialValue","currentValue","trendPoints","trendSegments","itemsLength","endItem","startItem","minX","maxX","middleXVal","middleYVal","yVals","nextPoint","getPrev","prevPoint","getFrameVal","getFramePoint","frameVal","scrollXVal","scrollYVal","zoomX","zoomY","currentScrollX","currentScrollY","currentZoomX","currentZoomY","vFOV","onScrollFrame","cameraIsMoving","scrollXAnimation","zoomXAnimation","onScrollXHandler","onZoomXHandler","onScrollYHandler","onZoomYHandler","scrollYAnimation","zoomYAnimation","isDragMode","canAnimate","zoomXChanged","isAutoscroll","targetX","targetY","targetZoom","getPointByScreenY","screenY","getTop","getBottom","getLeft","getTopVal","getBottomVal","getCenterYVal","showValue","stickToEdges","axisType","axisMarksOptions","axisMarksOptions_1","axisMark","AxisTimeleftMark","AxisMark","startVal","endVal","markVal","markWasCrossed","renderOnTrendsChange","newOptions","getDisplayedVal","displayedValue","String","onMarkCrossed","onValueChange","onDisplayedValueChange","typeName","Object3D","object3D","axisXObject","axisYObject","setupAxis","updateAxisXRequest","updateAxis","onScrollChange","isXAxis","visibleWidth","visibleHeight","canvasWidth","canvasHeight","traverse","axisMesh","PlaneGeometry","axisOptions","axisGridParams","getGridParamsForAxis","edgeOffset","segmentsCount","pxVal","textAlign","DATE","getDateStr","gridParams","sec","hour","day","tf","getHours","getMinutes","getSeconds","gridSizeH","gridSizeV","initGrid","updateGrid","updateGridThrottled","xLinesCount","yLinesCount","lineSegments","setZ","axisXGrid","axisYGrid","scrollXInSegments","scrollYInSegments","gridScrollXVal","gridScrollYVal","lineInd","lineSegment","getVerticalLineSegment","getHorizontalLineSegment","verticesNeedUpdate","localYVal","widthVal","localXVal","heightVal","axisWidth","axisLength","gridStep","gridStepInPixels","minGridStepInPixels","axisLengthStr","axisLengthPointPosition","intPartLength","gridStepFound","digitPos","multiplier","dividers","dividerInd","nextGridStep","nextGridStepInPixels","gridStart","gridEnd","stepInPx","PlaneBufferGeometry","TrendsWidget_1","getTrendWidgetClass","TrendLoading","TrendsWidget","mesh","deactivate","widgetIsEnabled","updatePosition","center","arc","pointVector","TrendWidget","trendsOptions","TrendWidgetClass","widgetCanBeEnabled","createTrendWidget","destroyTrendWidget","widgetObject","getObjectByName","onSegmentsAnimate","axisMarksWidgets","createAxisMark","axisMarkWidget","AxisMarkWidget","updateMarksPositions","DEFAULT_INDICATOR_RENDER_FUNCTION","indicatorWidth","indicatorHeight","xCoord","INDICATOR_POS_Z","indicatorRenderFunction","frameValue","createLine","indicator","createIndicator","renderIndicator","lineGeometry","onValueChangeHandler","moveAnimation","hasStickMode","bottomVal","topVal","needToStickOnTop","needToStickOnBottom","centerYVal","indicatorPosY","CANVAS_WIDTH","CANVAS_HEIGHT","OFFSET_X","TrendIndicator","initObject","hasIndicator","lastItem","segmentEndXVal","segmentEndYVal","endPointVector","screenWidth","indicatorIsOutOfScreen","MAX_DISPLAYED_SEGMENTS","TrendLine","freeSegmentsInds","displayedSegments","initLine","destroySegments","setupSegments","scaleXFactor","scaleYFactor","segmentIsNotDisplayed","destroySegment","setupSegment","segmentState","segmentInd","lineStartVertex","lineEndVertex","toLocalX","toLocalY","currentScale","toLocalVec","vec","RISE_COLOR","FALL_COLOR","MARGIN_PERCENT","MAX_CANDLES","TrendCandlesWidget","freeCandlesInds","candlesPool","candles","destroyCandles","setupCandles","destroyCandle","setupCandle","candle","candleId","candleInd","CandleWidget","setSegment","leftTop","rightTop","leftBottom","rightBottom","vLineGeometry","vLine","vLineMaterial","lineTop","lineBottom","hLineGeometry","hLine","hLineMaterial","lineLeft","lineRight","TrendBeacon","onStateChange","stopAnimation","animated","animationObject","trendsSegments","DEFAULT_CONFIG","installPluginWidgets","onChartReadyHandler","changedPluginsStates","changedState","TrendsMarksPlugin_1","MAX_MARKS_IN_ROW","TrendMarksWidget","marksWidgets","onMarksChange","getTrendsMarksPlugin","marksItems","createMarkWidget","destroyMarkWidget","markWidget","TrendMarkWidget","onZoomFrameHandler","trendMark","markHeight","markWidth","show","markMesh","createMarkMesh","createMarkLine","isTopSide","circleOffset","circleR","circleX","circleY","textOffset","icon","computeLineDistances","lineMaterial","meshMaterial","posX","posY","lineDistancesNeedUpdate","Elastic"],"mappings":"CAAA,SAAAA,iCAAAC,MAAAC;IACA,WAAAC,YAAA,mBAAAC,WAAA,UACAA,OAAAD,UAAAD,gBACA,WAAAG,WAAA,cAAAA,OAAAC,KACAD,WAAAH,eACA,WAAAC,YAAA,UACAA,QAAA,uBAAAD,gBAEAD,KAAA,uBAAAC;GACCK,MAAA;IACD,OCAgB,SAAUC;QCT1B,IAAAC;QAGA,SAAAC,oBAAAC;YAGA,IAAAF,iBAAAE,WACA,OAAAF,iBAAAE,UAAAR;YAGA,IAAAC,SAAAK,iBAAAE;gBACAR;gBACAS,IAAAD;gBACAE,QAAA;;YAIAL,QAAAG,UAAAG,KAAAV,OAAAD,SAAAC,eAAAD,SAAAO;YAGAN,OAAAS,SAAA;YAGA,OAAAT,OAAAD;;QAKAO,oBAAAK,IAAAP;QAGAE,oBAAAM,IAAAP;QAGAC,oBAAAO,IAAA;QAGA,OAAAP,oBAAA;QDgBM,SAASN,QAAQD,SAASO;QAE/B;QACA,SAASQ,SAASH;YACd,KAAK,IAAIE,KAAKF,GAAG,KAAKZ,QAAQgB,eAAeF,IAAId,QAAQc,KAAKF,EAAEE;;QE1DrEC,SAAAR,oBAAc;OFiER,SAASN,QAAQD,SAASO;QAE/B;QACA,IAAIU,YAAab,QAAQA,KAAKa,aAAc,SAAUC,GAAGC;YACrD,KAAK,IAAIL,KAAKK,GAAG,IAAIA,EAAEH,eAAeF,IAAII,EAAEJ,KAAKK,EAAEL;YACnD,SAASM;gBAAOhB,KAAKiB,cAAcH;;YACnCA,EAAEI,YAAYH,MAAM,OAAOI,OAAOC,OAAOL,MAAMC,GAAGE,YAAYH,EAAEG,WAAW,IAAIF;;QGrEpF,IAAAK,gBAAAlB,oBAAsF;QACtF,IAAAmB,sBAAAnB,oBAAkC;SAElC,SAAYoB;YAAiBA,gCAAA;YAAKA,gCAAA;WAAtB3B,QAAA2B,oBAAA3B,QAAA2B;QAAZ,IAAYA,kBAAA3B,QAAA2B;SACZ,SAAYC;YAAQA,cAAA;WAAR5B,QAAA4B,WAAA5B,QAAA4B;QAAZ,IAAYA,SAAA5B,QAAA4B;QAyBZ,IAAMC;YACLC,WAAW;YACXC,OAAO;YACPC,aAAa;YACbC,kBAAkB;YAClBC,OAAO;YACPC,WAAW;YACXC,aAAaT,gBAAgBU;YAC7BC,OAAO;YACPC,QAAQ;YACRC,QAAQ;YACRC,QAAQ;;QAIT,IAAAC,oBAAA,SAAAC;YAAuC1B,UAAAyB,mBAAAC;YAOtC,SAAAD,kBAAYE;gBACXD,OAAAhC,KAAAP,MAAMwC;gBAJCxC,KAAAyC;gBACAzC,KAAA0C;;YAMEJ,kBAAApB,UAAAyB,wBAAV;gBACC3C,KAAK4C;gBACL5C,KAAK6C;;YAGIP,kBAAApB,UAAA4B,iBAAV;gBACC9C,KAAK6C;;YAINP,kBAAApB,UAAA6B,aAAA;gBACC,OAAOR,OAAArB,UAAM6B,WAAUxC,KAAAP;;YAGxBsC,kBAAApB,UAAA8B,WAAA;gBACC,OAAOhD,KAAKyC;;YAGbH,kBAAApB,UAAA+B,UAAA,SAAQC;gBACP,OAAOlD,KAAKyC,MAAMS;;YAGnBZ,kBAAApB,UAAAiC,aAAA,SAAWC;gBACV,IAAIC,eAAerD,KAAK+C,aAAaN;gBACrC,IAAIa,iBAAiBD,aAAaE,SAAQH;gBAC1CpD,KAAKwD,WAAWC;oBAAUC,eAAcC,SAACA,GAAC3D,KAAK4D;wBAAQnB,OAAOa;uBAAeK;;gBH0CtE,IAAIA;;YGvCZrB,kBAAApB,UAAA2C,WAAA,SAASC;gBACR,OAAO9D,KAAK+D,GAAGC,UAAUxC,OAAOA,OAAOyC,SAASH;;YAGvCxB,kBAAApB,UAAA0B,aAAV;gBAAA,IAAAsB,QAAAlE;gBACCA,KAAKwD,WAAWW,cAAcC,oBAAoB;oBAAM,OAAAF,MAAKG;;gBAC7DrE,KAAKwD,WAAWc,OAAOC,YAAY;oBAAM,OAAAL,MAAKM;;;YAGrClC,kBAAApB,UAAAuD,+BAAV;gBACCzE,KAAK6C;;YAGEP,kBAAApB,UAAA2B,uBAAR;gBACC,IAAI6B,qBAAqB1E,KAAK+C,aAAaN;gBAC3C,IAAIkC;gBACJ,KAAoB,IAAAC,KAAA,GAAAC,uBAAAH,oBAAAE,KAAAC,qBAAAC,QAAAF,MAAmB;oBAAlC,IAAIxB,UAAOyB,qBAAAD;oBACf,IAAIG,QAAQ/E,KAAKyC;oBAGjB,KAAKW,QAAQQ,MAAM;wBAClBR,QAAQQ,OAAOvC,cAAA2D,MAAMC,SAASC;wBAC9BP,iBAAiBQ,KAAK/B,QAAQQ;wBAC9B,IAAImB,MAAM3B,QAAQQ,OAAOvC,cAAA2D,MAAMI,MAAM,0BAA0BhC,QAAQQ;2BACjE,IAAImB,MAAM3B,QAAQQ,OAAO;wBAC/Be,iBAAiBQ,KAAK/B,QAAQQ;wBAC9B;;oBAGDR,UAAU/B,cAAA2D,MAAMK,UAAU5D,2BAA2B2B;oBAErD,IAAIkC,OAAO,IAAIC,UAAUvF,KAAKwD,YAAYJ;oBAC1C2B,MAAM3B,QAAQQ,QAAQ0B;;gBAIvB,KAAK,IAAIpC,YAAYlD,KAAKyC,OAAO;oBAChC,IAAIkC,iBAAiBa,QAAQtC,cAAc,GAAG;2BACvClD,KAAKyC,MAAMS;;gBAEnBlD,KAAKqE;gBACLrE,KAAK+D,GAAG0B,KAAKjE,OAAOA,OAAOyC;;YAIpB3B,kBAAApB,UAAAsD,2BAAR;gBACCxE,KAAK0C;gBACL,KAAK,IAAIQ,YAAYlD,KAAKyC,OAAO;oBAChCzC,KAAK0F,eAAe1F,KAAKyC,MAAMS;;;YAIzBZ,kBAAApB,UAAAwE,iBAAR,SAAuBJ;gBACtB,KAAKA,KAAKK,SAAS;gBAEnB,IAAIC,QAAQ5F,KAAKwD;gBACjB,IAAIJ,UAAUkC,KAAKlC;gBACd,IAAAlB,QAAAkB,QAAAlB,OAAOC,SAAAiB,QAAAjB,QAAQC,SAAAgB,QAAAhB,QAAQwB,OAAAR,QAAAQ;gBAC5B,IAAIiC,OAAOD,MAAME,gBAAgBR,KAAKS,QAAQ7D,QAAQ;gBACtD,IAAI8D,MAAMJ,MAAMK,gBAAgBX,KAAKY;gBACrC,IAAIC,gBAAgB/C,QAAQpB,eAAeT,gBAAgBU;gBAC3D,IAAImE;gBACJ,IAAIC,MAAM;gBAEV,IAAIF,eAAe;oBAClBH,OAAO5D,SAASD;uBACV;oBACN6D,OAAO5D;;gBAGR,IAAIkE,aAAYT,MAAMG,KAAK9D,OAAOC;gBAClC,IAAIoE,kBAAkB;gBACtB,GAAG;oBACF,KAAK,IAAIrD,YAAYlD,KAAK0C,OAAO;wBAChC,IAAI8D,OAAOxG,KAAK0C,MAAMQ;wBACtBqD,kBAAkBlF,cAAA2D,MAAMyB,eAAeD,MAAMF;wBAC7C,KAAKC,iBAAiB;wBACtB,IAAIJ,eAAe;4BAClBG,SAAS,KAAKE,KAAK,KAAKF,SAAS,KAAKlD,QAAQf;+BACxC;4BACNiE,SAAS,KAAKE,KAAK,KAAKA,KAAK,KAAKpD,QAAQf;;wBAE3CgE;wBACA;;yBAEOE;gBAET,IAAIJ,eAAe;oBAClBC,YAAYE,SAAS,KAAKA,SAAS,KAAKV,MAAMK,gBAAgBX,KAAKY;uBAC7D;oBACNE,YAAYR,MAAMK,gBAAgBX,KAAKY,QAAQI,SAAS;;gBAGzDhB,KAAKoB,WAAWN;gBAChBd,KAAKqB,QAAQN;gBACbrG,KAAK0C,MAAMkB,QAAQ0C;;YAGZhE,kBAAApB,UAAAmD,sBAAR;gBACC,IAAIb,aAAaxD,KAAKwD;gBACtB,IAAIoD,SAASpD,WAAWW,cAAcyC;gBACtC,KAAK,IAAIlF,aAAakF,QAAQ;oBAC7B,IAAI7B,QAAQ/E,KAAK6G,cAAcnF;oBAC/B,IAAIoF;oBACJ,IAAIC;oBACJ,KAAK,IAAI7D,YAAY6B,OAAO;wBAC3B,IAAIO,OAAOP,MAAM7B;wBACjB6D,MAAM5B,KAAKG,KAAKlC,QAAQtB;wBACxBgF,SAAS3B,KAAKG;wBACdA,KAAK0B,YAAY;;oBAElBF,SAASG,KAAK,SAACC,GAAGnG;wBAAM,OAAAmG,EAAE9D,QAAQtB,QAAQf,EAAEqC,QAAQtB;;oBACpD,IAAIqF,QAAQ3D,WAAW4D,SAAS1F;oBAChC,IAAI2F,SAASF,MAAMG,SAASC,sBAAsBR,MAAME,KAAK,SAACC,GAAGnG;wBAAM,OAAAmG,IAAInG;;oBAC3E,KAAK,IAAIyG,UAAU,GAAGA,UAAUV,SAAShC,QAAQ0C,WAAW;wBAC3DV,SAASU,SAASR,YAAYK,OAAOG;;;gBAGvCxH,KAAKwE;;YAGElC,kBAAApB,UAAA2F,gBAAR,SAAsBnF;gBACrB,IAAI+F;gBACJ,KAAK,IAAIvE,YAAYlD,KAAKyC,OAAO;oBAChC,IAAIzC,KAAKyC,MAAMS,UAAUE,QAAQ1B,aAAaA,WAAW;oBACzD+F,WAAWtC,KAAKnF,KAAKyC,MAAMS;;gBAE5B,OAAOuE;;YArKDnF,kBAAAoF,OAAO;YACPpF,kBAAAqF,kBAAiBrG,oBAAAsG;YAuKzB,OAAAtF;UAzKuCjB,cAAAwG;QAA1BjI,QAAA0C,oBAAiBA;QA2K9B,IAAAiD,YAAA;YASC,SAAAA,UAAY/B,YAAwBJ;gBAHpCpD,KAAAqG,MAAM;gBAILrG,KAAKoD,UAAUA;gBACfpD,KAAKwD,aAAaA;;YAOnB+B,UAAArE,UAAA8F,cAAA,SAAYrB;gBACX3F,KAAK2F,UAAUA;gBACf,KAAKA,SAAS;gBAEd,IAAIwB,QAAQnH,KAAKwD,WAAW4D,SAASpH,KAAKoD,QAAQ1B;gBAElD,IAAIyF,MAAMpE,aAAa+E,QAAQzG,cAAA0G,WAAWC,MAAM;oBAC/ChI,KAAK+F,OAAOJ,QAAQsC;oBACpBjI,KAAKkG,OAAOP,QAAQuC;uBACd,IAAIlI,KAAKoD,QAAQpB,eAAeT,gBAAgBU,KAAK;oBAC3DjC,KAAK+F,OAAOJ,QAAQI;oBACpB/F,KAAKkG,OAAOP,QAAQwC;uBACd;oBACNnI,KAAK+F,OAAOJ,QAAQI;oBACpB/F,KAAKkG,OAAOP,QAAQyC;;;YAItB7C,UAAArE,UAAAwF,aAAA,SAAWtE;gBACVpC,KAAKoC,SAASA;;YAGfmD,UAAArE,UAAAyF,UAAA,SAAQN;gBACPrG,KAAKqG,MAAMA;;YAGb,OAAAd;;QA5Ca3F,QAAA2F,YAASA;OH6EhB,SAAS1F,QAAQD,SAASO;QItShCN,OAAAD,UAAAO,oBAAA;OJ4SM,SAASN,QAAQD,SAASO;SK5ShC,SAAAV,iCAAAC,MAAAC;YACA,UAAAE,OAAAD,UAAAD,gBAA8F,WAAAG,WAAA,cAAAA,OAAAC,KAAAD,WAAAH,eAA0E,WAAAC,YAAA,UAAAA,QAAA,gBAAAD,gBAAyED,KAAA,gBAAAC;WAChPK,MAAA;YACD,gBAAAC;gBACA,IAAAC;gBACA,SAAAC,oBAAAC;oBACA,IAAAF,iBAAAE,WAAA,OAAAF,iBAAAE,UAAAR;oBACA,IAAAC,SAAAK,iBAAAE;wBACAR;wBACAS,IAAAD;wBACAE,QAAA;;oBAEAL,QAAAG,UAAAG,KAAAV,OAAAD,SAAAC,eAAAD,SAAAO;oBACAN,OAAAS,SAAA;oBACA,OAAAT,OAAAD;;gBAEAO,oBAAAK,IAAAP;gBACAE,oBAAAM,IAAAP;gBACAC,oBAAAO,IAAA;gBACA,OAAAP,oBAAA;gBACK,SAAAN,QAAAD,SAAAO;gBACL;gBACA,SAAAQ,SAAAH;oBACA,SAAAE,KAAAF,GAAA,KAAAZ,QAAAgB,eAAAF,IAAAd,QAAAc,KAAAF,EAAAE;;gBAEAC,SAAAR,oBAAA;eACK,SAAAN,QAAAD,SAAAO;gBACL;gBACA,SAAAQ,SAAAH;oBACA,SAAAE,KAAAF,GAAA,KAAAZ,QAAAgB,eAAAF,IAAAd,QAAAc,KAAAF,EAAAE;;gBAEAC,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;gBACAQ,SAAAR,oBAAA;eACK,SAAAN,QAAAD,SAAAO;gBACL;gBACAA,oBAAA;gBACA,IAAAkI,oBAAAC,MAAAD;gBACA,IAAAE,UAAApI,oBAAA;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAAsI,eAAAtI,oBAAA;gBACA,IAAAuI,eAAAvI,oBAAA;gBACA,IAAAwI,wBAAAxI,oBAAA;gBACA,IAAAyI,oBAAAzI,oBAAA;gBACA,IAAA0I,iBAAA1I,oBAAA;gBACA,IAAA2I,0BAAA3I,oBAAA;gBACA,IAAA4I,qBAAA5I,oBAAA;gBACA,IAAA6I,uBAAA7I,oBAAA;gBACA,IAAA8I,uBAAA9I,oBAAA;gBACA,IAAA+I,SAAA/I,oBAAA;gBACAP,QAAAuJ,kBAAA;gBACA,IAAAC,QAAA;oBACA,SAAAA,MAAAxD,OAAAyD,YAAAC;wBACA,IAAApF,QAAAlE;wBACA,IAAAsJ,iBAAA;4BACAA;;wBAEAtJ,KAAAuJ;wBACA,KAAAjB,gBAAAkB,UAAAhB,QAAAxD,MAAAI,MAAA;wBACA,KAAAiE,YAAA;4BACAb,QAAAxD,MAAAI,MAAA;;wBAEA,IAAAqE,QAAAC,iBAAAL;wBACAzD,MAAA1D,QAAAyH,SAAAF,MAAAvH;wBACA0D,MAAAzD,SAAAwH,SAAAF,MAAAtH;wBACAnC,KAAA4F,QAAA,IAAA2C,QAAAqB,WAAAhE,OAAAwD,MAAAS,kBAAAP;wBACAtJ,KAAA8J,gBAAAtB,QAAAxD,MAAA+E,SAAA,SAAAC,WAAAC;4BACA,OAAA/F,MAAAgG,KAAAF,WAAAC;2BACiB;wBACjBjK,KAAAqJ;wBACArJ,KAAAmK,KAAAd;;oBAEAD,MAAAgB,gBAAA,SAAAC;wBACA,KAAAA,OAAAC,YAAA;4BACA9B,QAAAxD,MAAAI,MAAA;;wBAEApF,KAAA6J,iBAAAQ,OAAAC,cAAAD;;oBAEAjB,MAAAlI,UAAAiJ,OAAA,SAAAd;wBACA,IAAAzD,QAAA5F,KAAA4F;wBACA,IAAAjC,KAAAiC,MAAA2E,MAAAC,IAAA7G,GAAAzB,OAAAuI,IAAA9G,GAAAxB,QAAAuI,YAAA/G,GAAA+G,WAAAC,aAAAhH,GAAAgH;wBACA3K,KAAA4K,QAAA,IAAAtC,MAAAuC;wBACA7K,KAAA8K,aAAAH,WAAAI;wBACA,IAAAC,WAAAhL,KAAAgL,WAAA,IAAA5B,MAAA6B,UAAAjL,KAAA4F,MAAA2E,KAAAS;4BACAE,WAAA;4BACAC,OAAA;;wBAEAH,SAAAI,cAAAhC,MAAAiC;wBACAL,SAAAM,cAAA1F,MAAA2E,KAAAgB,iBAAA3F,MAAA2E,KAAAiB;wBACAR,SAAAS,QAAAjB,GAAAC;wBACApB,WAAAqC,YAAAV,SAAAW;wBACA3L,KAAA4L,MAAAZ,SAAAW;wBACA3L,KAAA4L,IAAAnC,MAAAoC,UAAA;wBACA,IAAAnB,WAAA;4BACA1K,KAAA8L,QAAA,IAAAC;4BACA1C,WAAAqC,YAAA1L,KAAA8L,MAAAH;;wBAEA3L,KAAAgM;wBACA,IAAAC,iBAAAjM,KAAA4F,MAAAqG;wBACA,SAAA3B,cAAA2B,gBAAA;4BACA,IAAAC,gBAAAlM,KAAA4F,MAAA2E,KAAAhB,QAAAe;4BACA,KAAA4B,cAAAnB,SAAA;4BACA,IAAAoB,oBAAAF,eAAA3B;4BACA,IAAA8B,SAAA,IAAAD,kBAAAnM,KAAA4F;4BACA5F,KAAA4K,MAAAyB,IAAAD,OAAAE;4BACAtM,KAAAuJ,QAAApE,KAAAiH;;wBAEApM,KAAA4C;wBACA5C,KAAAuM;;oBAEAnD,MAAAlI,UAAAqL,aAAA;wBACA,IAAArI,QAAAlE;wBACA,IAAAA,KAAAwM,aAAA;wBACAxM,KAAA8L,SAAA9L,KAAA8L,MAAAW;wBACAzM,KAAA0M;wBACA,IAAA1M,KAAA8K,WAAA;wBACA,IAAA6B,WAAA3M,KAAA4F,MAAA2E,KAAAI,WAAAiC;wBACA,IAAAD,UAAA;4BACA,IAAAE,QAAA,MAAAF;4BACAG,WAAA;gCACA,OAAAC,sBAAA;oCACA,OAAA7I,MAAAqI;;+BAEqBM;+BACJ;4BACjBE,sBAAA;gCACA,OAAA7I,MAAAqI;;;wBAGAvM,KAAA8L,SAAA9L,KAAA8L,MAAAkB;;oBAEA5D,MAAAlI,UAAAwL,SAAA;wBACA1M,KAAAgL,SAAA0B,OAAA1M,KAAA4K,OAAA5K,KAAAiN;;oBAEA7D,MAAAlI,UAAAgM,OAAA;wBACAlN,KAAA8K,YAAA;;oBAEA1B,MAAAlI,UAAAiM,MAAA;wBACAnN,KAAA8K,YAAA;wBACA9K,KAAAuM;;oBAEAnD,MAAAlI,UAAAkM,UAAA;wBACApN,KAAAwM,cAAA;wBACAxM,KAAAkN;wBACAlN,KAAA4F,MAAAwH;wBACApN,KAAAqN;wBACA;4BACArN,KAAAgL,SAAAsC;0BACiB,OAAAC;wBACjBvN,KAAAgL,SAAAwC,UAAA;wBACAxN,KAAAgL,SAAAW,aAAA;wBACA3L,KAAAgL,WAAA;;oBAEA5B,MAAAlI,UAAAuM,WAAA;wBACA,OAAAzN,KAAA4F,MAAA2E;;oBAEAnB,MAAAlI,UAAAkG,WAAA,SAAA1F;wBACA,OAAA1B,KAAA4F,MAAAwB,SAAA1F;;oBAEA0H,MAAAlI,UAAAuC,WAAA,SAAAmC;wBACA,OAAA5F,KAAA4F,MAAAnC,SAAAmC;;oBAEAwD,MAAAlI,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACA,IAAA4L,MAAA5L,KAAA4L;wBACA,IAAA5L,KAAA4F,MAAA2E,KAAAmD,SAAA3C,SAAA;4BACAa,IAAA+B,iBAAA,uBAAAC;gCACA1J,MAAA2J,aAAAD;;4BAEAhC,IAAA+B,iBAAA,sBAAAC;gCACA1J,MAAA4J,YAAAF;;4BAEAhC,IAAA+B,iBAAA,sBAAAC;gCACA,OAAA1J,MAAA6J,YAAAH;;4BAEAhC,IAAA+B,iBAAA,oBAAAC;gCACA,OAAA1J,MAAA8J,UAAAJ;;4BAEAhC,IAAA+B,iBAAA,sBAAAC;gCACA1J,MAAA+J,YAAAL;;4BAEAhC,IAAA+B,iBAAA,qBAAAC;gCACA1J,MAAAgK,WAAAN;;;wBAGA,IAAA5N,KAAA4F,MAAA2E,KAAA4D,YAAA;4BACAnO,KAAAoO,eAAA,IAAAlF,OAAAmF,aAAArO,KAAAqJ,YAAA;gCACAnF,MAAAoK,8BAAApK,MAAAmF,WAAAkF,aAAArK,MAAAmF,WAAAmF;;;wBAGAxO,KAAAyO,kBAAAzO,KAAA4F,MAAA8I,eAAA;4BACA,OAAAxK,MAAAyK;4BACiB3O,KAAA4F,MAAAtB,OAAAsK,sBAAA,SAAAxL;4BACjB,OAAAc,MAAA2K,yBAAAzL;4BACiBpD,KAAA4F,MAAAkJ,SAAA,SAAA1L;4BACjB,OAAAc,MAAA6K;;;oBAGA3F,MAAAlI,UAAAmM,eAAA;wBACA;4BACArN,KAAAoO,gBAAApO,KAAAoO,aAAAY;0BACiB,OAAAC;wBACjBjP,KAAA4L,IAAAsD;wBACAlP,KAAAyO,cAAAU,QAAA,SAAAC;4BACA,OAAAA;;;oBAGAhG,MAAAlI,UAAA8K,cAAA;wBACA,IAAAqD,cAAArP,KAAA4F,MAAAtB,OAAAgL;wBACA,KAAAtP,KAAAiN,QAAA;4BACAjN,KAAAiN,SAAA,IAAA5E,kBAAAgH,YAAAE,KAAAF,YAAAG,QAAAH,YAAAI,MAAAJ,YAAAK;4BACA1P,KAAA4K,MAAAyB,IAAArM,KAAAiN;+BACiB;4BACjBjN,KAAAiN,OAAA0C,MAAAN,YAAAE;4BACAvP,KAAAiN,OAAAuC,SAAAH,YAAAG;4BACAxP,KAAAiN,OAAAyC,MAAAL,YAAAK;4BACA1P,KAAAiN,OAAAwC,OAAAJ,YAAAI;4BACAzP,KAAAiN,OAAA2C;;wBAEA5P,KAAAiN,OAAA4C,SAAAC,IAAAT,YAAAU,GAAAV,YAAAW,GAAAX,YAAAY;wBACAjQ,KAAAkQ,wBAAAlQ,KAAAiN,OAAA4C,SAAAM;wBACAnQ,KAAA6O,yBAAA7O,KAAA4F,MAAAtB,OAAAlB;;oBAEAgG,MAAAlI,UAAA2N,2BAAA,SAAAzL;wBACA,IAAAA,QAAAgN,gBAAA;4BACA,IAAAC,YAAArQ,KAAAkQ,sBAAAH,IAAA3M,QAAAgN;4BACApQ,KAAAiN,OAAA4C,SAAAS,KAAAD;;wBAEA,IAAAjN,QAAAmN,gBAAA;4BACA,IAAAC,YAAAxQ,KAAAkQ,sBAAAF,IAAA5M,QAAAmN;4BACAvQ,KAAAiN,OAAA4C,SAAAY,KAAAD;;;oBAGApH,MAAAlI,UAAAyN,aAAA;wBACA,IAAA/I,QAAA5F,KAAA4F;wBACA,KAAAA,MAAA2E,KAAAmG,YAAA;wBACA,IAAAC,gBAAA/K,MAAA2E,KAAAqG,UAAAC,aAAAjK,OAAAkK;wBACA,IAAAC,kBAAAnL,MAAA2E,KAAAsG,aAAAjK,OAAAkK,UAAAH;wBACA,IAAAI,kBAAA;4BACA,IAAAC,cAAAhR,KAAA4F,MAAAtB,OAAA2M;4BACA,IAAAC,gBAAAlR,KAAA4F,MAAAuL;4BACA,IAAAC,gBAAAxL,MAAA2E,KAAA8G,MAAAC,MAAAC;4BACA,IAAAZ,gBAAAO,iBAAAP,gBAAAK,aAAA;gCACA;;4BAEA,IAAAQ,cAAAT;4BACA/Q,KAAAyD;gCACA4N;oCACAC;wCACAC,QAAAH,gBAAAI;;;;;;oBAMApI,MAAAlI,UAAAuQ,eAAA;oBACArI,MAAAlI,UAAA6M,cAAA,SAAAH;wBACA5N,KAAAyD;4BACAiO;gCACAC,UAAA;gCACA5B,GAAAnC,GAAAgE;gCACA5B,GAAApC,GAAAiE;;;;oBAIAzI,MAAAlI,UAAA8M,YAAA,SAAAJ;wBACA5N,KAAAyD;4BACAiO;gCACAC,UAAA;;;;oBAIAvI,MAAAlI,UAAA4M,cAAA,SAAAF;wBACA,IAAA5N,KAAA4F,MAAA2E,KAAAmH,OAAAC,UAAA;4BACA3R,KAAAyD;gCACAiO;oCACAC,UAAA;oCACA5B,GAAAnC,GAAAgE;oCACA5B,GAAApC,GAAAiE;;;;;oBAKAzI,MAAAlI,UAAA2M,eAAA,SAAAD;wBACAA,GAAAkE;wBACAlE,GAAAmE;wBACA,IAAAC,aAAApE,GAAAqE,SAAAjS,KAAA4F,MAAA2E,KAAArI;wBACA,IAAA8H,YAAA,IAAA4D,GAAAsE,cAAA;wBACAlS,KAAAkK,KAAAF,WAAAgI;;oBAEA5I,MAAAlI,UAAA+M,cAAA,SAAAL;wBACA5N,KAAAyD;4BACAiO;gCACAC,UAAA;gCACA5B,GAAAnC,GAAAuE,QAAA,GAAAP;gCACA5B,GAAApC,GAAAuE,QAAA,GAAAN;;;;oBAIAzI,MAAAlI,UAAAgN,aAAA,SAAAN;wBACA5N,KAAAyD;4BACAiO;gCACAC,UAAA;;;;oBAIAvI,MAAAlI,UAAAoN,gCAAA,SAAApM,OAAAC;wBACAnC,KAAAyD;4BACAvB;4BACAC;;;oBAGAiH,MAAAlI,UAAA6N,gBAAA;wBACA,IAAApL,KAAA3D,KAAA4F,MAAA2E,MAAArI,QAAAyB,GAAAzB,OAAAC,SAAAwB,GAAAxB;wBACAnC,KAAAgL,SAAAS,QAAAvJ,OAAAC;wBACAnC,KAAAgM;;oBAEA5C,MAAAlI,UAAAgJ,OAAA,SAAAF,WAAAgI;wBACA,IAAA9N,QAAAlE;wBACA,IAAAoS,iBAAA;wBACA,IAAAC,iBAAA;wBACArI,YAAAsI,KAAAC,IAAAvI,WAAAoI;wBACApI,YAAAsI,KAAAE,IAAAxI,WAAAqI;wBACA,IAAAI,sBAAAzS,KAAA4F,MAAA2E,KAAAmG;wBACA,IAAA+B,qBAAAzS,KAAA4F,MAAAnC;4BACAiN,YAAA;;wBAEA1Q,KAAA4F,MAAAsE,KAAAF,WAAAgI,YAAAU,KAAA;4BACA,IAAAD,qBAAAvO,MAAAT;gCACAiN,YAAA;;;;oBAIAtH,MAAAuJ,qBAAA,SAAAC,aAAAhH;wBACA,IAAAiH;4BACAC;gCACA/H,SAAA;;4BAEAxB;gCACAwJ;oCACAhI,SAAA;;gCAEAiI;oCACAjI,SAAA;;gCAEAkI;oCACAlI,SAAA;;;;wBAIA,IAAA3H,UAAAoF,QAAAxD,MAAAK,UAAAuN,aAAAC;wBACA,WAAAzJ,MAAAhG,SAAAwI;;oBAEAxC,MAAAiC,mBAAA6H,OAAA7H;oBACAjC,MAAAS;oBACAT,MAAA6B;wBACAkI,gBAAA7K,MAAA6K;wBACAC,eAAA9K,MAAA8K;;oBAEA,OAAAhK;;gBAEAxJ,QAAAwJ;gBACAA,MAAAgB,cAAArB,mBAAAsK;gBACAjK,MAAAgB,cAAApB,qBAAAsK;gBACAlK,MAAAgB,cAAA3B,aAAA8K;gBACAnK,MAAAgB,cAAA1B,aAAA8K;gBACApK,MAAAgB,cAAAnB,qBAAAwK;gBACArK,MAAAgB,cAAAtB,wBAAA4K;gBACAtK,MAAAgB,cAAAzB,sBAAAgL;gBACAvK,MAAAgB,cAAAxB,kBAAAgL;gBACAxK,MAAAgB,cAAAvB,eAAAgL;eACK,SAAAhU,QAAAD,SAAAO;gBACL;gBACA+S,OAAAnH,QAAA5L,oBAAA;gBACA+S,OAAAY,YAAA3T,oBAAA;gBACAA,oBAAA;gBACAA,oBAAA;gBACAP,QAAAmU,gBAAA5T,oBAAA;gBACAP,QAAAoU,MAAA7T,oBAAA;gBACA,IAAA8T,gBAAA9T,oBAAA;gBACAP,QAAAsU,UAAAD,cAAAC;gBACAtU,QAAAyO,eAAAlO,oBAAA;eACK,SAAAN,QAAAD;gBACL,IAAAmM,QAAA;oBACA,SAAAtB,EAAAvD;wBACAzG,EAAAiL,YAAAxE,EAAAiN;wBACA,OAAAjN;;oBAEA,SAAAkN,EAAAlN;wBACA,SAAApG,IAAA,GAA+BA,IAAAL,EAAA4T,SAAAvP,QAAuBhE,KAAAL,EAAA4T,SAAAvT,GAAA2I,MAAAoC,UAAA/K,MAAAoG,IAAA;wBACtDoN,IAAApN;;oBAEA,IAAAoN,IAAA,GAAA7T,IAAA8T,SAAAC,cAAA;oBACA/T,EAAAgJ,MAAAgL,UAAA;oBACAhU,EAAAkN,iBAAA,kBAAAzG;wBACAA,EAAA6K;wBACAqC,IAAAE,IAAA7T,EAAA4T,SAAAvP;wBACa;oBACb,IAAA4P,KAAAC,eAAAC,MAAAC,OAAA5F,IAAAyF,GAAAxN,IAAA,GAAA4N,IAAArK,EAAA,IAAAsB,MAAAgJ,MAAA,yBAAAC,IAAAvK,EAAA,IAAAsB,MAAAgJ,MAAA;oBACA,IAAAE,KAAAN,eAAAM,KAAAN,YAAAO,QAAA,IAAAC,IAAA1K,EAAA,IAAAsB,MAAAgJ,MAAA;oBACAX,EAAA;oBACA;wBACA5K,UAAA;wBACA2K,KAAA1T;wBACA2U,UAAA3K;wBACA4K,WAAAjB;wBACA3H,OAAA;4BACAiI,KAAAC,eAAAC,MAAAC;;wBAEA7H,KAAA;4BACA9F;4BACA,IAAAzG,KAAAkU,eAAAC,MAAAC;4BACAG,EAAAM,OAAA7U,IAAAiU,GAAA;4BACA,IAAAjU,IAAAwO,IAAA,QAAA6F,EAAAQ,OAAA,MAAApO,KAAAzG,IAAAwO,IAAA,MAAAA,IAAAxO,GAAAyG,IAAA,GAAAiO,IAAA;gCACA,IAAArU,IAAA6T,YAAAO;gCACAC,EAAAG,OAAAxU,EAAAyU,iBAAA,SAAAzU,EAAA0U,kBAAA;;4BAEA,OAAA/U;;wBAEA6U,QAAA;4BACAZ,IAAA1U,KAAAgN;;wBAEArB,YAAAlL;wBACAgV,SAAArB;;;gBAGArI,MAAAgJ,QAAA,SAAAtK,GAAA2J,GAAAE;oBACA,IAAA7T,IAAAiV,UAAAhB,IAAA,GAAAzF,IAAAqD,KAAAqD,OAAAzO,IAAA+H,EAAAiE,OAAA7H,oBAAA,IAAAyJ,IAAA,KAAA5N,GAAA8N,IAAA,KAAA9N,GAAAiO,IAAA,IAAAjO,GAAA0O,IAAA,IAAA1O,GAAApG,IAAA,IAAAoG,GAAA1G,IAAA,KAAA0G,GAAA2O,IAAA,KAAA3O,GAAAxG,IAAA,KAAAwG,GAAA4O,IAAAvB,SAAAC,cAAA;oBACAsB,EAAA5T,QAAA4S;oBACAgB,EAAA3T,SAAA6S;oBACAc,EAAArM,MAAAgL,UAAA;oBACA,IAAA1T,IAAA+U,EAAAC,WAAA;oBACAhV,EAAAiV,OAAA,cAAA9O,IAAA;oBACAnG,EAAAkV,eAAA;oBACAlV,EAAAmV,YAAA5B;oBACAvT,EAAAoV,SAAA,MAAArB,GAAAE;oBACAjU,EAAAmV,YAAA9B;oBACArT,EAAAqV,SAAA3L,GAAA0K,GAAAS;oBACA7U,EAAAoV,SAAArV,GAAAN,GAAAqV,GAAAnV;oBACAK,EAAAmV,YAAA5B;oBACAvT,EAAAsV,cAAA;oBACAtV,EAAAoV,SAAArV,GAAAN,GAAAqV,GAAAnV;oBACA;wBACAyT,KAAA2B;wBACAR,QAAA,SAAAN,GAAAsB;4BACA7V,IAAA6R,KAAAC,IAAA9R,GAAAuU;4BACAN,IAAApC,KAAAE,IAAAkC,GAAAM;4BACAjU,EAAAmV,YAAA5B;4BACAvT,EAAAsV,cAAA;4BACAtV,EAAAoV,SAAA,MAAArB,GAAAtU;4BACAO,EAAAmV,YAAA9B;4BACArT,EAAAqV,SAAAnH,EAAA+F,KAAA,MAAAvK,IAAA,OAAAwE,EAAAxO,KAAA,MAAAwO,EAAAyF,KAAA,KAAAS,GAAAS;4BACA7U,EAAAwV,UAAAT,GAAAhV,IAAAoG,GAAA1G,GAAAqV,IAAA3O,GAAAxG,GAAAI,GAAAN,GAAAqV,IAAA3O,GAAAxG;4BACAK,EAAAoV,SAAArV,IAAA+U,IAAA3O,GAAA1G,GAAA0G,GAAAxG;4BACAK,EAAAmV,YAAA5B;4BACAvT,EAAAsV,cAAA;4BACAtV,EAAAoV,SAAArV,IAAA+U,IAAA3O,GAAA1G,GAAA0G,GAAA+H,GAAA,IAAA+F,IAAAsB,KAAA5V;;;;gBAIA,oBAAAb,kBAAAD,UAAAmM;eACK,SAAAlM,QAAAD,SAAAO;gBACL,IAAAqW,8BAAAC;iBACA,SAAAC;;;;;;;;;;;;;;oBAcA,IAAAC,kBAAA9W,WAAA,eAAAA,OAAAD,kBAAA8W,WAAA,cAAAA,SAAA1W,QAAAkT;qBACAyD,SAAAC,aAAAD,SAAAC,gBAAAzR,KAAA;wBACA;wBACAwR,SAAAE,UAAA,+EAAAC,WAAAC,gBAAAjD;4BACA,IAAAkD,SAAA,SAAA9P;gCACA,IAAAnG,QAAAuT,IAAApN,EAAApC,QAAAmS;gCACA,KAAAA,IAAA,GAAmCA,MAAA3C,GAASvT,EAAAoE,KAAA+B,EAAA+P;gCAC5C,OAAAlW;+BACqBmW,cAAA,SAAAC,MAAAC,SAAAH;gCACrB,IAAAI,MAAAF,KAAAG,OAAA5W,GAAA6W;gCACA,KAAA7W,KAAA2W,KAAA;oCACAE,MAAAF,IAAA3W;oCACAyW,KAAAzW,YAAA6W,QAAA,aAAAA,IAAAhX,KAAA6W,QAAAH,SAAAM,IAAAN,IAAAM,IAAAzS;;uCAEAqS,KAAAG;+BACqBE,WAAA,SAAAC,QAAAC,UAAAP;gCACrBrD,UAAAvT,KAAAP,MAAAyX,QAAAC,UAAAP;gCACAnX,KAAA2X,SAAA;gCACA3X,KAAA4X,QAAA5X,KAAAmX,KAAAU,SAAA;gCACA7X,KAAA8X,UAAA9X,KAAAmX,KAAAY,UAAA;gCACA/X,KAAAgY,eAAAhY,KAAAmX,KAAAc,eAAA;gCACAjY,KAAAkY,SAAA;gCACAlY,KAAA0M,SAAA8K,SAAAtW,UAAAwL;+BACqByL,WAAA,OAAAC,qBAAAtE,UAAAuE,YAAAC,cAAAF,mBAAAG,YAAAC,WAAAJ,mBAAAK,SAAA/X,IAAA8W,SAAAtW,YAAA4S,UAAA4E,OAA2L,SAAQC;4BACxNnB,SAAAoB,UAAA;4BACAlY,EAAAO,cAAAuW;4BACA9W,EAAAmY,OAAAC,MAAA;4BACAtB,SAAAuB,eAAAvB,SAAAwB,qBAAAlF,UAAAiF;4BACAvB,SAAAyB,cAAAnF,UAAAmF;4BACAzB,SAAA0B,eAAApF,UAAAoF;4BACA1B,SAAA2B,SAAArF,UAAAqF;4BACA3B,SAAA9K,SAAAoH,UAAApH;4BACAhM,EAAA0Y,aAAA;gCACApZ,KAAA4X,QAAA5X,KAAAmX,KAAAU,SAAA;gCACA7X,KAAA8X,UAAA9X,KAAAmX,KAAAY,UAAA;gCACA/X,KAAAgY,eAAAhY,KAAAmX,KAAAc,eAAA;gCACAjY,KAAAqZ,SAAA;gCACA,OAAAvF,UAAA5S,UAAAkY,WAAA7Y,KAAAP;;4BAEAU,EAAA4Y,WAAA,SAAAnC,MAAAoC;gCACA,IAAAC,WAAAxZ,KAAAyZ,OAAAC,YAAA1Z,KAAAmX,KAAAwC,mBAAAxC,KAAAwC,iBAAAjZ;gCACA,IAAA6Y,iBAAAvZ,KAAA4Z,aAAA5Z,KAAA6Z,UAAAC,OAAA;oCACA9Z,KAAA4Z,aAAA5Z,KAAA6Z,UAAAC;oCACA9Z,KAAAqZ,SAAA;oCACA,IAAArZ,KAAA8Y,KAAA;wCACA9Y,KAAA+Z,SAAA;2CAC6B;wCAC7B/Z,KAAA6Z,UAAAG,OAAAha,WAAA4Z,aAAA5Z,KAAAia;;;gCAGA,KAAAvZ,KAAAyW,MAAA;oCACAnX,KAAAmX,KAAAzW,KAAAyW,KAAAzW;;gCAEA,IAAAV,KAAAka,YAAAR,WAAA;oCACA,IAAAH,eAAA;wCACAvZ,KAAAka,WAAA;wCACA,IAAAR,WAAA;4CACA1Z,KAAA0M,OAAA;;2CAE6B;wCAC7B,IAAA1M,KAAA8Y,KAAA;4CACA9Y,KAAA+Z,SAAA;;wCAEA,IAAA/Z,KAAAma,2BAAAna,KAAAoa,UAAA;4CACAtG,UAAAuG,eAAA,cAAAra;;wCAEA,IAAAA,KAAA8Z,QAAA9Z,KAAAsa,YAAA;4CACA,IAAAC,WAAAva,KAAAwa;4CACAxa,KAAA0M,OAAA;4CACA1M,KAAAka,WAAA;4CACAla,KAAA0M,OAAA6N,UAAA;+CACiC;4CACjCva,KAAAka,WAAA;4CACAla,KAAAya;4CACA,IAAAza,KAAA8Z,QAAA,KAAAJ,WAAA;gDACA,IAAAgB,MAAA,SAAAlB,WAAAmB,KAAA3a,KAAAoa,UAAAQ;gDACA,OAAAD,IAAA;oDACAC,WAAAD,GAAAE,IAAAF,GAAAla;oDACAka,GAAAla,KAAAia;oDACAC,GAAAE,IAAAD,WAAAD,GAAAla;oDACAka,QAAAG;;;;;;gCAMA,OAAA9a;;4BAEAU,EAAAgM,SAAA,SAAAqO,MAAAC,gBAAAC;gCACA,KAAAjb,KAAAka,UAAA,IAAAla,KAAAsa,cAAA,KAAAta,KAAAmX,KAAAY,QAAA;oCACA/X,KAAAoZ;;gCAEA,IAAA8B,YAAAlb,KAAAkY,SAAAlY,KAAAmb,iBAAAnb,KAAAob,iBAAAb,WAAAva,KAAA8Z,OAAAuB,gBAAArb,KAAAwa,YAAAc,YAAAtb,KAAA2X,QAAAD,WAAA1X,KAAAsa,WAAAiB,kBAAAvb,KAAAwb,cAAAC,YAAAC,UAAAf,IAAAgB,eAAA7G,GAAAhN,MAAA8T,KAAAC;gCACA,IAAAd,QAAAG,WAAA;oCACAlb,KAAAwa,aAAAU;oCACAlb,KAAA2X,SAAA3X,KAAA8X;oCACA,IAAA9X,KAAA4X,UAAA5X,KAAA2X,SAAA;wCACA3X,KAAA8Z,QAAA;wCACA9Z,KAAAyZ,QAAAzZ,KAAA8b,MAAAC,WAAA/b,KAAA8b,MAAAE,SAAA;2CAC6B;wCAC7Bhc,KAAA8Z,QAAApC;wCACA1X,KAAAyZ,QAAAzZ,KAAA8b,MAAAC,WAAA/b,KAAA8b,MAAAE,SAAA;;oCAEA,KAAAhc,KAAAic,WAAA;wCACAR,aAAA;wCACAC,WAAA;wCACAT,iBAAAjb,KAAA6Z,UAAAqC;;oCAEA,IAAAxE,aAAA,OAAA1X,KAAAka,aAAAla,KAAAmX,KAAAgF,QAAAlB,OAAA;wCACA,IAAAjb,KAAA4Z,eAAA5Z,KAAA6Z,UAAAS,WAAA;4CACAS,OAAA;;wCAEA,IAAAQ,kBAAA,KAAAR,QAAA,KAAAA,SAAA,QAAAQ,oBAAApD,YAAAnY,KAAAuK,SAAA,eAAAgR,oBAAAR,MAAA;4CACAE,QAAA;4CACA,IAAAM,kBAAApD,UAAA;gDACAuD,WAAA;;;wCAGA1b,KAAAwb,eAAAK,eAAAb,kBAAAD,QAAAQ,oBAAAR,cAAA5C;;uCAEyB,IAAA4C,OAAA;oCACzB/a,KAAAwa,aAAAxa,KAAA8Z,QAAA9Z,KAAA2X,SAAA;oCACA3X,KAAAyZ,QAAAzZ,KAAA8b,MAAAC,WAAA/b,KAAA8b,MAAAE,SAAA;oCACA,IAAAX,kBAAA,KAAA3D,aAAA,KAAA6D,kBAAA;wCACAG,WAAA;wCACAD,aAAAzb,KAAAic;;oCAEA,IAAAlB,OAAA;wCACA/a,KAAAoc,UAAA;wCACA,IAAA1E,aAAA,OAAA1X,KAAAka,aAAAla,KAAAmX,KAAAgF,QAAAlB,OAAA;4CACA,IAAAM,mBAAA;gDACAN,QAAA;;4CAEAjb,KAAAwb,eAAAK,eAAAb,kBAAAD,QAAAQ,oBAAAR,cAAA5C;;;oCAGA,KAAAnY,KAAAka,UAAA;wCACAe,QAAA;;uCAEyB;oCACzBjb,KAAAwa,aAAAxa,KAAA8Z,QAAAiB;oCACA,IAAA/a,KAAA8X,YAAA;wCACA6D,gBAAAjE,WAAA1X,KAAAgY;wCACAhY,KAAA2X,SAAA3X,KAAAwa,aAAAmB,iBAAA;wCACA,IAAA3b,KAAA2X,WAAA,OAAA3X,KAAA2X,WAAA3X,KAAAwa,aAAAmB,iBAAAN,iBAAAN,MAAA;4CACA/a,KAAA2X;;wCAEA3X,KAAA8Z,QAAA9Z,KAAAwa,aAAAxa,KAAA2X,SAAAgE;wCACA,IAAA3b,KAAA4X,OAAA,KAAA5X,KAAA2X,SAAA;4CACA3X,KAAA8Z,QAAApC,WAAA1X,KAAA8Z;;wCAEA,IAAA9Z,KAAA8Z,QAAApC,UAAA;4CACA1X,KAAA8Z,QAAApC;+CACiC,IAAA1X,KAAA8Z,QAAA;4CACjC9Z,KAAA8Z,QAAA;;;oCAGA,IAAA9Z,KAAAqc,WAAA;wCACAvH,IAAA9U,KAAA8Z,QAAApC;wCACA5P,OAAA9H,KAAAqc;wCACAT,MAAA5b,KAAAsc;wCACA,IAAAxU,SAAA,KAAAA,SAAA,KAAAgN,KAAA;4CACAA,IAAA,IAAAA;;wCAEA,IAAAhN,SAAA;4CACAgN,KAAA;;wCAEA,IAAA8G,QAAA;4CACA9G;+CACiC,IAAA8G,QAAA;4CACjC9G;+CACiC,IAAA8G,QAAA;4CACjC9G;+CACiC,IAAA8G,QAAA;4CACjC9G;;wCAEA,IAAAhN,SAAA;4CACA9H,KAAAyZ,QAAA,IAAA3E;+CACiC,IAAAhN,SAAA;4CACjC9H,KAAAyZ,QAAA3E;+CACiC,IAAA9U,KAAA8Z,QAAApC,WAAA;4CACjC1X,KAAAyZ,QAAA3E,IAAA;+CACiC;4CACjC9U,KAAAyZ,QAAA,IAAA3E,IAAA;;2CAE6B;wCAC7B9U,KAAAyZ,QAAAzZ,KAAA8b,MAAAE,SAAAhc,KAAA8Z,QAAApC;;;gCAGA,IAAA6C,aAAAva,KAAA8Z,UAAAmB,SAAAK,cAAAtb,KAAA2X,QAAA;oCACA,IAAA0D,kBAAArb,KAAAwa,YAAA,IAAAxa,KAAAuc,WAAA,KAAAvB,gBAAA;wCACAhb,KAAAwc,UAAA;;oCAEA;uCACyB,KAAAxc,KAAAka,UAAA;oCACzBla,KAAAya;oCACA,KAAAza,KAAAka,YAAAla,KAAA8Y,KAAA;wCACA;2CAC6B,KAAAmC,SAAAjb,KAAAoa,aAAApa,KAAAmX,KAAAgF,SAAA,SAAAnc,KAAAsa,aAAAta,KAAAmX,KAAAgF,SAAAnc,KAAAsa,YAAA;wCAC7Bta,KAAA8Z,QAAAS;wCACAva,KAAAwa,aAAAa;wCACArb,KAAAwb,eAAAD;wCACAvb,KAAA2X,SAAA2D;wCACAlD,mBAAAqE,WAAAtX,KAAAnF;wCACAA,KAAA0c,UAAA3B,MAAAC;wCACA;;oCAEA,IAAAhb,KAAA8Z,UAAA2B,YAAA;wCACAzb,KAAAyZ,QAAAzZ,KAAA8b,MAAAE,SAAAhc,KAAA8Z,QAAApC;2CAC6B,IAAA+D,cAAAzb,KAAA8b,MAAAC,UAAA;wCAC7B/b,KAAAyZ,QAAAzZ,KAAA8b,MAAAE,SAAAhc,KAAA8Z,UAAA;;;gCAGA,IAAA9Z,KAAA0c,UAAA;oCACA1c,KAAA0c,QAAA;;gCAEA,KAAA1c,KAAAoc,SAAA,KAAApc,KAAA2c,WAAA3c,KAAA8Z,UAAAS,YAAAQ,QAAA;oCACA/a,KAAAoc,UAAA;;gCAEA,IAAAf,kBAAA;oCACA,IAAArb,KAAAka,aAAA,KAAAa,OAAA;wCACA/a,KAAAya;;oCAEA,IAAAza,KAAA4c,UAAA;wCACA,IAAA7B,QAAA;4CACA/a,KAAA4c,SAAAlQ,OAAAqO,MAAAC,gBAAAC;+CACiC,KAAAS,UAAA;4CACjCA,WAAA;;;oCAGA,IAAA1b,KAAAmX,KAAA0F,SAAA,IAAA7c,KAAAwa,eAAA,KAAA9C,aAAA,QAAAsD,gBAAA;wCACAhb,KAAAwc,UAAA;;;gCAGA7B,KAAA3a,KAAAoa;gCACA,OAAAO,IAAA;oCACA,IAAAA,GAAA3F,GAAA;wCACA2F,GAAAxF,EAAAwF,GAAAja,GAAAia,GAAAla,IAAAT,KAAAyZ,QAAAkB,GAAAE;2CAC6B;wCAC7BF,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAAla,IAAAT,KAAAyZ,QAAAkB,GAAAE;;oCAEAF,QAAAG;;gCAEA,IAAA9a,KAAAuc,WAAA;oCACA,IAAAxB,OAAA,OAAA/a,KAAA4c,YAAA5c,KAAA4Z,YAAA;wCACA5Z,KAAA4c,SAAAlQ,OAAAqO,MAAAC,gBAAAC;;oCAEA,KAAAD,gBAAA,IAAAhb,KAAAwa,eAAAa,iBAAAK,UAAA;wCACA1b,KAAAwc,UAAA;;;gCAGA,IAAAxc,KAAA2X,WAAA2D,WAAA,KAAAN,gBAAA,KAAAhb,KAAA8Y,KAAA,IAAA9Y,KAAAmX,KAAA2F,UAAA;oCACA9c,KAAAwc,UAAA;;gCAEA,IAAAd,UAAA,KAAA1b,KAAA8Y,OAAAmC,OAAA;oCACA,IAAAF,OAAA,KAAA/a,KAAA4c,aAAA5c,KAAAuc,aAAAvc,KAAA4Z,YAAA;wCACA5Z,KAAA4c,SAAAlQ,OAAAqO,MAAAC,gBAAAC;;oCAEA,IAAAQ,YAAA;wCACA,IAAAzb,KAAA6Z,UAAAqC,oBAAA;4CACAlc,KAAA+Z,SAAA;;wCAEA/Z,KAAAoc,UAAA;;oCAEA,KAAApB,kBAAAhb,KAAAmX,KAAAuE,WAAA;wCACA1b,KAAAwc,UAAAd;;oCAEA,IAAAhE,aAAA,KAAA1X,KAAAwb,iBAAArD,YAAA0D,gBAAA1D,UAAA;wCACAnY,KAAAwb,eAAA;;;;4BAIAhE,SAAAkB,KAAA,SAAAjB,QAAAC,UAAAP;gCACA,WAAAK,SAAAC,QAAAC,UAAAP;;4BAEAK,SAAAuF,OAAA,SAAAtF,QAAAC,UAAAP;gCACAA,KAAA6F,eAAA;gCACA7F,KAAAwC,kBAAAxC,KAAAwC,mBAAA;gCACA,WAAAnC,SAAAC,QAAAC,UAAAP;;4BAEAK,SAAAyF,SAAA,SAAAxF,QAAAC,UAAAwF,UAAAC;gCACAA,OAAAC,UAAAF;gCACAC,OAAAxD,kBAAAwD,OAAAxD,mBAAA,SAAAuD,SAAAvD,mBAAA;gCACA,WAAAnC,SAAAC,QAAAC,UAAAyF;;4BAEA3F,SAAA6F,YAAA7F,SAAA8F,QAAA,SAAAlG,SAAAM,UAAAP,MAAAoG,SAAAC,eAAAC,qBAAAC;gCACAH,qBAAA;gCACA,IAAA1Q,QAAA,GAAA3F,QAAAyW,gBAAA;oCACA,IAAAxG,KAAAyG,YAAA;wCACAzG,KAAAyG,WAAAC,MAAA1G,KAAA2G,mBAAA9d,MAAA+d;;oCAEAP,cAAAK,MAAAH,sBAAAvG,KAAA6G,iBAAAhe,MAAAyd,uBAAA9E;mCACyBrB,QAAAH,KAAAG,OAAA2G,YAAA9G,KAAAiG,WAAAjG,KAAAiG,QAAA9F,OAAAhD,GAAA4J,MAAAjH,GAAAvW;gCACzB,KAAA8X,SAAApB,UAAA;oCACA,WAAAA,YAAA;wCACAA,UAAAtD,UAAAqK,SAAA/G;;oCAEA,IAAAkB,YAAAlB,UAAA;wCACAA,UAAAJ,OAAAI;;;gCAGAA;gCACA,IAAAmG,UAAA;oCACAnG,UAAAJ,OAAAI;oCACAA,QAAAgH;oCACAb,YAAA;;gCAEAjJ,IAAA8C,QAAAtS,SAAA;gCACA,KAAAmS,IAAA,GAAmCA,KAAA3C,GAAQ2C,KAAA;oCAC3CiH;oCACA,KAAAxd,KAAAyW,MAAA;wCACA+G,KAAAxd,KAAAyW,KAAAzW;;oCAEA,IAAA4W,OAAA;wCACAJ,YAAAgH,MAAA9G,SAAAH;wCACA,IAAAiH,KAAAxG,YAAA;4CACAA,WAAAwG,KAAAxG;mDACAwG,KAAAxG;;;oCAGA,IAAAuG,WAAA;wCACAA,YAAAC,KAAAd;wCACA,KAAA1c,KAAAyW,KAAAiG,SAAA;4CACAa,UAAAvd,KAAAyW,KAAAiG,QAAA1c;;wCAEAwW,YAAAgH,KAAAd,SAAAhG,SAAAH;;oCAEAiH,KAAArR,iBAAAqR,KAAArR,SAAA;oCACA,IAAAoK,MAAA3C,KAAAkJ,eAAA;wCACAU,KAAAN,aAAAD;;oCAEAzW,EAAA+P,KAAA,IAAAO,SAAAJ,QAAAH,IAAAS,UAAAwG;oCACArR,SAAA0Q;;gCAEA,OAAArW;;4BAEAsQ,SAAA6G,cAAA7G,SAAA8G,UAAA,SAAAlH,SAAAM,UAAAP,MAAAoG,SAAAC,eAAAC,qBAAAC;gCACAvG,KAAA6F,eAAA;gCACA7F,KAAAwC,kBAAAxC,KAAAwC,mBAAA;gCACA,OAAAnC,SAAA6F,UAAAjG,SAAAM,UAAAP,MAAAoG,SAAAC,eAAAC,qBAAAC;;4BAEAlG,SAAA+G,gBAAA/G,SAAAgH,YAAA,SAAApH,SAAAM,UAAAwF,UAAAC,QAAAI,SAAAC,eAAAC,qBAAAC;gCACAP,OAAAC,UAAAF;gCACAC,OAAAxD,kBAAAwD,OAAAxD,mBAAA,SAAAuD,SAAAvD,mBAAA;gCACA,OAAAnC,SAAA6F,UAAAjG,SAAAM,UAAAyF,QAAAI,SAAAC,eAAAC,qBAAAC;;4BAEAlG,SAAAiH,cAAA,SAAA5R,OAAA6O,UAAAgD,QAAAC,OAAAC;gCACA,WAAApH,SAAAkE,UAAA;oCACA7O;oCACA+Q,YAAAlC;oCACAmD,kBAAAH;oCACAV,eAAAW;oCACAG,mBAAApD;oCACAqD,yBAAAL;oCACA/E,iBAAA;oCACAiF;oCACAI,WAAA;;;4BAGAxH,SAAA1H,MAAA,SAAA2H,QAAAN;gCACA,WAAAK,SAAAC,QAAA,GAAAN;;4BAEAK,SAAAyH,aAAA,SAAAxH;gCACA,OAAA3D,UAAAmF,YAAAxB,QAAA,MAAA3S,SAAA;;4BAEA,IAAAoa,iBAAA,SAAAC,UAAAC;gCACA,IAAAlY,QAAAmY,MAAA,GAAAC,QAAAH,SAAAI;gCACA,OAAAD,OAAA;oCACA,IAAAA,iBAAAxL,WAAA;wCACA5M,EAAAmY,SAAAC;2CAC6B;wCAC7B,IAAAF,kBAAA;4CACAlY,EAAAmY,SAAAC;;wCAEApY,MAAA3D,OAAA2b,eAAAI,OAAAF;wCACAC,MAAAnY,EAAApC;;oCAEAwa,cAAAxE;;gCAEA,OAAA5T;+BACqBsY,eAAAhI,SAAAgI,eAAA,SAAAJ;gCACrB,OAAAF,eAAApI,UAAA2I,eAAAL,kBAAA7b,OAAA2b,eAAApI,UAAA4I,qBAAAN;;4BAEA5H,SAAAmI,UAAA,SAAAC,UAAAC,QAAAC,cAAAC;gCACA,IAAAF,UAAA;oCACAA,SAAA;;gCAEA,IAAAC,gBAAA;oCACAA,eAAA;;gCAEA,IAAA5Y,IAAAsY,aAAAO,aAAA,QAAAzL,IAAApN,EAAApC,QAAAkb,UAAAH,UAAAC,gBAAAC,WAAAE,MAAAX,OAAArI;gCACA,KAAAA,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1CqI,QAAApY,EAAA+P;oCACA,IAAA+I,WAAAV,iBAAAvI,mBAAAkJ,OAAAX,MAAA7H,WAAA6H,MAAAnI,KAAAyG,eAAAkC,gBAAAD,WAAAI,MAAA;wCACA,IAAAL,UAAA;4CACAN,MAAAY,UAAAZ,MAAArD,YAAA,IAAAqD,MAAAlE;+CACiC;4CACjCkE,MAAAvF,SAAA;;;;;4BAKAvC,SAAA2I,oBAAA,SAAAC,QAAAR;gCACA,IAAAQ,UAAA;oCACA;;gCAEA,IAAAC,KAAAjI,mBAAAkI,aAAApZ,GAAAqZ,WAAA7f,GAAAuW,GAAA3C;gCACA,WAAA8L,WAAA;oCACAA,SAAAtM,UAAAqK,SAAAiC;;gCAEA,IAAA9H,YAAA8H,SAAA;oCACAA,SAAApJ,OAAAoJ;;gCAEA,IAAA5H,SAAA4H,SAAA;oCACAnJ,IAAAmJ,OAAAtb;oCACA,SAAAmS,KAAA;wCACAO,SAAA2I,kBAAAC,OAAAnJ,IAAA2I;;oCAEA;;gCAEA1Y;gCACA,KAAAxG,KAAA2f,IAAA;oCACAE,YAAAF,GAAA3f,GAAA+W,OAAA+I;oCACA,OAAAD,WAAA;wCACA,IAAAA,cAAAH,QAAA;4CACAlZ,MAAA3D,OAAA8c,GAAA3f,GAAAmf;;wCAEAU,sBAAAC;;;gCAGAlM,IAAApN,EAAApC;gCACA,KAAAmS,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1C,IAAA2I,UAAA;wCACA1Y,EAAA+P,GAAAiJ,UAAAhZ,EAAA+P,GAAAmE;;oCAEAlU,EAAA+P,GAAA8C,SAAA;;;4BAGA,IAAA0G,eAAA,SAAAC,OAAAb,QAAAC,cAAAC;gCACAF,oBAAA;gCACAC,gCAAA;gCACAC,0BAAA;gCACA,IAAA7Y,IAAAsY,aAAAO,YAAAC,UAAAH,UAAAC,gBAAAC,WAAA9I,IAAA/P,EAAApC,QAAAmb,MAAAX;gCACA,SAAArI,KAAA;oCACAqI,QAAApY,EAAA+P;oCACA,IAAA+I,WAAAV,iBAAAvI,mBAAAkJ,OAAAX,MAAA7H,WAAA6H,MAAAnI,KAAAyG,eAAAkC,gBAAAD,WAAAI,MAAA;wCACAX,MAAAqB,OAAAD;;;;4BAIAlJ,SAAAoJ,WAAA,SAAAf,QAAAC,cAAAC;gCACAU,aAAA,MAAAZ,QAAAC,cAAAC;;4BAEAvI,SAAAqJ,YAAA,SAAAhB,QAAAC,cAAAC;gCACAU,aAAA,OAAAZ,QAAAC,cAAAC;;4BAEAvI,SAAAsJ,kBAAA,SAAAhf;gCACA,IAAAue,KAAAvJ,UAAA2I,eAAAtK,IAAArB,UAAAqF,OAAA4B;gCACA,KAAAgD,UAAAjZ,QAAA;oCACA,OAAAub,GAAAU;;gCAEAjf,iBAAAqW;gCACAkI,GAAAzG,aAAAzE,SAAAkL,GAAAzG,cAAAyG,GAAAU,aAAAjf;gCACAue,KAAAvJ,UAAA4I;gCACAvK,IAAArB,UAAAqF,OAAA6H;gCACAX,GAAAzG,aAAAzE,SAAAkL,GAAAzG,cAAAyG,GAAAU,aAAAjf;gCACAue,GAAAU,aAAAjK,UAAA2I,cAAAsB,aAAAjf;gCACA,OAAAA;;4BAEApB,EAAAugB,WAAA,SAAAnf,OAAAkZ;gCACA,QAAA+C,UAAAjZ,SAAA9E,KAAA8Z,QAAA9Z,KAAA0X,aAAA1X,KAAAkgB,UAAAlgB,KAAA0X,cAAA1X,KAAA4X,UAAA5X,KAAA2X,SAAA,eAAA7V,iBAAA9B,KAAA2X,UAAA3X,KAAAsa,YAAAta,KAAAgY,eAAAgD;;4BAEAta,EAAAwgB,gBAAA,SAAApf,OAAAkZ;gCACA,QAAA+C,UAAAjZ,SAAA9E,KAAAwa,aAAAxa,KAAAob,kBAAApb,KAAAkgB,UAAAlgB,KAAAob,kBAAAtZ,OAAAkZ;;4BAEAta,EAAAqa,OAAA,SAAAjZ,OAAAkZ;gCACA,KAAA+C,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA8Z;;gCAEA,IAAA9Z,KAAAkY,QAAA;oCACAlY,KAAAob;;gCAEA,IAAAtZ,QAAA9B,KAAAsa,WAAA;oCACAxY,QAAA9B,KAAAsa;;gCAEA,IAAAta,KAAA4X,UAAA5X,KAAA2X,SAAA;oCACA7V,QAAA9B,KAAAsa,YAAAxY,QAAA9B,KAAA2X,UAAA3X,KAAAsa,YAAAta,KAAAgY;uCACyB,IAAAhY,KAAA8X,YAAA;oCACzBhW,SAAA9B,KAAA2X,UAAA3X,KAAAsa,YAAAta,KAAAgY;;gCAEA,OAAAhY,KAAAkgB,UAAApe,OAAAkZ;;4BAEAta,EAAAgX,WAAA,SAAA5V;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAAsa;;gCAEA,OAAAxD,UAAA5V,UAAAwW,SAAAnX,KAAAP,MAAA8B;;4BAEApB,EAAA0a,gBAAA,SAAAtZ;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,IAAA9E,KAAAkY,QAAA;wCACAlY,KAAAmb,iBAAAnb,KAAA8X,aAAA,mBAAA9X,KAAAsa,aAAAta,KAAA8X,UAAA,KAAA9X,KAAAgY,eAAAhY,KAAA8X;wCACA9X,KAAAkY,SAAA;;oCAEA,OAAAlY,KAAAmb;;gCAEA,OAAAnb,KAAA8X,aAAA,IAAA9X,YAAA0X,UAAA5V,QAAA9B,KAAA8X,UAAA9X,KAAAgY,iBAAAhY,KAAA8X,UAAA;;4BAEApX,EAAAqX,SAAA,SAAAjW;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA8X;;gCAEA9X,KAAA8X,UAAAhW;gCACA,OAAA9B,KAAAqZ,SAAA;;4BAEA3Y,EAAAuX,cAAA,SAAAnW;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAAgY;;gCAEAhY,KAAAgY,eAAAlW;gCACA,OAAA9B,KAAAqZ,SAAA;;4BAEA3Y,EAAAmX,OAAA,SAAA/V;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA4X;;gCAEA5X,KAAA4X,QAAA9V;gCACA,OAAA9B;;4BAEA,OAAAwX;2BACiB;wBACjBb,SAAAE,UAAA,mFAAAC,WAAAC,gBAAAjD;4BACA,IAAAqN,eAAA,SAAAhK;gCACAJ,eAAAxW,KAAAP,MAAAmX;gCACAnX,KAAAohB;gCACAphB,KAAAkc,qBAAAlc,KAAAmX,KAAA+E,uBAAA;gCACAlc,KAAAqhB,oBAAArhB,KAAAmX,KAAAkK,sBAAA;gCACArhB,KAAAshB,gBAAA;gCACAthB,KAAAuc,YAAAvc,KAAAmX,KAAAoK;gCACA,IAAAjL,IAAAtW,KAAAmX,MAAAI,KAAA7W;gCACA,KAAAA,KAAA4V,GAAA;oCACAiB,MAAAjB,EAAA5V;oCACA,IAAA8X,SAAAjB,MAAA,IAAAA,IAAAiK,KAAA,IAAAhc,QAAA,eAA+E;wCAC/E8Q,EAAA5V,KAAAV,KAAAyhB,kBAAAlK;;;gCAGA,IAAAiB,SAAAlC,EAAAuJ,SAAA;oCACA7f,KAAAqM,IAAAiK,EAAAuJ,QAAA,GAAAvJ,EAAAoL,OAAApL,EAAAiH;;+BAEqBpF,WAAA,OAAAC,qBAAAtE,UAAAuE,yBAAA8I,aAAA9I,iBAAwGC,cAAAF,mBAAAG,YAAAC,WAAAJ,mBAAAK,SAAAkJ,cAAAvJ,mBAAAqE,YAAAmF,cAAAxJ,mBAAAyJ,YAAAC,WAAAnL,SAAAE,UAAAkL,SAAAC,QAAA,SAAA7K;gCAC7H,IAAA+G,WAAqCxd;gCACrC,KAAAA,KAAAyW,MAAA;oCACA+G,KAAAxd,KAAAyW,KAAAzW;;gCAEA,OAAAwd;+BACqBhH,cAAA,SAAAC,MAAAC,SAAAH;gCACrB,IAAAI,MAAAF,KAAAG,OAAA5W,GAAA6W;gCACA,KAAA7W,KAAA2W,KAAA;oCACAE,MAAAF,IAAA3W;oCACAyW,KAAAzW,YAAA6W,QAAA,aAAAA,IAAAhX,KAAA6W,QAAAH,SAAAM,IAAAN,IAAAM,IAAAzS;;uCAEAqS,KAAAG;+BACqB2K,iBAAA5J,WAAA6J,gBAAA,eAA2DlL,SAAA,SAAA9P;gCAChF,IAAAnG,QAAAuT,IAAApN,EAAApC,QAAAmS;gCACA,KAAAA,IAAA,GAAmCA,MAAA3C,GAASvT,EAAAoE,KAAA+B,EAAA+P;gCAC5C,OAAAlW;+BACqBL,IAAAygB,aAAAjgB,YAAA,IAAA6V;4BACrBoK,aAAAvI,UAAA;4BACAlY,EAAAO,cAAAkgB;4BACAzgB,EAAAmY,OAAAC,MAAApY,EAAAyhB,mBAAAzhB,EAAA0hB,YAAA;4BACA1hB,EAAAgY,KAAA,SAAAjB,QAAAC,UAAAP,MAAAtH;gCACA,IAAAwS,SAAAlL,KAAAY,UAAA+J,SAAAtK,YAAA1D;gCACA,OAAA4D,WAAA1X,KAAAqM,IAAA,IAAAgW,OAAA5K,QAAAC,UAAAP,OAAAtH,YAAA7P,KAAA8P,IAAA2H,QAAAN,MAAAtH;;4BAEAnP,EAAAqc,OAAA,SAAAtF,QAAAC,UAAAP,MAAAtH;gCACA,OAAA7P,KAAAqM,KAAA8K,KAAAY,UAAA+J,SAAAtK,YAAA1D,WAAAiJ,KAAAtF,QAAAC,UAAAP,OAAAtH;;4BAEAnP,EAAAuc,SAAA,SAAAxF,QAAAC,UAAAwF,UAAAC,QAAAtN;gCACA,IAAAwS,SAAAlF,OAAApF,UAAA+J,SAAAtK,YAAA1D;gCACA,OAAA4D,WAAA1X,KAAAqM,IAAAgW,OAAApF,OAAAxF,QAAAC,UAAAwF,UAAAC,SAAAtN,YAAA7P,KAAA8P,IAAA2H,QAAA0F,QAAAtN;;4BAEAnP,EAAA2c,YAAA,SAAAjG,SAAAM,UAAAP,MAAAoG,SAAA1N,UAAA2N,eAAAC,qBAAAC;gCACA,IAAA2C,KAAA,IAAAc;oCACAvD,YAAAJ;oCACAqB,kBAAApB;oCACAO,eAAAN;oCACA2D,mBAAArhB,KAAAqhB;oCACyB/J,QAAAH,KAAAG,OAAA4G,MAAAjH;gCACzB,WAAAG,YAAA;oCACAA,UAAAtD,UAAAqK,SAAA/G;;gCAEAA;gCACA,IAAAkB,YAAAlB,UAAA;oCACAA,UAAAJ,OAAAI;;gCAEAmG,qBAAA;gCACA,IAAAA,UAAA;oCACAnG,UAAAJ,OAAAI;oCACAA,QAAAgH;oCACAb,YAAA;;gCAEA,KAAAtG,IAAA,GAAmCA,IAAAG,QAAAtS,QAAoBmS,KAAA;oCACvDiH,OAAA8D,MAAA7K;oCACA,IAAA+G,KAAAd,SAAA;wCACAc,KAAAd,UAAA4E,MAAA9D,KAAAd;wCACA,IAAAc,KAAAd,QAAA9F,OAAA;4CACAJ,YAAAgH,KAAAd,SAAAhG,SAAAH;;;oCAGA,IAAAK,OAAA;wCACAJ,YAAAgH,MAAA9G,SAAAH;wCACA,IAAAiH,KAAAxG,YAAA;4CACAA,WAAAwG,KAAAxG;mDACAwG,KAAAxG;;;oCAGA2I,GAAA3H,GAAAtB,QAAAH,IAAAS,UAAAwG,MAAAjH,IAAAsG;;gCAEA,OAAAvd,KAAAqM,IAAAgU,IAAAxQ;;4BAEAnP,EAAA2d,cAAA,SAAAjH,SAAAM,UAAAP,MAAAoG,SAAA1N,UAAA2N,eAAAC,qBAAAC;gCACAvG,KAAAwC,kBAAAxC,KAAAwC,mBAAA;gCACAxC,KAAA6F,eAAA;gCACA,OAAAhd,KAAAqd,UAAAjG,SAAAM,UAAAP,MAAAoG,SAAA1N,UAAA2N,eAAAC,qBAAAC;;4BAEAhd,EAAA6d,gBAAA,SAAAnH,SAAAM,UAAAwF,UAAAC,QAAAI,SAAA1N,UAAA2N,eAAAC,qBAAAC;gCACAP,OAAAC,UAAAF;gCACAC,OAAAxD,kBAAAwD,OAAAxD,mBAAA,SAAAuD,SAAAvD,mBAAA;gCACA,OAAA3Z,KAAAqd,UAAAjG,SAAAM,UAAAyF,QAAAI,SAAA1N,UAAA2N,eAAAC,qBAAAC;;4BAEAhd,EAAAH,OAAA,SAAAmb,UAAAgD,QAAAC,OAAA9O;gCACA,OAAA7P,KAAAqM,IAAAyH,UAAA2K,YAAA,GAAA/C,UAAAgD,QAAAC,QAAA9O;;4BAEAnP,EAAAoP,MAAA,SAAA2H,QAAAN,MAAAtH;gCACAA,WAAA7P,KAAAsiB,kBAAAzS,UAAA;gCACA,IAAAsH,KAAAwC,mBAAA;oCACAxC,KAAAwC,kBAAA9J,aAAA7P,KAAA8Z,UAAA9Z,KAAA2c;;gCAEA,OAAA3c,KAAAqM,IAAA,IAAAyH,UAAA2D,QAAA,GAAAN,OAAAtH;;4BAEAsR,aAAAoB,aAAA,SAAApL,MAAAqL;gCACArL;gCACA,IAAAA,KAAAkK,qBAAA;oCACAlK,KAAAkK,oBAAA;;gCAEA,IAAAhB,KAAA,IAAAc,aAAAhK,OAAAzX,OAAA2gB,GAAAxG,WAAAyF,OAAAmD;gCACA,IAAAD,sBAAA;oCACAA,qBAAA;;gCAEA9iB,KAAAgjB,QAAArC,IAAA;gCACAA,GAAAzG,aAAA;gCACAyG,GAAA7E,eAAA6E,GAAAvG,QAAAuG,GAAA7F,aAAA9a,KAAAoa;gCACAwF,QAAA5f,KAAA6f;gCACA,OAAAD,OAAA;oCACAmD,OAAAnD,MAAAxE;oCACA,KAAA0H,wBAAAlD,iBAAAxL,aAAAwL,MAAA7H,WAAA6H,MAAAnI,KAAAyG,aAAA;wCACAyC,GAAAhU,IAAAiT,aAAA1F,aAAA0F,MAAArF;;oCAEAqF,QAAAmD;;gCAEA/iB,KAAA2M,IAAAgU,IAAA;gCACA,OAAAA;;4BAEA3f,EAAA2L,MAAA,SAAAvK,OAAA+N,UAAA6R,OAAAnE;gCACA,IAAAoF,SAAArO,GAAA2C,GAAA2L,OAAAvC,IAAAwC;gCACA,WAAAhT,aAAA;oCACAA,WAAA7P,KAAAsiB,kBAAAzS,UAAA,SAAA/N;;gCAEA,MAAAA,iBAAAgV,YAAA;oCACA,IAAAhV,iBAAAghB,SAAAhhB,eAAAqD,QAAAqT,SAAA1W,QAAA;wCACA4f,iBAAA;wCACAnE,qBAAA;wCACAoF,UAAA9S;wCACAyE,IAAAxS,MAAAgD;wCACA,KAAAmS,IAAA,GAA2CA,IAAA3C,GAAO2C,KAAA;4CAClD,IAAAuB,SAAAoK,QAAA9gB,MAAAmV,KAAA;gDACA2L,QAAA,IAAAzB;oDACAtB,QAAA+C;;;4CAGA5iB,KAAAqM,IAAAuW,OAAAD;4CACA,WAAAC,UAAA,mBAAAA,UAAA;gDACA,IAAAlB,UAAA;oDACAiB,UAAAC,MAAAhJ,aAAAgJ,MAAAxH,kBAAAwH,MAAA7B;uDACyC,IAAAW,UAAA;oDACzCkB,MAAAhJ,cAAAgJ,MAAA/V;;;4CAGA8V,WAAApF;;wCAEA,OAAAvd,KAAAqZ,SAAA;2CAC6B,WAAAvX,UAAA;wCAC7B,OAAA9B,KAAA+iB,SAAAjhB,OAAA+N;2CAC6B,WAAA/N,UAAA;wCAC7BA,QAAAgS,UAAA2K,YAAA,GAAA3c;2CAC6B;wCAC7B,sBAAAA,QAAA;;;gCAGAiV,eAAA7V,UAAAmL,IAAA9L,KAAAP,MAAA8B,OAAA+N;gCACA,IAAA7P,KAAA8Y,OAAA9Y,KAAA8Z,UAAA9Z,KAAAsa,WAAA,KAAAta,KAAA2c,SAAA,IAAA3c,KAAAsa,YAAAta,KAAA0X,YAAA;oCACA2I,KAAArgB;oCACA6iB,gBAAAxC,GAAA2C,YAAAlhB,MAAA8X;oCACA,OAAAyG,GAAAxG,WAAA;wCACA,IAAAgJ,iBAAAxC,GAAAxG,UAAAwH,mBAAA;4CACAhB,GAAAH,UAAAG,GAAA7F,YAAA;+CACiC,IAAA6F,GAAAvH,KAAA;4CACjCuH,GAAAtG,SAAA;;wCAEAsG,QAAAxG;;;gCAGA,OAAA7Z;;4BAEAU,EAAAwO,SAAA,SAAApN;gCACA,IAAAA,iBAAAgV,WAAA;oCACA9W,KAAA0iB,QAAA5gB,OAAA;oCACA,IAAAue,KAAAve,MAAA+X,YAAA/X,MAAAqV,KAAAyH,YAAA9H,UAAA4I,sBAAA5I,UAAA2I;oCACA3d,MAAA8X,cAAA9X,MAAA6a,UAAA7a,MAAAmhB,aAAA5C,GAAAvG,WAAAhY,MAAAma,YAAAna,MAAA0Y,aAAA1Y,MAAAsZ,kBAAAtZ,MAAA0Y,cAAA1Y,MAAAif;oCACA,OAAA/gB;uCACyB,IAAA8B,iBAAAghB,SAAAhhB,eAAAqD,QAAAqT,SAAA1W,QAAA;oCACzB,IAAAmV,IAAAnV,MAAAgD;oCACA,SAAAmS,KAAA;wCACAjX,KAAAkP,OAAApN,MAAAmV;;oCAEA,OAAAjX;uCACyB,WAAA8B,UAAA;oCACzB,OAAA9B,KAAAkjB,YAAAphB;;gCAEA,OAAA9B,KAAA6Y,KAAA,MAAA/W;;4BAEApB,EAAAgiB,UAAA,SAAApD,OAAA6D;gCACApM,eAAA7V,UAAAwhB,QAAAniB,KAAAP,MAAAsf,OAAA6D;gCACA,IAAAC,OAAApjB,KAAAqjB;gCACA,KAAAD,MAAA;oCACApjB,KAAA8Z,QAAA9Z,KAAAwa,aAAAxa,KAAAsa,YAAAta,KAAAmb,iBAAA;uCACyB,IAAAnb,KAAA8Z,QAAAsJ,KAAAxJ,aAAAwJ,KAAAjI,iBAAAiI,KAAArC,YAAA;oCACzB/gB,KAAA8Z,QAAA9Z,KAAA0X;oCACA1X,KAAAwa,aAAAxa,KAAAmb;;gCAEA,OAAAnb;;4BAEAU,EAAA4iB,SAAA,SAAAxhB,OAAAyhB;gCACA,OAAAvjB,KAAAqM,IAAAvK,OAAA9B,KAAAsiB,kBAAA,MAAAiB,eAAA,MAAAzhB;;4BAEApB,EAAAsZ,SAAAtZ,EAAA8iB,iBAAA,SAAA1hB,OAAA+N,UAAA6R,OAAAnE;gCACA,OAAAvd,KAAAqM,IAAAvK,OAAA+N,YAAA,GAAA6R,OAAAnE;;4BAEA7c,EAAA+iB,iBAAA,SAAA5D,QAAA0D,eAAA7B,OAAAnE;gCACA,OAAAvd,KAAAqM,IAAAwT,QAAA7f,KAAAsiB,kBAAA,MAAAiB,eAAA,MAAA1D,SAAA6B,OAAAnE;;4BAEA7c,EAAAqiB,WAAA,SAAAW,OAAA7T;gCACA7P,KAAAohB,QAAAsC,SAAA1jB,KAAAsiB,kBAAAzS;gCACA,OAAA7P;;4BAEAU,EAAAijB,WAAA,SAAA9T,UAAA6L,UAAAgD,QAAAC;gCACA,IAAAxJ,IAAArB,UAAA2K,YAAA,GAAAwD,gBAAAvD,QAAAC,SAAA3e;gCACAmV,EAAAgC,KAAAyG,aAAAzI,EAAAgC,KAAA2H,oBAAApD;gCACAvG,EAAA5K,OAAA;gCACAvK,KAAAoiB,YAAA;gCACA,OAAApiB,KAAAqM,IAAA8I,GAAAtF;;4BAEAnP,EAAAwiB,cAAA,SAAAQ;uCACA1jB,KAAAohB,QAAAsC;gCACA,OAAA1jB;;4BAEAU,EAAAkjB,eAAA,SAAAF;gCACA,OAAA1jB,KAAAohB,QAAAsC,UAAA,OAAA1jB,KAAAohB,QAAAsC,UAAA;;4BAEAhjB,EAAA4hB,oBAAA,SAAAuB,aAAAN,eAAAO,gBAAAC;gCACA,IAAA9M;gCACA,IAAA8M,kBAAAjN,aAAAiN,OAAA5E,aAAAnf,MAAA;oCACAA,KAAAkP,OAAA6U;uCACyB,IAAAA,6BAAAjB,SAAAiB,OAAA5e,QAAAqT,SAAAuL,UAAA;oCACzB9M,IAAA8M,OAAAjf;oCACA,SAAAmS,KAAA;wCACA,IAAA8M,OAAA9M,cAAAH,aAAAiN,OAAA9M,GAAAkI,aAAAnf,MAAA;4CACAA,KAAAkP,OAAA6U,OAAA9M;;;;gCAIA,WAAAsM,kBAAA;oCACA,OAAAvjB,KAAAsiB,kBAAAiB,eAAAO,yBAAAD,gBAAA,YAAA7jB,KAAAohB,QAAAmC,kBAAA,OAAAM,cAAA7jB,KAAA0X,aAAA,GAAAoM;;gCAEAP,iCAAA;gCACA,WAAAM,gBAAA,aAAAG,MAAAH,gBAAA7jB,KAAAohB,QAAAyC,gBAAA;oCACA5M,IAAA4M,YAAAre,QAAA;oCACA,IAAAyR,OAAA;wCACA,IAAAjX,KAAAohB,QAAAyC,gBAAA;4CACA,OAAAC,iBAAA9jB,KAAAohB,QAAAyC,eAAA7jB,KAAA0X,aAAA6L;;wCAEA,OAAAvjB,KAAAohB,QAAAyC,eAAAN;;oCAEAA,gBAAA5Z,SAAAka,YAAAI,OAAAhN,IAAA,gBAAAiN,OAAAL,YAAAM,OAAAlN,IAAA;oCACA4M,cAAA5M,IAAA,IAAAjX,KAAAsiB,kBAAAuB,YAAAM,OAAA,GAAAlN,IAAA,OAAA6M,kBAAA9jB,KAAA0X;uCACyB,IAAAmM,eAAA;oCACzBA,cAAA7jB,KAAA0X;;gCAEA,OAAAwM,OAAAL,eAAAN;;4BAEA7iB,EAAA0jB,OAAA,SAAAvU,UAAAmL;gCACA,OAAAhb,KAAAkgB,iBAAArQ,aAAA,WAAAA,WAAA7P,KAAAsiB,kBAAAzS,WAAAmL,mBAAA;;4BAEAta,EAAAwM,OAAA;gCACA,OAAAlN,KAAA2gB,OAAA;;4BAEAjgB,EAAA2jB,cAAA,SAAAxU,UAAAmL;gCACA,OAAAhb,KAAAskB,KAAAzU,UAAAmL;;4BAEAta,EAAA6jB,cAAA,SAAA1U,UAAAmL;gCACA,OAAAhb,KAAA0gB,MAAA7Q,UAAAmL;;4BAEAta,EAAAgM,SAAA,SAAAqO,MAAAC,gBAAAC;gCACA,IAAAjb,KAAA8Y,KAAA;oCACA9Y,KAAA+Z,SAAA;;gCAEA,IAAAmB,YAAAlb,KAAAkY,SAAAlY,KAAAmb,iBAAAnb,KAAAob,iBAAAb,WAAAva,KAAA8Z,OAAA0K,YAAAxkB,KAAA4Z,YAAA6K,gBAAAzkB,KAAA+gB,YAAA2D,aAAA1kB,KAAA2c,SAAA2C,OAAA7D,YAAAgH,MAAA/G,UAAAiJ,eAAAC,YAAAjC;gCACA,IAAA5H,QAAAG,WAAA;oCACAlb,KAAAwa,aAAAxa,KAAA8Z,QAAAoB;oCACA,KAAAlb,KAAAic,WAAA,KAAAjc,KAAA6kB,mBAAA;wCACApJ,aAAA;wCACAC,WAAA;wCACAiJ,kBAAA3kB,KAAA6Z,UAAAqC;wCACA,IAAAlc,KAAAsa,cAAA,OAAAS,QAAA,KAAAA,SAAA,QAAA/a,KAAAwb,eAAA,KAAAxb,KAAAwb,iBAAArD,UAAA,IAAAnY,KAAAwb,iBAAAT,QAAA/a,KAAAuf,QAAA;4CACAoF,gBAAA;4CACA,IAAA3kB,KAAAwb,eAAArD,UAAA;gDACAuD,WAAA;;;;oCAIA1b,KAAAwb,eAAAxb,KAAAsa,cAAAU,kBAAAD,QAAA/a,KAAAwb,iBAAAT,cAAA5C;oCACA4C,OAAAG,WAAA;uCACyB,IAAAH,OAAA;oCACzB/a,KAAAwa,aAAAxa,KAAA8Z,QAAA;oCACA,IAAAS,aAAA,KAAAva,KAAAsa,cAAA,KAAAta,KAAAwb,iBAAArD,aAAAnY,KAAAwb,eAAA,KAAAT,OAAA,KAAA/a,KAAAwb,gBAAA;wCACAE,WAAA;wCACAD,aAAAzb,KAAAic;;oCAEA,IAAAlB,OAAA;wCACA/a,KAAAoc,UAAA;wCACA,IAAApc,KAAA6Z,UAAAqC,sBAAAlc,KAAAic,WAAA;4CACA0I,gBAAAlJ,aAAA;4CACAC,WAAA;+CACiC,IAAA1b,KAAAwb,gBAAA,KAAAxb,KAAAuf,QAAA;4CACjCoF,gBAAA;;wCAEA3kB,KAAAwb,eAAAT;2CAC6B;wCAC7B/a,KAAAwb,eAAAxb,KAAAsa,cAAAU,kBAAAD,QAAA/a,KAAAwb,iBAAAT,cAAA5C;wCACA,IAAA4C,SAAA,KAAAU,YAAA;4CACA6D,QAAAtf,KAAAuf;4CACA,OAAAD,eAAA1F,eAAA;gDACA,KAAA0F,MAAAhF,WAAA;oDACAmB,aAAA;;gDAEA6D,cAAAxE;;;wCAGAC,OAAA;wCACA,KAAA/a,KAAAka,UAAA;4CACAyK,gBAAA;;;uCAGyB;oCACzB,IAAA3kB,KAAAoiB,cAAApiB,KAAAmiB,qBAAAnH,gBAAA;wCACA,IAAAD,QAAAR,UAAA;4CACA+E,QAAAtf,KAAAuf;4CACA,OAAAD,eAAA1F,cAAAmB,SAAA6J,YAAA;gDACA,KAAAtF,MAAAhF,WAAA,IAAAgF,MAAA/U,SAAA,cAAA+U,MAAA7F,WAAA6F,MAAA1F,eAAA,KAAA5Z,KAAAwb,iBAAA;oDACAoJ,aAAAtF;;gDAEAA,cAAAxE;;+CAEiC;4CACjCwE,QAAAtf,KAAAqjB;4CACA,OAAA/D,eAAA1F,cAAAmB,SAAA6J,YAAA;gDACA,KAAAtF,MAAAhF,WAAA,IAAAgF,MAAA/U,SAAA,aAAA+U,MAAA9D,eAAA;oDACAoJ,aAAAtF;;gDAEAA,cAAAwF;;;wCAGA,IAAAF,YAAA;4CACA5kB,KAAA8Z,QAAAiB,OAAA6J,WAAAhL;4CACA5Z,KAAAwa,aAAAO,OAAA/a,KAAA2X,UAAA3X,KAAAmb,iBAAAnb,KAAAgY;;;oCAGAhY,KAAAwa,aAAAxa,KAAA8Z,QAAA9Z,KAAAwb,eAAAT;;gCAEA,KAAA/a,KAAA8Z,UAAAS,aAAAva,KAAAuf,YAAAtE,UAAA0J,kBAAAC,YAAA;oCACA;uCACyB,KAAA5kB,KAAAka,UAAA;oCACzBla,KAAAka,WAAA;;gCAEA,KAAAla,KAAAoc,SAAA,KAAApc,KAAA2c,WAAA3c,KAAA8Z,UAAAS,YAAAQ,OAAA;oCACA/a,KAAAoc,UAAA;;gCAEA,IAAA7B,aAAA,OAAAva,KAAAmX,KAAA0F,SAAA,IAAA7c,KAAA8Z,UAAA,MAAA9Z,KAAAsa,WAAA,KAAAU,gBAAA;oCACAhb,KAAAwc,UAAA;;gCAEAmG,UAAA3iB,KAAA8Z;gCACA,IAAA6I,WAAApI,UAAA;oCACA+E,QAAAtf,KAAAuf;oCACA,OAAAD,OAAA;wCACAmD,OAAAnD,MAAAxE;wCACA,IAAA6H,YAAA3iB,KAAA8Z,SAAA9Z,KAAA2c,YAAA+H,YAAA;4CACA;+CACiC,IAAApF,MAAAlD,WAAAkD,MAAA1F,cAAA+I,YAAArD,MAAA3C,YAAA2C,MAAAxG,KAAA;4CACjC,IAAA8L,eAAAtF,OAAA;gDACAtf,KAAA0gB;;4CAEA,KAAApB,MAAArD,WAAA;gDACAqD,MAAA5S,QAAAqO,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;mDACqC;gDACrCqE,MAAA5S,SAAA4S,MAAApH,SAAAoH,MAAAnE,iBAAAmE,MAAAlE,oBAAAL,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;;;wCAGAqE,QAAAmD;;uCAEyB;oCACzBnD,QAAAtf,KAAAqjB;oCACA,OAAA/D,OAAA;wCACAmD,OAAAnD,MAAAwF;wCACA,IAAAnC,YAAA3iB,KAAA8Z,SAAA9Z,KAAA2c,YAAA+H,YAAA;4CACA;+CACiC,IAAApF,MAAAlD,WAAAkD,MAAA1F,cAAAW,aAAA+E,MAAA3C,YAAA2C,MAAAxG,KAAA;4CACjC,IAAA8L,eAAAtF,OAAA;gDACAsF,aAAAtF,MAAAwF;gDACA,OAAAF,yBAAAG,YAAA/kB,KAAA8Z,OAAA;oDACA8K,WAAAlY,OAAAkY,WAAA3I,YAAA2I,WAAAxJ,mBAAAL,OAAA6J,WAAAhL,cAAAgL,WAAA7D,cAAAhG,OAAA6J,WAAAhL,cAAAgL,WAAA7D,YAAA/F,gBAAAC;oDACA2J,wBAAAE;;gDAEAF,aAAA;gDACA5kB,KAAA0gB;;4CAEA,KAAApB,MAAArD,WAAA;gDACAqD,MAAA5S,QAAAqO,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;mDACqC;gDACrCqE,MAAA5S,SAAA4S,MAAApH,SAAAoH,MAAAnE,iBAAAmE,MAAAlE,oBAAAL,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;;;wCAGAqE,QAAAmD;;;gCAGA,IAAAziB,KAAAuc,WAAA,KAAAvB,gBAAA;oCACA,IAAA2G,YAAA7c,QAAA;wCACA8c;;oCAEA5hB,KAAAwc,UAAA;;gCAEA,IAAAd,UAAA,KAAA1b,KAAA8Y,KAAA,IAAA0L,cAAAxkB,KAAA4Z,cAAA6K,kBAAAzkB,KAAA+gB,YAAA,IAAA/gB,KAAA8Z,UAAA,KAAAoB,YAAAlb,KAAAob,iBAAA;oCACA,IAAAK,YAAA;wCACA,IAAAkG,YAAA7c,QAAA;4CACA8c;;wCAEA,IAAA5hB,KAAA6Z,UAAAqC,oBAAA;4CACAlc,KAAA+Z,SAAA;;wCAEA/Z,KAAAoc,UAAA;;oCAEA,KAAApB,kBAAAhb,KAAAmX,KAAAuE,WAAA;wCACA1b,KAAAwc,UAAAd;;;;4BAIAhb,EAAAmkB,kBAAA;gCACA,IAAAvF,QAAAtf,KAAAuf;gCACA,OAAAD,OAAA;oCACA,IAAAA,MAAA3C,WAAA2C,iBAAA6B,gBAAA7B,MAAAuF,mBAAA;wCACA;;oCAEAvF,cAAAxE;;gCAEA;;4BAEApa,EAAAskB,cAAA,SAAAC,QAAApF,QAAAE,WAAAmF;gCACAA,wCAAA;gCACA,IAAAhe,QAAAoY,QAAAtf,KAAAuf,QAAAF,MAAA;gCACA,OAAAC,OAAA;oCACA,IAAAA,MAAA1F,aAAAsL,kBAAA,QAAuE,IAAA5F,iBAAAxL,WAAA;wCACvE,IAAA+L,WAAA;4CACA3Y,EAAAmY,SAAAC;;2CAE6B;wCAC7B,IAAAS,cAAA;4CACA7Y,EAAAmY,SAAAC;;wCAEA,IAAA2F,WAAA;4CACA/d,MAAA3D,OAAA+b,MAAA0F,YAAA,MAAAnF,QAAAE;4CACAV,MAAAnY,EAAApC;;;oCAGAwa,cAAAxE;;gCAEA,OAAA5T;;4BAEAxG,EAAAuY,cAAA,SAAAxB,QAAAwN;gCACA,IAAAE,WAAAnlB,KAAA8Y,KAAA5R,QAAAmY,MAAA,GAAAQ,QAAA5I;gCACA,IAAAkO,UAAA;oCACAnlB,KAAA+Z,SAAA;;gCAEA8F,SAAA/L,UAAAmF,YAAAxB;gCACAR,IAAA4I,OAAA/a;gCACA,SAAAmS,KAAA;oCACA,IAAA4I,OAAA5I,GAAAkI,aAAAnf,QAAAilB,UAAAjlB,KAAAolB,UAAAvF,OAAA5I,KAAA;wCACA/P,EAAAmY,SAAAQ,OAAA5I;;;gCAGA,IAAAkO,UAAA;oCACAnlB,KAAA+Z,SAAA;;gCAEA,OAAA7S;;4BAEAxG,EAAA2kB,SAAA;gCACA,OAAArlB,KAAAslB;;4BAEA5kB,EAAA0kB,YAAA,SAAA9F;gCACA,IAAAe,KAAAf,MAAAH;gCACA,OAAAkB,IAAA;oCACA,IAAAA,OAAArgB,MAAA;wCACA;;oCAEAqgB,QAAAlB;;gCAEA;;4BAEAze,EAAA6kB,gBAAA,SAAAC,QAAAC,cAAAP;gCACAA,uCAAA;gCACA,IAAA5F,QAAAtf,KAAAuf,QAAAmG,SAAA1lB,KAAAohB,SAAA1gB;gCACA,OAAA4e,OAAA;oCACA,IAAAA,MAAA1F,cAAAsL,kBAAA;wCACA5F,MAAA1F,cAAA4L;;oCAEAlG,cAAAxE;;gCAEA,IAAA2K,cAAA;oCACA,KAAA/kB,KAAAglB,QAAA;wCACA,IAAAA,OAAAhlB,MAAAwkB,kBAAA;4CACAQ,OAAAhlB,MAAA8kB;;;;gCAIA,OAAAxlB,KAAAqZ,SAAA;;4BAEA3Y,EAAAilB,QAAA,SAAAxO,MAAAM;gCACA,KAAAN,SAAAM,QAAA;oCACA,OAAAzX,KAAA+Z,SAAA;;gCAEA,IAAA8F,UAAApI,SAAAzX,KAAAglB,YAAA,qBAAAhlB,KAAAiZ,YAAAxB,SAAAR,IAAA4I,OAAA/a,QAAA8gB,UAAA;gCACA,SAAA3O,KAAA;oCACA,IAAA4I,OAAA5I,GAAA0O,MAAAxO,MAAAM,SAAA;wCACAmO,UAAA;;;gCAGA,OAAAA;;4BAEAllB,EAAAmlB,QAAA,SAAAH;gCACA,IAAA7F,SAAA7f,KAAAglB,YAAA,oBAAA/N,IAAA4I,OAAA/a;gCACA9E,KAAA8Z,QAAA9Z,KAAAwa,aAAA;gCACA,SAAAvD,KAAA;oCACA4I,OAAA5I,GAAA8C,SAAA;;gCAEA,IAAA2L,WAAA;oCACA1lB,KAAAohB;;gCAEA,OAAAphB,KAAAqZ,SAAA;;4BAEA3Y,EAAA0Y,aAAA;gCACA,IAAAkG,QAAAtf,KAAAuf;gCACA,OAAAD,OAAA;oCACAA,MAAAlG;oCACAkG,cAAAxE;;gCAEA,OAAAhE,UAAA5V,UAAAkY,WAAA7Y,KAAAP;;4BAEAU,EAAAqZ,WAAA,SAAAhP,SAAA+a;gCACA,IAAA/a,YAAA/K,KAAA8Y,KAAA;oCACA,IAAAwG,QAAAtf,KAAAuf;oCACA,OAAAD,OAAA;wCACAA,MAAAvF,SAAAhP,SAAA;wCACAuU,cAAAxE;;;gCAGA,OAAA/D,eAAA7V,UAAA6Y,SAAAxZ,KAAAP,MAAA+K,SAAA+a;;4BAEAplB,EAAAwf,YAAA,SAAAnF,MAAAC,gBAAA+K;gCACA/lB,KAAAmiB,mBAAA;gCACA,IAAA5K,MAAAT,UAAA5V,UAAAgf,UAAArC,MAAA7d,MAAA+d;gCACA/d,KAAAmiB,mBAAA;gCACA,OAAA5K;;4BAEA7W,EAAAgX,WAAA,SAAA5V;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,IAAA9E,KAAAkY,QAAA;wCACAlY,KAAAob;;oCAEA,OAAApb,KAAAsa;;gCAEA,IAAAta,KAAA0X,eAAA,KAAA5V,UAAA;oCACA9B,KAAAgmB,UAAAhmB,KAAAsa,YAAAxY;;gCAEA,OAAA9B;;4BAEAU,EAAA0a,gBAAA,SAAAtZ;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,IAAA9E,KAAAkY,QAAA;wCACA,IAAA1F,MAAA,GAAA8M,QAAAtf,KAAAqjB,OAAAmB,YAAA,cAAAyB,MAAAjZ;wCACA,OAAAsS,OAAA;4CACA2G,OAAA3G,MAAAwF;4CACA,IAAAxF,MAAApH,QAAA;gDACAoH,MAAAlE;;4CAEA,IAAAkE,MAAA1F,aAAA4K,aAAAxkB,KAAAshB,kBAAAhC,MAAA3C,SAAA;gDACA3c,KAAAqM,IAAAiT,aAAA1F,aAAA0F,MAAArF;mDACqC;gDACrCuK,YAAAlF,MAAA1F;;4CAEA,IAAA0F,MAAA1F,aAAA,MAAA0F,MAAA3C,SAAA;gDACAnK,OAAA8M,MAAA1F;gDACA,IAAA5Z,KAAA6Z,UAAAwH,mBAAA;oDACArhB,KAAA4Z,cAAA0F,MAAA1F,aAAA5Z,KAAA+gB;;gDAEA/gB,KAAAulB,eAAAjG,MAAA1F,YAAA;gDACA4K,YAAA;;4CAEAxX,MAAAsS,MAAA1F,aAAA0F,MAAAnE,iBAAAmE,MAAAyB;4CACA,IAAA/T,MAAAwF,KAAA;gDACAA,MAAAxF;;4CAEAsS,QAAA2G;;wCAEAjmB,KAAAsa,YAAAta,KAAAmb,iBAAA3I;wCACAxS,KAAAkY,SAAA;;oCAEA,OAAAlY,KAAAmb;;gCAEA,OAAArZ,SAAA9B,KAAAob,kBAAApb,KAAAgmB,UAAAhmB,KAAAmb,iBAAArZ,SAAA9B;;4BAEAU,EAAAigB,SAAA,SAAA7e;gCACA,KAAAA,OAAA;oCACA,IAAAwd,QAAAtf,KAAAuf,QAAAxE,OAAA/a,KAAA8Z;oCACA,OAAAwF,OAAA;wCACA,IAAAA,MAAA1F,eAAAmB,QAAAuE,MAAA/U,SAAA;4CACA+U,MAAA9D,eAAA;;wCAEA8D,cAAAxE;;;gCAGA,OAAAhE,UAAA5V,UAAAyf,OAAA9C,MAAA7d,MAAA+d;;4BAEArd,EAAAwlB,aAAA;gCACA,IAAA7F,KAAArgB,KAAA6Z;gCACA,OAAAwG,GAAAxG,WAAA;oCACAwG,QAAAxG;;gCAEA,OAAAwG,OAAAvJ,UAAA4I;;4BAEAhf,EAAAsiB,UAAA;gCACA,OAAAhjB,KAAA2c,UAAA3c,KAAAwa,cAAAxa,KAAA6Z,UAAAmJ,YAAAhjB,KAAA4Z,cAAA5Z,KAAA+gB;;4BAEA,OAAAI;2BACiB;wBACjBxK,SAAAE,UAAA,wEAAAsK,cAAArN,WAAAqS;4BACA,IAAAC,cAAA,SAAAjP;gCACAgK,aAAA5gB,KAAAP,MAAAmX;gCACAnX,KAAA8X,UAAA9X,KAAAmX,KAAAY,UAAA;gCACA/X,KAAAgY,eAAAhY,KAAAmX,KAAAc,eAAA;gCACAjY,KAAA2X,SAAA;gCACA3X,KAAA4X,QAAA5X,KAAAmX,KAAAU,SAAA;gCACA7X,KAAAkY,SAAA;+BACqBC,WAAA,OAAAC,qBAAAtE,UAAAuE,YAAAsJ,cAAAvJ,mBAAAqE,YAAAmF,cAAAxJ,mBAAAyJ,YAAAwE,YAAA,IAAAF,KAAA,mBAAAzlB,IAAA0lB,YAAAllB,YAAA,IAAAigB;4BACrBzgB,EAAAO,cAAAmlB;4BACA1lB,EAAAmY,OAAAC,MAAA;4BACAsN,YAAAxN,UAAA;4BACAlY,EAAA0Y,aAAA;gCACApZ,KAAA4X,QAAA5X,KAAAmX,KAAAU,SAAA;gCACA7X,KAAA8X,UAAA9X,KAAAmX,KAAAY,UAAA;gCACA/X,KAAAgY,eAAAhY,KAAAmX,KAAAc,eAAA;gCACAjY,KAAAqZ,SAAA;gCACA,OAAA8H,aAAAjgB,UAAAkY,WAAA7Y,KAAAP;;4BAEAU,EAAA4lB,cAAA,SAAA5K,UAAA7L,UAAA6O,QAAAC;gCACA,OAAA3e,KAAAqM,IAAAyH,UAAA2K,YAAA,GAAA/C,UAAAgD,QAAAC,QAAA9O;;4BAEAnP,EAAA6lB,iBAAA,SAAA7K,UAAA7L;gCACA,IAAA6L,UAAA;oCACA,IAAA7L,YAAA;wCACA7P,KAAA2lB,MAAA,MAAAjK;2CAC6B;wCAC7B,IAAAxU,IAAAlH,KAAAiZ,YAAAyC,UAAA,QAAAzE,IAAA/P,EAAApC,QAAAiW,OAAA/a,KAAAsiB,kBAAAzS;wCACA,SAAAoH,KAAA;4CACA,IAAA/P,EAAA+P,GAAA2C,eAAAmB,MAAA;gDACA7T,EAAA+P,GAAA8C,SAAA;;;;;gCAKA,OAAA/Z;;4BAEAU,EAAA8lB,cAAA,SAAA3W;gCACA,OAAA7P,KAAAumB,eAAApF,aAAA9I,WAAA6J,eAAArS;;4BAEAnP,EAAA+lB,UAAA,SAAA5W,UAAAsH;gCACAA;gCACA,IAAA+G;oCACAwI,MAAAL;oCACAzH,WAAA5e,KAAAkmB;oCACAvM,iBAAA;mCACyBjC,UAAAhX,GAAAyU;gCACzB,KAAAzU,KAAAyW,MAAA;oCACA+G,KAAAxd,KAAAyW,KAAAzW;;gCAEAwd,KAAAnD,OAAA/a,KAAAsiB,kBAAAzS;gCACA6H,WAAApF,KAAAqU,IAAAzC,OAAAhG,KAAAnD,QAAA/a,KAAA8Z,SAAA9Z,KAAA+gB,cAAA;gCACA5L,IAAA,IAAArB,UAAA9T,MAAA0X,UAAAwG;gCACAA,KAAArB,UAAA;oCACA1H,EAAAsC,OAAAkJ,OAAA;oCACA,IAAAxL,EAAAgC,KAAA4D,SAAA5F,EAAAsC,OAAAsD,UAAArD,aAAAvC,EAAAuC,YAAA;wCACAvC,EAAAuC,SAAApF,KAAAqU,IAAAxR,EAAAgC,KAAA4D,OAAA5F,EAAAsC,OAAAsD,UAAA5F,EAAAsC,OAAAsJ;;oCAEA,IAAA5J,KAAA0F,SAAA;wCACA1H,EAAAqH,UAAA;;;gCAGA,OAAArH;;4BAEAzU,EAAAkmB,cAAA,SAAAC,cAAAC,YAAA3P;gCACAA;gCACA0P,eAAA7mB,KAAAsiB,kBAAAuE;gCACA1P,KAAAiG;oCACAQ,YAAA5d,KAAAokB;oCACAvF,oBAAAgI;oCACA7I,eAAAhe;;gCAEAmX,KAAAwC,kBAAAxC,KAAAwC,oBAAA;gCACA,IAAAxE,IAAAnV,KAAAymB,QAAAK,YAAA3P;gCACA,OAAAhC,EAAAuC,SAAApF,KAAAqU,IAAAxR,EAAAgC,KAAA4D,OAAA8L,gBAAA7mB,KAAA+gB,cAAA;;4BAEArgB,EAAAgM,SAAA,SAAAqO,MAAAC,gBAAAC;gCACA,IAAAjb,KAAA8Y,KAAA;oCACA9Y,KAAA+Z,SAAA;;gCAEA,IAAAmB,YAAAlb,KAAAkY,SAAAlY,KAAAmb,iBAAAnb,KAAAob,iBAAA2L,MAAA/mB,KAAAsa,WAAAC,WAAAva,KAAA8Z,OAAAuB,gBAAArb,KAAAwa,YAAAgK,YAAAxkB,KAAA4Z,YAAA6K,gBAAAzkB,KAAA+gB,YAAAxF,kBAAAvb,KAAAwb,cAAAkJ,aAAA1kB,KAAA2c,SAAArB,YAAAtb,KAAA2X,QAAA2H,OAAA7D,YAAAgH,MAAA/G,UAAAiJ,eAAAhJ,eAAAiJ,YAAAjC;gCACA,IAAA5H,QAAAG,WAAA;oCACA,KAAAlb,KAAAgnB,SAAA;wCACAhnB,KAAAwa,aAAAU;wCACAlb,KAAA2X,SAAA3X,KAAA8X;;oCAEA,KAAA9X,KAAAic,WAAA,KAAAjc,KAAA6kB,mBAAA;wCACApJ,aAAA;wCACAC,WAAA;wCACAiJ,kBAAA3kB,KAAA6Z,UAAAqC;wCACA,IAAAlc,KAAAsa,cAAA,OAAAS,QAAA,KAAAA,SAAA,QAAAQ,kBAAA,KAAAA,oBAAApD,UAAA,IAAAoD,oBAAAR,QAAA/a,KAAAuf,QAAA;4CACAoF,gBAAA;4CACA,IAAApJ,kBAAApD,UAAA;gDACAuD,WAAA;;;;oCAIA1b,KAAAwb,eAAAxb,KAAAsa,cAAAU,kBAAAD,QAAA/a,KAAAwb,iBAAAT,cAAA5C;oCACA,IAAAnY,KAAA4X,UAAA5X,KAAA2X,SAAA;wCACA3X,KAAA8Z,QAAAiB,OAAA;2CAC6B;wCAC7B/a,KAAA8Z,QAAAiN;wCACAhM,OAAAgM,MAAA;;uCAEyB,IAAAhM,OAAA;oCACzB,KAAA/a,KAAAgnB,SAAA;wCACAhnB,KAAAwa,aAAAxa,KAAA2X,SAAA;;oCAEA3X,KAAA8Z,QAAA;oCACA,IAAAS,aAAA,KAAAwM,QAAA,KAAAxL,oBAAApD,aAAAoD,kBAAA,KAAAR,OAAA,KAAAQ,mBAAA,OAAAvb,KAAAgnB,SAAA;wCACAtL,WAAA;wCACAD,aAAAzb,KAAAic;;oCAEA,IAAAlB,OAAA;wCACA/a,KAAAoc,UAAA;wCACA,IAAApc,KAAA6Z,UAAAqC,sBAAAlc,KAAAic,WAAA;4CACA0I,gBAAAlJ,aAAA;4CACAC,WAAA;+CACiC,IAAAH,mBAAA,KAAAvb,KAAAuf,QAAA;4CACjCoF,gBAAA;;wCAEA3kB,KAAAwb,eAAAT;2CAC6B;wCAC7B/a,KAAAwb,eAAAuL,QAAA/L,kBAAAD,QAAA/a,KAAAwb,iBAAAT,cAAA5C;wCACA,IAAA4C,SAAA,KAAAU,YAAA;4CACA6D,QAAAtf,KAAAuf;4CACA,OAAAD,eAAA1F,eAAA;gDACA,KAAA0F,MAAAhF,WAAA;oDACAmB,aAAA;;gDAEA6D,cAAAxE;;;wCAGAC,OAAA;wCACA,KAAA/a,KAAAka,UAAA;4CACAyK,gBAAA;;;uCAGyB;oCACzB,IAAAoC,QAAA,KAAAxL,kBAAA;wCACAoJ,gBAAA;;oCAEA3kB,KAAA8Z,QAAA9Z,KAAAwb,eAAAT;oCACA,KAAA/a,KAAAgnB,SAAA;wCACAhnB,KAAAwa,aAAAO;wCACA,IAAA/a,KAAA8X,YAAA;4CACA6D,gBAAAoL,MAAA/mB,KAAAgY;4CACAhY,KAAA2X,SAAA3X,KAAAwa,aAAAmB,iBAAA;4CACA,IAAA3b,KAAA2X,WAAA,OAAA3X,KAAA2X,WAAA3X,KAAAwa,aAAAmB,iBAAAN,iBAAAN,MAAA;gDACA/a,KAAA2X;;4CAEA3X,KAAA8Z,QAAA9Z,KAAAwa,aAAAxa,KAAA2X,SAAAgE;4CACA,IAAA3b,KAAA4X,OAAA,KAAA5X,KAAA2X,SAAA;gDACA3X,KAAA8Z,QAAAiN,MAAA/mB,KAAA8Z;;4CAEA,IAAA9Z,KAAA8Z,QAAAiN,KAAA;gDACA/mB,KAAA8Z,QAAAiN;gDACAhM,OAAAgM,MAAA;mDACqC,IAAA/mB,KAAA8Z,QAAA;gDACrC9Z,KAAA8Z,QAAAiB,OAAA;mDACqC;gDACrCA,OAAA/a,KAAA8Z;;;;oCAIA,IAAA9Z,KAAAoiB,cAAApiB,KAAAmiB,qBAAAnH,gBAAA;wCACAD,OAAA/a,KAAA8Z;wCACA,IAAAiB,QAAAR,UAAA;4CACA+E,QAAAtf,KAAAuf;4CACA,OAAAD,eAAA1F,cAAAmB,SAAA6J,YAAA;gDACA,KAAAtF,MAAAhF,WAAA,IAAAgF,MAAA/U,SAAA,cAAA+U,MAAA7F,WAAA6F,MAAA1F,eAAA,KAAA5Z,KAAAwb,iBAAA;oDACAoJ,aAAAtF;;gDAEAA,cAAAxE;;+CAEiC;4CACjCwE,QAAAtf,KAAAqjB;4CACA,OAAA/D,eAAA1F,cAAAmB,SAAA6J,YAAA;gDACA,KAAAtF,MAAAhF,WAAA,IAAAgF,MAAA/U,SAAA,aAAA+U,MAAA9D,eAAA;oDACAoJ,aAAAtF;;gDAEAA,cAAAwF;;;wCAGA,IAAAF,YAAA;4CACA5kB,KAAA8Z,QAAAiB,OAAA6J,WAAAhL;4CACA5Z,KAAAwa,aAAAO,OAAA/a,KAAA2X,UAAA3X,KAAAmb,iBAAAnb,KAAAgY;;;;gCAIA,IAAAhY,KAAA2X,WAAA2D,WAAA,KAAAtb,KAAAgnB,SAAA;oCACA,IAAAC,YAAAjnB,KAAA4X,UAAA0D,YAAA,UAAA4L,OAAAD,eAAAjnB,KAAA4X,UAAA5X,KAAA2X,SAAA,WAAAwP,eAAAnnB,KAAAwa,YAAA4M,WAAApnB,KAAA2X,QAAA0P,iBAAArnB,KAAAwb,cAAA8L,UAAAtnB,KAAA8Z;oCACA9Z,KAAAwa,aAAAc,YAAAyL;oCACA,IAAA/mB,KAAA2X,SAAA2D,WAAA;wCACA2L;2CAC6B;wCAC7BjnB,KAAAwa,cAAAuM;;oCAEA/mB,KAAA8Z,QAAAS;oCACAva,KAAAwb,eAAAuL,QAAA,IAAAxL,kBAAA,OAAAA;oCACAvb,KAAA2X,SAAA2D;oCACAtb,KAAAgnB,UAAA;oCACAzM,WAAA0M,YAAA,IAAAF;oCACA/mB,KAAA0M,OAAA6N,UAAAS,gBAAA+L,QAAA;oCACA,KAAA/L,gBAAA,KAAAhb,KAAA8Y,KAAA;wCACA,IAAA9Y,KAAAmX,KAAA2F,UAAA;4CACA9c,KAAAwc,UAAA;;;oCAGA,IAAAjC,aAAAva,KAAA8Z,OAAA;wCACA;;oCAEA,IAAAoN,MAAA;wCACA3M,WAAA0M,YAAAF,MAAA;wCACA/mB,KAAA0M,OAAA6N,UAAA;;oCAEAva,KAAAgnB,UAAA;oCACA,IAAAhnB,KAAA2c,YAAA+H,YAAA;wCACA;;oCAEA1kB,KAAA8Z,QAAAwN;oCACAtnB,KAAAwa,aAAA2M;oCACAnnB,KAAA2X,SAAAyP;oCACApnB,KAAAwb,eAAA6L;;gCAEA,KAAArnB,KAAA8Z,UAAAS,aAAAva,KAAAuf,YAAAtE,UAAA0J,kBAAAC,YAAA;oCACA,IAAAvJ,kBAAArb,KAAAwa,YAAA,IAAAxa,KAAAuc,WAAA,KAAAvB,gBAAA;wCACAhb,KAAAwc,UAAA;;oCAEA;uCACyB,KAAAxc,KAAAka,UAAA;oCACzBla,KAAAka,WAAA;;gCAEA,KAAAla,KAAAoc,SAAA,KAAApc,KAAA2c,WAAA3c,KAAAwa,eAAAa,iBAAAN,OAAA;oCACA/a,KAAAoc,UAAA;;gCAEA,IAAAf,kBAAA,OAAArb,KAAAmX,KAAA0F,SAAA,IAAA7c,KAAAwa,eAAA,MAAAxa,KAAAmb,gBAAA,KAAAH,gBAAA;oCACAhb,KAAAwc,UAAA;;gCAEAmG,UAAA3iB,KAAA8Z;gCACA,IAAA6I,WAAApI,UAAA;oCACA+E,QAAAtf,KAAAuf;oCACA,OAAAD,OAAA;wCACAmD,OAAAnD,MAAAxE;wCACA,IAAA6H,YAAA3iB,KAAA8Z,SAAA9Z,KAAA2c,YAAA+H,YAAA;4CACA;+CACiC,IAAApF,MAAAlD,WAAAkD,MAAA1F,cAAA5Z,KAAA8Z,UAAAwF,MAAA3C,YAAA2C,MAAAxG,KAAA;4CACjC,IAAA8L,eAAAtF,OAAA;gDACAtf,KAAA0gB;;4CAEA,KAAApB,MAAArD,WAAA;gDACAqD,MAAA5S,QAAAqO,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;mDACqC;gDACrCqE,MAAA5S,SAAA4S,MAAApH,SAAAoH,MAAAnE,iBAAAmE,MAAAlE,oBAAAL,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;;;wCAGAqE,QAAAmD;;uCAEyB;oCACzBnD,QAAAtf,KAAAqjB;oCACA,OAAA/D,OAAA;wCACAmD,OAAAnD,MAAAwF;wCACA,IAAAnC,YAAA3iB,KAAA8Z,SAAA9Z,KAAA2c,YAAA+H,YAAA;4CACA;+CACiC,IAAApF,MAAAlD,WAAAkD,MAAA1F,cAAAW,aAAA+E,MAAA3C,YAAA2C,MAAAxG,KAAA;4CACjC,IAAA8L,eAAAtF,OAAA;gDACAsF,aAAAtF,MAAAwF;gDACA,OAAAF,yBAAAG,YAAA/kB,KAAA8Z,OAAA;oDACA8K,WAAAlY,OAAAkY,WAAA3I,YAAA2I,WAAAxJ,mBAAAL,OAAA6J,WAAAhL,cAAAgL,WAAA7D,cAAAhG,OAAA6J,WAAAhL,cAAAgL,WAAA7D,YAAA/F,gBAAAC;oDACA2J,wBAAAE;;gDAEAF,aAAA;gDACA5kB,KAAA0gB;;4CAEA,KAAApB,MAAArD,WAAA;gDACAqD,MAAA5S,QAAAqO,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;mDACqC;gDACrCqE,MAAA5S,SAAA4S,MAAApH,SAAAoH,MAAAnE,iBAAAmE,MAAAlE,oBAAAL,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;;;wCAGAqE,QAAAmD;;;gCAGA,IAAAziB,KAAAuc,WAAA,KAAAvB,gBAAA;oCACA,IAAA2G,YAAA7c,QAAA;wCACA8c;;oCAEA5hB,KAAAwc,UAAA;;gCAEA,IAAAd,UAAA,KAAA1b,KAAAgnB,SAAA,KAAAhnB,KAAA8Y,KAAA,IAAA0L,cAAAxkB,KAAA4Z,cAAA6K,kBAAAzkB,KAAA+gB,YAAA,IAAA/gB,KAAA8Z,UAAA,KAAAoB,YAAAlb,KAAAob,iBAAA;oCACA,IAAAK,YAAA;wCACA,IAAAkG,YAAA7c,QAAA;4CACA8c;;wCAEA,IAAA5hB,KAAA6Z,UAAAqC,oBAAA;4CACAlc,KAAA+Z,SAAA;;wCAEA/Z,KAAAoc,UAAA;;oCAEA,KAAApB,kBAAAhb,KAAAmX,KAAAuE,WAAA;wCACA1b,KAAAwc,UAAAd;;;;4BAIAhb,EAAA6mB,YAAA,SAAAtC,QAAApF,QAAAE;gCACA,IAAAkF,UAAA;oCACAA,SAAA;;gCAEA,IAAApF,UAAA;oCACAA,SAAA;;gCAEA,IAAAE,aAAA;oCACAA,YAAA;;gCAEA,IAAA7Y,QAAAsgB,MAAAxnB,KAAAglB,YAAAC,QAAApF,QAAAE,YAAAV,MAAA,GAAA/K,IAAAkT,IAAA1iB,QAAAmS,GAAAqI;gCACA,KAAArI,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1CqI,QAAAkI,IAAAvQ;oCACA,IAAAqI,MAAAmI,YAAA;wCACAvgB,EAAAmY,SAAAC;;;gCAGA,OAAApY;;4BAEAxG,EAAAgnB,gBAAA,SAAA3M;gCACA,KAAAA,MAAA,IAAAA,SAAA;oCACAA,OAAA/a,KAAA8Z;;gCAEA,IAAA4L,SAAA1lB,KAAA2nB,kBAAArT,IAAAoR,OAAA5gB,QAAAmS;gCACA,KAAAA,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1C,IAAAyO,OAAAzO,GAAA8D,aAAA;wCACA,OAAA2K,OAAAzO,GAAArT;;;gCAGA;;4BAEAlD,EAAAknB,iBAAA,SAAA7M;gCACA,IAAAA,QAAA;oCACAA,OAAA/a,KAAA8Z;;gCAEA,IAAA4L,SAAA1lB,KAAA2nB,kBAAA1Q,IAAAyO,OAAA5gB;gCACA,SAAAmS,KAAA;oCACA,IAAAyO,OAAAzO,GAAA8D,aAAA;wCACA,OAAA2K,OAAAzO,GAAArT;;;gCAGA;;4BAEAlD,EAAAinB,iBAAA;gCACA,IAAAzgB,QAAAmY,MAAA,GAAA3e;gCACA,KAAAA,KAAAV,KAAAohB,SAAA;oCACAla,EAAAmY;wCACAtE,MAAA/a,KAAAohB,QAAA1gB;wCACAkD,MAAAlD;;;gCAGAwG,EAAAD,KAAA,SAAAC,GAAAnG;oCACA,OAAAmG,EAAA6T,OAAAha,EAAAga;;gCAEA,OAAA7T;;4BAEAxG,EAAAugB,WAAA,SAAAnf,OAAAkZ;gCACA,QAAA+C,UAAAjZ,SAAA9E,KAAA8Z,QAAA9Z,KAAA0X,aAAA1X,KAAAkgB,UAAAlgB,KAAA0X,cAAA1X,KAAA4X,UAAA5X,KAAA2X,SAAA,eAAA7V,iBAAA9B,KAAA2X,UAAA3X,KAAAsa,YAAAta,KAAAgY,eAAAgD;;4BAEAta,EAAAwgB,gBAAA,SAAApf,OAAAkZ;gCACA,QAAA+C,UAAAjZ,SAAA9E,KAAAwa,aAAAxa,KAAAob,kBAAApb,KAAAkgB,UAAAlgB,KAAAob,kBAAAtZ,OAAAkZ;;4BAEAta,EAAA0a,gBAAA,SAAAtZ;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,IAAA9E,KAAAkY,QAAA;wCACAiJ,aAAAjgB,UAAAka,cAAA7a,KAAAP;wCACAA,KAAAmb,iBAAAnb,KAAA8X,aAAA,mBAAA9X,KAAAsa,aAAAta,KAAA8X,UAAA,KAAA9X,KAAAgY,eAAAhY,KAAA8X;;oCAEA,OAAA9X,KAAAmb;;gCAEA,OAAAnb,KAAA8X,aAAA,MAAAhW,QAAA9B,YAAAgmB,UAAAhmB,KAAAob,kBAAAtZ;;4BAEApB,EAAAqa,OAAA,SAAAjZ,OAAAkZ;gCACA,KAAA+C,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA8Z;;gCAEA,IAAA9Z,KAAAkY,QAAA;oCACAlY,KAAAob;;gCAEA,IAAAtZ,QAAA9B,KAAAsa,WAAA;oCACAxY,QAAA9B,KAAAsa;;gCAEA,IAAAta,KAAA4X,UAAA5X,KAAA2X,SAAA;oCACA7V,QAAA9B,KAAAsa,YAAAxY,QAAA9B,KAAA2X,UAAA3X,KAAAsa,YAAAta,KAAAgY;uCACyB,IAAAhY,KAAA8X,YAAA;oCACzBhW,SAAA9B,KAAA2X,UAAA3X,KAAAsa,YAAAta,KAAAgY;;gCAEA,OAAAhY,KAAAkgB,UAAApe,OAAAkZ;;4BAEAta,EAAAqX,SAAA,SAAAjW;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA8X;;gCAEA9X,KAAA8X,UAAAhW;gCACA,OAAA9B,KAAAqZ,SAAA;;4BAEA3Y,EAAAuX,cAAA,SAAAnW;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAAgY;;gCAEAhY,KAAAgY,eAAAlW;gCACA,OAAA9B,KAAAqZ,SAAA;;4BAEA3Y,EAAAmX,OAAA,SAAA/V;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA4X;;gCAEA5X,KAAA4X,QAAA9V;gCACA,OAAA9B;;4BAEAU,EAAAmnB,eAAA,SAAA/lB;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA9E,KAAA4nB,eAAA5nB,KAAA8Z,QAAA;;gCAEA,OAAA9Z,KAAAokB,KAAAtiB,OAAA;;4BAEA,OAAAskB;2BACiB;yBACjB;4BACA,IAAA0B,WAAA,MAAAxV,KAAAyV,IAAAC,UAAAC,UAAAC,UAAAC,gBAA8FrG,WAAAnL,SAAAE,UAAAkL,SAAAqG,UAAA,SAAAlhB,GAAAnG,GAAAN,GAAAK;gCAC9F,IAAAL,MAAAK,GAAA;oCACAL,IAAAK,SAAAC,KAAA;;gCAEA,IAAAmG,MAAAnG,GAAA;oCACAA,IAAAmG,KAAAzG,IAAAyG,KAAA;;gCAEAlH,KAAAkH;gCACAlH,KAAAe;gCACAf,KAAAS;gCACAT,KAAAc;gCACAd,KAAAqoB,KAAAvnB,IAAAoG;gCACAlH,KAAAsoB,KAAA7nB,IAAAyG;gCACAlH,KAAAuoB,KAAAxnB,IAAAmG;+BACqBshB,aAAA,yKAAAC,mBAAA,SAAAvhB,GAAAnG,GAAAN,GAAAK;gCACrB,IAAA4nB;oCACAxhB;mCACyByhB,SAASC,SAASC;oCAC3CpoB,GAAAK;mCACyBgoB,OAAA5hB,IAAAnG,KAAA,GAAAgoB,OAAAhoB,IAAAN,KAAA,GAAAuoB,OAAAvoB,IAAAK,KAAA,GAAAmoB,QAAAH,MAAAC,OAAA,GAAAG,QAAAH,MAAAC,OAAA,GAAAG,MAAAD,OAAAD,QAAA;gCACzBP,GAAA3nB,IAAA+nB,OAAA5hB,IAAA4hB,OAAA;gCACAH,GAAA5nB,IAAAkoB,OAAAE;gCACAT,GAAAjoB,IAAAkoB,GAAAzhB,KAAAwhB,GAAA3nB,IAAA4nB,GAAA5nB,KAAA;gCACA4nB,GAAAloB,IAAAmoB,GAAA1hB,KAAA+hB,OAAAC,QAAA;gCACAN,GAAA7nB,IAAAmoB,OAAAC;gCACAN,GAAA9nB,IAAAioB,OAAAloB,IAAAkoB,OAAA;gCACAJ,GAAAnoB,IAAAooB,GAAA3hB,KAAA0hB,GAAA7nB,IAAA8nB,GAAA9nB,KAAA;gCACA,SAAA2nB,IAAAC,IAAAC,IAAAC;+BACqBO,0BAAA,SAAAliB,GAAAmiB,WAAAC,MAAAC,OAAAC;gCACrB,IAAAlV,IAAApN,EAAApC,SAAA,GAAA2kB,KAAA,GAAAC,MAAAxiB,EAAA,GAAAA,GAAA+P,GAAA0S,IAAAC,IAAAC,IAAAC,KAAAC,IAAAC,IAAAC,IAAAC,KAAAC,IAAAC,IAAAC,IAAAhK;gCACA,KAAApJ,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1C6S,MAAA5iB,EAAAuiB;oCACAE,KAAAG,IAAA5iB;oCACA0iB,KAAAE,IAAAhpB;oCACA+oB,KAAA3iB,EAAAuiB,KAAA,GAAA3oB;oCACA,IAAA0oB,WAAA;wCACAY,KAAApC,IAAA/Q;wCACAoT,KAAApC,IAAAhR;wCACAoJ,MAAAgK,KAAAD,MAAAf,YAAA,OAAAE,QAAA,KAAArB,IAAAjR,MAAA;wCACA8S,KAAAH,WAAAD,OAAAJ,QAAAF,YAAA,KAAAe,OAAA,IAAA/J,KAAA+J,KAAA;wCACAJ,KAAAJ,MAAAC,KAAAD,OAAAL,QAAAF,YAAA,KAAAgB,OAAA,IAAAhK,KAAAgK,KAAA;wCACAJ,KAAAL,MAAAG,OAAAC,KAAAD,OAAAK,KAAA,KAAAA,KAAAC,MAAA;2CAC6B;wCAC7BN,KAAAH,WAAAD,MAAAN,YAAA;wCACAW,KAAAJ,MAAAC,KAAAD,MAAAP,YAAA;wCACAY,KAAAL,MAAAG,KAAAC,MAAA;;oCAEAD,MAAAE;oCACAD,MAAAC;oCACAH,IAAArpB,IAAAypB,MAAAH;oCACA,IAAA9S,MAAA;wCACA6S,IAAA/oB,IAAA2oB;2CAC6B;wCAC7BI,IAAA/oB,IAAA2oB,MAAAI,IAAA5iB,KAAA4iB,IAAArpB,IAAAqpB,IAAA5iB,KAAA;;oCAEA4iB,IAAAzB,KAAAuB,KAAAD;oCACAG,IAAAxB,KAAA4B,MAAAP;oCACAG,IAAAvB,KAAAmB,MAAAC;oCACA,IAAAL,MAAA;wCACAa,KAAA1B,iBAAAkB,IAAAD,KAAAQ,KAAAN;wCACA1iB,EAAAojB,OAAAb,IAAA,GAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA;wCACAV,MAAA;2CAC6B;wCAC7BA;;oCAEAC,MAAAM;;gCAEAF,MAAA5iB,EAAAuiB;gCACAK,IAAA/oB,IAAA2oB;gCACAI,IAAArpB,IAAAipB,OAAAI,IAAAhpB,IAAA4oB,OAAA;gCACAI,IAAAzB,KAAAyB,IAAAhpB,IAAAgpB,IAAA5iB;gCACA4iB,IAAAxB,KAAAwB,IAAArpB,IAAAqpB,IAAA5iB;gCACA4iB,IAAAvB,KAAAmB,MAAAI,IAAA5iB;gCACA,IAAAoiB,MAAA;oCACAa,KAAA1B,iBAAAqB,IAAA5iB,GAAAwiB,KAAAI,IAAArpB,GAAAqpB,IAAAhpB;oCACAoG,EAAAojB,OAAAb,IAAA,GAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA;;+BAEqBI,gBAAA,SAAAC,QAAA9pB,GAAA8oB,WAAAiB;gCACrB,IAAAvjB,QAAAoN,GAAA2C,GAAA0S,IAAAC,IAAAC,IAAAa;gCACA,IAAAD,SAAA;oCACAD,WAAAC,UAAAlnB,OAAAinB;oCACAvT,IAAAuT,OAAA1lB;oCACA,SAAAmS,KAAA;wCACA,YAAAyT,MAAAF,OAAAvT,GAAAvW,QAAA,cAAAgqB,IAAAzG,OAAA;4CACAuG,OAAAvT,GAAAvW,KAAA+pB,QAAA/pB,KAAAwjB,OAAAwG,IAAAzG,OAAA,KAAAyG,IAAAvG,OAAA;;;;gCAIA7P,IAAAkW,OAAA1lB,SAAA;gCACA,IAAAwP,IAAA;oCACApN,EAAA,SAAAkhB,QAAAoC,OAAA,GAAA9pB,IAAA,MAAA8pB,OAAAlW,KAAA,WAAA5T;oCACA,OAAAwG;;gCAEA,KAAA+P,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1C0S,KAAAa,OAAAvT,GAAAvW;oCACAkpB,KAAAY,OAAAvT,IAAA,GAAAvW;oCACAwG,EAAA+P,KAAA,IAAAmR,QAAAuB,IAAA,MAAAC;oCACA,IAAAJ,WAAA;wCACAK,KAAAW,OAAAvT,IAAA,GAAAvW;wCACAsnB,IAAA/Q,MAAA+Q,IAAA/Q,MAAA,MAAA2S,KAAAD,OAAAC,KAAAD;wCACA1B,IAAAhR,MAAAgR,IAAAhR,MAAA,MAAA4S,KAAAD,OAAAC,KAAAD;;;gCAGA1iB,EAAA+P,KAAA,IAAAmR,QAAAoC,OAAAvT,GAAAvW,IAAA,MAAA8pB,OAAAvT,IAAA,GAAAvW;gCACA,OAAAwG;+BACqByjB,gBAAA,SAAAH,QAAAnB,WAAAuB,WAAArB,OAAAC,WAAAiB;gCACrB,IAAAI,UAAoCC,YAAAC,QAAAN,WAAAD,OAAA,IAAAvT,GAAAvW,GAAAwG,GAAA8jB,GAAAlW,GAAAR,GAAA2W,UAAA7H;gCACpCoG,iCAAA,iBAAAA,YAAA,MAAAhB;gCACA,IAAAa,aAAA;oCACAA,YAAA;;gCAEA,KAAA3oB,KAAA8pB,OAAA;oCACAM,MAAA3lB,KAAAzE;;gCAEA,IAAA8pB,OAAA1lB,SAAA;oCACAse,OAAAoH,cAAA1lB,SAAA;oCACAmmB,WAAA;oCACAhU,IAAA6T,MAAAhmB;oCACA,SAAAmS,KAAA;wCACAvW,IAAAoqB,MAAA7T;wCACA,IAAA3E,KAAAqU,IAAAoE,MAAArqB,KAAA0iB,KAAA1iB,MAAA;4CACAuqB,WAAA;4CACA;;;oCAGA,IAAAA,UAAA;wCACAT,gBAAAjnB;wCACA,IAAAknB,SAAA;4CACAD,OAAAU,QAAAT;;wCAEAD,OAAArlB,KAAAqlB,OAAA;wCACAC,UAAAD,cAAA1lB,SAAA;;;gCAGAkjB,IAAAljB,SAAAmjB,IAAAnjB,SAAAojB,IAAApjB,SAAA;gCACAmS,IAAA6T,MAAAhmB;gCACA,SAAAmS,KAAA;oCACAvW,IAAAoqB,MAAA7T;oCACAkR,UAAAznB,KAAA8oB,UAAAhkB,QAAA,MAAA9E,IAAA;oCACAmqB,IAAAnqB,KAAA6pB,cAAAC,QAAA9pB,GAAAynB,UAAAznB,IAAA+pB;;gCAEAxT,IAAA+Q,IAAAljB;gCACA,SAAAmS,KAAA;oCACA+Q,IAAA/Q,KAAA3E,KAAA6Y,KAAAnD,IAAA/Q;oCACAgR,IAAAhR,KAAA3E,KAAA6Y,KAAAlD,IAAAhR;;gCAEA,KAAAsS,OAAA;oCACAtS,IAAA6T,MAAAhmB;oCACA,SAAAmS,KAAA;wCACA,IAAAkR,UAAAznB,IAAA;4CACAwG,IAAA2jB,IAAAC,MAAA7T;4CACA3C,IAAApN,EAAApC,SAAA;4CACA,KAAAkmB,IAAA,GAA+CA,IAAA1W,GAAO0W,KAAA;gDACtDlW,IAAA5N,EAAA8jB,IAAA,GAAA3C,KAAAJ,IAAA+C,KAAA9jB,EAAA8jB,GAAA3C,KAAAL,IAAAgD,MAAA;gDACA9C,IAAA8C,MAAA9C,IAAA8C,MAAA,KAAAlW;;;;oCAIAmC,IAAAiR,IAAApjB;oCACA,SAAAmS,KAAA;wCACAiR,IAAAjR,KAAA3E,KAAA6Y,KAAAjD,IAAAjR;;;gCAGAA,IAAA6T,MAAAhmB;gCACAkmB,IAAAJ,YAAA;gCACA,SAAA3T,KAAA;oCACAvW,IAAAoqB,MAAA7T;oCACA/P,IAAA2jB,IAAAnqB;oCACA0oB,wBAAAliB,GAAAmiB,WAAAuB,WAAArB,OAAApB,UAAAznB;oCACA,IAAAuqB,UAAA;wCACA/jB,EAAAojB,OAAA,GAAAU;wCACA9jB,EAAAojB,OAAApjB,EAAApC,SAAAkmB;;;gCAGA,OAAAH;+BACqBO,mBAAA,SAAAZ,QAAA1iB,MAAA2iB;gCACrB3iB,eAAA;gCACA,IAAA+iB,UAAoCQ,MAAAvjB,SAAA,iBAAAwjB,OAAAxjB,SAAA,QAAAgjB,YAAA5jB,GAAAnG,GAAAN,GAAAK,GAAAyqB,KAAAtU,GAAA+T,GAAA1W,GAAA5T,GAAA2e,KAAAqL;gCACpC,IAAAY,QAAAb,SAAA;oCACAD,WAAAC,UAAAlnB,OAAAinB;;gCAEA,IAAAA,UAAA,QAAAA,OAAA1lB,SAAAumB,MAAA;oCACA;;gCAEA,KAAA3qB,KAAA8pB,OAAA;oCACAM,MAAA3lB,KAAAzE;;gCAEAuW,IAAA6T,MAAAhmB;gCACA,SAAAmS,KAAA;oCACAvW,IAAAoqB,MAAA7T;oCACA4T,IAAAnqB,KAAA6qB;oCACAlM,MAAA;oCACA/K,IAAAkW,OAAA1lB;oCACA,KAAAkmB,IAAA,GAAuCA,IAAA1W,GAAO0W,KAAA;wCAC9C9jB,IAAAujB,WAAA,OAAAD,OAAAQ,GAAAtqB,aAAAgqB,MAAAF,OAAAQ,GAAAtqB,QAAA,YAAAgqB,IAAAzG,OAAA,aAAAwG,QAAA/pB,KAAAwjB,OAAAwG,IAAAzG,OAAA,KAAAyG,IAAAvG,OAAA,MAAAD,OAAAwG;wCACA,IAAAY,MAAA,IAAAN,IAAA,OAAAA,IAAA1W,IAAA;4CACAiX,IAAAlM,UAAAnY,IAAAqkB,IAAAlM,MAAA;;wCAEAkM,IAAAlM,SAAAnY;;oCAEAoN,IAAA+K,MAAAgM,MAAA;oCACAhM,MAAA;oCACA,KAAA2L,IAAA,GAAuCA,IAAA1W,GAAO0W,KAAAK,KAAA;wCAC9CnkB,IAAAqkB,IAAAP;wCACAjqB,IAAAwqB,IAAAP,IAAA;wCACAvqB,IAAA8qB,IAAAP,IAAA;wCACAlqB,IAAAuqB,QAAA,QAAAE,IAAAP,IAAA;wCACAO,IAAAlM,SAAAqL,MAAAW,QAAA,QAAAjD,QAAAlhB,GAAAnG,GAAAN,GAAAK,KAAA,IAAAsnB,QAAAlhB,IAAA,IAAAnG,IAAAmG,KAAA,QAAAnG,IAAAN,KAAA,GAAAA;;oCAEA8qB,IAAAzmB,SAAAua;;gCAEA,OAAAwL;+BACqBW,mBAAA,SAAAtkB,GAAAukB,OAAAC;gCACrB,IAAAL,MAAA,IAAAK,YAAAV,IAAA9jB,EAAApC,QAAAhE,GAAA6qB,IAAA9Q,GAAAwN,IAAAC,IAAAC,IAAA7nB,GAAAuW,GAAAyD,KAAAkR,KAAAC;gCACA,SAAAb,KAAA;oCACAY,MAAA1kB,EAAA8jB;oCACAnQ,IAAA+Q,IAAA1kB;oCACAmhB,KAAAuD,IAAA9qB,IAAA+Z;oCACAyN,KAAAsD,IAAAnrB,IAAAoa;oCACA0N,KAAAqD,IAAA7qB,IAAA8Z;oCACA/Z,IAAA6qB,KAAA;oCACA,KAAA1U,IAAA,GAAuCA,KAAAyU,YAAiBzU,KAAA;wCACxDvW,IAAA2qB,MAAApU;wCACAyD,MAAA,IAAAha;wCACAI,IAAA6qB,YAAAjrB,QAAA2nB,KAAA,IAAA3N,OAAAha,IAAA4nB,KAAA5N,MAAA6N,OAAA7nB;wCACAmrB,QAAAb,IAAAU,aAAAzU,IAAA;wCACAwU,MAAAI,UAAAJ,MAAAI,UAAA,KAAA/qB;;;+BAGqBgrB,mBAAA,SAAAjB,KAAAa;gCACrBA,2BAAA;gCACA,IAAAxkB,QAAA6kB,cAAAjrB,IAAA,GAAAkrB,QAAA,GAAAC,YAAAP,aAAA,GAAApkB,eAAA4kB,YAAAxrB,GAAAuW,GAAA3C,GAAAuX;gCACA,KAAAnrB,KAAAmqB,KAAA;oCACAW,iBAAAX,IAAAnqB,IAAAwG,GAAAwkB;;gCAEApX,IAAApN,EAAApC;gCACA,KAAAmS,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1CnW,KAAAwR,KAAA6Y,KAAAjkB,EAAA+P;oCACA4U,QAAA5U,IAAAyU;oCACAQ,MAAAL,SAAA/qB;oCACA,IAAA+qB,UAAAI,WAAA;wCACAD,SAAAlrB;wCACA+qB,QAAA5U,IAAAyU,cAAA;wCACApkB,SAAAukB,SAAAK;wCACAH,QAAAF,SAAAG;wCACAlrB,IAAA;wCACAorB;;;gCAGA;oCACApnB,QAAAknB;oCACAD;oCACAzkB;;+BAEqB6kB,eAAAxV,SAAAE,UAAAuV;gCACrBC,UAAA;gCACAC,WAAA;gCACA1T,SAAA;gCACA2T,KAAA;gCACA7V,QAAA;gCACAvM,MAAA,SAAAsN,QAAAN,MAAAmI;oCACAtf,KAAAwsB,UAAA/U;oCACA,IAAAN,gBAAA2L,OAAA;wCACA3L;4CACAqT,QAAArT;;;oCAGAnX,KAAAysB;oCACAzsB,KAAA0sB;oCACA1sB,KAAA2sB;oCACA3sB,KAAA4sB,WAAAzV,KAAA0V,kBAAA,WAAAljB,SAAAwN,KAAA0V,gBAAA;oCACA,IAAArC,SAAArT,KAAAqT,cAAAO,YAAsE+B,SAAAtC,OAAA,IAAAuC,aAAA5V,KAAA4V,cAAAzN,MAAAnI,KAAA6V,gBAAAtsB,GAAAusB,QAAAhW,GAAA+T,GAAAP;oCACtEzqB,KAAAktB,cAAAH,mCAAAjK,QAAAiK,iBAAA,sBAAAA,eAAA,WAAA7I,OAAA6I,eAAA;oCACA,KAAArsB,KAAAosB,QAAA;wCACA9sB,KAAA2sB,OAAAxnB,KAAAzE;;oCAEAuW,IAAAjX,KAAA2sB,OAAA7nB;oCACA,SAAAmS,KAAA;wCACAvW,IAAAV,KAAA2sB,OAAA1V;wCACAjX,KAAAmtB,gBAAAhoB,KAAAzE;wCACAusB,SAAAjtB,KAAAysB,MAAA/rB,YAAA+W,OAAA/W,OAAA;wCACAqqB,MAAArqB,MAAAusB,SAAAG,WAAA3V,OAAA/W,MAAA+W,OAAA/W,EAAA8E,QAAA,iBAAAiS,OAAA,QAAA/W,EAAAyjB,OAAA,qBAAAzjB,IAAA,QAAAA,EAAAyjB,OAAA;wCACA,KAAAsG,SAAA,IAAAM,MAAArqB,OAAA8pB,OAAA,GAAA9pB,IAAA;4CACA+pB,UAAAM;;;oCAGA/qB,KAAAqtB,WAAAlW,KAAArP,SAAA,WAAAqP,KAAArP,SAAA,eAAAqP,KAAArP,SAAA,SAAA6iB,cAAAH,QAAAxG,MAAA7M,KAAAkS,aAAA,IAAAlS,KAAAkS,WAAA,OAAAlS,KAAArP,SAAA,aAAAqP,KAAAqS,WAAAiB,WAAAW,iBAAAZ,QAAArT,KAAArP,MAAAijB;oCACA/qB,KAAAstB,YAAAttB,KAAAqtB,SAAA3sB,GAAAoE;oCACA,IAAA9E,KAAA4sB,UAAA;wCACA,IAAAW,KAAAzB,iBAAA9rB,KAAAqtB,UAAArtB,KAAA4sB;wCACA5sB,KAAAwtB,UAAAD,GAAAzoB;wCACA9E,KAAAytB,WAAAF,GAAAxB;wCACA/rB,KAAA0tB,YAAAH,GAAAjmB;wCACAtH,KAAA2tB,MAAA3tB,KAAA4tB,MAAA5tB,KAAA6tB,MAAA7tB,KAAA8tB,MAAA;wCACA9tB,KAAA+tB,MAAA/tB,KAAAytB,SAAA;wCACAztB,KAAAguB,UAAAhuB,KAAA0tB,UAAA;wCACA1tB,KAAAiuB,MAAAjuB,KAAAguB,QAAA;wCACAhuB,KAAAkuB,QAAA,IAAAluB,KAAAguB,QAAAlpB;;oCAEA,IAAAioB,aAAA/sB,KAAAktB,aAAA;wCACAltB,KAAAmuB;wCACA,MAAApB,WAAA,cAAAjK,QAAA;4CACA9iB,KAAAktB,cAAAH;;wCAEA9V,IAAA8V,WAAAjoB;wCACA,SAAAmS,KAAA;4CACA,KAAA+T,IAAA,GAA+CA,IAAA,GAAOA,KAAA;gDACtDtqB,IAAAqsB,WAAA9V,GAAA+T;gDACAhrB,KAAAysB,MAAA/rB,YAAA+W,OAAA/W,OAAA,aAAA+W,OAAA/W,EAAA8E,QAAA,iBAAAiS,OAAA,QAAA/W,EAAAyjB,OAAA,qBAAAzjB,IAAA,QAAAA,EAAAyjB,OAAA;;4CAEAzjB,IAAAqsB,WAAA9V,GAAA;4CACAjX,KAAAmuB,kBAAAlX,MAAAjX,KAAAysB,MAAA/rB,KAAAV,KAAAysB,MAAA/rB,GAAAH,KAAAP,KAAAwsB,WAAAxsB,KAAAwsB,QAAA9rB,OAAA;;;oCAGAV,KAAAouB,cAAA9O,MAAAnI,KAAA6F,eAAA;oCACA;;gCAEAlN,KAAA,SAAAwG;oCACA,IAAAhP,WAAAtH,KAAAstB,WAAAe,OAAAruB,KAAAysB,OAAAhV,SAAAzX,KAAAwsB,SAAA8B,WAAAhY,MAAAtW,KAAAouB,aAAAG,UAAA7T,KAAAzD,GAAAvW,GAAAK,GAAAoU,GAAAoC,KAAAjD,GAAAyX,SAAAyC;oCACA,KAAAxuB,KAAA4sB,UAAA;wCACA2B,WAAAjY,IAAA,QAAAA,KAAA,IAAAhP,WAAA,IAAAA,WAAAgP,KAAA;wCACAnB,KAAAmB,IAAAiY,YAAA,IAAAjnB;2CAC6B;wCAC7BykB,UAAA/rB,KAAAytB;wCACAe,SAAAxuB,KAAAguB;wCACA1X,KAAAtW,KAAAwtB;wCACAvW,IAAAjX,KAAA4tB;wCACA,IAAAtX,IAAAtW,KAAA+tB,OAAA9W,IAAA3P,WAAA;4CACAgN,IAAAhN,WAAA;4CACA,OAAA2P,IAAA3C,MAAAtU,KAAA+tB,MAAAhC,UAAA9U,OAAAX,GAAA;4CACAtW,KAAA2tB,MAAA5B,QAAA9U,IAAA;4CACAjX,KAAA4tB,MAAA3W;4CACAjX,KAAAguB,UAAAQ,SAAAxuB,KAAA0tB,UAAAzW;4CACAjX,KAAAiuB,MAAAO,OAAAxuB,KAAA6tB,MAAA7tB,KAAA8tB,MAAA;+CACiC,IAAAxX,IAAAtW,KAAA2tB,OAAA1W,IAAA;4CACjC,OAAAA,IAAA,MAAAjX,KAAA2tB,MAAA5B,UAAA9U,OAAAX,GAAA;4CACA,IAAAW,MAAA,KAAAX,IAAAtW,KAAA2tB,KAAA;gDACA3tB,KAAA2tB,MAAA;mDACqC;gDACrC1W;;4CAEAjX,KAAA+tB,MAAAhC,QAAA9U;4CACAjX,KAAA4tB,MAAA3W;4CACAjX,KAAAguB,UAAAQ,SAAAxuB,KAAA0tB,UAAAzW;4CACAjX,KAAA6tB,MAAAW,QAAAxuB,KAAA8tB,MAAAU,OAAA1pB,SAAA;4CACA9E,KAAAiuB,MAAAO,OAAAxuB,KAAA8tB;;wCAEAS,WAAAtX;wCACAX,KAAAtW,KAAA2tB;wCACA1W,IAAAjX,KAAA8tB;wCACA,IAAAxX,IAAAtW,KAAAiuB,OAAAhX,IAAAuX,OAAA1pB,SAAA;4CACAwP,IAAAka,OAAA1pB,SAAA;4CACA,OAAAmS,IAAA3C,MAAAtU,KAAAiuB,MAAAO,SAAAvX,OAAAX,GAAA;4CACAtW,KAAA6tB,MAAAW,OAAAvX,IAAA;4CACAjX,KAAA8tB,MAAA7W;+CACiC,IAAAX,IAAAtW,KAAA6tB,OAAA5W,IAAA;4CACjC,OAAAA,IAAA,MAAAjX,KAAA6tB,MAAAW,SAAAvX,OAAAX,GAAA;4CACA,IAAAW,MAAA,KAAAX,IAAAtW,KAAA6tB,KAAA;gDACA7tB,KAAA6tB,MAAA;mDACqC;gDACrC5W;;4CAEAjX,KAAAiuB,MAAAO,OAAAvX;4CACAjX,KAAA8tB,MAAA7W;;wCAEA9B,KAAA8B,KAAAX,IAAAtW,KAAA6tB,QAAA7tB,KAAAiuB,MAAAjuB,KAAA6tB,QAAA7tB,KAAAkuB,SAAA;;oCAEAxT,MAAA,IAAAvF;oCACA8B,IAAAjX,KAAA2sB,OAAA7nB;oCACA,SAAAmS,KAAA;wCACAvW,IAAAV,KAAA2sB,OAAA1V;wCACAlW,IAAAf,KAAAqtB,SAAA3sB,GAAA6tB;wCACAhX,OAAApC,QAAApU,EAAAsnB,KAAA,IAAA3N,OAAAvF,IAAApU,EAAAunB,KAAA5N,MAAA3Z,EAAAwnB,OAAApT,IAAApU,EAAAmG;wCACA,IAAAlH,KAAA0sB,OAAAhsB,IAAA;4CACA6W,MAAAjF,KAAAqD,MAAA4B;;wCAEA,IAAA8W,KAAA3tB,IAAA;4CACA+W,OAAA/W,GAAA6W;+CACiC;4CACjCE,OAAA/W,KAAA6W;;;oCAGA,IAAAvX,KAAAktB,aAAA;wCACA,IAAAuB,KAAAzuB,KAAAktB,aAAAwB,IAAAC,IAAAC,IAAAC,IAAAC,IAAAziB,KAAA0iB;wCACA9X,IAAAwX,GAAA3pB;wCACA,SAAAmS,KAAA;4CACAvW,IAAA+tB,GAAAxX,GAAA;4CACA5K,MAAAoiB,GAAAxX,GAAA;4CACA8X,OAAAN,GAAAxX,GAAA,kBAAA6Q;4CACA/mB,IAAAf,KAAAqtB,SAAAoB,GAAAxX,GAAA;4CACAyX,KAAA1uB,KAAAqtB,SAAAoB,GAAAxX,GAAA;4CACA,IAAAlW,KAAA2tB,IAAA;gDACA3tB,MAAAwtB;gDACAG,QAAAH;gDACAI,KAAA5tB,EAAAmG,KAAAnG,QAAAmG,KAAAiO;gDACA0Z,KAAA9tB,SAAAN,IAAAM,OAAAoU;gDACAwZ,OAAAE,KAAAF,MAAAxZ;gDACA0Z,OAAA9tB,EAAAN,KAAAM,EAAAD,IAAAC,EAAAN,KAAA0U,IAAA0Z,MAAA1Z;gDACAyZ,KAAAF,GAAAxnB,KAAAwnB,GAAA3tB,IAAA2tB,GAAAxnB,KAAAiO;gDACA2Z,KAAAJ,GAAA3tB,KAAA2tB,GAAAjuB,IAAAiuB,GAAA3tB,KAAAoU;gDACAyZ,OAAAE,KAAAF,MAAAzZ;gDACA2Z,OAAAJ,GAAAjuB,KAAAiuB,GAAA5tB,IAAA4tB,GAAAjuB,KAAA0U,IAAA2Z,MAAA3Z;gDACAoC,MAAA+W,WAAAhc,KAAA0c,MAAAF,KAAAF,IAAAC,KAAAF,MAAAI,OAAA1iB,MAAArM,KAAAmuB,kBAAAlX;gDACA,IAAAoX,KAAA3tB,IAAA;oDACA+W,OAAA/W,GAAA6W;uDACyC;oDACzCE,OAAA/W,KAAA6W;;;;;;gCAMqB7W,IAAAyrB,aAAAjrB;4BACrBirB,aAAAxB;4BACAwB,aAAA1D;4BACA0D,aAAA8C,WAAA;4BACA9C,aAAA+C,mBAAA,SAAAhoB,GAAAnG,GAAAN;gCACA,WAAA2nB,QAAAlhB,IAAA,IAAAnG,IAAAmG,KAAA,QAAAnG,IAAAN,KAAA,GAAAA;;4BAEA0rB,aAAAgD,eAAA;gCACA,IAAAC,YAAAtN,SAAAsN;gCACA,KAAAA,WAAA;oCACA;;gCAEA,IAAA/W,aAAA+W,UAAA/W,YAAAgX,gBAAAhX,WAAAgX,eAAAC,kBAAAjX,WAAAiX,iBAAAC,eAAAlX,WAAAkX;gCACAlX,WAAAmX,4BAAA;oCACAC,QAAA,SAAAta,GAAAlG,GAAAygB,MAAAC,MAAAhV,IAAAyR;wCACA,IAAAnd,aAAA6T,OAAA;4CACA7T;gDACAub,QAAAvb;;;wCAGAmd,SAAA,IAAAD;wCACA,IAAA3B,SAAAvb,EAAAub,QAAAlW,IAAAkW,OAAA1lB,SAAA,GAAA8qB,mBAAAtZ,QAAuGW,GAAAvW,GAAA6J;wCACvG,IAAA+J,IAAA;4CACA,OAAAqG;;wCAEA,KAAA1D,IAAA,GAA2CA,KAAA3C,GAAQ2C,KAAA;4CACnD1M,OAAA8kB,cAAAla,GAAAqV,OAAAvT,IAAA0Y,MAAAhV,IAAAyR,QAAA9X,MAAA2C;4CACA2Y,aAAA3Y,KAAA1M,KAAAyC;;wCAEA,KAAAtM,KAAAuO,GAAA;4CACAqH,EAAA5V,KAAAuO,EAAAvO;;wCAEA4V,EAAAkU,SAAAoF;wCACAjV,KAAA,IAAA4U,aAAApa,GAAA,gBAAA5K,KAAAoQ,IAAA;wCACAA,GAAApQ;wCACAoQ,GAAAyR;wCACAzR,GAAAkV,WAAAP;wCACA,IAAAhZ,EAAAyW,eAAA;4CACAzW,EAAAyW,aAAA;;wCAEA,IAAAzW,EAAAyW,gBAAAzW,EAAAyW,sBAAAjK,QAAA;4CACA7L,IAAAX,EAAAyW,eAAA,WAAA7I,OAAA5N,EAAAyW;4CACAzW,EAAAyW,aAAAxiB,KAAAyC,IAAAnH,QAAA,sCAAAoR,GAAA,YAAA1M,KAAAyC,IAAA+C,KAAA,iCAAAkH,GAAA;;wCAEA,IAAAX,EAAAyW,YAAA;4CACA,KAAA4C,KAAAG,YAAA;gDACAH,KAAAI,kBAAA;;4CAEAxlB,KAAAwiB,aAAA4C,KAAAnD,QAAAwD;4CACAzlB,KAAA0lB,MAAAC,WAAA3lB,KAAAwiB,WAAAmD,YAAA;;wCAEA9D,OAAA+D,aAAA5lB,KAAA0lB,OAAA3Z,GAAAqZ,KAAAS;wCACA,OAAAzV;;;;4BAIAja,EAAA2vB,cAAA,SAAAC,QAAAxuB;gCACA,IAAAyuB,KAAAvwB,KAAAmtB,iBAAAlW,IAAAsZ,GAAAzrB;gCACA,SAAAmS,KAAA;oCACA,IAAAqZ,OAAAC,GAAAtZ,OAAAqZ,OAAAE,UAAAF,OAAA3F,eAAA;wCACA3qB,KAAA0sB,OAAA6D,GAAAtZ,MAAAnV;;;;4BAIApB,EAAAilB,QAAA,SAAA2K;gCACA,IAAAppB,IAAAlH,KAAA2sB,QAAAjsB,GAAAuW;gCACA,KAAAvW,KAAAV,KAAAqtB,UAAA;oCACA,IAAA3sB,KAAA4vB,QAAA;+CACAtwB,KAAAqtB,SAAA3sB;+CACAV,KAAAysB,MAAA/rB;wCACAuW,IAAA/P,EAAApC;wCACA,SAAAmS,KAAA;4CACA,IAAA/P,EAAA+P,OAAAvW,GAAA;gDACAwG,EAAAojB,OAAArT,GAAA;;;;;gCAKA,OAAAjX,KAAAuC,OAAAojB,MAAAplB,KAAAP,MAAAswB;;;wBAGA3Z,SAAAE,UAAA,sEAAA4Z,aAAA3c;4BACA,IAAAsb,YAAA;gCACAqB,YAAAlwB,KAAAP,MAAA;gCACAA,KAAAmtB,gBAAAroB,SAAA;gCACA9E,KAAA6vB,WAAAT,UAAAluB,UAAA2uB;+BACqB/N,WAAAnL,SAAAE,UAAAkL,SAAA2O,cAAAC,YAAAC,KAAAzD,iBAAA0D,oBAA2GnwB,IAAA0uB,UAAAluB,YAAA,IAAAuvB,YAAA;4BAChI/vB,EAAAO,cAAAmuB;4BACAA,UAAAxW,UAAA;4BACAwW,UAAA7C,MAAA;4BACA6C,UAAA0B,8BAAA;4BACA1B,UAAA2B,kBAAA;4BACA3B,UAAA4B,sBAAA;4BACAtwB,IAAA;4BACA0uB,UAAA6B;gCACAjrB,KAAAtF;gCACAwwB,OAAAxwB;gCACAywB,QAAAzwB;gCACAmF,MAAAnF;gCACAwB,OAAAxB;gCACAyB,QAAAzB;gCACA0wB,UAAA1wB;gCACA2wB,SAAA3wB;gCACA2B,QAAA3B;gCACA4wB,aAAA5wB;gCACA6wB,YAAA;;4BAEA,IAAAC,UAAA,6BAAAC,aAAA,wDAAAC,aAAA,oDAAAC,UAAA,2CAAAC,aAAA,yBAAAC,cAAA,wBAAAC,iBAAA,oBAAoWC,kBAAA,2BAAAC,aAAA,cAAAC,WAAA,YAAAC,YAAA,cAAAC,UAAA,0CAAAC,aAAA,SAAAvX,GAAAnG;gCACpW,OAAAA,EAAA2d;+BACqBC,YAAA,yBAAAC,kBAAA,kCAAAC,kBAAA,uDAAAC,yBAAA,yBAAAC,cAAA,YAAAC,WAAArgB,KAAAyV,KAAA,KAAAD,WAAA,MAAAxV,KAAAyV,IAAA6K,eAAiTC,OAAAte,UAAAue,iBAAA,SAAAhrB;gCACtU,OAAA+qB,KAAAE,kBAAAF,KAAAE,gBAAA,gCAAAjrB,QAAA+qB,KAAAre,cAAA1M;+BACqBkrB,WAAAF,eAAA,QAAAG,WAAAH,eAAA,QAAAza,aAAA+W,UAAA/W;gCACrBwY;+BACqBqC,SAAAC,UAAAC,WAAAC,YAAAC,eAAAC,WAAAC,YAAAC,cAAAC,SAAAC,mBAAA;gCACrB,IAAA1c,IAAAic,OAAA1tB,QAAA,YAAA0B,IAAA4rB,eAAA;gCACAS,YAAAL,OAAA1tB,QAAA,oBAAA0tB,OAAA1tB,QAAA,qBAAAyR,OAAA,KAAAiN,OAAAgP,OAAA/O,OAAAlN,IAAA;gCACAwc,eAAAF,aAAArP,OAAAgP,OAAA/O,OAAA+O,OAAA1tB,QAAA;gCACAguB,aAAAN,OAAA1tB,QAAA;gCACA,kCAAuDouB,KAAAV,WAAA,uCAAuDU,KAAAV,SAAA;oCAC9GQ,UAAAtG,WAAAyG,OAAAC;;gCAEA,KAAA5sB,GAAA;oCACA;;gCAEAA,EAAAuC,MAAAgL,UAAA;gCACA,eAAAsf,KAAA7sB,EAAAuC,MAAAuqB;iCACqBC,gBAAA,SAAA3d;gCACrB,OAAAub,YAAAkC,YAAAzd,MAAA,WAAAA,OAAA4d,eAAA5d,EAAA4d,aAAAC,SAAA7d,EAAA7M,MAAA0qB,WAAA,MAAA/G,WAAAyG,OAAAC,MAAA;+BACqBM,OAAA,SAAAvZ;gCACrB,IAAA3H,OAAAmhB,SAAA;oCACAA,QAAAC,IAAAzZ;;+BAEqB0Z,aAAA,IAAAC,UAAA,IAAAC,mBAAA,SAAA/zB,GAAAuO;gCACrBA,SAAA+jB;gCACA,IAAAnY,IAAA5L,EAAAxF,OAAAvC,GAAA+P;gCACA,IAAA4D,EAAAna,OAAAg0B,WAAA;oCACA,OAAAh0B;;gCAEAA,MAAAujB,OAAA,GAAAoO,gBAAA3xB,EAAAyjB,OAAA;gCACAjd,MAAA;gCACA+P,IAAA;gCACA,SAAAA,KAAA,KAAA4D,EAAA3T,EAAA+P,KAAAvW,OAAAg0B,WAAA;gCACA,IAAAzd,KAAA;oCACAud,UAAAvd,MAAA,WAAA/P,EAAA+P;oCACAsd,aAAA,MAAAC,QAAAG,gBAAA;oCACA,OAAAH,UAAA9zB;;gCAEA;+BACqBk0B,oBAAA/B,KAAAgC,cAAAhC,KAAAgC,YAAAnrB,mBAAA,eAA0ForB,YAAA1F,UAAA2F,WAAA,SAAA5f,GAAAzU,GAAAs0B,IAAAC,MAAAC;gCAC/G,IAAAC;gCACA,KAAAxB,kBAAA,IAAAjzB,MAAA;oCACA,OAAAuzB,cAAA9e;;gCAEA,KAAA8f,QAAA9f,EAAA1L,MAAA/I,IAAA;oCACAy0B,KAAAhgB,EAAA1L,MAAA/I;uCACyB,IAAAs0B,WAAAJ,kBAAAzf,IAAA;oCACzBggB,KAAAH,GAAAt0B,MAAAs0B,GAAAI,iBAAA10B,MAAAs0B,GAAAI,iBAAA10B,EAAA20B,QAAApD,UAAA,OAAA0C;uCACyB,IAAAxf,EAAA+e,cAAA;oCACzBiB,KAAAhgB,EAAA+e,aAAAxzB;;gCAEA,OAAAw0B,QAAA,UAAAC,aAAA,UAAAA,OAAA,UAAAA,OAAA,eAAAD,OAAAC;+BACqBG,mBAAAjd,WAAAkd,kBAAA,SAAApgB,GAAAzU,GAAA4V,GAAAkf,KAAAC;gCACrB,IAAAD,QAAA,SAAAA,KAAA;oCACA,OAAAlf;;gCAEA,IAAAkf,QAAA,WAAAlf,GAAA;oCACA;;gCAEA,IAAAof,QAAApD,UAAAyB,KAAArzB,IAAAi1B,OAAAxgB,GAAA1L,QAAAupB,SAAAvpB,OAAAmsB,MAAAtf,IAAA,GAAAuf,UAAAvf,MAAA,GAAAwf,KAAAC,OAAAhb;gCACA,IAAA6a,KAAA;oCACAtf;;gCAEA,IAAAuf,SAAA;oCACAvf,KAAA;;gCAEA,IAAAkf,QAAA,OAAA90B,EAAA8E,QAAA;oCACAswB,MAAAxf,IAAA,OAAAof,QAAAvgB,EAAA5G,cAAA4G,EAAA3G;uCACyB;oCACzB/E,MAAAgL,UAAA,iCAAgEqgB,UAAA3f,GAAA;oCAChE,IAAAqgB,QAAA,QAAAG,KAAAjqB,eAAA8pB,IAAAvR,OAAA,cAAAuR,QAAA;wCACAG,OAAAxgB,EAAAqL,cAAAqS,KAAAmD;wCACAD,QAAAJ,KAAAM;wCACAlb,OAAAjH,UAAAqF,OAAA6H;wCACA,IAAA+U,SAAAL,SAAAK,MAAAhb,eAAA;4CACA,OAAAgb,MAAA7zB,QAAAoU,IAAA;;wCAEA7M,MAAAisB,QAAA,sBAAApf,IAAAkf;2CAC6B;wCAC7B/rB,MAAAisB,QAAA,wCAAApf,IAAAkf;;oCAEAG,KAAAjqB,YAAAsnB;oCACA8C,MAAA1I,WAAA4F,SAAA0C,QAAA;oCACAC,KAAAO,YAAAlD;oCACA,IAAA0C,SAAAF,QAAA,OAAApG,UAAA+G,gBAAA;wCACAJ,QAAAJ,KAAAM,WAAAN,KAAAM;wCACAF,MAAAhb;wCACAgb,MAAA7zB,QAAA4zB,MAAAxf,IAAA;;oCAEA,IAAAwf,QAAA,MAAAL,SAAA;wCACAK,MAAAR,iBAAAngB,GAAAzU,GAAA4V,GAAAkf,KAAA;;;gCAGA,IAAAK,SAAA;oCACAC,OAAA;;gCAEA,OAAAF,OAAAE;+BACqBM,mBAAA/d,WAAAge,kBAAA,SAAAlhB,GAAAzU,GAAAs0B;gCACrB,IAAAF,UAAA3f,GAAA,YAAA6f,QAAA;oCACA;;gCAEA,IAAAsB,MAAA51B,MAAA,yBAAA4V,IAAAwe,UAAA3f,GAAA,WAAAmhB,KAAAtB;gCACA,OAAA7f,EAAA,WAAAmhB,QAAAhB,iBAAAngB,GAAAzU,GAAA0sB,WAAA9W,MAAA+e,QAAAzD,YAAA;+BACqB2E,gBAAA,SAAAphB,GAAA6f;gCACrB,IAAAna,QAAkC5D,GAAAuf,IAAA91B;gCAClC,IAAAs0B,WAAAJ,kBAAAzf,GAAA;oCACA,IAAA8B,IAAA+d,GAAAlwB,QAAA;wCACA,SAAAmS,KAAA;4CACAvW,IAAAs0B,GAAA/d;4CACA,IAAAvW,EAAA8E,QAAA,wBAAAixB,sBAAA/1B,GAAA;gDACAma,EAAAna,EAAA20B,QAAAnD,WAAAE,eAAA4C,GAAAI,iBAAA10B;;;2CAG6B;wCAC7B,KAAAuW,KAAA+d,IAAA;4CACA,IAAA/d,EAAAzR,QAAA,uBAAAkxB,mBAAAzf,GAAA;gDACA4D,EAAA5D,KAAA+d,GAAA/d;;;;uCAIyB,IAAA+d,KAAA7f,EAAA+e,gBAAA/e,EAAA1L,OAAA;oCACzB,KAAAwN,KAAA+d,IAAA;wCACA,WAAA/d,MAAA,YAAA4D,EAAA5D,OAAAyd,WAAA;4CACA7Z,EAAA5D,EAAAoe,QAAAnD,WAAAE,eAAA4C,GAAA/d;;;;gCAIA,KAAA0c,kBAAA;oCACA9Y,EAAAmZ,UAAAC,cAAA9e;;gCAEAqhB,KAAAG,cAAAxhB,GAAA6f,IAAA;gCACAna,EAAAqV,WAAAsG,GAAAtG;gCACArV,EAAA+b,QAAAJ,GAAAI;gCACA/b,EAAAgc,SAAAL,GAAAK;gCACAhc,EAAAic,SAAAN,GAAAM;gCACAjc,EAAA9K,IAAAymB,GAAAzmB;gCACA8K,EAAA7K,IAAAwmB,GAAAxmB;gCACA,IAAA+mB,aAAA;oCACAlc,EAAA5K,IAAAumB,GAAAvmB;oCACA4K,EAAAmc,YAAAR,GAAAQ;oCACAnc,EAAAoc,YAAAT,GAAAS;oCACApc,EAAAqc,SAAAV,GAAAU;;gCAEA,IAAArc,EAAAsc,SAAA;2CACAtc,EAAAsc;;gCAEA,OAAAtc;+BACqBuc,UAAA,SAAAjiB,GAAAkiB,IAAAC,IAAAngB,MAAAogB;gCACrB,IAAAC,WAAqC/tB,QAAA0L,EAAA1L,OAAA8N,KAAA7W,GAAA+2B;gCACrC,KAAA/2B,KAAA42B,IAAA;oCACA,IAAA52B,MAAA,eAAAA,MAAA,cAAAsjB,MAAAtjB,IAAA,IAAA22B,GAAA32B,QAAA6W,MAAA+f,GAAA52B,OAAA62B,2BAAA72B,IAAA,IAAAA,EAAA8E,QAAA,6BAAA+R,QAAA,mBAAAA,QAAA;wCACAigB,KAAA92B,KAAA6W,QAAA,WAAA7W,MAAA,UAAAA,MAAA,SAAA01B,iBAAAjhB,GAAAzU,MAAA6W,QAAA,MAAAA,QAAA,UAAAA,QAAA,kBAAA8f,GAAA32B,OAAA,YAAA22B,GAAA32B,GAAA20B,QAAA1D,SAAA,iBAAApa;wCACA,IAAA9N,MAAA/I,OAAAg0B,WAAA;4CACA+C,MAAA,IAAAC,cAAAjuB,OAAA/I,GAAA+I,MAAA/I,IAAA+2B;;;;gCAIA,IAAAtgB,MAAA;oCACA,KAAAzW,KAAAyW,MAAA;wCACA,IAAAzW,MAAA;4CACA82B,KAAA92B,KAAAyW,KAAAzW;;;;gCAIA;oCACA82B;oCACAG,UAAAF;;+BAEqBG;gCACrB11B,SAAA;gCACAC,UAAA;+BACqB01B,aAAA,4DAAAC,gBAAA,SAAA3iB,GAAAzU,GAAAs0B;gCACrB,KAAA7f,EAAA4iB,WAAA,IAAApD,kBAAA;oCACA,QAAAK,MAAAJ,kBAAAzf,IAAAzU,MAAA;uCACyB,IAAAyU,EAAA6iB,WAAAC,OAAA9iB,IAAA;oCACzB,OAAAA,EAAA6iB,UAAAt3B,MAAA;;gCAEA,IAAA4V,IAAA8W,WAAA1sB,MAAA,UAAAyU,EAAA+iB,cAAA/iB,EAAAgjB,eAAAjxB,IAAA0wB,YAAAl3B,IAAAuW,IAAA/P,EAAApC;gCACAkwB,WAAAJ,kBAAAzf,GAAA;gCACA,SAAA8B,KAAA;oCACAX,KAAA8W,WAAA0H,UAAA3f,GAAA,YAAAjO,EAAA+P,IAAA+d,IAAA;oCACA1e,KAAA8W,WAAA0H,UAAA3f,GAAA,WAAAjO,EAAA+P,KAAA,SAAA+d,IAAA;;gCAEA,OAAA1e;+BACqB8hB,iBAAA,SAAA9hB,GAAA+hB;gCACrB,IAAA/hB,MAAA,aAAAA,MAAA,UAAAA,MAAA;oCACA,OAAAA,IAAA;;gCAEA,IAAAA,KAAA,QAAAA,MAAA;oCACAA,IAAA;;gCAEA,IAAApP,IAAAoP,EAAAgiB,MAAA,MAAAvoB,IAAAuG,EAAA9Q,QAAA,wBAAA8Q,EAAA9Q,QAAA,2BAAA0B,EAAA,IAAA8I,IAAAsG,EAAA9Q,QAAA,uBAAA8Q,EAAA9Q,QAAA,4BAAA0B,EAAA,IAAA+P;gCACA,IAAA/P,EAAApC,SAAA,MAAAuzB,QAAA;oCACAnxB,IAAAoP,EAAAgiB,MAAA,MAAA9W,KAAA,KAAA8W,MAAA;oCACAhiB;oCACA,KAAAW,IAAA,GAAuCA,IAAA/P,EAAApC,QAAcmS,KAAA;wCACrDX,EAAAnR,KAAAizB,eAAAlxB,EAAA+P;;oCAEA,OAAAX,EAAAkL,KAAA;;gCAEA,IAAAxR,KAAA;oCACAA,IAAAD,MAAA;uCACyB,IAAAC,MAAA;oCACzBA,IAAA;;gCAEA,IAAAD,MAAA,YAAAiU,MAAAoJ,WAAArd,YAAA,IAAAvK,QAAA;oCACAuK,IAAA;;gCAEAuG,IAAAvG,IAAA,MAAAC,KAAA9I,EAAApC,SAAA,UAAAoC,EAAA;gCACA,IAAAmxB,QAAA;oCACAA,OAAAE,MAAAxoB,EAAAvK,QAAA;oCACA6yB,OAAAG,MAAAxoB,EAAAxK,QAAA;oCACA6yB,OAAAI,MAAA1oB,EAAAkU,OAAA;oCACAoU,OAAAK,MAAA1oB,EAAAiU,OAAA;oCACAoU,OAAAM,KAAAvL,WAAArd,EAAAslB,QAAA1D,SAAA;oCACA0G,OAAAO,KAAAxL,WAAApd,EAAAqlB,QAAA1D,SAAA;oCACA0G,OAAA/hB;;gCAEA,OAAA+hB,UAAA/hB;+BACqBuiB,eAAA,SAAA5pB,GAAAlO;gCACrB,cAAAkO,MAAA,YAAAA,EAAAgV,OAAA,aAAAta,SAAAsF,EAAAgV,OAAA,gBAAAmJ,WAAAne,EAAAkV,OAAA,MAAAiJ,WAAAne,KAAAme,WAAArsB,MAAA;+BACqB+3B,YAAA,SAAAxiB,GAAAxV;gCACrB,OAAAwV,KAAA,OAAAxV,WAAAwV,MAAA,YAAAA,EAAA2N,OAAA,aAAAta,SAAA2M,EAAA2N,OAAA,gBAAAmJ,WAAA9W,EAAA6N,OAAA,MAAArjB,IAAAssB,WAAA9W,MAAA;+BACqByiB,cAAA,SAAAziB,GAAAxV,GAAAJ,GAAAs4B;gCACrB,IAAAzmB,MAAA,MAAA0mB,KAAAX,OAAAY,KAAAC,QAAAC;gCACA,IAAA9iB,KAAA;oCACA6iB,SAAAr4B;uCACyB,WAAAwV,MAAA;oCACzB6iB,SAAA7iB;uCACyB;oCACzB2iB,MAAA;oCACAX,QAAAhiB,EAAAgiB,MAAA;oCACAc,aAAA9iB,EAAA2N,OAAA;oCACAiV,OAAAE,aAAAzvB,SAAA2M,EAAA2N,OAAA,gBAAAmJ,WAAAkL,MAAA,GAAAnU,OAAA,MAAAiJ,WAAAkL,MAAA,QAAAhiB,EAAA9Q,QAAA,oBAAAsiB,aAAAsR,aAAA,IAAAt4B;oCACA,IAAAw3B,MAAAxzB,QAAA;wCACA,IAAAk0B,gBAAA;4CACAA,eAAAt4B,KAAAI,IAAAo4B;;wCAEA,IAAA5iB,EAAA9Q,QAAA;4CACA0zB,YAAAD;4CACA,IAAAC,eAAAD,MAAA;gDACAC,YAAA,IAAAA,MAAAD,MAAAC,MAAAD;;;wCAGA,IAAA3iB,EAAA9Q,QAAA,iBAAA0zB,MAAA;4CACAA,aAAAD,MAAA,cAAAA,OAAAC,MAAAD,MAAA,KAAAA;+CACiC,IAAA3iB,EAAA9Q,QAAA,iBAAA0zB,MAAA;4CACjCA,aAAAD,MAAA,cAAAA,OAAAC,MAAAD,MAAA,KAAAA;;;oCAGAE,SAAAr4B,IAAAo4B;;gCAEA,IAAAC,SAAA5mB,OAAA4mB,UAAA5mB,KAAA;oCACA4mB,SAAA;;gCAEA,OAAAA;+BACqBE;gCACrBC,QAAA;gCACAC,QAAA;gCACAC,UAAA;gCACAC,SAAA;gCACAC,UAAA;gCACAC,QAAA;gCACAC,QAAA;gCACAC,QAAA;gCACAC,SAAA;gCACAC,WAAA;gCACAC,SAAA;gCACAC,UAAA;gCACAC,UAAA;gCACAC,QAAA;gCACAC,UAAA;gCACAC,SAAA;gCACAC,OAAA;gCACAC,QAAA;gCACAC,QAAA;gCACAC,eAAA;+BACqBC,OAAA,SAAAjwB,GAAAsf,IAAAC;gCACrBvf,QAAA,IAAAA,IAAA,IAAAA,IAAA,IAAAA,IAAA,IAAAA;gCACA,QAAAA,IAAA,QAAAsf,MAAAC,KAAAD,MAAAtf,IAAA,IAAAA,IAAA,KAAAuf,KAAAvf,IAAA,QAAAsf,MAAAC,KAAAD,OAAA,QAAAtf,KAAA,IAAAsf,MAAA;+BACqB4Q,cAAAvL,UAAAwL,aAAA,SAAAtkB,GAAAukB;gCACrB,IAAA3zB,GAAA4N,GAAAJ,GAAA3T,GAAA0J,GAAAoQ,GAAAvG,GAAA9B,KAAAD,KAAAzR,GAAAg6B;gCACA,KAAAxkB,GAAA;oCACApP,IAAAmyB,aAAAI;uCACyB,WAAAnjB,MAAA;oCACzBpP,MAAAoP,KAAA,IAAAA,KAAA,SAAAA,IAAA;uCACyB;oCACzB,IAAAA,EAAA2N,OAAA3N,EAAAxR,SAAA;wCACAwR,MAAA6N,OAAA,GAAA7N,EAAAxR,SAAA;;oCAEA,IAAAu0B,aAAA/iB,IAAA;wCACApP,IAAAmyB,aAAA/iB;2CAC6B,IAAAA,EAAA2N,OAAA;wCAC7B,IAAA3N,EAAAxR,WAAA;4CACAgQ,IAAAwB,EAAA2N,OAAA;4CACAvP,IAAA4B,EAAA2N,OAAA;4CACAljB,IAAAuV,EAAA2N,OAAA;4CACA3N,IAAA,MAAAxB,QAAAJ,QAAA3T;;wCAEAuV,IAAA3M,SAAA2M,EAAA6N,OAAA;wCACAjd,MAAAoP,KAAA,IAAAA,KAAA,SAAAA,IAAA;2CAC6B,IAAAA,EAAA6N,OAAA;wCAC7Bjd,IAAA4zB,SAAAxkB,EAAAykB,MAAAvJ;wCACA,KAAAqJ,OAAA;4CACApwB,IAAAyZ,OAAAhd,EAAA;4CACA2T,IAAAqJ,OAAAhd,EAAA;4CACAoN,IAAA4P,OAAAhd,EAAA;4CACAwN,IAAAJ,KAAA,KAAAA,KAAAuG,IAAA,KAAAvG,IAAAuG,IAAAvG,IAAAuG;4CACA/F,IAAAR,IAAA,IAAAI;4CACA,IAAAxN,EAAApC,SAAA;gDACAoC,EAAA,KAAAgd,OAAA5N,EAAA;;4CAEApP,EAAA,KAAAwzB,KAAAjwB,IAAA,OAAAqK,GAAAJ;4CACAxN,EAAA,KAAAwzB,KAAAjwB,GAAAqK,GAAAJ;4CACAxN,EAAA,KAAAwzB,KAAAjwB,IAAA,OAAAqK,GAAAJ;+CACiC,IAAA4B,EAAA9Q,QAAA;4CACjC,OAAA8Q,EAAAykB,MAAAtJ;;2CAE6B;wCAC7BvqB,IAAAoP,EAAAykB,MAAAvJ,YAAA6H,aAAAoB;;oCAEAvzB,EAAA,KAAAgd,OAAAhd,EAAA;oCACAA,EAAA,KAAAgd,OAAAhd,EAAA;oCACAA,EAAA,KAAAgd,OAAAhd,EAAA;oCACA,IAAAA,EAAApC,SAAA;wCACAoC,EAAA,KAAAgd,OAAAhd,EAAA;;;gCAGA,IAAA2zB,UAAAC,QAAA;oCACAhmB,IAAA5N,EAAA;oCACAwN,IAAAxN,EAAA;oCACAnG,IAAAmG,EAAA;oCACAsL,MAAAF,KAAAE,IAAAsC,GAAAJ,GAAA3T;oCACAwR,MAAAD,KAAAC,IAAAuC,GAAAJ,GAAA3T;oCACAuT,KAAA9B,MAAAD,OAAA;oCACA,IAAAC,QAAAD,KAAA;wCACA9H,IAAAoQ,IAAA;2CAC6B;wCAC7B/Z,IAAA0R,MAAAD;wCACAsI,IAAAvG,IAAA,KAAAxT,KAAA,IAAA0R,MAAAD,OAAAzR,KAAA0R,MAAAD;wCACA9H,IAAA+H,QAAAsC,KAAAJ,IAAA3T,KAAAD,KAAA4T,IAAA3T,IAAA,SAAAyR,QAAAkC,KAAA3T,IAAA+T,KAAAhU,IAAA,KAAAgU,IAAAJ,KAAA5T,IAAA;wCACA2J,KAAA;;oCAEAvD,EAAA,KAAAuD,IAAA;oCACAvD,EAAA,KAAA2T,IAAA;oCACA3T,EAAA,KAAAoN,IAAA;;gCAEA,OAAApN;+BACqB8zB,gBAAA,SAAAngB,GAAAggB;gCACrB,IAAAI,SAAApgB,EAAAkgB,MAAAG,kBAAAC,YAAA,GAAAC,SAAAH,OAAAn2B,SAAA,KAAA+V,GAAA5D,GAAAokB,OAAAC;gCACA,KAAArkB,IAAA,GAAmCA,IAAAgkB,OAAAn2B,QAAmBmS,KAAA;oCACtDokB,QAAAJ,OAAAhkB;oCACAqkB,OAAAzgB,EAAAsJ,OAAAgX,WAAAtgB,EAAArV,QAAA61B,OAAAF;oCACAA,aAAAG,KAAAx2B,SAAAu2B,MAAAv2B;oCACAu2B,QAAAV,YAAAU,OAAAR;oCACA,IAAAQ,MAAAv2B,WAAA;wCACAu2B,MAAAl2B,KAAA;;oCAEAi2B,UAAAE,QAAAT,QAAA,UAAAQ,MAAA,WAAAA,MAAA,YAAAA,MAAA,YAAAA,MAAA,eAAAA,MAAA7Z,KAAA;;gCAEA,OAAA4Z,SAAAvgB,EAAAsJ,OAAAgX;+BACqBD,YAAA;4BACrB,KAAAx6B,KAAA24B,cAAA;gCACA6B,aAAA,MAAAx6B,IAAA;;4BAEAw6B,YAAA,IAAArH,OAAAqH,YAAA;4BACA9L,UAAAmM,oBAAA,SAAAr0B;gCACA,IAAAs0B,WAAAt0B,EAAA,KAAAA,EAAA,IAAA2zB;gCACA,IAAAK,UAAAnH,KAAAyH,WAAA;oCACAX,QAAAW,SAAAh2B,QAAA,kBAAAg2B,SAAAh2B,QAAA;oCACA0B,EAAA,KAAA8zB,cAAA9zB,EAAA,IAAA2zB;oCACA3zB,EAAA,KAAA8zB,cAAA9zB,EAAA,IAAA2zB;;gCAEAK,UAAAO,YAAA;;4BAEA,KAAA3nB,UAAA4nB,qBAAA;gCACA5nB,UAAA4nB,sBAAAtM,UAAAmM;;4BAEA,IAAAI,gBAAA,SAAAzG,MAAA0G,KAAAC,aAAAC;gCACA,IAAA5G,QAAA;oCACA,gBAAA5e;wCACA,OAAAA;;;gCAGA,IAAAylB,SAAAH,OAAA1G,KAAA6F,MAAAG,gBAAA,eAAAc,QAAA9G,KAAAoD,MAAAyD,QAAAva,KAAA,IAAAuZ,MAAArJ,mBAAAuK,MAAA/G,KAAA/Q,OAAA,GAAA+Q,KAAA1vB,QAAAw2B,MAAA,MAAAxG,MAAAN,KAAAjR,OAAAiR,KAAApwB,SAAA,uBAAAo3B,QAAAhH,KAAA1vB,QAAA,yBAAA22B,UAAAH,MAAAl3B,QAAAs3B,OAAAD,UAAA,IAAAH,MAAA,GAAA3G,QAAA7D,SAAA,UAAA6K;gCACA,KAAAF,SAAA;oCACA,gBAAA7lB;wCACA,OAAAA;;;gCAGA,IAAAslB,KAAA;oCACAS,YAAA,SAAA/lB;wCACA,IAAA+kB,OAAAiB,MAAArlB,GAAA/P;wCACA,WAAAoP,MAAA;4CACAA,KAAA8lB;+CACiC,IAAAN,SAAArJ,uBAAAsB,KAAAzd,IAAA;4CACjCpP,IAAAoP,EAAA+e,QAAA5C,wBAAA,KAAA6F,MAAA;4CACA,KAAArhB,IAAA,GAA+CA,IAAA/P,EAAApC,QAAcmS,KAAA;gDAC7D/P,EAAA+P,KAAAolB,UAAAn1B,EAAA+P;;4CAEA,OAAA/P,EAAAsa,KAAA;;wCAEA6Z,SAAA/kB,EAAAykB,MAAAG,gBAAAa,UAAA;wCACAO,OAAAhmB,EAAAgiB,MAAA+C,OAAA7Z,KAAA,IAAAuZ,MAAArJ;wCACAza,IAAAqlB,KAAAx3B;wCACA,IAAAq3B,UAAAllB,KAAA;4CACA,SAAAA,IAAAklB,SAAA;gDACAG,KAAArlB,KAAA4kB,cAAAS,MAAArlB,IAAA,cAAA+kB,MAAA/kB;;;wCAGA,OAAAglB,MAAAK,KAAA9a,KAAA0a,iBAAAb,QAAA7F,OAAAlf,EAAA9Q,QAAA;;oCAEA,OAAA62B;;gCAEAA,YAAA,SAAA/lB;oCACA,IAAAgmB,MAAAp1B,GAAA+P;oCACA,WAAAX,MAAA;wCACAA,KAAA8lB;2CAC6B,IAAAN,SAAArJ,uBAAAsB,KAAAzd,IAAA;wCAC7BpP,IAAAoP,EAAA+e,QAAA5C,wBAAA,KAAA6F,MAAA;wCACA,KAAArhB,IAAA,GAA2CA,IAAA/P,EAAApC,QAAcmS,KAAA;4CACzD/P,EAAA+P,KAAAolB,UAAAn1B,EAAA+P;;wCAEA,OAAA/P,EAAAsa,KAAA;;oCAEA8a,OAAAhmB,EAAAykB,MAAArJ;oCACAza,IAAAqlB,KAAAx3B;oCACA,IAAAq3B,UAAAllB,KAAA;wCACA,SAAAA,IAAAklB,SAAA;4CACAG,KAAArlB,KAAA4kB,cAAAS,MAAArlB,IAAA,cAAA+kB,MAAA/kB;;;oCAGA,OAAAglB,MAAAK,KAAA9a,KAAA0a,SAAA1G;;gCAEA,OAAA6G;+BACqBE,iBAAA,SAAAzR;gCACrBA,cAAAwN,MAAA;gCACA,gBAAAnjB,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;oCACA,IAAAjQ,KAAA+H,IAAA,IAAAqpB,MAAA,MAAArhB;oCACAE;oCACA,KAAAF,IAAA,GAAuCA,IAAA,GAAOA,KAAA;wCAC9CE,KAAA2T,MAAA7T,MAAA/P,EAAA+P,KAAA/P,EAAA+P,MAAA/P,GAAA+P,IAAA;;oCAEA,OAAA0Y,KAAA6M,MAAArnB,GAAAgC,MAAAwD,IAAAyR;;+BAEqBkD,kBAAAjX,WAAAiX,kBAAA,SAAAhZ;gCACrBtW,KAAAosB,OAAAyD,SAAAvZ;gCACA,IAAAxV,IAAAd,KAAAuK,MAAA0lB,QAAAnvB,EAAAmvB,OAAAwH,MAAA32B,EAAA62B,UAAAplB,MAAA,MAAAgF,KAAAoD,IAAA1D,GAAAwlB,KAAA/7B;gCACA,OAAA+2B,KAAA;oCACAlgB,MAAA0Y,MAAAwH,IAAAnhB;oCACA,IAAAmhB,IAAA3iB,GAAA;wCACAyC,MAAAjF,KAAAqD,MAAA4B;2CAC6B,IAAAA,MAAAhF,OAAAgF,OAAAhF,KAAA;wCAC7BgF,MAAA;;oCAEAkgB,IAAAtiB,EAAAsiB,IAAA/2B,KAAA6W;oCACAkgB,UAAA3c;;gCAEA,IAAAha,EAAAisB,YAAA;oCACAjsB,EAAAisB,WAAAmD,WAAAD,MAAAC;;gCAEA,IAAA5Z,MAAA,KAAAA,MAAA;oCACAmhB,MAAA32B,EAAA62B;oCACAj3B,IAAA4V,MAAA;oCACA,OAAAmhB,KAAA;wCACA9c,KAAA8c,IAAAtiB;wCACA,KAAAwF,GAAA7S,MAAA;4CACA6S,GAAAja,KAAAia,GAAAE,IAAAF,GAAA+hB;+CACiC,IAAA/hB,GAAA7S,SAAA;4CACjC20B,MAAA9hB,GAAA+hB,MAAA/hB,GAAAE,IAAAF,GAAAgiB;4CACA,KAAA1lB,IAAA,GAA+CA,IAAA0D,GAAArG,GAAU2C,KAAA;gDACzDwlB,OAAA9hB,GAAA,OAAA1D,KAAA0D,GAAA,QAAA1D,IAAA;;4CAEA0D,GAAAja,KAAA+7B;;wCAEAhF,UAAA3c;;;+BAGqB4c,gBAAA,SAAAviB,GAAAzU,GAAA4V,GAAAmM,MAAA3N;gCACrB9U,KAAAmV;gCACAnV,KAAAU;gCACAV,KAAAsW;gCACAtW,KAAA8U;gCACA,IAAA2N,MAAA;oCACAA,KAAAqC,QAAA9kB;oCACAA,KAAA8a,QAAA2H;;+BAEqB4M,gBAAAhX,WAAAgX,gBAAA,SAAAla,GAAAgC,MAAAwY,MAAAhV,IAAAyR,QAAAwQ;gCACrB,IAAAC,MAAAliB,IAAAmiB,YAAgD9vB,UAAU+vB,YAAApN,KAAAG,YAAAkN,WAAApK,UAAA3b,GAAAvW,GAAAu8B,IAAAxF,KAAAyF;gCAC1DvN,KAAAG,aAAA;gCACA8C,WAAAzb;gCACAwD,KAAAuiB,UAAAvN,KAAA6M,MAAArnB,GAAAgC,MAAAwD,IAAAyR;gCACAwG,WAAAoK;gCACA,IAAAJ,SAAA;oCACAjN,KAAAG,aAAAiN;oCACA,IAAAF,KAAA;wCACAA,IAAA/X,QAAA;wCACA,IAAA+X,IAAA/X,OAAA;4CACA+X,IAAA/X,MAAAhK,QAAA;;;;gCAIA,OAAAH,aAAAkiB,KAAA;oCACA,IAAAliB,GAAA7S,QAAA;wCACApH,IAAAia,GAAAja;wCACAsM,IAAAtM,KAAAia,GAAAE,IAAAF,GAAAla;wCACAq8B,MAAAp8B,KAAAia,GAAAE;wCACA,KAAA+hB,SAAA;4CACAnF,MAAA,IAAAC,cAAA/c,IAAA,KAAAja,GAAA+2B,KAAA9c,GAAA7F;4CACA6F,GAAAla,IAAA;;wCAEA,IAAAka,GAAA7S,SAAA;4CACAmP,IAAA0D,GAAArG;4CACA,SAAA2C,IAAA;gDACAgmB,KAAA,OAAAhmB;gDACAvW,IAAAia,GAAAja,IAAA,MAAAu8B;gDACAjwB,IAAAtM,KAAAia,GAAApQ,KAAA0yB;gDACAH,MAAAp8B,KAAAia,GAAAsiB;gDACA,KAAAL,SAAA;oDACAnF,MAAA,IAAAC,cAAA/c,IAAAsiB,IAAAv8B,GAAA+2B,KAAA9c,GAAAwiB,IAAAF;;;;;oCAKAtiB,QAAAG;;gCAEA;oCACAmV,OAAA6M;oCACA9vB;oCACA2qB,UAAAF;oCACA9c,IAAAuiB;;+BAEqB3N,eAAAlX,WAAAkX,eAAA,SAAApa,GAAAzU,GAAAma,GAAApa,GAAAgiB,MAAA3a,MAAA+N,GAAAf,GAAAsoB,IAAAr8B,GAAAkO;gCACrBjP,KAAAmV;gCACAnV,KAAAU;gCACAV,KAAA6a;gCACA7a,KAAAS;gCACAT,KAAA6V,SAAAnV;gCACA,MAAAyU,aAAAoa,eAAA;oCACApC,gBAAAhoB,KAAAnF,KAAA6V;;gCAEA7V,KAAA8U;gCACA9U,KAAA8H,eAAA;gCACA,IAAAs1B,IAAA;oCACAp9B,KAAAo9B;oCACA1M,eAAA;;gCAEA1wB,KAAAe,UAAA2zB,YAAA7Z,IAAA9Z;gCACAf,KAAAiP,UAAAylB,YAAA7Z,IAAApa,IAAAwO;gCACA,IAAAwT,MAAA;oCACAziB,KAAA8a,QAAA2H;oCACAA,KAAAqC,QAAA9kB;;+BAEqBq9B,2BAAA,SAAA5lB,QAAAiY,MAAAoN,OAAA9vB,KAAAyV,MAAA6a;gCACrB,IAAA3iB,KAAA,IAAA4U,aAAA9X,QAAAiY,MAAAoN,OAAA9vB,MAAA8vB,OAAAra,OAAA,GAAA6a;gCACA3iB,GAAA5Z,IAAA+7B;gCACAniB,GAAA1L,IAAA0L,GAAA+hB,MAAA1vB;gCACA,OAAA2N;+BACqB4iB,gBAAAnO,UAAAoO,eAAA,SAAAroB,GAAAzU,GAAAK,GAAAkO,GAAAwuB,MAAAvI,MAAAva,IAAAyiB,IAAAhR,QAAAyD;gCACrB9uB,SAAAm0B,QAAA;gCACAva,KAAA,IAAA4U,aAAApa,GAAAzU,GAAA,MAAAia,IAAAkV,WAAA,oBAAAuN,IAAAr8B,GAAAkO;gCACAA,KAAA;gCACA,IAAAwuB,QAAAvC,UAAAnH,KAAA9kB,IAAAlO,IAAA;oCACAkO,MAAAlO,GAAAkO;oCACAmgB,UAAAmM,kBAAAtsB;oCACAlO,IAAAkO,EAAA;oCACAA,MAAA;;gCAEA,IAAAsZ,KAAAxnB,EAAAu3B,MAAA,MAAA9W,KAAA,KAAA8W,MAAA,MAAAoF,KAAAzuB,EAAAqpB,MAAA,MAAA9W,KAAA,KAAA8W,MAAA,MAAAhkB,IAAAiU,GAAAzjB,QAAA64B,YAAAtK,eAAA,OAAApc,GAAA2mB,IAAAC,IAAAC,IAAAlwB,IAAAmwB,OAAAC,OAAAC,IAAAC,UAAA5C,MAAA6C,IAAA1B,KAAA2B;gCACA,IAAAnvB,EAAAzJ,QAAA,eAAAzE,EAAAyE,QAAA;oCACA+iB,QAAA/G,KAAA,KAAA6T,QAAA5C,wBAAA,MAAA6F,MAAA;oCACAoF,QAAAlc,KAAA,KAAA6T,QAAA5C,wBAAA,MAAA6F,MAAA;oCACAhkB,IAAAiU,GAAAzjB;;gCAEA,IAAAwP,MAAAopB,GAAA54B,QAAA;oCACAyjB,MAAA2M,QAAA,IAAAoD,MAAA;oCACAhkB,IAAAiU,GAAAzjB;;gCAEA6V,GAAAyR;gCACAzR,GAAAkV;gCACAqL,UAAAO,YAAA;gCACA,KAAAxkB,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1C6mB,KAAAvV,GAAAtR;oCACArJ,KAAA8vB,GAAAzmB;oCACAgnB,KAAA7Q,WAAA0Q;oCACA,IAAAG,aAAA;wCACAtjB,GAAA0jB,WAAA,IAAAJ,IAAApF,aAAAjrB,IAAAqwB,KAAArwB,GAAAynB,QAAA5D,YAAA,KAAAkM,aAAA/vB,GAAApI,QAAA;2CAC6B,IAAAi4B,QAAAvC,UAAAnH,KAAA+J,KAAA;wCAC7BrB,MAAA7uB,GAAApI,QAAA;wCACAi3B,MAAA,OAAAA,MAAA7uB,GAAAuW,OAAAsY,OAAA;wCACA2B,SAAAxwB,GAAApI,QAAA,iBAAAmuB;wCACAmK,KAAAnD,YAAAmD,IAAAM;wCACAxwB,KAAA+sB,YAAA/sB,IAAAwwB;wCACAF,WAAAJ,GAAAh5B,SAAA8I,GAAA9I,SAAA;wCACA,IAAAo5B,aAAAvK,oBAAA/lB,GAAA;4CACA+M,GAAA,OAAAA,GAAArG,MAAAqG,GAAArG,IAAA;4CACAqG,GAAA1L,IAAA0L,GAAA1L,EAAAqpB,MAAAoF,GAAAzmB,IAAAuK,KAAA;+CACiC;4CACjC,KAAAmS,kBAAA;gDACAuK,WAAA;;4CAEA,IAAAE,QAAA;gDACAzjB,GAAA0jB,WAAAH,WAAA,kBAAAJ,GAAA,IAAAjF,aAAAjrB,GAAA,IAAAkwB,GAAA,uBAAAO,WAAA,IAAAP,GAAA,IAAAjF,aAAAjrB,GAAA,IAAAkwB,GAAA,kBAAAO,WAAA,IAAAP,GAAA,IAAAjF,aAAAjrB,GAAA,IAAAkwB,GAAA,KAAAI,WAAA,aAAAzB,KAAA;mDACqC;gDACrC9hB,GAAA0jB,WAAAH,WAAA,kBAAAJ,GAAA,IAAAlwB,GAAA,KAAAkwB,GAAA,qBAAAO,WAAA,IAAAP,GAAA,IAAAlwB,GAAA,KAAAkwB,GAAA,eAAAO,WAAA,IAAAP,GAAA,IAAAlwB,GAAA,KAAAkwB,GAAA,IAAAI,WAAA,MAAAzB,KAAA;;4CAEA,IAAAyB,UAAA;gDACAJ,QAAAh5B,SAAA,QAAAg5B,GAAA;gDACAnjB,GAAA0jB,WAAA,IAAAP,KAAAlwB,GAAA9I,SAAA,QAAA8I,GAAA,MAAAkwB,IAAArB,KAAA;;;wCAGAvB,UAAAO,YAAA;2CAC6B;wCAC7BsC,QAAAD,GAAA/C,MAAAvJ;wCACA,KAAAuM,OAAA;4CACApjB,GAAA,OAAAA,GAAArG,MAAAqG,GAAArG,KAAAqG,GAAA,OAAAA,GAAArG,KAAA,MAAA1G;+CACiC;4CACjCowB,QAAApwB,GAAAmtB,MAAAtJ;4CACA,KAAAuM,eAAAl5B,WAAAi5B,MAAAj5B,QAAA;gDACA,OAAA6V;;4CAEAkjB,KAAA;4CACA,KAAAD,KAAA,GAAgDA,KAAAG,MAAAj5B,QAAmB84B,MAAA;gDACnEO,KAAAJ,MAAAH;gDACAtC,OAAAwC,GAAAt4B,QAAA24B,IAAAN;gDACAljB,GAAA0jB,WAAAP,GAAA3Z,OAAA0Z,IAAAvC,OAAAuC,KAAA3Z,OAAAia,KAAAtF,aAAAmF,MAAAJ,KAAAO,KAAA,IAAAR,aAAAG,GAAA3Z,OAAAmX,OAAA6C,GAAAr5B,QAAA,aAAA84B,OAAA;gDACAC,KAAAvC,OAAA6C,GAAAr5B;;4CAEA6V,GAAA,OAAAA,GAAArG,MAAAwpB,GAAA3Z,OAAA0Z;;;;gCAIA,IAAA5uB,EAAAzJ,QAAA,iBAAAmV,GAAApQ,MAAA;oCACAkyB,MAAA9hB,GAAA+hB,MAAA/hB,GAAApQ,KAAAsQ;oCACA,KAAA5D,IAAA,GAAuCA,IAAA0D,GAAArG,GAAU2C,KAAA;wCACjDwlB,OAAA9hB,GAAA,OAAA1D,KAAA0D,GAAApQ,KAAA,OAAA0M;;oCAEA0D,GAAA1L,IAAAwtB,MAAA9hB,GAAA,OAAA1D;;gCAEA,KAAA0D,GAAArG,GAAA;oCACAqG,GAAA7S,QAAA;oCACA6S,GAAA+hB,MAAA/hB,GAAA1L;;gCAEA,OAAA0L,GAAA2jB,UAAA3jB;+BACqB1D,IAAA;4BACrBvW,IAAA6uB,aAAAruB;4BACAR,EAAA4T,IAAA5T,EAAA08B,KAAA;4BACA,SAAAnmB,IAAA;gCACAvW,EAAA,OAAAuW,KAAA;gCACAvW,EAAA,OAAAuW,KAAA;;4BAEAvW,EAAAg8B,MAAA;4BACAh8B,EAAAoa,QAAApa,EAAAokB,QAAApkB,EAAA49B,SAAA59B,EAAA6J,OAAA7J,EAAA0rB,SAAA1rB,EAAAmvB,WAAAnvB,EAAAy8B,MAAA;4BACAz8B,EAAA29B,aAAA,SAAApC,KAAAphB,GAAApa,GAAA+0B,KAAA1gB,GAAAypB;gCACA,IAAA5jB,KAAA3a,MAAAsU,IAAAqG,GAAArG;gCACAqG,GAAA,OAAArG,MAAAiqB,QAAAjqB,KAAAqG,GAAA,OAAArG,MAAA,MAAA2nB,aAAA;gCACA,KAAAx7B,GAAA,IAAA6T,MAAA,MAAAqG,GAAAyR,QAAA;oCACAzR,GAAA,OAAArG,MAAAuG,KAAA2a,OAAA;oCACA,OAAA7a;;gCAEAA,GAAArG;gCACAqG,GAAA7S,OAAA6S,GAAAkV,WAAA;gCACAlV,GAAA,OAAAA,GAAArG,KAAAkhB,OAAA;gCACA,IAAAlhB,IAAA;oCACAqG,GAAApQ,KAAA,OAAA+J,KAAAuG,IAAApa;oCACAka,GAAAwiB,IAAA,OAAA7oB,KAAAQ;oCACA6F,GAAA,OAAArG,KAAAuG;oCACA,KAAAF,GAAAyR,QAAA;wCACAzR,GAAA2jB,SAAA,IAAA/O,aAAA5U,IAAA,OAAArG,GAAAuG,GAAApa,GAAAka,GAAA2jB,UAAA3jB,IAAA,GAAAA,GAAA9E,GAAAf,GAAA6F,GAAAyiB;wCACAziB,GAAA2jB,OAAA5B,MAAA;;oCAEA,OAAA/hB;;gCAEAA,GAAApQ;oCACAsQ,OAAApa;;gCAEAka,GAAAwiB;gCACAxiB,GAAAE;gCACAF,GAAAla;gCACAka,GAAA7F;gCACA,OAAA6F;;4BAEA,IAAA6jB,cAAA,SAAA99B,GAAA0C;gCACAA;gCACApD,KAAAU,IAAA0C,QAAAq7B,SAAAhK,iBAAA/zB;gCACAmwB,cAAAnwB,KAAAmwB,cAAA7wB,KAAAU,KAAAV;gCACAA,KAAA0+B,SAAAt7B,QAAAi5B,aAAAV,cAAAv4B,QAAAu7B,cAAAv7B,QAAAi4B,OAAAj4B,QAAAy4B,aAAAz4B,QAAA04B;gCACA,IAAA14B,QAAAqsB,QAAA;oCACAzvB,KAAAw8B,QAAAp5B,QAAAqsB;;gCAEAzvB,KAAAy9B,OAAAr6B,QAAAi4B;gCACAr7B,KAAA87B,QAAA14B,QAAA04B;gCACA97B,KAAA4+B,UAAAx7B,QAAAw7B;gCACA5+B,KAAAk1B,OAAA9xB,QAAAu7B;gCACA3+B,KAAAo9B,KAAAh6B,QAAAkpB,YAAA;+BACqBkD,8BAAAnX,WAAAmX,8BAAA,SAAA9uB,GAAA0C,SAAAy7B;gCACrB,WAAAz7B,YAAA;oCACAA;wCACAqsB,QAAAoP;;;gCAGA,IAAA33B,IAAAxG,EAAA43B,MAAA,MAAAx3B,IAAAsC,QAAAu7B,cAAA1nB,GAAAqkB;gCACAuD,yBAAA/9B;gCACA,KAAAmW,IAAA,GAAmCA,IAAA/P,EAAApC,QAAcmS,KAAA;oCACjD7T,QAAAq7B,SAAAxnB,MAAA,KAAA7T,QAAAq7B;oCACAr7B,QAAAu7B,eAAAE,SAAA5nB,MAAAnW;oCACAw6B,OAAA,IAAAkD,YAAAt3B,EAAA+P,IAAA7T;;+BAEqB07B,sBAAA,SAAAp+B;gCACrB,KAAAmwB,cAAAnwB,IAAA;oCACA,IAAAq+B,aAAAr+B,EAAAujB,OAAA,GAAAoO,gBAAA3xB,EAAAyjB,OAAA;oCACAqL,4BAAA9uB;wCACA+uB,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;4CACA,IAAA6nB,cAAAld,SAAAmd,IAAAC,UAAA51B,QAAAy1B;4CACA,KAAAC,aAAA;gDACA5K,KAAA,YAAA2K,aAAA;gDACA,OAAApkB;;4CAEAqkB,YAAA7P;4CACA,OAAA0B,cAAAnwB,GAAA87B,MAAArnB,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;;;;;4BAKAzW,IAAA89B,YAAAt9B;4BACAR,EAAA88B,eAAA,SAAAroB,GAAApU,GAAAkO,GAAA0L,IAAAyR,QAAAyD;gCACA,IAAAsP,MAAAn/B,KAAA4+B,SAAA3nB,GAAAsR,IAAAmV,IAAAppB,GAAA8qB,IAAAC;gCACA,IAAAr/B,KAAA87B,OAAA,IAAArJ,uBAAAsB,KAAA9kB,MAAAwjB,uBAAAsB,KAAAhzB,IAAA;oCACAwnB,KAAAxnB,EAAAs0B,QAAA5C,wBAAA,KAAA6F,MAAA;oCACAoF,KAAAzuB,EAAAomB,QAAA5C,wBAAA,KAAA6F,MAAA;uCACyB,IAAA6G,KAAA;oCACzB5W,OAAAxnB;oCACA28B,OAAAzuB;;gCAEA,IAAAyuB,IAAA;oCACAppB,IAAAopB,GAAA54B,SAAAyjB,GAAAzjB,SAAA44B,GAAA54B,SAAAyjB,GAAAzjB;oCACA,KAAAmS,IAAA,GAAuCA,IAAA3C,GAAO2C,KAAA;wCAC9ClW,IAAAwnB,GAAAtR,KAAAsR,GAAAtR,MAAAjX,KAAAk1B;wCACAjmB,IAAAyuB,GAAAzmB,KAAAymB,GAAAzmB,MAAAjX,KAAAk1B;wCACA,IAAAiK,KAAA;4CACAC,KAAAr+B,EAAAyE,QAAA25B;4CACAE,KAAApwB,EAAAzJ,QAAA25B;4CACA,IAAAC,OAAAC,IAAA;gDACA,IAAAA,QAAA;oDACA9W,GAAAtR,KAAAsR,GAAAtR,GAAAqhB,MAAA6G,KAAA3d,KAAA;uDACyC,IAAA4d,QAAA;oDACzC7W,GAAAtR,MAAA,MAAAkoB;;;;;oCAKAp+B,IAAAwnB,GAAA/G,KAAA;oCACAvS,IAAAyuB,GAAAlc,KAAA;;gCAEA,OAAA+b,cAAApoB,GAAAnV,KAAAU,GAAAK,GAAAkO,GAAAjP,KAAAy9B,MAAAz9B,KAAAk1B,MAAAva,IAAA3a,KAAAo9B,IAAAhR,QAAAyD;;4BAEAnvB,EAAA87B,QAAA,SAAArnB,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;gCACA,OAAAnX,KAAAw9B,aAAAroB,EAAA1L,OAAAzJ,KAAA0+B,OAAA5J,UAAA3f,GAAAnV,KAAAU,GAAAkwB,KAAA,OAAA5wB,KAAAk1B,QAAAl1B,KAAA0+B,OAAAzvB,IAAA0L,IAAAyR;;4BAEAgD,UAAAkQ,sBAAA,SAAA17B,MAAA27B,aAAAjT;gCACAkD,4BAAA5rB;oCACA6rB,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;wCACA,IAAAge,KAAA,IAAA5F,aAAApa,GAAAzU,GAAA,MAAAia,IAAA,GAAAja,GAAA,OAAA4rB;wCACA6I,GAAA/I;wCACA+I,GAAAtF,WAAA0P,YAAApqB,GAAAlG,GAAA0gB,KAAAS,QAAA1vB;wCACA,OAAAy0B;;oCAEA7I;;;4BAGA8C,UAAAoQ,sBAAAjM,aAAAC;4BACA,IAAAiM,kBAAA,oGAAAnH,MAAA,MAAA5B,iBAAAjC,iBAAA,cAAAgC,oBAAAlC,aAAA,aAAAmL,uBAAAjL,iBAAA,oBAAAsC,cAAAtC,iBAAA,yBAAAkL,YAAAtnB,WAAAsnB,YAAA;gCACA3/B,KAAAsxB,cAAAlE,WAAAgC,UAAA0B,gCAAA;gCACA9wB,KAAA4/B,UAAAxQ,UAAAyQ,mBAAA,UAAA9I,cAAA,QAAA3H,UAAAyQ,kBAAA;+BACqBC,cAAA5sB,OAAA6sB,YAAAC,sBAAAC,aAAA,SAAAn4B,MAAAo4B,WAAAC;gCACrB,IAAAC,UAAAvN,KAAAE,gBAAA,8BAAAjrB,OAAAu4B,MAAA,mBAAA3/B;gCACA,KAAAA,KAAAy/B,YAAA;oCACAC,QAAAE,eAAA,MAAA5/B,EAAA20B,QAAAgL,KAAA,SAAA1L,eAAAwL,WAAAz/B;;gCAEAw/B,UAAAx0B,YAAA00B;gCACA,OAAAA;+BACqBG,cAAA1N,KAAA2N,iBAAAC,yBAAA;gCACrB,IAAAxlB,QAAAyY,WAAA,WAAAK,KAAAb,YAAAhgB,OAAAwtB,QAAAC,KAAAn6B,MAAAtE;gCACA,IAAA2wB,KAAAE,oBAAA9X,OAAA;oCACA0lB,MAAAV,WAAA,OAAAM;oCACA/5B,OAAAy5B,WAAA,QAAAU;wCACAz+B,OAAA;wCACAC,QAAA;wCACA4N,GAAA;;oCAEA7N,QAAAsE,KAAAo6B,wBAAA1+B;oCACAsE,KAAAiD,MAAAi2B,wBAAA;oCACAl5B,KAAAiD,MAAAitB,kBAAA;oCACAzb,QAAA/Y,UAAAsE,KAAAo6B,wBAAA1+B,WAAAsxB,cAAAuD;oCACAwJ,YAAArK,YAAAyK;;gCAEA,OAAA1lB;iCACqB4lB,kBAAA,SAAA5xB,GAAA6xB,OAAAC,WAAAC,UAAAC,cAAAC;gCACrB,IAAAC,KAAAlyB,EAAA+gB,cAAAxvB,IAAA4gC,WAAAnyB,GAAA,OAAAqH,GAAAvG,GAAAC,GAAAqxB,SAAAC,SAAAp6B,GAAAnG,GAAAN,GAAAK,GAAAygC,IAAAC,IAAAC,aAAAC,YAAAC;gCACA,IAAAR,IAAA;oCACAO,aAAAP,GAAAE;oCACAM,aAAAR,GAAAG;;gCAEA,KAAAN,aAAA1qB,IAAA0qB,SAAA1I,MAAA,MAAAxzB,SAAA;oCACA/D,IAAAkO,EAAA+oB;oCACA8I,QAAA1I,eAAA0I,OAAAxI,MAAA;oCACAhiB,OAAAwqB,MAAA,GAAAt7B,QAAA,cAAA4nB,WAAA0T,MAAA,YAAA//B,EAAAmB,QAAAkrB,WAAA0T,MAAA,OAAA//B,EAAAgP,IAAA+wB,MAAA,GAAAt7B,QAAA,cAAA4nB,WAAA0T,MAAA,YAAA//B,EAAAoB,SAAAirB,WAAA0T,MAAA,OAAA//B,EAAAiP;;gCAEA+wB,UAAAM,oBAAAjU,WAAA9W,EAAA;gCACAyqB,UAAAO,oBAAAlU,WAAA9W,EAAA;gCACA,IAAA0qB,YAAAxgC,MAAAohC,mBAAA;oCACA16B,IAAA1G,EAAA;oCACAO,IAAAP,EAAA;oCACAC,IAAAD,EAAA;oCACAM,IAAAN,EAAA;oCACA+gC,KAAA/gC,EAAA;oCACAghC,KAAAhhC,EAAA;oCACAihC,cAAAv6B,IAAApG,IAAAC,IAAAN;oCACAsP,IAAAsxB,WAAAvgC,IAAA2gC,eAAAH,YAAA7gC,IAAAghC,gBAAAhhC,IAAA+gC,KAAA1gC,IAAAygC,MAAAE;oCACAzxB,IAAAqxB,YAAAtgC,IAAA0gC,eAAAH,WAAAp6B,IAAAu6B,gBAAAv6B,IAAAs6B,KAAAzgC,IAAAwgC,MAAAE;oCACAJ,UAAAN,UAAAM,UAAA/qB,EAAA,KAAAvG;oCACAuxB,UAAAP,UAAAO,UAAAhrB,EAAA,KAAAtG;;gCAEA,IAAAmxB,IAAA;oCACA,IAAAD,YAAA;wCACAH,UAAAc,UAAAV,GAAAU;wCACAd,UAAAe,UAAAX,GAAAW;wCACAX,KAAAJ;;oCAEA,IAAAE,iCAAA,SAAA7R,UAAA4B,wBAAA;wCACAjhB,IAAAsxB,UAAAK;wCACA1xB,IAAAsxB,UAAAK;wCACAR,GAAAU,WAAA9xB,IAAAvP,EAAA,KAAAwP,IAAAxP,EAAA,KAAAuP;wCACAoxB,GAAAW,WAAA/xB,IAAAvP,EAAA,KAAAwP,IAAAxP,EAAA,KAAAwP;2CAC6B;wCAC7BmxB,GAAAU,UAAAV,GAAAW,UAAA;;;gCAGA,KAAAZ,YAAA;oCACAjyB,EAAA8yB,aAAA,mBAAAzrB,EAAAkL,KAAA;;+BAEqBwgB,cAAA,SAAA/yB;gCACrB;oCACA,OAAAA,EAAA+oB;kCACyB,OAAA/oB;+BACJgpB,SAAA,SAAAhpB;gCACrB,UAAA6wB,eAAA7wB,EAAA+oB,WAAA/oB,EAAAgzB,UAAAD,YAAA/yB,UAAAuR,cAAAvR,EAAAuR,WAAAwX,WAAA/oB,EAAAuR,WAAAyhB;+BACqBL,sBAAA,oBAAAR,aAAA,SAAAnyB,GAAAizB;gCACrB,IAAAf,KAAAlyB,EAAA+gB,gBAAA,IAAA2P,aAAAwC,MAAA,KAAA14B,QAAAwF,EAAAxF,OAAA24B,WAAAvnB,GAAAra,GAAAqV,GAAAwsB,KAAAC;gCACA,IAAA5L,gBAAA;oCACA7b,IAAAia,UAAA7lB,GAAAwnB,mBAAA;uCACyB,IAAAxnB,EAAAilB,cAAA;oCACzBrZ,IAAA5L,EAAAilB,aAAAC,OAAA4G,MAAAxI;oCACA1X,WAAA/V,WAAA,MAAA+V,EAAA,GAAAsJ,OAAA,IAAAD,OAAArJ,EAAA,GAAAsJ,OAAA,KAAAD,OAAArJ,EAAA,GAAAsJ,OAAA,KAAAtJ,EAAA,GAAAsJ,OAAA,IAAAgd,GAAApxB,KAAA,GAAAoxB,GAAAnxB,KAAA,IAAAwR,KAAA;;gCAEA4gB,aAAAvnB,WAAA,UAAAA,MAAA;gCACA,IAAAunB,aAAA1L,oBAAA4L,OAAA1N,kBAAA3lB,GAAApD,YAAA,YAAAoD,EAAAuR,aAAA;oCACA,IAAA8hB,MAAA;wCACAzsB,IAAApM,MAAAoC;wCACApC,MAAAoC,UAAA;;oCAEA,KAAAoD,EAAAuR,YAAA;wCACA6hB,MAAA;wCACA9B,YAAA70B,YAAAuD;;oCAEA4L,IAAAia,UAAA7lB,GAAAwnB,mBAAA;oCACA2L,aAAAvnB,WAAA,UAAAA,MAAA;oCACA,IAAAhF,GAAA;wCACApM,MAAAoC,UAAAgK;2CAC6B,IAAAysB,MAAA;wCAC7BC,YAAA94B,OAAA;;oCAEA,IAAA44B,KAAA;wCACA9B,YAAArK,YAAAjnB;;;gCAGA,IAAAkyB,GAAAR,OAAA1xB,EAAA+oB,WAAAC,OAAAhpB,IAAA;oCACA,IAAAmzB,cAAA34B,MAAAitB,kBAAA,IAAAlxB,QAAA;wCACAqV,IAAApR,MAAAitB;wCACA0L,YAAA;;oCAEA5hC,IAAAyO,EAAAuzB,aAAA;oCACA,IAAAJ,aAAA5hC,GAAA;wCACA,IAAAA,EAAAgF,QAAA;4CACAqV,IAAAra;4CACA4hC,YAAA;+CACiC,IAAA5hC,EAAAgF,QAAA;4CACjCqV,IAAA,oBAAAra,EAAAu6B,MAAA,2BAAAvZ,KAAA;4CACA4gB,YAAA;;;;gCAIA,IAAAA,WAAA;oCACA,OAAAR;;gCAEAphC,KAAAqa,KAAA,IAAAkgB,MAAAvJ;gCACAva,IAAAzW,EAAAsE;gCACA,SAAAmS,KAAA;oCACApB,IAAAqO,OAAA1jB,EAAAyW;oCACAzW,EAAAyW,MAAAorB,MAAAxsB,UAAA,OAAAwsB,MAAAF,OAAAE,MAAA,qBAAAF,MAAAtsB;;gCAEA,OAAAqsB,WAAA1hC,EAAAsE,SAAA,MAAAtE,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,QAAAA;+BACqBm2B,gBAAAte,WAAAoqB,eAAA,SAAAttB,GAAA6f,IAAA0N,KAAAlG;gCACrB,IAAArnB,EAAA6a,gBAAA0S,QAAAlG,OAAA;oCACA,OAAArnB,EAAA6a;;gCAEA,IAAAmR,KAAAuB,MAAAvtB,EAAA6a,gBAAA,IAAA2P,cAAA,IAAAA,aAAAgD,OAAAxB,GAAAtK,SAAA,GAAAtkB,MAAA,MAAA4vB,MAAA,KAAAS,UAAA7L,cAAA3J,WAAA0H,UAAA3f,GAAAuqB,sBAAA1K,IAAA,gBAAAsD,MAAA,YAAA6I,GAAAyB,WAAA,OAAA9R,8BAAA1D,WAAAgC,UAAA0B,gCAAA,GAAAtwB,GAAAyW,GAAA4f,QAAAC,QAAA5G,UAAA0G;gCACAuK,GAAAR,SAAAxrB,EAAA6iB,WAAAC,OAAA9iB;gCACA,IAAAgsB,GAAAR,KAAA;oCACAE,gBAAA1rB,GAAA2f,UAAA3f,GAAAuqB,sBAAA1K,IAAA,wBAAAmM,IAAAhsB,EAAAqtB,aAAA;oCACAxC,uBAAA5Q,UAAAoQ,uBAAAiB;;gCAEAjgC,IAAA4gC,WAAAjsB;gCACA,IAAA3U,MAAAohC,mBAAA;oCACA,IAAAphC,EAAAsE,WAAA;wCACA,IAAA+9B,MAAAriC,EAAA,IAAAsiC,MAAAtiC,EAAA,IAAAuiC,MAAAviC,EAAA,IAAAwiC,MAAAxiC,EAAA,IAAAyiC,MAAAziC,EAAA,IAAA0iC,MAAA1iC,EAAA,IAAA2iC,MAAA3iC,EAAA,IAAA4iC,MAAA5iC,EAAA,IAAA6iC,MAAA7iC,EAAA,IAAA8iC,MAAA9iC,EAAA,IAAA+iC,MAAA/iC,EAAA,KAAAgjC,MAAAhjC,EAAA,KAAAijC,MAAAjjC,EAAA,KAAAkjC,MAAAljC,EAAA,KAAAmjC,MAAAnjC,EAAA,KAAAojC,QAAAtxB,KAAA0c,MAAAmU,KAAAI,MAAAM,IAAAC,IAAAC,IAAAC,IAAAC,KAAAC;wCACA,IAAA/C,GAAAyB,SAAA;4CACAc,OAAAvC,GAAAyB;4CACAY,MAAAH,MAAAK,MAAAljC,EAAA;4CACAijC,MAAAH,MAAAI,MAAAljC,EAAA;4CACAkjC,MAAAH,MAAAG,MAAAvC,GAAAyB,UAAApiC,EAAA;;wCAEA2gC,GAAAnK,YAAA4M,QAAA9b;wCACA,IAAA8b,OAAA;4CACAK,MAAA3xB,KAAA2xB,KAAAL;4CACAM,MAAA5xB,KAAA4xB,KAAAN;4CACAC,KAAAZ,MAAAgB,MAAAZ,MAAAa;4CACAJ,KAAAZ,MAAAe,MAAAX,MAAAY;4CACAH,KAAAZ,MAAAc,MAAAV,MAAAW;4CACAb,MAAAJ,OAAAiB,MAAAb,MAAAY;4CACAX,MAAAJ,OAAAgB,MAAAZ,MAAAW;4CACAV,MAAAJ,OAAAe,MAAAX,MAAAU;4CACAN,MAAAP,OAAAc,MAAAP,MAAAM;4CACAhB,MAAAY;4CACAX,MAAAY;4CACAX,MAAAY;;wCAEAH,QAAAtxB,KAAA0c,OAAA+T,KAAAQ;wCACApC,GAAAlK,YAAA2M,QAAA9b;wCACA,IAAA8b,OAAA;4CACAK,MAAA3xB,KAAA2xB,KAAAL;4CACAM,MAAA5xB,KAAA4xB,KAAAN;4CACAC,KAAAhB,MAAAoB,MAAAZ,MAAAa;4CACAJ,KAAAhB,MAAAmB,MAAAX,MAAAY;4CACAH,KAAAhB,MAAAkB,MAAAV,MAAAW;4CACAZ,MAAAR,MAAAoB,MAAAZ,MAAAW;4CACAV,MAAAR,MAAAmB,MAAAX,MAAAU;4CACAN,MAAAX,MAAAkB,MAAAP,MAAAM;4CACApB,MAAAgB;4CACAf,MAAAgB;4CACAf,MAAAgB;;wCAEAH,QAAAtxB,KAAA0c,MAAA8T,KAAAD;wCACA1B,GAAAjR,WAAA0T,QAAA9b;wCACA,IAAA8b,OAAA;4CACAK,MAAA3xB,KAAA2xB,KAAAL;4CACAM,MAAA5xB,KAAA4xB,KAAAN;4CACAf,YAAAoB,MAAAhB,MAAAiB;4CACAJ,KAAAhB,MAAAmB,MAAAf,MAAAgB;4CACAhB,MAAAJ,OAAAoB,MAAAhB,MAAAe;4CACAd,MAAAJ,OAAAmB,MAAAf,MAAAc;4CACAnB,MAAAgB;;wCAEA,IAAA3C,GAAAnK,aAAA1kB,KAAAqU,IAAAwa,GAAAnK,aAAA1kB,KAAAqU,IAAAwa,GAAAjR,YAAA;4CACAiR,GAAAnK,YAAAmK,GAAAjR,WAAA;4CACAiR,GAAAlK,YAAA,MAAAkK,GAAAlK;;wCAEAkK,GAAAtK,UAAAvkB,KAAA6Y,KAAA0X,YAAAC,aAAAX,MAAA,UAAAA;wCACAhB,GAAArK,UAAAxkB,KAAA6Y,KAAA+X,YAAAI,aAAAnB,MAAA,UAAAA;wCACAhB,GAAAjK,UAAA5kB,KAAA6Y,KAAAgY,YAAAI,aAAApB,MAAA,UAAAA;wCACA,IAAAhB,GAAAnK,aAAAmK,GAAAlK,WAAA;4CACAkK,GAAAvK,QAAA;+CACiC;4CACjCuK,GAAAvK,QAAAqM,OAAAC,MAAA5wB,KAAA0c,MAAAiU,KAAAC,OAAApb,WAAAqZ,GAAAjR,WAAAiR,GAAAvK,SAAA;4CACA,IAAAtkB,KAAAqU,IAAAwa,GAAAvK,SAAA,MAAAtkB,KAAAqU,IAAAwa,GAAAvK,SAAA;gDACA,IAAA+L,MAAA;oDACAxB,GAAAtK,WAAA;oDACAsK,GAAAvK,SAAAuK,GAAAjR,YAAA;oDACAiR,GAAAjR,YAAAiR,GAAAjR,YAAA;uDACyC;oDACzCiR,GAAArK,WAAA;oDACAqK,GAAAvK,SAAAuK,GAAAvK,SAAA;;;;wCAIAuK,GAAA7P,cAAAqS,MAAA,KAAAA,MAAA,KAAAA,aAAA;wCACAxC,GAAApxB,IAAAyzB;wCACArC,GAAAnxB,IAAAyzB;wCACAtC,GAAAlxB,IAAAyzB;wCACA,IAAAvC,GAAAR,KAAA;4CACAQ,GAAApxB,KAAAoxB,GAAAE,WAAAF,GAAAE,UAAAwB,MAAA1B,GAAAG,UAAA2B;4CACA9B,GAAAnxB,KAAAmxB,GAAAG,WAAAH,GAAAG,UAAAwB,MAAA3B,GAAAE,UAAA6B;;2CAE6B,KAAAnM,eAAAyF,UAAAh8B,EAAAsE,UAAAq8B,GAAApxB,MAAAvP,EAAA,MAAA2gC,GAAAnxB,MAAAxP,EAAA,OAAA2gC,GAAAnK,cAAAmK,GAAAlK,WAAA;wCAC7B,IAAA7iB,IAAA5T,EAAAsE,UAAA,GAAAoC,IAAAkN,IAAA5T,EAAA,QAAAO,IAAAP,EAAA,SAAAC,IAAAD,EAAA,SAAAM,IAAAsT,IAAA5T,EAAA;wCACA2gC,GAAApxB,IAAAvP,EAAA;wCACA2gC,GAAAnxB,IAAAxP,EAAA;wCACAq2B,SAAAvkB,KAAA6Y,KAAAjkB,QAAAnG;wCACA+1B,SAAAxkB,KAAA6Y,KAAArqB,QAAAL;wCACAyvB,WAAAhpB,KAAAnG,IAAAuR,KAAA0c,MAAAjuB,GAAAmG,KAAA4gB,WAAAqZ,GAAAjR,YAAA;wCACA0G,QAAAn2B,KAAAK,IAAAwR,KAAA0c,MAAAvuB,GAAAK,KAAAgnB,WAAAoI,WAAAiR,GAAAvK,SAAA;wCACA,IAAAtkB,KAAAqU,IAAAiQ,SAAA,MAAAtkB,KAAAqU,IAAAiQ,SAAA;4CACA,IAAA+L,MAAA;gDACA9L,WAAA;gDACAD,SAAA1G,YAAA;gDACAA,wBAAA;mDACqC;gDACrC4G,WAAA;gDACAF,kBAAA;;;wCAGAuK,GAAAtK;wCACAsK,GAAArK;wCACAqK,GAAAjR;wCACAiR,GAAAvK;wCACA,IAAAG,aAAA;4CACAoK,GAAAnK,YAAAmK,GAAAlK,YAAAkK,GAAAlxB,IAAA;4CACAkxB,GAAA7P,cAAAR;4CACAqQ,GAAAjK,SAAA;;wCAEA,IAAAiK,GAAAR,KAAA;4CACAQ,GAAApxB,KAAAoxB,GAAAE,WAAAF,GAAAE,UAAAn6B,IAAAi6B,GAAAG,UAAA7gC;4CACA0gC,GAAAnxB,KAAAmxB,GAAAG,WAAAH,GAAAE,UAAAtgC,IAAAogC,GAAAG,UAAAxgC;;;oCAGAqgC,GAAAyB;oCACA,KAAA3rB,KAAAkqB,IAAA;wCACA,IAAAA,GAAAlqB,KAAA1E,KAAA,IAAA4uB,GAAAlqB,MAAA1E,KAAA;4CACA4uB,GAAAlqB,KAAA;;;;gCAIA,IAAAyrB,KAAA;oCACAvtB,EAAA6a,eAAAmR;oCACA,IAAAA,GAAAR,KAAA;wCACA,IAAAX,wBAAA7qB,EAAA1L,MAAAitB,iBAAA;4CACA5iB,UAAA2K,YAAA;gDACA8jB,YAAAptB,EAAA1L,OAAAitB;;+CAEiC,KAAAsJ,wBAAA7qB,EAAAqtB,aAAA;4CACjC1uB,UAAA2K,YAAA;gDACAtJ,EAAAgvB,gBAAA;;;;;gCAKA,OAAAhD;+BACqBiD,uBAAA,SAAA9tB;gCACrB,IAAAnB,IAAAnV,KAAAuK,MAAA85B,OAAAlvB,EAAA+a,WAAAyC,UAAA2R,OAAAD,MAAAlvB,EAAAyhB,QAAAjE,UAAAwP,MAAA,KAAAj7B,KAAAoL,KAAA2xB,IAAAI,OAAAlvB,EAAA0hB,SAAAsL,MAAA,KAAAA,KAAAphC,KAAAuR,KAAA4xB,IAAAG,OAAAlvB,EAAA0hB,SAAAsL,MAAA,KAAAA,KAAA1hC,KAAA6R,KAAA4xB,IAAAI,SAAAnvB,EAAA2hB,SAAAqL,MAAA,KAAAA,KAAArhC,KAAAwR,KAAA2xB,IAAAK,QAAAnvB,EAAA2hB,SAAAqL,MAAA,KAAAA,KAAA14B,QAAAzJ,KAAAmV,EAAA1L,OAAAurB,KAAAh1B,KAAAmV,EAAA+e,cAAAiD,SAAA5f;gCACA,KAAAyd,IAAA;oCACA;;gCAEAzd,MAAAxW;gCACAA,KAAAN;gCACAA,KAAA8W;gCACA4f,UAAAnC,GAAAb;gCACA1qB,MAAA0qB,SAAA;gCACA,IAAA3pB,IAAAxK,KAAAmV,EAAA+iB,aAAAztB,IAAAzK,KAAAmV,EAAAgjB,cAAAoM,OAAAvP,GAAAnlB,aAAA,YAAArP,IAAA,kDAAA0G,IAAA,WAAAnG,IAAA,WAAAN,IAAA,WAAAK,GAAA63B,KAAAxjB,EAAApF,IAAAvF,IAAA2K,EAAAqvB,WAAA,KAAA5L,KAAAzjB,EAAAnF,IAAAvF,IAAA0K,EAAAsvB,WAAA,KAAAC,IAAAC;gCACA,IAAAxvB,EAAAwjB,MAAA;oCACA+L,MAAAvvB,EAAAojB,MAAA/tB,IAAA2K,EAAAwjB,KAAA,MAAAxjB,EAAAwjB,MAAAnuB,IAAA;oCACAm6B,MAAAxvB,EAAAqjB,MAAA/tB,IAAA0K,EAAAyjB,KAAA,MAAAzjB,EAAAyjB,MAAAnuB,IAAA;oCACAkuB,MAAA+L,WAAAx9B,IAAAy9B,KAAA5jC;oCACA63B,MAAA+L,MAAAD,KAAAjkC,IAAAkkC,KAAA7jC;;gCAEA,KAAAyjC,MAAA;oCACA/jC,KAAA;uCACyB;oCACzBkkC,KAAAl6B,IAAA;oCACAm6B,KAAAl6B,IAAA;oCACAjK,KAAA,WAAAkkC,WAAAx9B,IAAAy9B,KAAA5jC,KAAA43B,MAAA,WAAAgM,MAAAD,KAAAjkC,IAAAkkC,KAAA7jC,KAAA83B,MAAA;;gCAEA,IAAAzB,QAAA3xB,QAAA;oCACAiE,MAAA0qB,SAAAgD,QAAA9B,QAAA7C,iBAAAhyB;uCACyB;oCACzBiJ,MAAA0qB,SAAA3zB,IAAA,MAAA22B;;gCAEA,IAAA7gB,MAAA,KAAAA,MAAA,OAAApP,MAAA,OAAAnG,MAAA,OAAAN,MAAA,OAAAK,MAAA,QAAAyjC,QAAA/jC,EAAAgF,QAAA,2BAAAqsB,YAAAkC,KAAAoD,YAAA/J,WAAAyG,OAAAC,QAAA,SAAAqD,QAAA3xB,QAAA,eAAA2xB,QAAA3xB,QAAA;oCACAiE,MAAA06B,gBAAA;;gCAEA,KAAAI,MAAA;oCACA,IAAAK,OAAAlR,UAAA,YAAAmR,MAAAnV,MAAAwJ;oCACAwL,KAAAvvB,EAAA2vB,aAAA;oCACAH,KAAAxvB,EAAA4vB,aAAA;oCACA5vB,EAAA2vB,YAAAxyB,KAAAqD,OAAAnL,MAAAtD,IAAA,KAAAA,SAAAsD,KAAAzJ,IAAA,KAAAA,SAAA0J,MAAA,IAAAkuB;oCACAxjB,EAAA4vB,YAAAzyB,KAAAqD,OAAAlL,MAAA3J,IAAA,KAAAA,SAAA2J,KAAAhK,IAAA,KAAAA,SAAA+J,MAAA,IAAAouB;oCACA,KAAA3hB,IAAA,GAAuCA,IAAA,GAAOA,KAAA;wCAC9CyY,OAAAmI,SAAA5gB;wCACA4tB,OAAA7P,GAAAtF;wCACAnY,MAAAstB,KAAAr/B,QAAA,eAAA4nB,WAAAyX,QAAAvP,iBAAAt1B,KAAAmV,GAAAua,MAAAtC,WAAAyX,YAAAxP,QAAAzD,YAAA;wCACA,IAAAra,QAAApC,EAAAua,OAAA;4CACAwJ,MAAAjiB,IAAA,KAAA9B,EAAA2vB,aAAA3vB,EAAA4vB;+CACiC;4CACjC7L,MAAAjiB,IAAA,IAAAytB,KAAAvvB,EAAA2vB,YAAAH,KAAAxvB,EAAA4vB;;wCAEAt7B,MAAAimB,SAAAva,EAAAua,QAAApd,KAAAqD,MAAA4B,MAAA2hB,OAAAjiB,MAAA,KAAAA,MAAA,QAAA2tB,UAAA;;;+BAGqBI,qBAAA3sB,WAAA4sB,sBAAA5sB,WAAA6sB,oBAAA,SAAA5uB;gCACrB,IAAAnB,IAAAnV,KAAAuK,MAAAd,QAAAzJ,KAAAmV,EAAA1L,OAAAm6B,QAAAzuB,EAAA+a,UAAA8G,YAAA7hB,EAAA6hB,WAAAC,YAAA9hB,EAAA8hB,WAAAkO,KAAAhwB,EAAA0hB,QAAAuO,KAAAjwB,EAAA2hB,QAAAuO,KAAAlwB,EAAA+hB,QAAAnnB,IAAAoF,EAAApF,GAAAC,IAAAmF,EAAAnF,GAAAC,IAAAkF,EAAAlF,GAAAq1B,QAAAnwB,EAAAwrB,KAAArP,cAAAnc,EAAAmc,aAAAsO,UAAAzqB,EAAAyqB,SAAAiD,KAAAI,KAAAI,KAAAP,KAAAI,KAAAI,KAAAP,KAAAI,KAAAI,KAAAP,KAAAI,KAAAO,KAAAf,SAAArwB,KAAA0xB,KAAAC,KAAAL,IAAAC,IAAA/G,WAAAwI,OAAAC,MAAAlB,MAAAnC;gCACA,MAAA7rB,MAAA,KAAAA,MAAA,MAAAspB,YAAA,WAAA5/B,KAAAsf,MAAA9E,eAAAxa,KAAAsf,MAAAnE,mBAAAnb,KAAAsf,MAAA9E,gBAAAolB,aAAA3vB,MAAAqhB,gBAAA2F,cAAAD,aAAAqO,OAAA,KAAArF,wBAAAsF,UAAAvO,aAAA;oCACA,IAAA6M,SAAAzuB,EAAAyhB,SAAA0O,OAAA;wCACA1B,SAAAjR;wCACA2R,OAAAnvB,EAAAyhB,QAAAjE;wCACAwP,MAAA;wCACAU,MAAAvwB,KAAA2xB,IAAAL,SAAAuB;wCACArC,MAAAxwB,KAAA4xB,IAAAN,SAAAuB;wCACAlC,MAAA3wB,KAAA4xB,IAAAN,QAAAU,SAAAc;wCACAlC,MAAA5wB,KAAA2xB,IAAAL,QAAAU,QAAAc;wCACA,IAAAd,QAAAnvB,EAAAswB,aAAA;4CACA5B,KAAAvxB,KAAAozB,IAAApB;4CACAT,KAAAvxB,KAAA6Y,KAAA,IAAA0Y;4CACAZ,OAAAY;4CACAX,OAAAW;4CACA,IAAA1uB,EAAAwwB,OAAA;gDACA9C,OAAAgB;gDACAf,OAAAe;;;wCAGA,IAAAyB,OAAA;4CACAv1B,KAAAoF,EAAAksB,WAAAlsB,EAAAksB,UAAAwB,MAAA1tB,EAAAmsB,UAAA2B,OAAA9tB,EAAA0sB;4CACA7xB,KAAAmF,EAAAmsB,WAAAnsB,EAAAksB,UAAAyB,MAAA3tB,EAAAmsB,UAAA4B,OAAA/tB,EAAA2sB;4CACA,IAAA9B,yBAAA7qB,EAAAqvB,YAAArvB,EAAAsvB,WAAA;gDACAlyB,MAAAvS,KAAAmV,EAAA6iB;gDACAjoB,KAAAoF,EAAAqvB,WAAA,MAAAjyB,IAAArQ;gDACA8N,KAAAmF,EAAAsvB,WAAA,MAAAlyB,IAAApQ;;4CAEAoQ,MAAA;4CACA,IAAAxC,IAAAwC,KAAA,IAAAxC,KAAAwC,KAAA;gDACAxC,IAAA;;4CAEA,IAAAC,IAAAuC,KAAA,IAAAvC,KAAAuC,KAAA;gDACAvC,IAAA;;;wCAGA+sB,aAAA8F,MAAAV,MAAA,KAAAA,MAAA,OAAAW,MAAAX,MAAA,KAAAA,MAAA,OAAAc,MAAAd,MAAA,KAAAA,MAAA,OAAAe,MAAAf,MAAA,KAAAA,MAAA,MAAApyB,IAAA,MAAAC,IAAA;wCACA,IAAAs1B,SAAAtF,sBAAA;4CACAhgC,KAAAmV,EAAA4sB,aAAA,yBAAAhF;+CACiC;4CACjCtzB,MAAAitB,mBAAAvhB,EAAAqvB,YAAArvB,EAAAsvB,WAAA,eAAAtvB,EAAAqvB,WAAA,OAAArvB,EAAAsvB,WAAA,4BAAA1H;;2CAE6B;wCAC7BtzB,MAAAitB,mBAAAvhB,EAAAqvB,YAAArvB,EAAAsvB,WAAA,eAAAtvB,EAAAqvB,WAAA,OAAArvB,EAAAsvB,WAAA,4BAAAU,KAAA,UAAAC,KAAA,MAAAr1B,IAAA,MAAAC,IAAA;;oCAEA;;gCAEA,IAAAwjB,YAAA;oCACAjhB,MAAA;oCACA,IAAA4yB,KAAA5yB,OAAA4yB,MAAA5yB,KAAA;wCACA4yB,KAAAE,KAAA;;oCAEA,IAAAD,KAAA7yB,OAAA6yB,MAAA7yB,KAAA;wCACA6yB,KAAAC,KAAA;;oCAEA,IAAA/T,gBAAAnc,EAAAlF,MAAAkF,EAAA6hB,cAAA7hB,EAAA8hB,WAAA;wCACA3F,cAAA;;;gCAGA,IAAAsS,SAAAzuB,EAAAyhB,OAAA;oCACAgN,SAAAjR;oCACAsR,MAAApB,MAAAvwB,KAAA2xB,IAAAL;oCACAM,MAAApB,MAAAxwB,KAAA4xB,IAAAN;oCACA,IAAAzuB,EAAAyhB,OAAA;wCACAgN,SAAAzuB,EAAAyhB,QAAAjE;wCACAsR,MAAA3xB,KAAA2xB,IAAAL;wCACAM,MAAA5xB,KAAA4xB,IAAAN;wCACA,IAAAzuB,EAAAswB,aAAA;4CACA5B,KAAAvxB,KAAAozB,IAAAvwB,EAAAyhB,QAAAjE;4CACAkR,KAAAvxB,KAAA6Y,KAAA,IAAA0Y;4CACAI,OAAAJ;4CACAK,OAAAL;4CACA,IAAA1uB,EAAAwwB,OAAA;gDACA9C,OAAAgB;gDACAf,OAAAe;;;;oCAIAZ,OAAAiB;oCACAhB,MAAAe;uCACyB,KAAAhN,cAAAD,aAAAqO,OAAA,MAAA/T,gBAAAgU,OAAA;oCACzB77B,MAAAitB,mBAAAvhB,EAAAqvB,YAAArvB,EAAAsvB,WAAA,eAAAtvB,EAAAqvB,WAAA,OAAArvB,EAAAsvB,WAAA,sCAAA10B,IAAA,QAAAC,IAAA,QAAAC,IAAA,SAAAk1B,OAAA,KAAAC,OAAA,gBAAAD,KAAA,MAAAC,KAAA;oCACA;uCACyB;oCACzBvC,MAAAK,MAAA;oCACAD,MAAAH,MAAA;;gCAEAS,MAAA;gCACAF,MAAAC,MAAAP,MAAAI,MAAAH,MAAAI,MAAA;gCACAO,MAAArS,eAAA,IAAAA,cAAA;gCACAsR,UAAAztB,EAAAytB;gCACArwB,MAAA;gCACAgzB,QAAA;gCACAC,OAAA;gCACA5B,QAAA3M,YAAAtE;gCACA,IAAAiR,OAAA;oCACAK,MAAA3xB,KAAA2xB,IAAAL;oCACAM,MAAA5xB,KAAA4xB,IAAAN;oCACAb,OAAAmB;oCACAlB,MAAAW,OAAAO;oCACAb,MAAAR,MAAAqB;oCACAZ,MAAAR,MAAAoB;oCACAX,MAAAU;oCACAN,OAAAM;oCACApB,OAAAoB;oCACAnB,OAAAmB;;gCAEAL,QAAA5M,YAAArE;gCACA,IAAAiR,OAAA;oCACAK,MAAA3xB,KAAA2xB,IAAAL;oCACAM,MAAA5xB,KAAA4xB,IAAAN;oCACAC,KAAAZ,MAAAgB,MAAAZ,MAAAa;oCACAJ,KAAAZ,MAAAe,MAAAX,MAAAY;oCACAf,MAAAI,MAAAW;oCACAd,MAAAO,MAAAO;oCACAb,MAAAJ,OAAAiB,MAAAb,MAAAY;oCACAX,MAAAJ,OAAAgB,MAAAZ,MAAAW;oCACAV,YAAAU;oCACAN,YAAAM;oCACAhB,MAAAY;oCACAX,MAAAY;;gCAEA,IAAAuB,OAAA;oCACAhC,OAAAgC;oCACA/B,OAAA+B;oCACA9B,OAAA8B;oCACA1B,OAAA0B;;gCAEA,IAAAD,OAAA;oCACAnC,OAAAmC;oCACAlC,OAAAkC;oCACAjC,OAAAiC;oCACAhC,OAAAgC;;gCAEA,IAAAD,OAAA;oCACAtC,OAAAsC;oCACArC,OAAAqC;oCACApC,OAAAoC;oCACAnC,OAAAmC;;gCAEA,IAAAvC,WAAA0C,OAAA;oCACA,IAAA1C,SAAA;wCACA7yB,KAAAszB,OAAAT;wCACA5yB,KAAAszB,OAAAV;wCACA3yB,KAAAszB,OAAAX;;oCAEA,IAAA0C,OAAA;wCACAv1B,KAAAoF,EAAAksB,WAAAlsB,EAAAksB,UAAAwB,MAAA1tB,EAAAmsB,UAAA2B,OAAA9tB,EAAA0sB;wCACA7xB,KAAAmF,EAAAmsB,WAAAnsB,EAAAksB,UAAAyB,MAAA3tB,EAAAmsB,UAAA4B,OAAA/tB,EAAA2sB;;oCAEA,IAAA/xB,IAAAwC,OAAAxC,KAAAwC,KAAA;wCACAxC,IAAAy1B;;oCAEA,IAAAx1B,IAAAuC,OAAAvC,KAAAuC,KAAA;wCACAvC,IAAAw1B;;oCAEA,IAAAv1B,IAAAsC,OAAAtC,KAAAsC,KAAA;wCACAtC,IAAA;;;gCAGA8sB,YAAA5nB,EAAAqvB,YAAArvB,EAAAsvB,WAAA,eAAAtvB,EAAAqvB,WAAA,OAAArvB,EAAAsvB,WAAA;gCACA1H,cAAA8F,MAAAtwB,OAAAswB,OAAAtwB,MAAAizB,OAAA3C,OAAA0C,SAAAzC,MAAAvwB,OAAAuwB,OAAAvwB,MAAAizB,OAAA1C,OAAAyC,SAAAxC,MAAAxwB,OAAAwwB,OAAAxwB,MAAAizB,OAAAzC;gCACAhG,aAAAwI,SAAAvC,MAAAzwB,OAAAywB,OAAAzwB,MAAAizB,OAAAxC,OAAAuC,SAAAtC,MAAA1wB,OAAA0wB,OAAA1wB,MAAAizB,OAAAvC,OAAAsC,SAAArC,MAAA3wB,OAAA2wB,OAAA3wB,MAAAizB,OAAAtC;gCACA,IAAAlM,aAAAC,aAAAoO,OAAA;oCACAtI,aAAAwI,SAAApC,MAAA5wB,OAAA4wB,OAAA5wB,MAAAizB,OAAArC,OAAAoC,SAAAnC,MAAA7wB,OAAA6wB,OAAA7wB,MAAAizB,OAAApC,OAAAmC,SAAAlC,MAAA9wB,OAAA8wB,OAAA9wB,MAAAizB,OAAAnC;oCACAtG,aAAAwI,SAAAjC,MAAA/wB,OAAA+wB,OAAA/wB,MAAAizB,OAAAlC,OAAAiC,SAAAhC,MAAAhxB,OAAAgxB,OAAAhxB,MAAAizB,OAAAjC,OAAAgC,SAAA5B,MAAApxB,OAAAoxB,OAAApxB,MAAAizB,OAAA7B,OAAA4B;uCACyB;oCACzBxI,aAAA;;gCAEAA,aAAAhtB,IAAAw1B,QAAAv1B,IAAAu1B,QAAAt1B,IAAAs1B,SAAAjU,cAAA,KAAArhB,IAAAqhB,cAAA;gCACA7nB,MAAAitB,kBAAAqG;;4BAEAr8B,IAAAi/B,UAAAz+B;4BACAR,EAAAqP,IAAArP,EAAAsP,IAAAtP,EAAAuP,IAAAvP,EAAAk2B,QAAAl2B,EAAAilC,QAAAjlC,EAAAwvB,WAAAxvB,EAAAs2B,YAAAt2B,EAAAu2B,YAAAv2B,EAAAkiC,UAAAliC,EAAA8jC,WAAA9jC,EAAA+jC,WAAA/jC,EAAAmhC,UAAAnhC,EAAAohC,UAAA;4BACAphC,EAAAm2B,SAAAn2B,EAAAo2B,SAAAp2B,EAAAw2B,SAAA;4BACA1H,4BAAA;gCACAC,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;oCACA,IAAAwY,KAAAiW,yBAAAzuB,MAAA;wCACA,OAAAwD;;oCAEAgV,KAAAiW,uBAAAzuB;oCACA,IAAA0uB,sBAAA1wB,EAAA6a,cAAAvmB,QAAA0L,EAAA1L,OAAA8I,MAAA,MAAA0E,IAAAwoB,gBAAA36B,QAAAwR,IAAAa,MAAA2uB,mBAA0JC,wBAAA,mBAAAhc,KAAA4M,cAAAxhB,GAAAyb,KAAA,MAAAzZ,KAAA6uB,iBAAAhc,IAAA9L,MAAA+nB,MAAAC,OAAAC,WAAAC,IAAAr2B,GAAAC,GAAAq2B;oCAC1J1W,KAAAG,aAAA/F;oCACA,WAAAzT,EAAAymB,cAAA,YAAArG,gBAAA;wCACAxY,OAAA8U,SAAAvpB;wCACAyU,KAAAwY,kBAAApgB,EAAAymB;wCACA7e,KAAArS,UAAA;wCACAqS,KAAArO,WAAA;wCACAgjB,KAAAmD,KAAAtqB,YAAAsnB;wCACAhJ,KAAA2M,cAAA3D,UAAA;wCACA,IAAAjJ,GAAA4W,KAAA;4CACA5wB,IAAAga,GAAAsX;4CACArxB,IAAA+Z,GAAAuX;4CACAtX,GAAAja,KAAAga,GAAA8X;4CACA7X,GAAAha,KAAA+Z,GAAA+X;4CACA,IAAAxrB,EAAAgwB,mBAAAhwB,EAAAiwB,WAAA;gDACAN;gDACApF,gBAAA1rB,GAAAijB,eAAA9hB,EAAAgwB,kBAAAL,MAAA3vB,EAAAiwB,WAAAjwB,EAAA2qB,cAAA;gDACAlxB,IAAAk2B,KAAA5E;gDACArxB,IAAAi2B,KAAA3E;gDACAtX,GAAAja,KAAAk2B,KAAApE,UAAA9X,GAAA8X;gDACA7X,GAAAha,KAAAi2B,KAAAnE,UAAA/X,GAAA+X;;4CAEA,IAAA/xB,KAAAC,GAAA;gDACAq2B,SAAAjF,WAAApO,UAAA;gDACAhJ,GAAAja,cAAAs2B,OAAA,KAAAr2B,IAAAq2B,OAAA;gDACArc,GAAAha,UAAAD,IAAAs2B,OAAA,KAAAr2B,IAAAq2B,OAAA;;;wCAGAxT,KAAAmD,KAAAE,YAAAlD;wCACA,KAAAhJ,GAAAsH,aAAA;4CACAtH,GAAAsH,cAAAvH,GAAAuH;;wCAEA,IAAAhb,EAAAkuB,YAAA;4CACAxa,GAAAwa,WAAA1L,UAAAxiB,EAAAkuB,UAAAza,GAAAya;;wCAEA,IAAAluB,EAAAmuB,YAAA;4CACAza,GAAAya,WAAA3L,UAAAxiB,EAAAmuB,UAAA1a,GAAA0a;;2CAE6B,WAAAnuB,MAAA;wCAC7B0T;4CACA6M,QAAAiC,UAAAxiB,EAAAugB,UAAA,OAAAvgB,EAAAugB,SAAAvgB,EAAAkwB,OAAAzc,GAAA8M;4CACAC,QAAAgC,UAAAxiB,EAAAwgB,UAAA,OAAAxgB,EAAAwgB,SAAAxgB,EAAAkwB,OAAAzc,GAAA+M;4CACAI,QAAA4B,UAAAxiB,EAAA4gB,QAAAnN,GAAAmN;4CACAnnB,GAAA+oB,UAAAxiB,EAAAvG,GAAAga,GAAAha;4CACAC,GAAA8oB,UAAAxiB,EAAAtG,GAAA+Z,GAAA/Z;4CACAC,GAAA6oB,UAAAxiB,EAAArG,GAAA8Z,GAAA9Z;4CACAu0B,UAAA1L,UAAAxiB,EAAAkuB,UAAAza,GAAAya;4CACAC,UAAA3L,UAAAxiB,EAAAmuB,UAAA1a,GAAA0a;4CACAnT,aAAAwH,UAAAxiB,EAAAmwB,sBAAA1c,GAAAuH;;wCAEA8U,KAAA9vB,EAAAowB;wCACA,IAAAN,MAAA;4CACA,WAAAA,OAAA;gDACA,KAAAloB,QAAAkoB,IAAA;oDACA9vB,EAAA4H,QAAAkoB,GAAAloB;;mDAEqC;gDACrC5H,EAAA4Z,WAAAkW;;;wCAGA,WAAA9vB,EAAAvG,MAAA,YAAAuG,EAAAvG,EAAAvK,QAAA;4CACAwkB,GAAAja,IAAA;4CACAia,GAAAwa,WAAA1L,UAAAxiB,EAAAvG,GAAAga,GAAAya;;wCAEA,WAAAluB,EAAAtG,MAAA,YAAAsG,EAAAtG,EAAAxK,QAAA;4CACAwkB,GAAAha,IAAA;4CACAga,GAAAya,WAAA3L,UAAAxiB,EAAAtG,GAAA+Z,GAAA0a;;wCAEAza,GAAAkG,WAAA6I,YAAA,cAAAziB,MAAA4Z,WAAA,mBAAA5Z,MAAAqwB,gBAAA,0BAAArwB,MAAAswB,YAAA7c,GAAAmG,WAAAnG,GAAA4b,OAAA5b,GAAAmG,WAAAnG,GAAA4b,OAAA,YAAAG;wCACA,IAAA/O,aAAA;4CACA/M,GAAAgN,YAAA+B,YAAA,eAAAziB,MAAA0gB,YAAA,oBAAA1gB,MAAAuwB,iBAAA,WAAA9c,GAAAiN,aAAA,GAAAjN,GAAAiN,WAAA,aAAA8O;4CACA9b,GAAAiN,YAAA8B,YAAA,eAAAziB,MAAA2gB,YAAA,oBAAA3gB,MAAAwwB,iBAAA,WAAA/c,GAAAkN,aAAA,GAAAlN,GAAAkN,WAAA,aAAA6O;;wCAEA9b,GAAA4M,QAAAmC,YAAAziB,EAAAsgB,OAAA7M,GAAA6M,QAAA7M,GAAA4b;wCACA,IAAA3b,GAAA2b,QAAA5M,YAAAziB,EAAAqvB,OAAA5b,GAAA4b,QAAA;4CACA3b,GAAA4M,SAAA5M,GAAA2b;4CACA3b,GAAAkG,YAAAlG,GAAA2b;;;oCAGA,IAAA5O,eAAAzgB,EAAAspB,WAAA;wCACA7V,GAAA6V,UAAAtpB,EAAAspB;wCACAuG,YAAA;;oCAEApc,GAAA0b,WAAAnvB,EAAAmvB,YAAA1b,GAAA0b,YAAArW,UAAA2B;oCACAmV,QAAAnc,GAAA6V,WAAA7V,GAAA9Z,KAAA8Z,GAAAiN,aAAAjN,GAAAkN,aAAAjN,GAAA/Z,KAAA+Z,GAAAgN,aAAAhN,GAAAiN,aAAAjN,GAAAsH;oCACA,KAAA4U,SAAA5vB,EAAAkwB,SAAA;wCACAxc,GAAAkN,SAAA;;oCAEA,SAAAjgB,KAAA;wCACAvW,IAAA++B,gBAAAxoB;wCACAgvB,OAAAjc,GAAAtpB,KAAAqpB,GAAArpB;wCACA,IAAAulC,OAAA1zB,OAAA0zB,QAAA1zB,OAAA+D,EAAA5V,MAAA,QAAAkyB,SAAAlyB,MAAA;4CACAylC,YAAA;4CACAxrB,KAAA,IAAA4U,aAAAxF,IAAArpB,GAAAqpB,GAAArpB,IAAAulC,MAAAtrB;4CACA,IAAAja,KAAAolC,cAAA;gDACAnrB,GAAA1L,IAAA62B,aAAAplC;;4CAEAia,GAAA+hB,MAAA;4CACA/hB,GAAAyR;4CACAuD,KAAAxC,gBAAAhoB,KAAAwV,GAAA9E;;;oCAGAowB,OAAA3vB,EAAAgwB;oCACA,IAAAvc,GAAA4W,QAAAsF,QAAA3vB,EAAAiwB,YAAA;wCACAx2B,IAAAga,GAAA8X;wCACA7xB,IAAA+Z,GAAA+X;wCACAjB,gBAAA1rB,GAAAijB,eAAA6N,OAAAjc,IAAA1T,EAAAiwB,WAAAjwB,EAAA2qB;wCACAtmB,KAAA0iB,yBAAAtT,IAAA,YAAA8b,sBAAA9b,KAAAC,IAAAqX,SAAArX,GAAAqX,SAAA1mB,IAAAorB;wCACAprB,KAAA0iB,yBAAAtT,IAAA,YAAA8b,sBAAA9b,KAAAC,IAAAsX,SAAAtX,GAAAsX,SAAA3mB,IAAAorB;wCACA,IAAAh2B,MAAAga,GAAA8X,WAAA7xB,MAAA+Z,GAAA+X,SAAA;4CACAnnB,KAAA0iB,yBAAAtT,IAAA,WAAA8b,sBAAA91B,IAAAga,GAAA8X,SAAA9X,GAAA8X,SAAAlnB,IAAAorB;4CACAprB,KAAA0iB,yBAAAtT,IAAA,WAAA8b,sBAAA71B,IAAA+Z,GAAA+X,SAAA/X,GAAA+X,SAAAnnB,IAAAorB;;wCAEAE,OAAAjG,uBAAA;;oCAEA,IAAAiG,QAAAlP,eAAAmP,SAAAnc,GAAA6Y,SAAA;wCACA,IAAAlM,gBAAA;4CACAyP,YAAA;4CACAzlC,IAAAg/B;4CACAuG,gBAAAnR,UAAA3f,GAAAzU,GAAAkwB,KAAA;4CACAjW,KAAA,IAAA4U,aAAA9lB,OAAA/I,GAAA,MAAAia,KAAA,GAAAorB;4CACAprB,GAAA5Z,IAAA0I,MAAA/I;4CACAia,GAAAyR;4CACA,IAAA2K,aAAA;gDACA7Y,OAAA6L,GAAA6Y;gDACAqD,YAAA3N,MAAA;gDACAvO,GAAA6Y,WAAAqD,KAAAnhC,SAAA,OAAAoZ,SAAA,KAAA+nB,KAAA,gBAAA7Y,WAAA6Y,KAAA,MAAA/nB,SAAA;gDACAvD,GAAA+hB,MAAA/hB,GAAA1L,IAAAg3B,KAAA,YAAAA,KAAA;gDACAtrB,KAAA,IAAA4U,aAAAxF,IAAA,iBAAApP,KAAA,GAAAA,GAAA9E;gDACA8E,GAAA5Z,IAAAmd;gDACAvD,GAAA+hB,MAAA/hB,GAAA1L,IAAA8a,GAAA6Y;mDACqC;gDACrCjoB,GAAA+hB,MAAA/hB,GAAA1L,IAAAg3B;;+CAEiC;4CACjC7N,eAAA6N,OAAA,IAAAlc;;;oCAGA,IAAAoc,WAAA;wCACAxW,KAAAoX,mBAAAhd,GAAA4W,OAAAX,0BAAAkG,SAAAlmC,KAAA+mC,mBAAA;;oCAEA,OAAApsB;;gCAEA8jB,QAAA;;4BAEAjP,4BAAA;gCACAmP,cAAA;gCACAF,QAAA;gCACApD,OAAA;gCACAS,OAAA;gCACA8C,SAAA;;4BAEApP,4BAAA;gCACAmP,cAAA;gCACAlP,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACAnd,IAAAjP,KAAA0+B,OAAAzvB;oCACA,IAAA6b,UAAA,sGAAArhB,QAAA0L,EAAA1L,OAAAu9B,KAAA/vB,GAAAgwB,KAAAC,KAAAC,IAAAC,IAAAnJ,IAAAoJ,IAAA78B,GAAAC,GAAA68B,MAAAC,MAAAC,KAAAC,IAAAC,IAAAC;oCACAn9B,IAAA4iB,WAAAjY,EAAA+iB;oCACAztB,IAAA2iB,WAAAjY,EAAAgjB;oCACA6O,MAAA/3B,EAAAqpB,MAAA;oCACA,KAAArhB,IAAA,GAAuCA,IAAA6T,MAAAhmB,QAAkBmS,KAAA;wCACzD,IAAAjX,KAAAU,EAAA8E,QAAA;4CACAslB,MAAA7T,KAAAwd,iBAAA3J,MAAA7T;;wCAEAkwB,KAAAD,MAAApS,UAAA3f,GAAA2V,MAAA7T,IAAA2Z,KAAA;wCACA,IAAAuW,GAAA3hC,QAAA;4CACA0hC,MAAAC,GAAA7O,MAAA;4CACA6O,KAAAD,IAAA;4CACAA,UAAA;;wCAEAE,KAAAH,MAAAD,IAAA/vB;wCACAgnB,KAAA7Q,WAAA+Z;wCACAI,OAAAJ,GAAAhjB,QAAA8Z,KAAA,IAAAn5B;wCACA0iC,MAAAJ,GAAAnjB,OAAA;wCACA,IAAAujB,KAAA;4CACAH,KAAA19B,SAAAy9B,GAAAnjB,OAAA;4CACAmjB,QAAAjjB,OAAA;4CACAkjB,MAAAja,WAAAga;4CACAE,OAAAF,GAAAjjB,QAAAkjB,KAAA,IAAAviC,UAAAuiC,KAAA;+CACiC;4CACjCA,KAAAja,WAAAga;4CACAE,OAAAF,GAAAjjB,QAAAkjB,KAAA,IAAAviC;;wCAEA,IAAAwiC,SAAA;4CACAA,OAAA3W,WAAAjwB,MAAA6mC;;wCAEA,IAAAD,SAAAC,MAAA;4CACAE,KAAAnS,iBAAAngB,GAAA,cAAA8oB,IAAAsJ;4CACAG,KAAApS,iBAAAngB,GAAA,aAAA8oB,IAAAsJ;4CACA,IAAAD,SAAA;gDACAH,KAAAM,KAAAj9B,IAAA;gDACA08B,MAAAQ,KAAAj9B,IAAA;mDACqC,IAAA68B,SAAA;gDACrCK,KAAArS,iBAAAngB,GAAA;gDACAgyB,KAAAM,KAAAE,KAAA;gDACAT,MAAAQ,KAAAC,KAAA;mDACqC;gDACrCR,KAAAM,KAAA;gDACAP,MAAAQ,KAAA;;4CAEA,IAAAF,KAAA;gDACAJ,KAAAha,WAAA+Z,MAAAE,KAAAC;gDACAL,MAAA7Z,WAAA8Z,OAAAG,KAAAC;;;wCAGA3sB,KAAA4iB,cAAA9zB,OAAAqhB,MAAA7T,IAAAkwB,KAAA,MAAAD,KAAAE,KAAA,MAAAH,KAAA,cAAAtsB;;oCAEA,OAAAA;;gCAEA8jB,QAAA;gCACApC,WAAAV,cAAA;;4BAEAnM,4BAAA;gCACAmP,cAAA;gCACAlP,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACA,OAAAmR,cAAApoB,EAAA1L,OAAA/I,GAAAV,KAAA0+B,OAAA5J,UAAA3f,GAAAzU,GAAAkwB,KAAA,oBAAA5wB,KAAA0+B,OAAAzvB,IAAA,cAAA0L;;gCAEA8jB,QAAA;gCACApC,WAAAV,cAAA;;4BAEAnM,4BAAA;gCACAmP,cAAA;gCACAlP,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACA,IAAAwb,KAAA,uBAAA5S,KAAApE,OAAAgE,kBAAAzf,GAAA,OAAAgyB,KAAAnnC,KAAA0+B,QAAA1J,KAAAtB,UAAAsB,GAAAI,iBAAAwS,KAAA,cAAA5S,GAAAI,iBAAAwS,KAAA,QAAA5S,GAAAI,iBAAAwS,MAAAzyB,EAAA+e,aAAA2T,sBAAA,MAAA1yB,EAAA+e,aAAA4T,wBAAA,QAAAV,KAAApnC,KAAA0+B,OAAAzvB,IAAAsZ,IAAAmV,IAAAzmB,GAAA8wB,KAAAC,SAAAC;oCACA,IAAAd,GAAA3hC,QAAA,iBAAA4hC,GAAA5hC,QAAA,gBAAA4hC,GAAA9O,MAAA,KAAAxzB,SAAA;wCACAmjC,MAAAnT,UAAA3f,GAAA,mBAAAkgB,QAAAlD,SAAA;wCACA,IAAA8V,eAAA;4CACA1f,KAAA4e,GAAA7O,MAAA;4CACAoF,KAAA0J,GAAA9O,MAAA;4CACArF,SAAA8O,aAAA,OAAAkG;4CACAhxB,IAAA;4CACA,SAAAA,KAAA;gDACAkwB,KAAA5e,GAAAtR;gDACA8wB,MAAAZ,GAAA3hC,QAAA;gDACA,IAAAuiC,SAAArK,GAAAzmB,GAAAzR,QAAA;oDACAwiC,UAAA/wB,MAAA,IAAA9B,EAAA+iB,cAAAjF,SAAA/wB,QAAAiT,EAAAgjB,eAAAlF,SAAA9wB;oDACAomB,GAAAtR,KAAA8wB,MAAA3a,WAAA+Z,MAAA,MAAAa,UAAA,OAAA5a,WAAA+Z,MAAAa,UAAA;;;4CAGAb,KAAA5e,GAAA/G,KAAA;;;oCAGA,OAAAxhB,KAAAw9B,aAAAroB,EAAA1L,OAAA09B,IAAAC,IAAAzsB,IAAAyR;;gCAEAiQ,WAAAjE;;4BAEA5I,4BAAA;gCACAmP,cAAA;gCACAtC,WAAAjE;;4BAEA5I,4BAAA;gCACAmP,cAAA;gCACAF,QAAA;;4BAEAjP,4BAAA;gCACAmP,cAAA;gCACAF,QAAA;;4BAEAjP,4BAAA;gCACAiP,QAAA;;4BAEAjP,4BAAA;gCACAiP,QAAA;;4BAEAjP,4BAAA;gCACAiP,QAAA;;4BAEAjP,4BAAA;gCACAC,QAAA8M,eAAA;;4BAEA/M,4BAAA;gCACAC,QAAA8M,eAAA;;4BAEA/M,4BAAA;gCACAmP,cAAA;gCACAlP,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACA,IAAArrB,GAAAi0B,IAAAkH;oCACA,IAAAxI,UAAA;wCACAsB,KAAA7f,EAAA+e;wCACAgI,QAAAxI,UAAA;wCACA3yB,IAAA,UAAAi0B,GAAAkT,UAAAhM,QAAAlH,GAAAmT,YAAAjM,QAAAlH,GAAAoT,aAAAlM,QAAAlH,GAAAqT,WAAA;wCACAp5B,IAAAjP,KAAA0+B,OAAAzvB,GAAAqpB,MAAA,KAAA9W,KAAA0a;2CAC6B;wCAC7Bn7B,IAAAf,KAAA0+B,OAAA5J,UAAA3f,GAAAnV,KAAAU,GAAAkwB,KAAA,OAAA5wB,KAAAk1B;wCACAjmB,IAAAjP,KAAA0+B,OAAAzvB;;oCAEA,OAAAjP,KAAAw9B,aAAAroB,EAAA1L,OAAA1I,GAAAkO,GAAA0L,IAAAyR;;;4BAGAoD,4BAAA;gCACAmP,cAAA;gCACAtD,OAAA;gCACAS,OAAA;;4BAEAtM,4BAAA;gCACAC,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV;oCACA,OAAAA;;;4BAGA6U,4BAAA;gCACAmP,cAAA;gCACAlP,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACA,IAAAkc,KAAAxT,UAAA3f,GAAA,kBAAAyb,KAAA,eAAA5jB,MAAAhN,KAAA0+B,OAAAzvB,GAAAqpB,MAAA,MAAAgP,OAAAt6B,IAAA,GAAAqoB,QAAAzD,YAAA;oCACA,IAAA0V,SAAA;wCACAgB,KAAAlb,WAAAkb,MAAAhT,iBAAAngB,GAAA,qBAAAmyB;;oCAEA,OAAAtnC,KAAAw9B,aAAAroB,EAAA1L,OAAAzJ,KAAA0+B,OAAA4J,KAAA,MAAAxT,UAAA3f,GAAA,kBAAAyb,KAAA,wBAAAkE,UAAA3f,GAAA,kBAAAyb,KAAA,iBAAA5jB,IAAAwU,KAAA,MAAA7G,IAAAyR;;gCAEAiP,OAAA;gCACAgB,WAAA,SAAA/lB;oCACA,IAAApP,IAAAoP,EAAAgiB,MAAA;oCACA,OAAApxB,EAAA,YAAAA,EAAA,wBAAAoP,EAAAykB,MAAAG,gBAAA;;;4BAGA1L,4BAAA;gCACAC,QAAA8M,eAAA;;4BAEA/M,4BAAA;gCACAC,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACA,IAAAvR,IAAA1F,EAAA1L,OAAAimB,OAAA,cAAA7U,IAAA;oCACA,WAAA0U,aAAA1U,GAAA6U,MAAA,MAAA/U,KAAA,GAAAja,GAAA,UAAAma,EAAA6U,OAAAzgB;;;4BAGA,IAAAs5B,qBAAA,SAAAjyB;gCACA,IAAAnB,IAAAnV,KAAAmV,GAAAgiB,UAAAhiB,EAAAgf,UAAAW,UAAA90B,KAAAuK,MAAA,iBAAAgN,MAAAvX,KAAA6a,IAAA7a,KAAAS,IAAA6V,IAAA,GAAAkyB;gCACA,IAAAjxB,QAAA;oCACA,IAAA4f,QAAA3xB,QAAA,oBAAA2xB,QAAA3xB,QAAA,sBAAA2xB,QAAA3xB,QAAA;wCACA2P,EAAAgvB,gBAAA;wCACAqE,QAAA1T,UAAA90B,KAAAuK,MAAA;2CAC6B;wCAC7B4K,EAAAgf,SAAAgD,QAAA9B,QAAAtD,iBAAA;wCACAyW,OAAA;;;gCAGA,KAAAA,MAAA;oCACA,IAAAxoC,KAAAyoC,KAAA;wCACAtzB,EAAAgf,SAAAgD,qBAAA,mBAAA5f,MAAA;;oCAEA,IAAA4f,QAAA3xB,QAAA;wCACA,IAAA+R,QAAA,MAAAvX,KAAAyoC,KAAA;4CACAtzB,EAAAgf,SAAAgD,UAAA,oBAAA5f,MAAA;;2CAE6B;wCAC7BpC,EAAAgf,SAAAgD,QAAA9B,QAAAxD,aAAA,aAAAta;;;;4BAIAiY,4BAAA;gCACAmP,cAAA;gCACAlP,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR;oCACA,IAAArrB,IAAAqsB,WAAA0H,UAAA3f,GAAA,WAAAyb,KAAA,cAAAnnB,QAAA0L,EAAA1L,OAAAi/B,cAAAhoC,MAAA;oCACA,WAAAuO,MAAA,YAAAA,EAAAgV,OAAA;wCACAhV,OAAAgV,OAAA,uBAAAmJ,WAAAne,EAAAkV,OAAA,MAAApjB;;oCAEA,IAAA2nC,eAAA3nC,MAAA,KAAA+zB,UAAA3f,GAAA,cAAAyb,SAAA,YAAA3hB,MAAA;wCACAlO,IAAA;;oCAEA,IAAA4yB,kBAAA;wCACAhZ,KAAA,IAAA4U,aAAA9lB,OAAA,WAAA1I,GAAAkO,IAAAlO,GAAA4Z;2CAC6B;wCAC7BA,KAAA,IAAA4U,aAAA9lB,OAAA,WAAA1I,IAAA,MAAAkO,IAAAlO,KAAA,KAAA4Z;wCACAA,GAAA8tB,MAAAC,cAAA;wCACAj/B,MAAAS,OAAA;wCACAyQ,GAAA7S,OAAA;wCACA6S,GAAA5Z,IAAA,mBAAA4Z,GAAAE,IAAA;wCACAF,GAAA1L,IAAA,oBAAA0L,GAAAE,IAAAF,GAAAla,KAAA;wCACAka,GAAApQ,OAAA4K;wCACAwF,GAAAyR;wCACAzR,GAAAkV,WAAA0Y;;oCAEA,IAAAG,aAAA;wCACA/tB,KAAA,IAAA4U,aAAA9lB,OAAA,oBAAAkR,KAAA,mBAAA5Z,MAAA,0BAAAkO,MAAA;wCACA0L,GAAA+hB,MAAA;wCACA/M,KAAAxC,gBAAAhoB,KAAAwV,GAAA9E;wCACA8Z,KAAAxC,gBAAAhoB,KAAAzE;;oCAEA,OAAAia;;;4BAGA,IAAA4nB,cAAA,SAAA1nB,GAAAna;gCACA,IAAAA,GAAA;oCACA,IAAAma,EAAA8tB,gBAAA;wCACA,IAAAjoC,EAAAyjB,OAAA,kBAAAzjB,EAAAyjB,OAAA;4CACAzjB,IAAA,MAAAA;;wCAEAma,EAAA8tB,eAAAjoC,EAAA20B,QAAApD,UAAA,OAAA0C;2CAC6B;wCAC7B9Z,EAAAspB,gBAAAzjC;;;+BAGqBkoC,qBAAA,SAAAtyB;gCACrBtW,KAAAmV,EAAA0zB,aAAA7oC;gCACA,IAAAsW,MAAA,KAAAA,MAAA;oCACAtW,KAAAmV,EAAA4sB,aAAA,SAAAzrB,MAAA,IAAAtW,KAAAe,IAAAf,KAAAiP;oCACA,IAAAwoB,MAAAz3B,KAAAuK,MAAAsQ,IAAA7a,KAAAmV,EAAA1L;oCACA,OAAAguB,KAAA;wCACA,KAAAA,IAAAnhB,GAAA;4CACAisB,YAAA1nB,GAAA4c,IAAA/2B;+CACiC;4CACjCma,EAAA4c,IAAA/2B,KAAA+2B,IAAAnhB;;wCAEAmhB,UAAA3c;;oCAEA,IAAAxE,MAAA,KAAAtW,KAAAmV,EAAA0zB,eAAA7oC,MAAA;wCACAA,KAAAmV,EAAA0zB,aAAA;;uCAEyB,IAAA7oC,KAAAmV,EAAAqtB,aAAA,aAAAxiC,KAAAiP,GAAA;oCACzBjP,KAAAmV,EAAA4sB,aAAA,SAAA/hC,KAAAiP;;;4BAGAugB,4BAAA;gCACAC,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV,IAAAyR,QAAAjV;oCACA,IAAApW,IAAAoU,EAAAqtB,aAAA,gBAAA/tB,UAAAU,EAAA1L,MAAAgL,SAAAq0B,SAAA3B,IAAA4B,MAAAC,YAAAvR;oCACA9c,KAAAgV,KAAAsZ,eAAA,IAAA1Z,aAAApa,GAAAzU,GAAA,MAAAia,IAAA;oCACAA,GAAAkV,WAAA+Y;oCACAjuB,GAAAyiB,MAAA;oCACA1M,eAAA;oCACA/V,GAAA5Z;oCACAomC,KAAA5Q,cAAAphB,GAAAyb;oCACAmY,OAAA5zB,EAAA0zB;oCACA,IAAAE,MAAA;wCACAC;wCACAvR,MAAAsR,KAAAx+B;wCACA,OAAAktB,KAAA;4CACAuR,WAAAvR,IAAA/2B,KAAA;4CACA+2B,UAAA3c;;wCAEAiuB,KAAAlZ,SAAA;;oCAEA1a,EAAA0zB,aAAAluB;oCACAA,GAAA1L,MAAAgV,OAAA,aAAAhV,IAAAlO,EAAAs0B,QAAA,IAAAxB,OAAA,cAAA5kB,EAAAkV,OAAA,2BAAAlV,EAAAgV,OAAA,mBAAAhV,EAAAkV,OAAA;oCACAhP,EAAA4sB,aAAA,SAAApnB,GAAA1L;oCACA65B,UAAA1R,QAAAjiB,GAAAgyB,IAAA5Q,cAAAphB,IAAAgC,MAAA6xB;oCACA7zB,EAAA4sB,aAAA,SAAAhhC;oCACA4Z,GAAApQ,OAAAu+B,QAAAnR;oCACAxiB,EAAA1L,MAAAgL;oCACAkG,QAAA2jB,SAAA3O,KAAA6M,MAAArnB,GAAA2zB,QAAAtR,MAAA7c,IAAAyR;oCACA,OAAAzR;;;4BAGA,IAAAuuB,sBAAA,SAAA5yB;gCACA,IAAAA,MAAA,KAAAA,MAAA,OAAAtW,KAAAuK,KAAAiQ,eAAAxa,KAAAuK,KAAA4Q,kBAAAnb,KAAAuK,cAAA;oCACA,IAAAsQ,IAAA7a,KAAAmV,EAAA1L,OAAA0/B,iBAAAtY,cAAAkM,UAAAP,OAAAt1B,GAAAxG,GAAAuW,GAAAmyB,gBAAArM;oCACA,IAAA/8B,KAAAiP,MAAA;wCACA4L,EAAApG,UAAA;wCACA20B,iBAAA;2CAC6B;wCAC7BliC,IAAAlH,KAAAiP,EAAAqpB,MAAA,KAAA9W,KAAA,IAAA8W,MAAA;wCACArhB,IAAA/P,EAAApC;wCACA,SAAAmS,KAAA;4CACAvW,IAAAwG,EAAA+P;4CACA,IAAA4Z,cAAAnwB,IAAA;gDACA,IAAAmwB,cAAAnwB,GAAA87B,UAAA2M,gBAAA;oDACAC,iBAAA;uDACyC;oDACzC1oC,UAAA,oBAAAg/B,uBAAA7O,cAAAnwB;;;4CAGA6hC,YAAA1nB,GAAAna;;;oCAGA,IAAA0oC,gBAAA;wCACA7G,YAAA1nB,GAAA6b;wCACAqG,YAAA/8B,KAAAmV,EAAA6a;wCACA,IAAA+M,WAAA;4CACA,IAAAA,UAAA4D,KAAA;gDACA3gC,KAAAmV,EAAAgvB,gBAAA;gDACAnkC,KAAAmV,EAAAgvB,gBAAA;;mDAEAnkC,KAAAmV,EAAA6a;;;;;4BAKAR,4BAAA;gCACAC,QAAA,SAAAta,GAAAlG,GAAAvO,GAAAivB,MAAAhV;oCACAA,KAAA,IAAA4U,aAAApa,GAAAzU,GAAA,MAAAia,IAAA;oCACAA,GAAAkV,WAAAqZ;oCACAvuB,GAAA1L;oCACA0L,GAAAyiB,MAAA;oCACAziB,GAAApQ,OAAAolB,KAAAS;oCACAM,eAAA;oCACA,OAAA/V;;;4BAGAja,IAAA,2CAAA43B,MAAA;4BACArhB,IAAAvW,EAAAoE;4BACA,OAAAmS,KAAA;gCACA6nB,oBAAAp+B,EAAAuW;;4BAEAvW,IAAA0uB,UAAAluB;4BACAR,EAAA0Z,WAAA1Z,EAAAklC,uBAAAllC,EAAAovB,aAAA;4BACApvB,EAAAyvB,eAAA,SAAA1Y,QAAAN,MAAAmI;gCACA,KAAA7H,OAAA4xB,UAAA;oCACA;;gCAEArpC,KAAAwsB,UAAA/U;gCACAzX,KAAAowB,SAAA9Q;gCACAtf,KAAAspC,QAAAnyB;gCACAkc,aAAAlc,KAAAwmB;gCACAjN,eAAA;gCACAC,aAAAxZ,KAAA8Z,aAAA7B,UAAA6B;gCACAL,MAAAgE,kBAAAnd,QAAA;gCACA0V,kBAAAntB,KAAAmtB;gCACA,IAAA1jB,QAAAgO,OAAAhO,OAAA6M,GAAAqE,IAAA4uB,KAAAxe,OAAA3H,MAAAX,MAAA+mB,QAAAC,KAAAC;gCACA,IAAApW,eAAA,IAAA7pB,MAAA+/B,WAAA;oCACAlzB,IAAAwe,UAAArd,QAAA,UAAAmZ;oCACA,IAAAta,MAAA,UAAAA,MAAA;wCACAtW,KAAA2pC,YAAAlgC,OAAA;;;gCAGA,WAAA0N,SAAA;oCACA4T,QAAAthB,MAAAgL;oCACA6B,IAAAigB,cAAA9e,QAAAmZ;oCACAnnB,MAAAgL,UAAAsW,QAAA,MAAsD5T;oCACtDb,IAAA8gB,QAAA3f,QAAAnB,GAAAigB,cAAA9e,SAAA+f;oCACA,KAAA7D,oBAAA7B,eAAAiC,KAAA5c,OAAA;wCACAb,EAAA0d,UAAA5G,WAAAyG,OAAAC;;oCAEA3c,OAAAb;oCACA7M,MAAAgL,UAAAsW;;gCAEA,IAAA5T,KAAAyyB,WAAA;oCACA5pC,KAAAoa,WAAAO,KAAAkW,cAAA+Y,UAAApN,MAAA/kB,QAAAN,KAAAyyB,WAAA,aAAA5pC,MAAA,YAAAmX;uCACyB;oCACzBnX,KAAAoa,WAAAO,KAAA3a,KAAAw8B,MAAA/kB,QAAAN,MAAA;;gCAEA,IAAAnX,KAAA+mC,gBAAA;oCACA2C,SAAA1pC,KAAA+mC,mBAAA;oCACA,KAAArQ,gBAAA;wCACAjtB,MAAAS,OAAA;2CAC6B,IAAAqpB,WAAA;wCAC7BD,gBAAA;wCACA,IAAA7pB,MAAA+/B,WAAA;4CACAA,SAAA1U,UAAArd,QAAA,UAAAmZ;4CACA,IAAA4Y,WAAA,UAAAA,WAAA;gDACAxpC,KAAA2pC,YAAAlgC,OAAA;;;wCAGA,IAAAgqB,cAAA;4CACAzzB,KAAA2pC,YAAAlgC,OAAA,4BAAAzJ,KAAAspC,MAAAO,6BAAAH,SAAA;;;oCAGAH,MAAA5uB;oCACA,OAAA4uB,WAAAzuB,OAAA;wCACAyuB,UAAAzuB;;oCAEA2uB,MAAA,IAAAla,aAAA9X,QAAA;oCACAzX,KAAA8pC,UAAAL,KAAA,MAAAF;oCACAE,IAAA5Z,WAAA6G,iBAAAsO,qBAAAZ;oCACAqF,IAAAl/B,OAAAvK,KAAA8vB,cAAA6G,cAAAlf,QAAAmZ,KAAA;oCACA6Y,IAAAnqB;oCACAmqB,IAAArM,MAAA;oCACAjQ,gBAAA4c;;gCAEA,IAAArZ,cAAA;oCACA,OAAA/V,IAAA;wCACA8H,OAAA9H,GAAAG;wCACAyuB,MAAAxe;wCACA,OAAAwe,WAAAnM,KAAAziB,GAAAyiB,IAAA;4CACAmM,UAAAzuB;;wCAEA,IAAAH,GAAAmK,QAAAykB,UAAAzkB,QAAA1B,MAAA;4CACAzI,GAAAmK,MAAAhK,QAAAH;+CACiC;4CACjCoQ,QAAApQ;;wCAEA,IAAAA,GAAAG,QAAAyuB,KAAA;4CACAA,IAAAzkB,QAAAnK;+CACiC;4CACjCyI,OAAAzI;;wCAEAA,KAAA8H;;oCAEAziB,KAAAoa,WAAA2Q;;gCAEA;;4BAEArqB,EAAA87B,QAAA,SAAA/kB,QAAAN,MAAAwD,IAAAyR;gCACA,IAAA3iB,QAAAgO,OAAAhO,OAAA/I,GAAAspC,IAAA/L,IAAAoJ,IAAAF,IAAAC,IAAAG,MAAAD,MAAA2C,OAAAzC;gCACA,KAAA9mC,KAAAyW,MAAA;oCACAiwB,KAAAjwB,KAAAzW;oCACAspC,KAAAnZ,cAAAnwB;oCACA,IAAAspC,IAAA;wCACArvB,KAAAqvB,GAAAxN,MAAA/kB,QAAA2vB,IAAA1mC,GAAAV,MAAA2a,IAAAyR,QAAAjV;2CAC6B;wCAC7BgwB,KAAArS,UAAArd,QAAA/W,GAAAkwB,OAAA;wCACAqZ,eAAA7C,OAAA;wCACA,IAAA1mC,MAAA,WAAAA,MAAA,UAAAA,MAAA,YAAAA,EAAA8E,QAAA,mBAAAykC,SAAAjY,WAAA+B,KAAAqT,KAAA;4CACA,KAAA6C,OAAA;gDACA7C,KAAAzM,YAAAyM;gDACAA,SAAAtiC,SAAA,wBAAAsiC,GAAA5lB,KAAA;;4CAEA7G,KAAA4iB,cAAA9zB,OAAA/I,GAAAymC,IAAAC,IAAA,qBAAAzsB,IAAA,GAAAyR;+CACiC,IAAA6d,SAAAvX,YAAAqB,KAAAqT,KAAA;4CACjCzsB,KAAA4iB,cAAA9zB,OAAA/I,GAAAymC,IAAAC,IAAA,YAAAzsB,IAAA,GAAAyR;+CACiC;4CACjC6R,KAAA7Q,WAAA+Z;4CACAI,OAAAtJ,aAAA,IAAAkJ,GAAAhjB,QAAA8Z,KAAA,IAAAn5B,UAAA;4CACA,IAAAqiC,OAAA,MAAAA,OAAA;gDACA,IAAAzmC,MAAA,WAAAA,MAAA;oDACAu9B,KAAAnG,cAAArgB,QAAA/W,GAAAkwB;oDACA2W,OAAA;uDACyC,IAAA7mC,MAAA,UAAAA,MAAA;oDACzCu9B,KAAA7H,iBAAA3e,QAAA/W,GAAAkwB;oDACA2W,OAAA;uDACyC;oDACzCtJ,KAAAv9B,MAAA;oDACA6mC,OAAA;;;4CAGAC,MAAAyC,SAAA7C,GAAAnjB,OAAA;4CACA,IAAAujB,KAAA;gDACAH,KAAA19B,SAAAy9B,GAAAnjB,OAAA;gDACAmjB,QAAAjjB,OAAA;gDACAkjB,MAAAja,WAAAga;gDACAE,OAAAF,GAAA/R,QAAAzD,YAAA;mDACqC;gDACrCyV,KAAAja,WAAAga;gDACAE,OAAA2C,QAAA7C,GAAA/R,QAAAzD,YAAA;;4CAEA,IAAA0V,SAAA;gDACAA,OAAA5mC,KAAAiwB,wBAAAjwB,KAAA6mC;;4CAEAH,KAAAC,aAAA,KAAAG,MAAAH,KAAApJ,KAAAoJ,MAAAC,OAAAnwB,KAAAzW;4CACA,IAAA6mC,SAAAD,MAAA,IAAAA,SAAA,QAAAD,aAAA,OAAApJ,IAAA;gDACAA,KAAA3I,iBAAA7d,QAAA/W,GAAAu9B,IAAAsJ;gDACA,IAAAD,SAAA;oDACArJ,MAAA3I,iBAAA7d,QAAA/W,GAAA;oDACA,IAAAyW,KAAA+yB,gBAAA;wDACA/C,KAAAlJ,KAAA;;uDAEyC,IAAAqJ,SAAA,QAAAA,SAAA,SAAAA,SAAA,QAAAA,SAAA;oDACzCrJ,MAAA3I,iBAAA7d,QAAA/W,GAAA,GAAA4mC;uDACyC,IAAAA,SAAA;oDACzCD,KAAA/R,iBAAA7d,QAAA/W,GAAA2mC,IAAAC;oDACAA,OAAA;;gDAEA,IAAAE,KAAA,IAAAH,aAAA;oDACAD,KAAAC,KAAApJ,KAAAqJ;;;4CAGA,IAAAE,KAAA;gDACAH,MAAApJ;;4CAEA,KAAAA,aAAA,OAAAoJ,aAAA;gDACA1sB,KAAA,IAAA4U,aAAA9lB,OAAA/I,GAAAu9B,IAAAoJ,KAAApJ,IAAAtjB,IAAA,GAAAja,GAAA2yB,eAAA,UAAAiU,SAAA,QAAA5mC,MAAA,cAAAymC,IAAAC;gDACAzsB,GAAA+hB,MAAA4K;mDACqC,IAAA79B,MAAA/I,OAAAg0B,cAAA0S,YAAA,gBAAAA,MAAA;gDACrChT,KAAA,aAAA1zB,IAAA,mBAAAyW,KAAAzW;mDACqC;gDACrCia,KAAA,IAAA4U,aAAA9lB,OAAA/I,GAAA2mC,MAAApJ,MAAA,MAAAtjB,KAAA,GAAAja,GAAA,UAAAymC,IAAAC;gDACAzsB,GAAA+hB,MAAA0K,OAAA,WAAA1mC,MAAA,aAAAA,EAAA8E,QAAA,mBAAA2hC,KAAAC;;;;oCAIA,IAAAhb,QAAA,IAAAzR,UAAAyR,QAAA;wCACAzR,GAAAyR;;;gCAGA,OAAAzR;;4BAEAja,EAAAmvB,WAAA,SAAAvZ;gCACA,IAAAqE,KAAA3a,KAAAoa,UAAA7H,MAAA,MAAAgF,KAAAklB,KAAAxlB;gCACA,IAAAX,MAAA,MAAAtW,KAAAowB,OAAAtW,UAAA9Z,KAAAowB,OAAA9V,aAAAta,KAAAowB,OAAAtW,UAAA;oCACA,OAAAa,IAAA;wCACA,IAAAA,GAAA7S,SAAA;4CACA,IAAA6S,GAAA7F,KAAA6F,GAAA7S,UAAA;gDACAyP,MAAAjF,KAAAqD,MAAAgF,GAAAE,IAAAF,GAAAla;gDACA,KAAAka,GAAA7S,MAAA;oDACA6S,GAAAxF,EAAAwF,GAAAja,KAAA6W,MAAAoD,GAAA+hB;uDACyC,IAAA/hB,GAAA7S,SAAA;oDACzCmP,IAAA0D,GAAArG;oDACAmoB,MAAA9hB,GAAA+hB,MAAAnlB,MAAAoD,GAAAgiB;oDACA,KAAA1lB,IAAA,GAAuDA,IAAA0D,GAAArG,GAAU2C,KAAA;wDACjEwlB,OAAA9hB,GAAA,OAAA1D,KAAA0D,GAAA,QAAA1D,IAAA;;oDAEA0D,GAAAxF,EAAAwF,GAAAja,KAAA+7B;;mDAEqC;gDACrC9hB,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA1L;;+CAEiC;4CACjC0L,GAAAkV,SAAAvZ;;wCAEAqE,QAAAG;;uCAEyB,IAAAxE,OAAAtW,KAAAowB,OAAAtW,UAAA9Z,KAAAowB,OAAA9V,aAAAta,KAAAowB,OAAAtW,UAAA,MAAA9Z,KAAAowB,OAAA5U,kBAAA;oCACzB,OAAAb,IAAA;wCACApD,MAAAoD,GAAAla,IAAA6V,IAAAqE,GAAAE;wCACA,IAAAF,GAAA7F,GAAA;4CACAyC,MAAAjF,KAAAqD,MAAA4B;+CACiC,IAAAA,MAAAhF,KAAA,IAAAgF,OAAAhF,KAAA;4CACjCgF,MAAA;;wCAEA,KAAAoD,GAAA7S,MAAA;4CACA6S,GAAAxF,EAAAwF,GAAAja,KAAA6W,MAAAoD,GAAA+hB;+CACiC,IAAA/hB,GAAA7S,SAAA;4CACjCmP,IAAA0D,GAAArG;4CACA,IAAA2C,MAAA;gDACA0D,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA+hB,MAAAnlB,MAAAoD,GAAAgiB,MAAAhiB,GAAA8tB,MAAA9tB,GAAAwvB;mDACqC,IAAAlzB,MAAA;gDACrC0D,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA+hB,MAAAnlB,MAAAoD,GAAAgiB,MAAAhiB,GAAA8tB,MAAA9tB,GAAAwvB,MAAAxvB,GAAAyvB,MAAAzvB,GAAA0vB;mDACqC,IAAApzB,MAAA;gDACrC0D,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA+hB,MAAAnlB,MAAAoD,GAAAgiB,MAAAhiB,GAAA8tB,MAAA9tB,GAAAwvB,MAAAxvB,GAAAyvB,MAAAzvB,GAAA0vB,MAAA1vB,GAAA2vB,MAAA3vB,GAAA4vB;mDACqC,IAAAtzB,MAAA;gDACrC0D,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA+hB,MAAAnlB,MAAAoD,GAAAgiB,MAAAhiB,GAAA8tB,MAAA9tB,GAAAwvB,MAAAxvB,GAAAyvB,MAAAzvB,GAAA0vB,MAAA1vB,GAAA2vB,MAAA3vB,GAAA4vB,MAAA5vB,GAAA6vB,MAAA7vB,GAAA8vB;mDACqC;gDACrChO,MAAA9hB,GAAA+hB,MAAAnlB,MAAAoD,GAAAgiB;gDACA,KAAA1lB,IAAA,GAAmDA,IAAA0D,GAAArG,GAAU2C,KAAA;oDAC7DwlB,OAAA9hB,GAAA,OAAA1D,KAAA0D,GAAA,QAAA1D,IAAA;;gDAEA0D,GAAAxF,EAAAwF,GAAAja,KAAA+7B;;+CAEiC,IAAA9hB,GAAA7S,UAAA;4CACjC6S,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA+hB;+CACiC,IAAA/hB,GAAAkV,UAAA;4CACjClV,GAAAkV,SAAAvZ;;wCAEAqE,QAAAG;;uCAEyB;oCACzB,OAAAH,IAAA;wCACA,IAAAA,GAAA7S,SAAA;4CACA6S,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAA5Z;+CACiC;4CACjC4Z,GAAAkV,SAAAvZ;;wCAEAqE,QAAAG;;;;4BAIApa,EAAAqvB,oBAAA,SAAA2Z;gCACA1pC,KAAA8vB,aAAA9vB,KAAA8vB,cAAA6G,cAAA32B,KAAAwsB,SAAAoE,KAAA;gCACA5wB,KAAA+mC,mBAAA/mC,KAAA8vB,WAAA6Q,OAAAX,0BAAA0J,UAAA1pC,KAAA+mC,mBAAA;;4BAEA,IAAA2D,UAAA,SAAAp0B;gCACAtW,KAAAmV,EAAAnV,KAAAU,KAAAV,KAAAiP;gCACAjP,KAAAuK,KAAAu/B,UAAA9pC,WAAA8a,OAAA;;4BAEApa,EAAAipC,cAAA,SAAAx0B,GAAAzU,GAAA4V;gCACA,IAAAqE,KAAA3a,KAAAoa,WAAA,IAAAmV,aAAApa,GAAAzU,GAAA,MAAAV,KAAAoa,UAAA;gCACAO,GAAA1L,IAAAqH;gCACAqE,GAAAkV,WAAA6a;gCACA/vB,GAAApQ,OAAAvK;;4BAEAU,EAAAopC,YAAA,SAAAnvB,IAAA8H,MAAAwD,MAAA/W;gCACA,IAAAyL,IAAA;oCACA,IAAA8H,MAAA;wCACAA,KAAAqC,QAAAnK;;oCAEA,IAAAA,GAAAG,OAAA;wCACAH,GAAAG,MAAAgK,QAAAnK,GAAAmK;;oCAEA,IAAAnK,GAAAmK,OAAA;wCACAnK,GAAAmK,MAAAhK,QAAAH,GAAAG;2CAC6B,IAAA9a,KAAAoa,aAAAO,IAAA;wCAC7B3a,KAAAoa,WAAAO,GAAAG;wCACA5L,SAAA;;oCAEA,IAAA+W,MAAA;wCACAA,KAAAnL,QAAAH;2CAC6B,KAAAzL,UAAAlP,KAAAoa,aAAA;wCAC7Bpa,KAAAoa,WAAAO;;oCAEAA,GAAAG,QAAA2H;oCACA9H,GAAAmK,QAAAmB;;gCAEA,OAAAtL;;4BAEAja,EAAAilB,QAAA,SAAA2K;gCACA,IAAApS,OAAAoS,QAAA3V,IAAAja,GAAA49B;gCACA,IAAAhO,OAAAqa,aAAAra,OAAAnlB,OAAA;oCACA+S;oCACA,KAAAxd,KAAA4vB,QAAA;wCACApS,KAAAxd,KAAA4vB,OAAA5vB;;oCAEAwd,KAAA8V,UAAA;oCACA,IAAA9V,KAAAysB,WAAA;wCACAzsB,KAAA0sB,aAAA;;;gCAGA,IAAAta,OAAAsZ,cAAAjvB,KAAA3a,KAAAipC,eAAA;oCACA3K,SAAA3jB,GAAA2jB;oCACA,IAAAA,iBAAAxZ,OAAA;wCACA9kB,KAAA8pC,UAAAxL,OAAAxZ,OAAAnK,GAAAG,OAAAwjB,OAAAxZ;2CAC6B,IAAAwZ,WAAAt+B,KAAAoa,UAAA;wCAC7Bpa,KAAAoa,WAAAO,GAAAG;;oCAEA,IAAAH,GAAAG,OAAA;wCACA9a,KAAA8pC,UAAAnvB,GAAAG,OAAAH,GAAAG,aAAAwjB,OAAAxZ;;oCAEA9kB,KAAAipC,eAAA;;gCAEA,OAAAxY,YAAAvvB,UAAAykB,MAAAplB,KAAAP,MAAAke;;4BAEA,IAAA2sB,kBAAA,SAAA57B,GAAA6b,OAAA1T;gCACA,IAAA/C,UAAA4C,GAAA2L,OAAA9a;gCACA,IAAAmH,EAAA67B,OAAA;oCACA7zB,IAAAhI,EAAAnK;oCACA,SAAAmS,KAAA;wCACA4zB,gBAAA57B,EAAAgI,IAAA6T,OAAA1T;;oCAEA;;gCAEA/C,WAAApF,EAAA87B;gCACA9zB,IAAA5C,SAAAvP;gCACA,SAAAmS,KAAA;oCACA2L,QAAAvO,SAAA4C;oCACAnP,OAAA8a,MAAA9a;oCACA,IAAA8a,MAAAnZ,OAAA;wCACAqhB,MAAA3lB,KAAAoxB,cAAA3T;wCACA,IAAAxL,SAAA;4CACAA,QAAAjS,KAAAyd;;;oCAGA,KAAA9a,SAAA,KAAAA,SAAA,KAAAA,SAAA,OAAA8a,MAAAmoB,WAAAjmC,QAAA;wCACA+lC,gBAAAjoB,OAAAkI,OAAA1T;;;;4BAIAgY,UAAA4b,YAAA,SAAAvzB,QAAAC,UAAAP;gCACA,IAAAmI,QAAAxL,UAAA4E,GAAAjB,QAAAC,UAAAP,OAAA8zB,YAAA3rB,SAAAve,QAAAkO,QAAAmI,cAAA8zB,iBAAAp3B,UAAAuE,WAAA8yB,eAAAl0B,GAAAugB,MAAA92B,GAAAqc;gCACAtF,SAAA6H,MAAA8rB,YAAA9rB,MAAA7H;gCACAozB,gBAAApzB,QAAA1W,GAAAqW;gCACAkI,MAAA5S,OAAAgL,UAAA;gCACAmzB,gBAAApzB,QAAAxI;gCACAqQ,MAAA5S,OAAA;gCACA4S,MAAAvF,SAAA;gCACA9C,IAAAG,QAAAtS;gCACA,SAAAmS,KAAA;oCACAugB,OAAAJ,QAAAhgB,QAAAH,IAAAlW,EAAAkW,IAAAhI,EAAAgI;oCACA,IAAAugB,KAAAG,UAAA;wCACAH;wCACA,KAAA92B,KAAAyW,MAAA;4CACA,IAAA+zB,eAAAxqC,IAAA;gDACA82B,KAAA92B,KAAAyW,KAAAzW;;;wCAGAqc;wCACA,KAAArc,KAAA82B,MAAA;4CACAza,KAAArc,KAAAK,EAAAkW,GAAAvW;;wCAEAuqC,QAAA9lC,KAAA2O,UAAAmJ,OAAA7F,QAAAH,IAAAS,UAAAqF,MAAAya;;;gCAGA,OAAAyT;;4BAEAxa,YAAA4a,WAAAjc;4BACA,OAAAA;2BACiB;yBACjB;4BACA,IAAAkc,mBAAA30B,SAAAE,UAAAuV;gCACAC,UAAA;gCACAzT,SAAA;gCACA0T,WAAA;gCACAC,KAAA;gCACApiB,MAAA,SAAAsN,QAAA3V,OAAAwd;oCACAtf,KAAAowB,SAAA9Q;oCACA;;gCAEqBisB,mBAAA,SAAA5V;gCACrB,OAAAA,MAAA;oCACA,KAAAA,KAAA3gB,MAAA2gB,KAAA6V,MAAA;wCACA7V,KAAA7gB,IAAA;;oCAEA6gB,YAAA7a;;+BAEqBpa,IAAA4qC,iBAAApqC;4BACrBR,EAAA+qC,kBAAA;gCACA,IAAAnsB,QAAAtf,KAAAowB,QAAAsb,KAAApsB,MAAAnI,KAAAw0B,WAAAnqB,OAAAlC,MAAAnI,KAAAw0B,aAAArsB,MAAAnI,KAAAw0B,WAAArT,MAAA,MAAArhB,IAAAy0B,GAAA5mC,QAAAwrB,aAAuKsb,MAAAtsB,MAAAusB,YAAAF,YAAAjc,MAAA/U,IAAA8H;gCACvK,SAAAxL,KAAA;oCACAqZ,OAAAob,GAAAz0B,MAAA;;gCAEAA,IAAAy0B,GAAA5mC;gCACA,SAAAmS,KAAA;oCACAyY,OAAAgc,GAAAz0B;oCACA0D,KAAA2E,MAAAlF;oCACA,OAAAO,IAAA;wCACA8H,OAAA9H,GAAAG;wCACA,IAAAH,GAAAmxB,IAAA;4CACAnxB,GAAAxF,EAAAkb,YAAAC,QAAA;+CACiC,IAAA3V,GAAA9E,MAAA6Z,MAAA;4CACjC,IAAA/U,GAAA3F,MAAA,KAAA2F,GAAAxF,GAAA;gDACAo2B,iBAAA5wB,GAAAxF,EAAAiF;mDACqC;gDACrCpa,KAAA+rC,KAAApxB,GAAAxF,GAAAua,MAAA/U,GAAAE,GAAAF,GAAAla;gDACA,IAAAgiB,MAAA;oDACAA,KAAAqC,QAAAnK,GAAAmK;;gDAEA,IAAAnK,GAAAmK,OAAA;oDACAnK,GAAAmK,MAAAhK,QAAA2H;uDACyC,IAAAnD,MAAAlF,aAAAO,IAAA;oDACzC2E,MAAAlF,WAAAqI;;gDAEA9H,GAAAG,QAAAH,GAAAmK,QAAA;gDACAxF,MAAAusB,YAAAnc,QAAAkc;;;wCAGAjxB,KAAA8H;;;gCAGA;;4BAEA/hB,EAAAqrC,OAAA,SAAAt0B,QAAA/W,GAAAma,GAAApa;gCACAT,KAAAgsC,UAAAv0B,QAAA/W,GAAAma,OAAApa,GAAAC,GAAA;gCACAV,KAAAmtB,gBAAAhoB,KAAAzE;;;yBAGA;4BACAiW,SAAAE,UAAAuV;gCACAC,UAAA;gCACAE,KAAA;gCACA3T,SAAA;gCACAzO,MAAA,SAAAsN,QAAA3V,OAAAwd;oCACA,IAAA5e;oCACA,WAAA+W,OAAAsqB,iBAAA;wCACA;;oCAEA,KAAArhC,KAAAoB,OAAA;wCACA9B,KAAAgsC,UAAAv0B,QAAA,gBAAAA,OAAA+qB,aAAA9hC,KAAA,IAAAoB,MAAApB,KAAA,IAAAA,GAAA,OAAAA;wCACAV,KAAAmtB,gBAAAhoB,KAAAzE;;oCAEA;;;;wBAIAiW,SAAAE,UAAAuV;4BACAC,UAAA;4BACAzT,SAAA;4BACA2T,KAAA;4BACApiB,MAAA,SAAAsN,QAAA3V,OAAAwd;gCACA,WAAAxd,UAAA;oCACAA;wCACAouB,UAAApuB;;;gCAGA9B,KAAAisC;gCACA,IAAAhT,MAAAn3B,MAAAoqC,eAAA,OAAA55B,KAAAyV,KAAA,SAAAxV,MAAA,MAAA7R,GAAA4V,GAAAwmB,OAAA9vB,KAAAksB,KAAAZ;gCACA,KAAA53B,KAAAoB,OAAA;oCACA,IAAApB,MAAA;wCACA43B,SAAAx2B,MAAApB,KAAA,IAAA43B,MAAA;wCACAhiB,IAAAgiB,MAAA;wCACAwE,QAAA1P,kBAAA3V,OAAA/W,OAAA,aAAA+W,OAAA/W,KAAA+W,OAAA/W,EAAA8E,QAAA,iBAAAiS,OAAA,QAAA/W,EAAAyjB,OAAA,qBAAAzjB,IAAA,QAAAA,EAAAyjB,OAAA;wCACAnX,MAAAhN,KAAAisC,OAAAvrC,YAAA4V,MAAA,YAAAA,EAAA2N,OAAA,aAAA6Y,QAAAnzB,SAAA2M,EAAA2N,OAAA,gBAAAC,OAAA5N,EAAA6N,OAAA,MAAAD,OAAA5N,MAAA;wCACA4iB,MAAAlsB,MAAA8vB;wCACA,IAAAxE,MAAAxzB,QAAA;4CACAwR,IAAAgiB,MAAA9W,KAAA;4CACA,IAAAlL,EAAA9Q,QAAA;gDACA0zB,YAAAD;gDACA,IAAAC,eAAAD,MAAA;oDACAC,YAAA,IAAAA,MAAAD,MAAAC,MAAAD;;;4CAGA,IAAA3iB,EAAA9Q,QAAA,iBAAA0zB,MAAA;gDACAA,aAAAD,MAAA,cAAAA,OAAAC,MAAAD,MAAA,KAAAA;mDACqC,IAAA3iB,EAAA9Q,QAAA,iBAAA0zB,MAAA;gDACrCA,aAAAD,MAAA,cAAAA,OAAAC,MAAAD,MAAA,KAAAA;;;wCAGA,IAAAC,MAAA3mB,OAAA2mB,OAAA3mB,KAAA;4CACAvS,KAAAgsC,UAAAv0B,QAAA/W,GAAAo8B,eAAA5D,KAAAx4B;4CACAV,KAAAmtB,gBAAAhoB,KAAAzE;;;;gCAIA;;4BAEAoP,KAAA,SAAA2J;gCACA,IAAAkB;gCACA,IAAAlB,UAAA;oCACAzZ,KAAAuC,OAAAstB,SAAAtvB,KAAAP,MAAAyZ;uCACyB;oCACzBkB,KAAA3a,KAAAoa;oCACA,OAAAO,IAAA;wCACA,IAAAA,GAAA3F,GAAA;4CACA2F,GAAAxF,EAAAwF,GAAAja,GAAAV,KAAAisC,OAAAtxB,GAAAja;+CACiC;4CACjCia,GAAAxF,EAAAwF,GAAAja,KAAAV,KAAAisC,OAAAtxB,GAAAja;;wCAEAia,QAAAG;;;;2BAIiBmU,WAAA;wBACjBtY,SAAAE,UAAA,2CAAAsP;4BACA,IAAA3b,IAAAmM,SAAAw1B,oBAAAx1B,UAAAy1B,KAAA5hC,EAAAy0B,IAAAC,WAAAmN,OAAA/5B,KAAAyV,KAAA,GAAAukB,WAAAh6B,KAAAyV,KAAA,GAAAwkB,SAAAH,GAAAG,QAAAC,UAAA,SAAA32B,GAAAb;gCACA,IAAAy3B,IAAAF,OAAA,YAAA12B,GAAA,eAAmE,OAAAnV,IAAA+rC,EAAAvrC,YAAA,IAAAilB;gCACnEzlB,EAAAO,cAAAwrC;gCACA/rC,EAAAsb,WAAAhH;gCACA,OAAAy3B;+BACqBC,WAAAvmB,KAAAwmB,YAAA,eAA2CC,QAAA,SAAAhpC,MAAAipC,SAAAC,QAAAC,WAAAC;gCAChE,IAAAP,IAAAF,OAAA,YAAA3oC;oCACAqpC,SAAA,IAAAJ;oCACAK,QAAA,IAAAJ;oCACAK,WAAA,IAAAJ;mCACyB;gCACzBL,SAAAD,GAAA7oC;gCACA,OAAA6oC;+BACqBW,YAAA,SAAAryB,MAAAjZ,OAAA2gB;gCACrBziB,KAAAmV,IAAA4F;gCACA/a,KAAAsW,IAAAxU;gCACA,IAAA2gB,MAAA;oCACAziB,KAAAyiB;oCACAA,KAAAwD,OAAAjmB;oCACAA,KAAAS,IAAAgiB,KAAAnM,IAAAxU;oCACA9B,KAAAqtC,MAAA5qB,KAAAtN,IAAA4F;;+BAEqBuyB,cAAA,SAAAz3B,GAAAb;gCACrB,IAAAy3B,IAAAF,OAAA,YAAA12B,GAAA,SAAA03B;oCACAvtC,KAAAwtC,MAAAD,2BAAA,IAAAA,YAAA;oCACAvtC,KAAAytC,MAAAztC,KAAAwtC,MAAA;mCACyB,OAAA9sC,IAAA+rC,EAAAvrC,YAAA,IAAAilB;gCACzBzlB,EAAAO,cAAAwrC;gCACA/rC,EAAAsb,WAAAhH;gCACAtU,EAAAgtC,SAAA,SAAAH;oCACA,WAAAd,EAAAc;;gCAEA,OAAAd;+BACqBkB,OAAAf,MAAA,QAAAU,YAAA,oBAAA5sC;gCACrB,QAAAA,QAAA,KAAAA,MAAAV,KAAAwtC,MAAA,KAAA9sC,IAAAV,KAAAwtC,OAAA;gCACqBF,YAAA,mBAAA5sC;gCACrB,OAAAA,UAAAV,KAAAwtC,MAAA,KAAA9sC,IAAAV,KAAAwtC;gCACqBF,YAAA,sBAAA5sC;gCACrB,QAAAA,KAAA,cAAAA,UAAAV,KAAAytC,MAAA,KAAA/sC,IAAAV,KAAAytC,OAAA,OAAA/sC,KAAA,KAAAA,MAAAV,KAAAytC,MAAA,KAAA/sC,IAAAV,KAAAytC,OAAA;iCACqBG,SAAArB,OAAA,0BAAAsB,aAAAC,OAAAC;gCACrBD,2BAAA,IAAAA,QAAA;gCACA,IAAAD,eAAA;oCACAA,cAAA;uCACyB,IAAAA,cAAA;oCACzBA,cAAA;;gCAEA7tC,KAAAguC,KAAAH,gBAAA,IAAAC,QAAA;gCACA9tC,KAAAwtC,OAAA,IAAAK,eAAA;gCACA7tC,KAAAytC,MAAAI;gCACA7tC,KAAAiuC,MAAAjuC,KAAAwtC,MAAAxtC,KAAAytC;gCACAztC,KAAA+b,WAAAgyB,aAAA;+BACqB,OAAArtC,IAAAktC,OAAA1sC,YAAA,IAAAilB,QAAA+nB,aAAAC,WAAAC;4BACrB1tC,EAAAO,cAAA2sC;4BACAltC,EAAAsb,WAAA,SAAAtb;gCACA,IAAAoU,IAAApU,KAAA,KAAAA,KAAAV,KAAAguC;gCACA,IAAAttC,IAAAV,KAAAwtC,KAAA;oCACA,OAAAxtC,KAAA+b,WAAA,KAAArb,IAAA,IAAAA,IAAAV,KAAAwtC,OAAA9sC,IAAAoU,KAAApU,IAAA,IAAAA,IAAAV,KAAAwtC,OAAA9sC,YAAAoU;uCACyB,IAAApU,IAAAV,KAAAiuC,KAAA;oCACzB,OAAAjuC,KAAA+b,WAAA,KAAArb,SAAAV,KAAAiuC,OAAAjuC,KAAAwtC,OAAA9sC,IAAAoU,KAAApU,IAAAoU,MAAApU,SAAAV,KAAAiuC,OAAAjuC,KAAAwtC,OAAA9sC;;gCAEA,OAAAV,KAAA+b,WAAA,IAAAjH;;4BAEA84B,OAAAlnB,OAAA,IAAAknB,OAAA;4BACAltC,EAAAgtC,SAAAE,OAAAF,SAAA,SAAAG,aAAAC,OAAAC;gCACA,WAAAH,OAAAC,aAAAC,OAAAC;;4BAEAG,cAAA3B,OAAA,+BAAA9gB;gCACAA,iBAAA;gCACAzrB,KAAAwtC,MAAA,IAAA/hB;gCACAzrB,KAAAytC,MAAAhiB,QAAA;+BACqB;4BACrB/qB,IAAAwtC,YAAAhtC,YAAA,IAAAilB;4BACAzlB,EAAAO,cAAAitC;4BACAxtC,EAAAsb,WAAA,SAAAtb;gCACA,IAAAA,IAAA;oCACAA,IAAA;uCACyB,IAAAA,KAAA;oCACzBA,IAAA;;gCAEA,QAAAV,KAAAytC,MAAA/sC,KAAA,KAAAV,KAAAwtC;;4BAEA9sC,EAAAgtC,SAAAQ,YAAAR,SAAA,SAAAjiB;gCACA,WAAAyiB,YAAAziB;;4BAEA0iB,YAAA5B,OAAA,6BAAAp1B;gCACAA;gCACA,IAAAk3B,QAAAl3B,KAAAk3B,SAAA,QAAAnnC,QAAAmY,MAAA,GAAAhY,UAAA8P,KAAA9P,UAAA,SAAA4P,IAAA5P,QAAAinC,YAAAn3B,KAAAm3B,cAAA,OAAAC,QAAAp3B,KAAAo3B,UAAA,MAAAC,WAAAr3B,KAAAq3B,oBAAAroB,OAAAhP,KAAAq3B,WAAA,MAAAC,kBAAAt3B,KAAAs3B,aAAA,WAAAt3B,KAAAs3B,WAAA,SAAA1+B,GAAAC,GAAA0+B,MAAA/L,MAAA9X,KAAA8jB;gCACA,SAAA13B,KAAA;oCACAlH,IAAAu+B,YAAAh8B,KAAAs8B,WAAA,IAAAvnC,SAAA4P;oCACAjH,IAAAw+B,oBAAAxyB,SAAAjM;oCACA,IAAAs+B,UAAA;wCACAK,OAAAD;2CAC6B,IAAAJ,UAAA;wCAC7B1L,OAAA,IAAA5yB;wCACA2+B,OAAA/L,cAAA8L;2CAC6B,IAAAJ,UAAA;wCAC7BK,OAAA3+B,QAAA0+B;2CAC6B,IAAA1+B,IAAA;wCAC7B4yB,OAAA5yB,IAAA;wCACA2+B,OAAA/L,cAAA,KAAA8L;2CAC6B;wCAC7B9L,QAAA,IAAA5yB,KAAA;wCACA2+B,OAAA/L,cAAA,KAAA8L;;oCAEA,IAAAH,WAAA;wCACAt+B,KAAAsC,KAAAs8B,WAAAF,cAAA;2CAC6B,IAAAz3B,IAAA;wCAC7BjH,KAAA0+B,OAAA;2CAC6B;wCAC7B1+B,KAAA0+B,OAAA;;oCAEA,IAAAH,OAAA;wCACA,IAAAv+B,IAAA;4CACAA,IAAA;+CACiC,IAAAA,IAAA;4CACjCA,IAAA;;;oCAGA9I,EAAAmY;wCACAtP;wCACAC;;;gCAGA9I,EAAAD,KAAA,SAAAC,GAAAnG;oCACA,OAAAmG,EAAA6I,IAAAhP,EAAAgP;;gCAEA4+B,MAAA,IAAAvB,UAAA;gCACAn2B,IAAA5P;gCACA,SAAA4P,KAAA;oCACA4T,MAAA3jB,EAAA+P;oCACA03B,MAAA,IAAAvB,UAAAviB,IAAA9a,GAAA8a,IAAA7a,GAAA2+B;;gCAEA3uC,KAAA8kB,QAAA,IAAAsoB,UAAA,MAAAuB,IAAAx5B,MAAA,IAAAw5B,UAAAlsB;+BACqB;4BACrB/hB,IAAAytC,UAAAjtC,YAAA,IAAAilB;4BACAzlB,EAAAO,cAAAktC;4BACAztC,EAAAsb,WAAA,SAAAtb;gCACA,IAAAiuC,MAAA3uC,KAAA8kB;gCACA,IAAApkB,IAAAiuC,IAAAx5B,GAAA;oCACA,OAAAw5B,IAAAlsB,QAAA/hB,KAAAiuC,IAAAx5B,GAAA;wCACAw5B,UAAAlsB;;oCAEAksB,UAAA1oB;uCACyB;oCACzB,OAAA0oB,IAAA1oB,QAAAvlB,KAAAiuC,IAAAx5B,GAAA;wCACAw5B,UAAA1oB;;;gCAGAjmB,KAAA8kB,QAAA6pB;gCACA,OAAAA,IAAAr4B,KAAA5V,IAAAiuC,IAAAx5B,KAAAw5B,IAAAtB,MAAAsB,IAAAluC;;4BAEAC,EAAAgtC,SAAA,SAAAv2B;gCACA,WAAAg3B,UAAAh3B;;4BAEAg3B,UAAAznB,OAAA,IAAAynB;4BACAvB,MAAA,UAAAJ,QAAA,sBAAA9rC;gCACA,IAAAA,IAAA;oCACA,gBAAAA;uCACyB,IAAAA,IAAA;oCACzB,iBAAAA,KAAA,cAAAA,IAAA;uCACyB,IAAAA,IAAA;oCACzB,iBAAAA,KAAA,eAAAA,IAAA;;gCAEA,iBAAAA,KAAA,gBAAAA,IAAA;gCACqB8rC,QAAA,qBAAA9rC;gCACrB,KAAAA,IAAA,IAAAA,KAAA;oCACA,oBAAAA;uCACyB,IAAAA,IAAA;oCACzB,sBAAAA,KAAA,cAAAA,IAAA;uCACyB,IAAAA,IAAA;oCACzB,sBAAAA,KAAA,eAAAA,IAAA;;gCAEA,sBAAAA,KAAA,gBAAAA,IAAA;gCACqB8rC,QAAA,wBAAA9rC;gCACrB,IAAAmuC,SAAAnuC,IAAA;gCACA,IAAAmuC,QAAA;oCACAnuC,IAAA,IAAAA,IAAA;uCACyB;oCACzBA,QAAA;;gCAEA,IAAAA,IAAA;oCACAA,IAAA,SAAAA;uCACyB,IAAAA,IAAA;oCACzBA,IAAA,UAAAA,KAAA,cAAAA,IAAA;uCACyB,IAAAA,IAAA;oCACzBA,IAAA,UAAAA,KAAA,eAAAA,IAAA;uCACyB;oCACzBA,IAAA,UAAAA,KAAA,gBAAAA,IAAA;;gCAEA,OAAAmuC,UAAA,IAAAnuC,KAAA,KAAAA,IAAA;;4BAEAksC,MAAA,QAAAJ,QAAA,oBAAA9rC;gCACA,OAAA4R,KAAA6Y,KAAA,KAAAzqB,QAAA,KAAAA;gCACqB8rC,QAAA,mBAAA9rC;gCACrB,SAAA4R,KAAA6Y,KAAA,IAAAzqB,SAAA;gCACqB8rC,QAAA,sBAAA9rC;gCACrB,QAAAA,KAAA,gBAAA4R,KAAA6Y,KAAA,IAAAzqB,SAAA,WAAA4R,KAAA6Y,KAAA,KAAAzqB,KAAA,KAAAA,KAAA;;4BAEA0tC,iBAAA,SAAAv4B,GAAAb,GAAA85B;gCACA,IAAArC,IAAAF,OAAA,YAAA12B,GAAA,SAAAk5B,WAAAC;oCACAhvC,KAAAwtC,MAAAuB,aAAA,IAAAA,YAAA;oCACA/uC,KAAAytC,OAAAuB,UAAAF,QAAAC,YAAA,IAAAA,YAAA;oCACA/uC,KAAAiuC,MAAAjuC,KAAAytC,MAAApB,QAAA/5B,KAAA28B,KAAA,IAAAjvC,KAAAwtC,QAAA;oCACAxtC,KAAAytC,MAAApB,OAAArsC,KAAAytC;mCACyB,OAAA/sC,IAAA+rC,EAAAvrC,YAAA,IAAAilB;gCACzBzlB,EAAAO,cAAAwrC;gCACA/rC,EAAAsb,WAAAhH;gCACAtU,EAAAgtC,SAAA,SAAAqB,WAAAC;oCACA,WAAAvC,EAAAsC,WAAAC;;gCAEA,OAAAvC;;4BAEAG,MAAA,WAAAwB,eAAA,uBAAA1tC;gCACA,OAAAV,KAAAwtC,MAAAl7B,KAAAsJ,IAAA,SAAAlb,KAAA4R,KAAA4xB,KAAAxjC,IAAAV,KAAAiuC,OAAAjuC,KAAAytC,OAAA;+BACqB,KAAAW,eAAA,sBAAA1tC;gCACrB,SAAAV,KAAAwtC,MAAAl7B,KAAAsJ,IAAA,SAAAlb,KAAA,MAAA4R,KAAA4xB,KAAAxjC,IAAAV,KAAAiuC,OAAAjuC,KAAAytC;+BACqB,KAAAW,eAAA,yBAAA1tC;gCACrB,QAAAA,KAAA,gBAAAV,KAAAwtC,MAAAl7B,KAAAsJ,IAAA,SAAAlb,KAAA,MAAA4R,KAAA4xB,KAAAxjC,IAAAV,KAAAiuC,OAAAjuC,KAAAytC,QAAAztC,KAAAwtC,MAAAl7B,KAAAsJ,IAAA,UAAAlb,KAAA,MAAA4R,KAAA4xB,KAAAxjC,IAAAV,KAAAiuC,OAAAjuC,KAAAytC,OAAA;+BACqB;4BACrBb,MAAA,QAAAJ,QAAA,oBAAA9rC;gCACA,WAAA4R,KAAAsJ,IAAA,SAAAlb;gCACqB8rC,QAAA,mBAAA9rC;gCACrB,OAAA4R,KAAAsJ,IAAA,SAAAlb,IAAA;gCACqB8rC,QAAA,sBAAA9rC;gCACrB,QAAAA,KAAA,cAAA4R,KAAAsJ,IAAA,SAAAlb,IAAA,gBAAA4R,KAAAsJ,IAAA,UAAAlb,IAAA;;4BAEAksC,MAAA,QAAAJ,QAAA,oBAAA9rC;gCACA,OAAA4R,KAAA4xB,IAAAxjC,IAAA4rC;gCACqBE,QAAA,mBAAA9rC;gCACrB,QAAA4R,KAAA2xB,IAAAvjC,IAAA4rC,YAAA;gCACqBE,QAAA,sBAAA9rC;gCACrB,cAAA4R,KAAA2xB,IAAA3xB,KAAAyV,KAAArnB,KAAA;;4BAEA6rC,OAAA;gCACA2C,MAAA,SAAAr0B;oCACA,OAAAsL,KAAAgpB,IAAAt0B;;+BAEqB;4BACrB6xB,SAAAliC,EAAAojC,QAAA;4BACAlB,SAAAyB,WAAA;4BACAzB,SAAAwB,aAAA;4BACA,OAAAP;2BACiB;;oBAEjB,IAAAh3B,SAAAE,WAAA;wBACAF,SAAAC,SAAAmzB;;qBAEA,SAAA72B,QAAAk8B;wBACA;wBACA,IAAAC,eAAiCvtB,WAAA5O,OAAAi5B,mBAAAj5B,OAAAi5B,oBAAAj5B;wBACjC,IAAA4O,SAAAhO,WAAA;4BACA;;wBAEA,IAAAw7B,aAAA,SAAAC;4BACA,IAAAroC,IAAAqoC,GAAAjX,MAAA,MAAA53B,IAAAohB,UAAA7K;4BACA,KAAAA,IAAA,GAA+BA,IAAA/P,EAAApC,QAAcmS,KAAA;gCAC7CvW,EAAAwG,EAAA+P,MAAAvW,MAAAwG,EAAA+P;;4BAEA,OAAAvW;2BACiB0rC,KAAAkD,WAAA,kBAAAn3B,WAAA,OAAAnB,SAAA,SAAA9P;4BACjB,IAAAnG,QAAAuT,IAAApN,EAAApC,QAAAmS;4BACA,KAAAA,IAAA,GAA+BA,MAAA3C,GAASvT,EAAAoE,KAAA+B,EAAA+P,OAAA;4BACxC,OAAAlW;2BACiByuC,aAAA,eAA4Bh3B,WAAA;4BAC7C,IAAAtT,WAAA/D,OAAAD,UAAAgE,UAAAuqC,QAAAvqC,SAAA3E;4BACA,gBAAAsqB;gCACA,OAAAA,OAAA,SAAAA,eAAA/H,gBAAA+H,QAAA,cAAAA,IAAA1lB,QAAAD,SAAA3E,KAAAsqB,SAAA4kB;;6BAEiBvoC,GAAA+P,GAAAvW,GAAAgvC,SAAAC,eAAAC,iBAAoDC,aAAA,SAAAN,IAAAO,cAAAzhB,MAAA3X;4BACrE1W,KAAA+vC,KAAAH,WAAAL,MAAAK,WAAAL,IAAAQ;4BACAH,WAAAL,MAAAvvC;4BACAA,KAAAgwC,UAAA;4BACAhwC,KAAAquB;4BACA,IAAA4hB;4BACAjwC,KAAAkwC,QAAA,SAAA/lC;gCACA,IAAA8M,IAAA64B,aAAAhrC,QAAAqrC,UAAAl5B,GAAAsU,KAAArkB,GAAA2O,GAAAu6B,IAAAC;gCACA,SAAAp5B,KAAA;oCACA,KAAAsU,MAAAqkB,WAAAE,aAAA74B,OAAA,IAAA44B,WAAAC,aAAA74B,SAAA+4B,SAAA;wCACAC,SAAAh5B,KAAAsU,IAAAykB;wCACAG;2CAC6B,IAAAhmC,MAAA;wCAC7BohB,IAAAwkB,GAAA5qC,KAAAnF;;;gCAGA,IAAAmwC,YAAA,KAAA9hB,MAAA;oCACAnnB,KAAA,mBAAAqoC,IAAAjX,MAAA;oCACAziB,IAAA3O,EAAA6iC;oCACAqG,KAAAd,WAAApoC,EAAAsa,KAAA,MAAA3L,KAAA7V,KAAAgwC,UAAA3hB,KAAAxQ,MAAAwQ,MAAA4hB;oCACA,IAAAv5B,QAAA;wCACAoL,SAAAjM,KAAAu6B;wCACAC,mBAAAxwC,WAAA,eAAAA,OAAAD;wCACA,KAAAywC,aAAA,6BAAAlwC,oBAAA;8CACAqW,mCAAAC,gCAAA;gDACA,OAAA25B;8CACqCvyB,MAAAje,SAAA4W,+BAAAC,kCAAAie,cAAA70B,OAAAD,UAAA6W;+CACJ,IAAA45B,WAAA;4CACjC,IAAAd,OAAAH,YAAA;gDACAvvC,OAAAD,UAAAyvC,SAAAD,cAAAgB;gDACA,KAAAn5B,KAAAo4B,UAAA;oDACAe,GAAAn5B,KAAAo4B,SAAAp4B;;mDAEqC,IAAAo4B,SAAAD,aAAA;gDACrCC,SAAAD,YAAAv5B,KAAAu6B;;;;oCAIA,KAAAn5B,IAAA,GAAuCA,IAAAjX,KAAA+vC,GAAAjrC,QAAoBmS,KAAA;wCAC3DjX,KAAA+vC,GAAA94B,GAAAi5B;;;;4BAIAlwC,KAAAkwC,MAAA;2BACiBr5B,YAAA3D,OAAA2D,YAAA,SAAA04B,IAAAO,cAAAzhB,MAAA3X;4BACjB,WAAAm5B,WAAAN,IAAAO,cAAAzhB,MAAA3X;2BACiB61B,SAAAH,GAAAG,SAAA,SAAAgD,IAAAlhB,MAAA3X;4BACjB2X,eAAA;4BACAxX,UAAA04B,QAAA;gCACA,OAAAlhB;+BACqB3X;4BACrB,OAAA2X;;wBAEAxX,UAAAkL,UAAAD;wBACA,IAAAwuB,gBAAA,cAAA33B,kBAAAwN,OAAAomB,OAAA,wBAAAle,MAAAkiB,aAAAzoC,MAAAgmC;4BACA9tC,KAAAysB,QAAA4B;4BACAruB,KAAAwwC,QAAA1oC,QAAA;4BACA9H,KAAAywC,SAAA3C,SAAA;4BACA9tC,KAAA0wC,UAAAH,cAAAD,YAAA/sC,OAAAgtC,eAAAD;2BACiB,OAAAK,WAAAxqB,KAAAgpB,UAAiCzC,WAAAvmB,KAAAwmB,WAAA,SAAAjmB,MAAAkqB,OAAAC,OAAAzvC;4BAClD,IAAA0vC,KAAAF,MAAAtY,MAAA,MAAArhB,IAAA65B,GAAAhsC,QAAAisC,MAAAF,SAAA,4BAAAvY,MAAA,MAAArpB,GAAArL,MAAAonB,GAAAljB;4BACA,SAAAmP,KAAA;gCACArT,OAAAktC,GAAA75B;gCACAhI,IAAA7N,SAAAmrC,OAAA,YAAA3oC,MAAA,cAAAwoC,GAAA4E,OAAAptC;gCACAonB,IAAA+lB,GAAAjsC;gCACA,SAAAkmB,KAAA;oCACAljB,OAAAipC,GAAA/lB;oCACA2lB,SAAA/sC,OAAA,MAAAkE,QAAA6oC,SAAA7oC,OAAAlE,QAAAqL,EAAAnH,QAAA4e,KAAA1K,WAAA0K,YAAA5e,SAAA,IAAA4e;;;;wBAIAhmB,IAAAylB,KAAAjlB;wBACAR,EAAAqb,WAAA;wBACArb,EAAAsb,WAAA,SAAAtb;4BACA,IAAAV,KAAAysB,OAAA;gCACAzsB,KAAA0wC,QAAA,KAAAhwC;gCACA,OAAAV,KAAAysB,MAAA5O,MAAA,MAAA7d,KAAA0wC;;4BAEA,IAAAv7B,IAAAnV,KAAAwwC,OAAAS,KAAAjxC,KAAAywC,QAAA37B,IAAAK,MAAA,QAAAzU,IAAAyU,MAAA,IAAAzU,QAAA,KAAAA,IAAA,SAAAA,KAAA;4BACA,IAAAuwC,OAAA;gCACAn8B;mCACqB,IAAAm8B,OAAA;gCACrBn8B;mCACqB,IAAAm8B,OAAA;gCACrBn8B;mCACqB,IAAAm8B,OAAA;gCACrBn8B;;4BAEA,OAAAK,MAAA,QAAAL,IAAAK,MAAA,IAAAL,IAAApU,IAAA,KAAAoU,IAAA,QAAAA,IAAA;;wBAEA5N,MAAA;wBACA+P,IAAA/P,EAAApC;wBACA,SAAAmS,KAAA;4BACAvW,IAAAwG,EAAA+P,KAAA,WAAAA;4BACAy1B,SAAA,IAAAvmB,KAAA,eAAAlP,IAAAvW,GAAA;4BACAgsC,SAAA,IAAAvmB,KAAA,eAAAlP,IAAAvW,GAAA,YAAAuW,MAAA;4BACAy1B,SAAA,IAAAvmB,KAAA,eAAAlP,IAAAvW,GAAA;;wBAEAiwC,SAAAO,SAAA9E,GAAA4E,OAAAG,OAAAjE;wBACAyD,SAAAS,QAAAhF,GAAA4E,OAAAK,KAAAlE;wBACA,IAAAmE,kBAAA/E,OAAA,mCAAA90B;4BACAzX,KAAAuxC;4BACAvxC,KAAAwxC,eAAA/5B,UAAAzX;;wBAEAU,IAAA4wC,gBAAApwC;wBACAR,EAAAiN,mBAAA,SAAA7F,MAAA4T,UAAAiD,OAAA8yB,UAAAnlB;4BACAA,uBAAA;4BACA,IAAAolB,OAAA1xC,KAAAuxC,WAAAzpC,OAAA+jB,QAAA,GAAA8lB,UAAA16B;4BACA,IAAAjX,SAAA0vC,YAAAC,eAAA;gCACAD,QAAAkC;;4BAEA,IAAAF,QAAA;gCACA1xC,KAAAuxC,WAAAzpC,QAAA4pC;;4BAEAz6B,IAAAy6B,KAAA5sC;4BACA,SAAAmS,KAAA;gCACA06B,WAAAD,KAAAz6B;gCACA,IAAA06B,SAAAlxC,MAAAib,YAAAi2B,SAAA92B,MAAA8D,OAAA;oCACA+yB,KAAApnB,OAAArT,GAAA;uCACyB,IAAA4U,UAAA,KAAA8lB,SAAAvU,KAAA9Q,UAAA;oCACzBT,QAAA5U,IAAA;;;4BAGAy6B,KAAApnB,OAAAuB,OAAA;gCACAprB,GAAAib;gCACAb,GAAA8D;gCACAkzB,IAAAJ;gCACArU,IAAA9Q;;;wBAGA5rB,EAAAoxC,sBAAA,SAAAhqC,MAAA4T;4BACA,IAAAg2B,OAAA1xC,KAAAuxC,WAAAzpC,OAAAmP;4BACA,IAAAy6B,MAAA;gCACAz6B,IAAAy6B,KAAA5sC;gCACA,SAAAmS,KAAA;oCACA,IAAAy6B,KAAAz6B,GAAAxW,MAAAib,UAAA;wCACAg2B,KAAApnB,OAAArT,GAAA;wCACA;;;;;wBAKAvW,EAAAqxC,gBAAA,SAAAjqC;4BACA,IAAA4pC,OAAA1xC,KAAAuxC,WAAAzpC,OAAAmP,GAAA9B,GAAAw8B;4BACA,IAAAD,MAAA;gCACAz6B,IAAAy6B,KAAA5sC;gCACAqQ,IAAAnV,KAAAwxC;gCACA,SAAAv6B,KAAA;oCACA06B,WAAAD,KAAAz6B;oCACA,IAAA06B,UAAA;wCACA,IAAAA,SAAAE,IAAA;4CACAF,SAAAlxC,EAAAF,KAAAoxC,SAAA92B,KAAA1F;gDACArN;gDACA2P,QAAAtC;;+CAEiC;4CACjCw8B,SAAAlxC,EAAAF,KAAAoxC,SAAA92B,KAAA1F;;;;;;wBAMA,IAAA68B,gBAAA9+B,OAAAnG,uBAAAklC,mBAAA/+B,OAAAg/B,sBAAAC,WAAAv9B,KAAAC,OAAA;4BACA,WAAAD,OAAAw9B;2BACiBC,cAAAF;wBACjBjrC,MAAA;wBACA+P,IAAA/P,EAAApC;wBACA,SAAAmS,KAAA,MAAA+6B,eAAA;4BACAA,gBAAA9+B,OAAAhM,EAAA+P,KAAA;4BACAg7B,mBAAA/+B,OAAAhM,EAAA+P,KAAA,2BAAA/D,OAAAhM,EAAA+P,KAAA;;wBAEAs1B,OAAA,mBAAA3/B,KAAA0lC;4BACA,IAAAC,QAAAvyC,MAAA4Z,aAAAu4B,YAAAK,UAAAF,WAAA,SAAAN,gBAAA,gBAAAS,gBAAA,KAAAC,eAAA,IAAAC,YAAA,QAAAC,MAAAC,MAAAC,KAAAC,MAAAC,WAAAC,QAAA,SAAAC;gCACA,IAAAC,UAAAhB,aAAAE,aAAArK,SAAAoL;gCACA,IAAAD,UAAAV,eAAA;oCACA74B,cAAAu5B,UAAAT;;gCAEAL,eAAAc;gCACAZ,MAAAx3B,QAAAs3B,cAAAz4B,cAAA;gCACAouB,UAAAuK,MAAAx3B,OAAAi4B;gCACA,KAAAJ,QAAA5K,UAAA,KAAAkL,WAAA;oCACAX,MAAAvxB;oCACAgyB,aAAAhL,sBAAA+K,OAAA,OAAAA,OAAA/K;oCACAoL,WAAA;;gCAEA,IAAAF,WAAA;oCACAJ,MAAAD,KAAAI;;gCAEA,IAAAG,UAAA;oCACAb,MAAAR,cAAAY;;;4BAGArB,gBAAA/wC,KAAAgyC;4BACAA,MAAAx3B,OAAAw3B,MAAAvxB,QAAA;4BACAuxB,MAAAc,OAAA;gCACAJ,MAAA;;4BAEAV,MAAAr5B,eAAA,SAAA+S,WAAAqnB;gCACAb,gBAAAxmB,aAAA,IAAA9T;gCACAu6B,eAAApgC,KAAAC,IAAA+gC,aAAAb,eAAA;;4BAEAF,MAAAgB,QAAA;gCACA,IAAAT,OAAA;oCACA;;gCAEA,KAAAN,YAAAP,kBAAA;oCACAuB,aAAAV;uCACyB;oCACzBb,iBAAAa;;gCAEAD,OAAArD;gCACAsD,MAAA;gCACA,IAAAP,UAAA7C,SAAA;oCACAC,gBAAA;;;4BAGA4C,MAAAX,OAAA,SAAA3mB;gCACA,IAAA6nB,QAAA;oCACAP,MAAAgB;uCACyB,IAAAtoB,UAAA;oCACzBrR,eAAAy4B,6BAAAF;uCACyB,IAAAI,MAAAvxB,QAAA;oCACzBqxB,cAAAF,aAAAM,gBAAA;;gCAEAI,OAAAD,SAAA,IAAApD,cAAAgD,YAAAR,gBAAA,SAAAh9B;oCACA,OAAAlI,WAAAkI,IAAAg+B,YAAAT,MAAAx3B,QAAA;oCACyBi3B;gCACzB,IAAAO,UAAA7C,SAAA;oCACAC,gBAAA;;gCAEAsD,MAAA;;4BAEAV,MAAA3lC,MAAA,SAAA9K;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA8tC;;gCAEAA,OAAA9wC;gCACAixC,OAAA,KAAAH,QAAA;gCACAI,YAAAhzC,KAAA+a,OAAAg4B;gCACAR,MAAAX;;4BAEAW,MAAAD,SAAA,SAAAxwC;gCACA,KAAAic,UAAAjZ,QAAA;oCACA,OAAA0tC;;gCAEAD,MAAAgB;gCACAf,UAAA1wC;gCACAywC,MAAA3lC,IAAAgmC;;4BAEAL,MAAA3lC;4BACAE,WAAA;gCACA,IAAA0lC,YAAA,UAAAD,MAAAvxB,QAAA,KAAAzM,SAAAk/B,oBAAA;oCACAlB,MAAAD,OAAA;;+BAEqB;;wBAErB5xC,IAAA0rC,GAAAsH,OAAAxyC,YAAA,IAAAkrC,GAAAuH,OAAArC;wBACA5wC,EAAAO,cAAAmrC,GAAAsH;wBACA,IAAA58B,YAAAy1B,OAAA,2BAAA70B,UAAAP;4BACAnX,KAAAmX;4BACAnX,KAAAsa,YAAAta,KAAAmb,iBAAAzD,YAAA;4BACA1X,KAAAia,SAAAiK,OAAA/M,KAAAtK,UAAA;4BACA7M,KAAA+gB,aAAA;4BACA/gB,KAAAoc,UAAAjF,KAAAwC,oBAAA;4BACA3Z,KAAAuK,OAAA4M,KAAA5M;4BACAvK,KAAAic,YAAA9E,KAAAy8B,aAAA;4BACA,KAAAn0B,eAAA;gCACA;;4BAEA,KAAAkwB,eAAA;gCACAD,QAAAkC;;4BAEA,IAAAvxB,KAAArgB,KAAAmX,KAAAyH,YAAAc,sBAAAD;4BACAY,GAAAhU,IAAArM,MAAAqgB,GAAAvG;4BACA,IAAA9Z,KAAAmX,KAAAwJ,QAAA;gCACA3gB,KAAA2gB,OAAA;;;wBAGA+uB,UAAA54B,UAAAqC,SAAA,IAAAizB,GAAAsH;wBACAhzC,IAAAoW,UAAA5V;wBACAR,EAAAwX,SAAAxX,EAAAoY,MAAApY,EAAAwZ,WAAAxZ,EAAAic,UAAA;wBACAjc,EAAA8Z,aAAA9Z,EAAAoZ,QAAA;wBACApZ,EAAA8a,gBAAA;wBACA9a,EAAAoa,QAAApa,EAAA2iB,QAAA3iB,EAAA6b,YAAA7b,EAAAmZ,YAAAnZ,EAAAye,WAAA;wBACAze,EAAAic,UAAA;wBACA,IAAAk3B,gBAAA;4BACA,IAAAlE,iBAAAwC,aAAAE,cAAA;gCACA3C,QAAAkC;;4BAEA9kC,WAAA+mC,eAAA;;wBAEAA;wBACAnzC,EAAA4jB,OAAA,SAAAvH,MAAA/B;4BACA,IAAA+B,QAAA;gCACA/c,KAAAokB,KAAArH,MAAA/B;;4BAEA,OAAAhb,KAAA4zC,SAAA,OAAAjzB,OAAA;;wBAEAjgB,EAAAggB,QAAA,SAAAozB,QAAA94B;4BACA,IAAA84B,UAAA;gCACA9zC,KAAAokB,KAAA0vB,QAAA94B;;4BAEA,OAAAhb,KAAA2gB,OAAA;;wBAEAjgB,EAAAqzC,SAAA,SAAAh3B,MAAA/B;4BACA,IAAA+B,QAAA;gCACA/c,KAAAokB,KAAArH,MAAA/B;;4BAEA,OAAAhb,KAAA2gB,OAAA;;wBAEAjgB,EAAA0jB,OAAA,SAAArJ,MAAAC;4BACA,OAAAhb,KAAAkgB,UAAAgE,OAAAnJ,OAAAC,mBAAA;;wBAEAta,EAAAszC,UAAA,SAAAC,cAAAj5B;4BACA,OAAAhb,KAAA4zC,SAAA,OAAAjzB,OAAA,OAAAT,UAAA+zB,gBAAAj0C,KAAAia,SAAA,GAAAe,mBAAA;;wBAEAta,EAAA0d,UAAA,SAAArB,MAAA/B;4BACA,IAAA+B,QAAA;gCACA/c,KAAAokB,KAAArH,QAAA/c,KAAAob,iBAAAJ;;4BAEA,OAAAhb,KAAA4zC,SAAA,MAAAjzB,OAAA;;wBAEAjgB,EAAAgM,SAAA,SAAAqO,MAAAC,gBAAAC;wBACAva,EAAA0Y,aAAA;4BACApZ,KAAA8Z,QAAA9Z,KAAAwa,aAAA;4BACAxa,KAAAka,WAAAla,KAAA8Y,MAAA;4BACA9Y,KAAAwb,gBAAA;4BACA,IAAAxb,KAAA8Y,QAAA9Y,KAAAmf,UAAA;gCACAnf,KAAA+Z,SAAA;;4BAEA,OAAA/Z;;wBAEAU,EAAA+mB,WAAA;4BACA,IAAApH,KAAArgB,KAAA6Z,WAAAq6B,YAAAl0C,KAAA4Z,YAAAoJ;4BACA,QAAA3C,OAAArgB,KAAA8Y,QAAA9Y,KAAA2c,WAAA0D,GAAAoH,eAAAzE,UAAA3C,GAAA2C,cAAAkxB,aAAAlxB,UAAAkxB,YAAAl0C,KAAAob,kBAAApb,KAAA+gB;;wBAEArgB,EAAAqZ,WAAA,SAAAhP,SAAA+a;4BACA,KAAA6pB,eAAA;gCACAD,QAAAkC;;4BAEA5xC,KAAA8Y,OAAA/N;4BACA/K,KAAAoc,UAAApc,KAAAynB;4BACA,IAAA3B,mBAAA;gCACA,IAAA/a,YAAA/K,KAAAmf,UAAA;oCACAnf,KAAA6Z,UAAAxN,IAAArM,WAAA4Z,aAAA5Z,KAAAia;uCACyB,KAAAlP,WAAA/K,KAAAmf,UAAA;oCACzBnf,KAAA6Z,UAAA6I,QAAA1iB,MAAA;;;4BAGA;;wBAEAU,EAAAilB,QAAA,SAAAxO,MAAAM;4BACA,OAAAzX,KAAA+Z,SAAA;;wBAEArZ,EAAAmY,OAAA,SAAA1B,MAAAM;4BACAzX,KAAA2lB,MAAAxO,MAAAM;4BACA,OAAAzX;;wBAEAU,EAAA2Y,WAAA,SAAA86B;4BACA,IAAA70B,QAAA60B,cAAAn0C,YAAAmf;4BACA,OAAAG,OAAA;gCACAA,MAAApH,SAAA;gCACAoH,cAAAH;;4BAEA,OAAAnf;;wBAEAU,EAAA+gB,oBAAA,SAAA/C;4BACA,IAAAzH,IAAAyH,OAAA5Z,QAAAoZ,OAAAQ,OAAAnb;4BACA,SAAA0T,KAAA;gCACA,IAAAyH,OAAAzH,OAAA,UAAiD;oCACjDiH,KAAAjH,KAAAjX;;;4BAGA,OAAAke;;wBAEAxd,EAAA8b,YAAA,SAAA1U;4BACA,IAAAwO,IAAAtW,KAAAmX;4BACAb,EAAAxO,MAAA+V,MAAAvH,EAAAxO,OAAA,YAAAwO,EAAA0H,iBAAAhe,MAAAsW,EAAAxO,OAAA,aAAA6Q;;wBAEAjY,EAAA0zC,gBAAA,SAAAtsC,MAAA4T,UAAAgD,QAAAC;4BACA,KAAA7W,QAAA,IAAAqc,OAAA;gCACA,IAAA7N,IAAAtW,KAAAmX;gCACA,IAAA4G,UAAAjZ,WAAA;oCACA,OAAAwR,EAAAxO;;gCAEA,IAAA4T,YAAA;2CACApF,EAAAxO;uCACyB;oCACzBwO,EAAAxO,QAAA4T;oCACApF,EAAAxO,OAAA,YAAA0Q,SAAAkG,kBAAA8C,KAAA,IAAAhc,QAAA,eAAoG,IAAAxF,KAAAyhB,kBAAA/C;oCACpGpI,EAAAxO,OAAA,WAAA6W;;gCAEA,IAAA7W,SAAA;oCACA9H,KAAAuc,YAAAb;;;4BAGA,OAAA1b;;wBAEAU,EAAAmM,QAAA,SAAA/K;4BACA,KAAAic,UAAAjZ,QAAA;gCACA,OAAA9E,KAAAia;;4BAEA,IAAAja,KAAA6Z,UAAAwH,mBAAA;gCACArhB,KAAAk0C,UAAAl0C,KAAA4Z,aAAA9X,QAAA9B,KAAAia;;4BAEAja,KAAAia,SAAAnY;4BACA,OAAA9B;;wBAEAU,EAAAgX,WAAA,SAAA5V;4BACA,KAAAic,UAAAjZ,QAAA;gCACA9E,KAAAkY,SAAA;gCACA,OAAAlY,KAAAsa;;4BAEAta,KAAAsa,YAAAta,KAAAmb,iBAAArZ;4BACA9B,KAAAqZ,SAAA;4BACA,IAAArZ,KAAA6Z,UAAAwH,mBAAA,IAAArhB,KAAA8Z,QAAA,OAAA9Z,KAAA8Z,QAAA9Z,KAAAsa,WAAA,IAAAxY,UAAA;gCACA9B,KAAAkgB,UAAAlgB,KAAAwa,cAAA1Y,QAAA9B,KAAAsa,YAAA;;4BAEA,OAAAta;;wBAEAU,EAAA0a,gBAAA,SAAAtZ;4BACA9B,KAAAkY,SAAA;4BACA,QAAA6F,UAAAjZ,SAAA9E,KAAAmb,iBAAAnb,KAAA0X,SAAA5V;;wBAEApB,EAAAqa,OAAA,SAAAjZ,OAAAkZ;4BACA,KAAA+C,UAAAjZ,QAAA;gCACA,OAAA9E,KAAA8Z;;4BAEA,IAAA9Z,KAAAkY,QAAA;gCACAlY,KAAAob;;4BAEA,OAAApb,KAAAkgB,UAAApe,QAAA9B,KAAAsa,YAAAta,KAAAsa,YAAAxY,OAAAkZ;;wBAEAta,EAAAwf,YAAA,SAAAnF,MAAAC,gBAAA+K;4BACA,KAAA4pB,eAAA;gCACAD,QAAAkC;;4BAEA,KAAA7zB,UAAAjZ,QAAA;gCACA,OAAA9E,KAAAwa;;4BAEA,IAAAxa,KAAA6Z,WAAA;gCACA,IAAAkB,OAAA,MAAAgL,UAAA;oCACAhL,QAAA/a,KAAAob;;gCAEA,IAAApb,KAAA6Z,UAAAwH,mBAAA;oCACA,IAAArhB,KAAAkY,QAAA;wCACAlY,KAAAob;;oCAEA,IAAAA,gBAAApb,KAAAmb,gBAAAkF,KAAArgB,KAAA6Z;oCACA,IAAAkB,OAAAK,kBAAA2K,UAAA;wCACAhL,OAAAK;;oCAEApb,KAAA4Z,cAAA5Z,KAAA2c,UAAA3c,KAAAijB,aAAA5C,GAAAvG,WAAA9Z,KAAAic,YAAAlB,OAAAK,gBAAAL,QAAA/a,KAAA+gB;oCACA,KAAAV,GAAAnI,QAAA;wCACAlY,KAAAqZ,SAAA;;oCAEA,IAAAgH,GAAAxG,WAAA;wCACA,OAAAwG,GAAAxG,WAAA;4CACA,IAAAwG,GAAAxG,UAAAC,WAAAuG,GAAAzG,aAAAyG,GAAA7F,cAAA6F,GAAAU,YAAA;gDACAV,GAAAH,UAAAG,GAAA7F,YAAA;;4CAEA6F,QAAAxG;;;;gCAIA,IAAA7Z,KAAA8Y,KAAA;oCACA9Y,KAAA+Z,SAAA;;gCAEA,IAAA/Z,KAAAwa,eAAAO,QAAA/a,KAAAsa,cAAA;oCACA,IAAAqH,YAAA7c,QAAA;wCACA8c;;oCAEA5hB,KAAA0M,OAAAqO,MAAAC,gBAAA;oCACA,IAAA2G,YAAA7c,QAAA;wCACA8c;;;;4BAIA,OAAA5hB;;wBAEAU,EAAAugB,WAAAvgB,EAAAwgB,gBAAA,SAAApf,OAAAkZ;4BACA,IAAAtD,WAAA1X,KAAA0X;4BACA,QAAAqG,UAAAjZ,SAAA4S,WAAA1X,KAAA8Z,QAAApC,WAAA1X,KAAAyZ,QAAAzZ,KAAAkgB,UAAAxI,WAAA5V,OAAAkZ;;wBAEAta,EAAAwzC,YAAA,SAAApyC;4BACA,KAAAic,UAAAjZ,QAAA;gCACA,OAAA9E,KAAA4Z;;4BAEA,IAAA9X,UAAA9B,KAAA4Z,YAAA;gCACA5Z,KAAA4Z,aAAA9X;gCACA,IAAA9B,KAAAmf,UAAA,IAAAnf,KAAAmf,SAAAmC,eAAA;oCACAthB,KAAAmf,SAAA9S,IAAArM,MAAA8B,QAAA9B,KAAAia;;;4BAGA,OAAAja;;wBAEAU,EAAAqkB,UAAA,SAAAsvB;4BACA,OAAAr0C,KAAA4Z,cAAAy6B,kBAAA,QAAAr0C,KAAAob,kBAAApb,KAAA0X,cAAA1X,KAAA+gB;;wBAEArgB,EAAAslB,YAAA,SAAAlkB;4BACA,KAAAic,UAAAjZ,QAAA;gCACA,OAAA9E,KAAA+gB;;4BAEAjf,iBAAAqW;4BACA,IAAAnY,KAAA6Z,aAAA7Z,KAAA6Z,UAAAwH,mBAAA;gCACA,IAAAizB,YAAAt0C,KAAAijB,YAAA9N,IAAAm/B,2BAAA,IAAAA,YAAAt0C,KAAA6Z,UAAAqG;gCACAlgB,KAAA4Z,aAAAzE,SAAAnV,KAAA4Z,cAAA5Z,KAAA+gB,aAAAjf;;4BAEA9B,KAAA+gB,aAAAjf;4BACA,OAAA9B,KAAAqZ,SAAA;;wBAEA3Y,EAAAkzC,WAAA,SAAA9xC;4BACA,KAAAic,UAAAjZ,QAAA;gCACA,OAAA9E,KAAAic;;4BAEA,IAAAna,SAAA9B,KAAAic,WAAA;gCACAjc,KAAAic,YAAAna;gCACA9B,KAAAkgB,UAAAlgB,KAAA6Z,cAAA7Z,KAAA6Z,UAAAwH,oBAAArhB,KAAAob,kBAAApb,KAAAwa,aAAAxa,KAAAwa,YAAA;;4BAEA,OAAAxa;;wBAEAU,EAAAigB,SAAA,SAAA7e;4BACA,KAAAic,UAAAjZ,QAAA;gCACA,OAAA9E,KAAA2c;;4BAEA,IAAA0D,KAAArgB,KAAA6Z,WAAA06B,KAAApB;4BACA,IAAArxC,SAAA9B,KAAA2c,SAAA,IAAA0D,IAAA;gCACA,KAAAsvB,kBAAA7tC,OAAA;oCACA4tC,QAAAkC;;gCAEA2C,MAAAl0B,GAAA2C;gCACAmwB,UAAAoB,MAAAv0C,KAAAijB;gCACA,KAAAnhB,SAAAue,GAAAgB,mBAAA;oCACArhB,KAAA4Z,cAAAu5B;oCACAnzC,KAAAqZ,SAAA;;gCAEArZ,KAAAijB,aAAAnhB,QAAAyyC,MAAA;gCACAv0C,KAAA2c,UAAA7a;gCACA9B,KAAAoc,UAAApc,KAAAynB;gCACA,KAAA3lB,SAAAqxC,YAAA,KAAAnzC,KAAAka,YAAAla,KAAA0X,YAAA;oCACA68B,MAAAl0B,GAAAgB,oBAAArhB,KAAAwa,cAAA+5B,MAAAv0C,KAAA4Z,cAAA5Z,KAAA+gB;oCACA/gB,KAAA0M,OAAA6nC,aAAAv0C,KAAAwa,YAAA;;;4BAGA,IAAAxa,KAAA8Y,QAAAhX,OAAA;gCACA9B,KAAA+Z,SAAA;;4BAEA,OAAA/Z;;wBAEA,IAAA+W,iBAAAw1B,OAAA,gCAAAp1B;4BACAL,UAAAvW,KAAAP,MAAA,GAAAmX;4BACAnX,KAAAkc,qBAAAlc,KAAAqhB,oBAAA;;wBAEA3gB,IAAAqW,eAAA7V,YAAA,IAAA4V;wBACApW,EAAAO,cAAA8V;wBACArW,EAAAmY,OAAAC,MAAA;wBACApY,EAAA6e,SAAA7e,EAAA2iB,QAAA3iB,EAAA4kB,UAAA;wBACA5kB,EAAA4gB,gBAAA;wBACA5gB,EAAA2L,MAAA3L,EAAAsZ,SAAA,SAAA4I,OAAA/S,UAAA6R,OAAAnE;4BACA,IAAAi3B,WAAAC;4BACA7xB,MAAAhJ,aAAAsK,OAAArU,YAAA,KAAA+S,MAAA3I;4BACA,IAAA2I,MAAAjG,SAAA,IAAA3c,SAAA4iB,MAAA/I,WAAA;gCACA+I,MAAAK,aAAAL,MAAAhJ,cAAA5Z,KAAAgjB,YAAAJ,MAAAhJ,cAAAgJ,MAAA7B;;4BAEA,IAAA6B,MAAAzD,UAAA;gCACAyD,MAAAzD,SAAAuD,QAAAE,OAAA;;4BAEAA,MAAAzD,WAAAyD,MAAA/I,YAAA7Z;4BACA,IAAA4iB,MAAA9J,KAAA;gCACA8J,MAAA7I,SAAA;;4BAEAy6B,YAAAx0C,KAAAqjB;4BACA,IAAArjB,KAAAshB,eAAA;gCACAmzB,KAAA7xB,MAAAhJ;gCACA,OAAA46B,uBAAA56B,aAAA66B,IAAA;oCACAD,sBAAA1vB;;;4BAGA,IAAA0vB,WAAA;gCACA5xB,MAAA9H,QAAA05B,UAAA15B;gCACA05B,UAAA15B,QAAA8H;mCACqB;gCACrBA,MAAA9H,QAAA9a,KAAAuf;gCACAvf,KAAAuf,SAAAqD;;4BAEA,IAAAA,MAAA9H,OAAA;gCACA8H,MAAA9H,MAAAgK,QAAAlC;mCACqB;gCACrB5iB,KAAAqjB,QAAAT;;4BAEAA,MAAAkC,QAAA0vB;4BACAx0C,KAAAslB,UAAA1C;4BACA,IAAA5iB,KAAA6Z,WAAA;gCACA7Z,KAAAqZ,SAAA;;4BAEA,OAAArZ;;wBAEAU,EAAAgiB,UAAA,SAAApD,OAAA6D;4BACA,IAAA7D,MAAAH,aAAAnf,MAAA;gCACA,KAAAmjB,aAAA;oCACA7D,MAAAvF,SAAA;;gCAEA,IAAAuF,MAAAwF,OAAA;oCACAxF,MAAAwF,MAAAhK,QAAAwE,MAAAxE;uCACyB,IAAA9a,KAAAuf,WAAAD,OAAA;oCACzBtf,KAAAuf,SAAAD,MAAAxE;;gCAEA,IAAAwE,MAAAxE,OAAA;oCACAwE,MAAAxE,MAAAgK,QAAAxF,MAAAwF;uCACyB,IAAA9kB,KAAAqjB,UAAA/D,OAAA;oCACzBtf,KAAAqjB,QAAA/D,MAAAwF;;gCAEAxF,MAAAxE,QAAAwE,MAAAwF,QAAAxF,MAAAH,WAAA;gCACA,IAAAG,UAAAtf,KAAAslB,SAAA;oCACAtlB,KAAAslB,UAAAtlB,KAAAqjB;;gCAEA,IAAArjB,KAAA6Z,WAAA;oCACA7Z,KAAAqZ,SAAA;;;4BAGA,OAAArZ;;wBAEAU,EAAAgM,SAAA,SAAAqO,MAAAC,gBAAAC;4BACA,IAAAqE,QAAAtf,KAAAuf,QAAAkD;4BACAziB,KAAAwa,aAAAxa,KAAA8Z,QAAA9Z,KAAAwb,eAAAT;4BACA,OAAAuE,OAAA;gCACAmD,OAAAnD,MAAAxE;gCACA,IAAAwE,MAAAlD,WAAArB,QAAAuE,MAAA1F,eAAA0F,MAAA3C,SAAA;oCACA,KAAA2C,MAAArD,WAAA;wCACAqD,MAAA5S,QAAAqO,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;2CAC6B;wCAC7BqE,MAAA5S,SAAA4S,MAAApH,SAAAoH,MAAAnE,iBAAAmE,MAAAlE,oBAAAL,OAAAuE,MAAA1F,cAAA0F,MAAAyB,YAAA/F,gBAAAC;;;gCAGAqE,QAAAmD;;;wBAGA/hB,EAAAsiB,UAAA;4BACA,KAAA2sB,eAAA;gCACAD,QAAAkC;;4BAEA,OAAA5xC,KAAAwa;;wBAEA,IAAA1G,YAAAy4B,OAAA,sBAAA90B,QAAAC,UAAAP;4BACAL,UAAAvW,KAAAP,MAAA0X,UAAAP;4BACAnX,KAAA0M,SAAAoH,UAAA5S,UAAAwL;4BACA,IAAA+K,UAAA;gCACA;;4BAEAzX,KAAAyX,oCAAA,WAAAA,SAAA3D,UAAAqK,SAAA1G;4BACA,IAAAc,aAAAd,OAAAi9B,UAAAj9B,OAAA3S,UAAA2S,WAAAvE,UAAAuE,OAAA,OAAAA,OAAA,OAAAvE,UAAAuE,OAAA,GAAA4xB,YAAA5xB,OAAA,GAAAhO,UAAAgO,OAAA4xB,WAAArqB,YAAAhf,KAAAmX,KAAA6H,WAAA/H,GAAA09B,MAAAv9B;4BACApX,KAAA40C,aAAA51B,yBAAA,OAAA61B,iBAAA/gC,UAAAghC,2BAAA91B,cAAA,WAAAA,aAAA,IAAA61B,iBAAA71B;4BACA,KAAAzG,cAAAd,kBAAAqL,SAAArL,OAAAtS,QAAAqT,SAAAf,0BAAA;gCACAzX,KAAAorC,WAAAh0B,UAAAJ,OAAAS;gCACAzX,KAAA6rC;gCACA7rC,KAAA+0C;gCACA,KAAA99B,IAAA,GAAmCA,IAAAG,QAAAtS,QAAoBmS,KAAA;oCACvD09B,OAAAv9B,QAAAH;oCACA,KAAA09B,MAAA;wCACAv9B,QAAAkT,OAAArT,KAAA;wCACA;2CAC6B,WAAA09B,SAAA;wCAC7BA,OAAAv9B,QAAAH,OAAAnD,UAAAqK,SAAAw2B;wCACA,WAAAA,SAAA;4CACAv9B,QAAAkT,OAAArT,IAAA;;wCAEA;2CAC6B,IAAA09B,KAAA7vC,UAAA6vC,SAAAzhC,UAAAyhC,KAAA,OAAAA,KAAA,OAAAzhC,UAAAyhC,KAAA,GAAAtL,YAAAsL,KAAA,GAAAlrC,UAAAkrC,KAAAtL,WAAA;wCAC7BjyB,QAAAkT,OAAArT,KAAA;wCACAjX,KAAAorC,WAAAh0B,kBAAA7T,OAAAyT,OAAA29B;wCACA;;oCAEA30C,KAAA+0C,UAAA99B,KAAA+9B,UAAAL,MAAA30C,MAAA;oCACA,IAAAgf,cAAA,OAAAhf,KAAA+0C,UAAA99B,GAAAnS,SAAA;wCACAmwC,gBAAAN,MAAA30C,MAAA,SAAAA,KAAA+0C,UAAA99B;;;mCAGqB;gCACrBjX,KAAA6rC;gCACA7rC,KAAA+0C,YAAAC,UAAAv9B,QAAAzX,MAAA;gCACA,IAAAgf,cAAA,OAAAhf,KAAA+0C,UAAAjwC,SAAA;oCACAmwC,gBAAAx9B,QAAAzX,MAAA,SAAAA,KAAA+0C;;;4BAGA,IAAA/0C,KAAAmX,KAAAwC,mBAAAjC,aAAA,KAAA1X,KAAAia,WAAA,KAAAja,KAAAmX,KAAAwC,oBAAA;gCACA3Z,KAAA8Z,SAAA3B;gCACAnY,KAAA0M,OAAA4F,KAAAC,IAAA,IAAAvS,KAAAia;;2BAEiB,OAAA3B,cAAA,SAAAhC;4BACjB,OAAAA,OAAAxR,UAAAwR,MAAApD,UAAAoD,EAAA,OAAAA,EAAA,OAAApD,UAAAoD,EAAA,GAAA+yB,YAAA/yB,EAAA,GAAA7M,UAAA6M,EAAA+yB;2BACiBpa,WAAA,SAAA9X,MAAAM;4BACjB,IAAAy9B,UAAgCx0C;4BAChC,KAAAA,KAAAyW,MAAA;gCACA,KAAA+zB,eAAAxqC,cAAA+W,WAAA/W,MAAA,eAAAA,MAAA,OAAAA,MAAA,OAAAA,MAAA,WAAAA,MAAA,YAAAA,MAAA,eAAAA,MAAA,eAAAy0C,SAAAz0C,MAAAy0C,SAAAz0C,MAAAy0C,SAAAz0C,GAAAuuB,WAAA;oCACAimB,IAAAx0C,KAAAyW,KAAAzW;2CACAyW,KAAAzW;;;4BAGAyW,KAAA+9B;;wBAEAx0C,IAAAoT,UAAA5S,YAAA,IAAA4V;wBACApW,EAAAO,cAAA6S;wBACApT,EAAAmY,OAAAC,MAAA;wBACApY,EAAA+Y,QAAA;wBACA/Y,EAAA0Z,WAAA1Z,EAAA0qC,WAAA1qC,EAAA00C,oBAAA10C,EAAAkc,WAAA;wBACAlc,EAAAyZ,0BAAAzZ,EAAAgc,QAAA;wBACA5I,UAAA8E,UAAA;wBACA9E,UAAAuhC,cAAA30C,EAAAob,QAAA,IAAAqK,KAAA;wBACArS,UAAAghC,mBAAA;wBACAhhC,UAAAqF,SAAAu2B;wBACA57B,UAAAwhC,YAAA;wBACAxhC,UAAAoF,eAAA,SAAA+S,WAAAqnB;4BACA5D,QAAAx2B,aAAA+S,WAAAqnB;;wBAEAx/B,UAAAqK,WAAAjL,OAAAqiC,KAAAriC,OAAAsiC,UAAA,SAAAvmC;4BACA,IAAAkP,WAAAjL,OAAAqiC,KAAAriC,OAAAsiC;4BACA,IAAAr3B,UAAA;gCACArK,UAAAqK;gCACA,OAAAA,SAAAlP;;4BAEA,cAAAsF,aAAA,cAAAtF,IAAAsF,SAAAkhC,mBAAAlhC,SAAAkhC,iBAAAxmC,KAAAsF,SAAAmhC,eAAAzmC,EAAAgV,OAAA,aAAAhV,EAAAkV,OAAA,KAAAlV;;wBAEA,IAAA0S,kBAAAg0B,kBAAsDC,cAAA,kDAAAC,YAAA,SAAAv/B;4BACtD,IAAAqE,KAAA3a,KAAAoa,UAAA7H,MAAA,MAAAgF;4BACA,OAAAoD,IAAA;gCACApD,OAAAoD,GAAA6wB,OAAA7wB,GAAAla,IAAA6V,IAAAqE,GAAAE,IAAAvE,IAAAtW,KAAAwhB,KAAA,MAAAxhB,KAAA88B;gCACA,IAAAniB,GAAA7F,GAAA;oCACAyC,MAAAjF,KAAAqD,MAAA4B;uCACyB,IAAAA,MAAAhF,KAAA,IAAAgF,OAAAhF,KAAA;oCACzBgF,MAAA;;gCAEA,KAAAoD,GAAA3F,GAAA;oCACA2F,GAAAxF,EAAAwF,GAAAja,KAAA6W;uCACyB,IAAAoD,GAAAm7B,IAAA;oCACzBn7B,GAAAxF,EAAAwF,GAAAja,GAAAia,GAAAm7B,IAAAv+B;uCACyB;oCACzBoD,GAAAxF,EAAAwF,GAAAja,GAAA6W;;gCAEAoD,QAAAG;;2BAEiBi7B,WAAA,SAAAjZ,OAAA9vB,KAAAmnB,QAAAxZ;4BACjB,IAAAzT,MAAA41B,OAAA9vB,OAAAmuB,YAAA,GAAAtgB,IAAA,IAAAwgB,QAAA,GAAA2a,WAAAC,SAAAC,KAAAj/B,GAAA3C,GAAA6hC,YAAAC;4BACAlvC,EAAA41B;4BACA,IAAA3I,QAAA;gCACAA,OAAAjtB;gCACA41B,QAAA51B,EAAA;gCACA8F,MAAA9F,EAAA;;4BAEAA,EAAApC,SAAA;4BACAkxC,YAAAlZ,MAAA/B,MAAA6a;4BACAK,UAAAjpC,IAAA+tB,MAAA6a;4BACA,IAAAj7B,IAAA;gCACAA,GAAAG,QAAA;gCACAH,GAAA6wB,OAAA;gCACAtkC,EAAAkT,WAAAO;;4BAEArG,IAAA2hC,QAAAnxC;4BACA,KAAAmS,IAAA,GAA+BA,IAAA3C,GAAO2C,KAAA;gCACtCm/B,aAAAH,QAAAh/B;gCACAk/B,aAAAnpC,IAAAmX,OAAAgX,WAAAnuB,IAAAxH,QAAA4wC,YAAAjb;gCACAtgB,KAAAs7B,eAAAl/B,IAAAk/B,aAAA;gCACAhb,aAAAgb,WAAArxC;gCACA,IAAAu2B,OAAA;oCACAA,iBAAA;uCACyB,IAAA8a,WAAAhyB,QAAA;oCACzBkX,QAAA;;gCAEA,IAAA+a,eAAAJ,UAAA/+B,MAAA++B,UAAAlxC,UAAAmS,GAAA;oCACA4D,KAAAu7B;uCACyB;oCACzB,IAAAv7B,GAAA;wCACA3T,EAAA/B,KAAA0V;wCACAA,IAAA;;oCAEAq7B,MAAA9oB,WAAA4oB,UAAA/+B;oCACA/P,EAAA/B,KAAA+wC;oCACAhvC,EAAAkT;wCACAU,OAAA5T,EAAAkT;wCACAjF,GAAAjO;wCACAxG,GAAAwG,EAAApC,SAAA;wCACA+V,GAAAq7B;wCACAz1C,IAAA21C,WAAAnyB,OAAA,aAAAta,SAAAysC,WAAAnyB,OAAA,gBAAAmJ,WAAAgpB,WAAAjyB,OAAA,MAAAiJ,WAAAgpB,cAAAF,QAAA;wCACAlhC,GAAA;wCACAF,GAAAumB,iBAAA;;;gCAGAF,aAAAib,WAAAtxC;;4BAEA+V,KAAA7N,IAAAmX,OAAAgX;4BACA,IAAAtgB,GAAA;gCACA3T,EAAA/B,KAAA0V;;4BAEA3T,EAAA2oB,WAAAgmB;4BACA,OAAA3uC;2BACiBmvC,gBAAA,SAAA5+B,QAAAiY,MAAAoN,OAAA9vB,KAAAswB,eAAA3nB,OAAA2gC,WAAAC;4BACjB,IAAA17B,IAAAiiB,UAAA,QAAArlB,OAAAiY,QAAAoN,OAAAh1B,cAAA2P,OAAAiY,OAAA0J,oBAAApsB,QAAA,YAAAA,IAAAiX,OAAA,YAAAtJ;gCACAxF,GAAAsC;gCACA/W,GAAAgvB;gCACA7U;gCACA7F,GAAAlN,SAAA;gCACAgkC,IAAA;gCACAj2B,GAAAynB,iBAAA5N;gCACA5a,GAAAa;gCACAynB,IAAA;gCACA38B,GAAA24B,aAAAzvB,SAAAqD,IAAAiX,OAAA,gBAAAmJ,WAAApgB,IAAAmX,OAAA,MAAAiJ,WAAApgB,OAAA6N,KAAA;+BACqB2wB,MAAAgL;4BACrB,IAAA1uC,SAAA;gCACA,IAAAA,SAAA,cAAAg1B,UAAA;oCACA0Z,aAAA9mB,KAAAlqB,QAAA,iBAAAiS,OAAA,QAAAiY,KAAAvL,OAAA,qBAAAuL,OAAA,QAAAA,KAAAvL,OAAA;oCACAxJ,GAAAE,QAAAy7B,YAAA7+B,OAAA++B,YAAAF,aAAA7+B,OAAA++B;;gCAEA,WAAA37B,MAAA,aAAAy7B,aAAAtyB,MAAAnJ,KAAA;oCACAF,GAAAm7B,KAAAQ;oCACA9K,OAAAuK,SAAAl7B,GAAA7N,KAAAupC,gBAAAziC,UAAA4nB,qBAAA/gB;oCACAA;wCACAxF,GAAAq2B;wCACA9qC,GAAA;wCACAma,GAAA;wCACApa,GAAA;wCACAuU,GAAA;wCACA82B,IAAA;wCACAj2B,GAAAynB,iBAAA5N;wCACA0N,IAAA;;uCAEyB,KAAAhE,YAAA;oCACzBze,GAAAE,IAAAuS,WAAAvS;oCACAF,GAAAla,IAAA2sB,WAAApgB,OAAA2N,GAAAE,KAAA;;;4BAGA,IAAAF,GAAAla,GAAA;gCACA,IAAAka,GAAAG,QAAA9a,KAAAoa,UAAA;oCACAO,GAAAG,MAAAgK,QAAAnK;;gCAEA3a,KAAAoa,WAAAO;gCACA,OAAAA;;2BAEiBtC,aAAAvE,UAAAuE;4BACjBI,SAAAD;4BACAD,YAAAD;4BACAmE,YAAAkF;4BACA80B,SAAAV;2BACiBZ,WAAArhC,UAAAqhC,eAAoCuB,eAAAr+B,WAAAiI,kBAA4Cq2B,kBAAA,GAAAzL,iBAAA7yB,WAAA8yB;4BACjGzkB,MAAA;4BACA7Z,OAAA;4BACAmS,WAAA;4BACApB,YAAA;4BACAiB,kBAAA;4BACAf,iBAAA;4BACAc,WAAA;4BACA5B,cAAA;4BACAI,SAAA;4BACAmE,UAAA;4BACAq1B,gBAAA;4BACAC,eAAA;4BACAh6B,SAAA;4BACAi6B,eAAA;4BACAC,cAAA;4BACAj4B,mBAAA;4BACAC,yBAAA;4BACAi4B,wBAAA;4BACAl6B,UAAA;4BACAm6B,gBAAA;4BACAC,eAAA;4BACAC,YAAA;4BACAt/B,MAAA;4BACA8B,iBAAA;4BACA5B,QAAA;4BACAE,aAAA;4BACA1N,MAAA;4BACAoW,QAAA;4BACAizB,UAAA;4BACAwD,SAAA;4BACAj7B,MAAA;4BACAk7B,aAAA;4BACAr5B,eAAA;4BACAu4B,cAAA;4BACAl2C,IAAA;2BACiBw0C;4BACjBvS,MAAA;4BACA9a,KAAA;4BACA8vB,MAAA;4BACAC,YAAA;4BACAC,YAAA;4BACAC,aAAA;4BACAC,QAAA;4BACAC,SAAA;2BACiBj4B,sBAAA5I,UAAA4I,sBAAA,IAAA3I,kBAAA0I,gBAAA3I,UAAA2I,gBAAA,IAAA1I,kBAAA6gC,eAAA,IAAAh2B,cAAAvJ,WAAAwJ,aAAA;4BACjB,IAAA5K,IAAA0K,YAAA7c,QAAAwa;4BACAq2B;4BACA,SAAA1+B,KAAA;gCACAqI,QAAAqC,YAAA1K;gCACA,IAAAqI,eAAA5C,UAAA;oCACA4C,MAAA5S,OAAA4S,MAAA5C,MAAA,IAAA4C,MAAA5C,MAAA;oCACA4C,MAAA5C,QAAA;;;4BAGAiF,YAAA7c,SAAA;;wBAEA2a,cAAA7F,aAAA81B,QAAA30B;wBACA2E,oBAAA9F,aAAA81B,QAAA1uB;wBACAvB,cAAArD,UAAAsD,oBAAAtD,UAAA;wBACAtP,WAAA8U,aAAA;wBACA9K,UAAA+gC,cAAA/jC,UAAApH,SAAA;4BACA,IAAAuK,GAAA/P,GAAAxG;4BACA,IAAAihB,YAAA7c,QAAA;gCACA8c;;4BAEAnC,cAAA/S,QAAAgjC,QAAA30B,OAAA0E,cAAA7F,cAAA6F,cAAAsB,YAAA;4BACArB,oBAAAhT,QAAAgjC,QAAA1uB,QAAAtB,oBAAA9F,cAAA8F,oBAAAqB,YAAA;4BACA,IAAAY,YAAA7c,QAAA;gCACA8c;;4BAEA,IAAA8tB,QAAA1uB,SAAA42B,cAAA;gCACAA,eAAAlI,QAAA1uB,SAAArX,SAAAmK,UAAAwhC,WAAA;gCACA,KAAA50C,KAAAg2C,cAAA;oCACAxvC,IAAAwvC,aAAAh2C,GAAAmf;oCACA5I,IAAA/P,EAAApC;oCACA,SAAAmS,KAAA;wCACA,IAAA/P,EAAA+P,GAAA6B,KAAA;4CACA5R,EAAAojB,OAAArT,GAAA;;;oCAGA,IAAA/P,EAAApC,WAAA;+CACA4xC,aAAAh2C;;;gCAGAA,IAAA+e,cAAAF;gCACA,KAAA7e,OAAAic,SAAA,IAAA7I,UAAAwhC,cAAA51B,oBAAAH,UAAAmwB,QAAA6B,WAAA8B,KAAAvuC,WAAA;oCACA,OAAApE,OAAAic,SAAA;wCACAjc,MAAAoa;;oCAEA,KAAApa,GAAA;wCACAgvC,QAAA6D;;;;;wBAKA7D,QAAA/hC,iBAAA,QAAAmJ,UAAA+gC;wBACA,IAAA7C,YAAA,SAAAv9B,QAAA6H,OAAAw4B;4BACA,IAAAz3C,KAAAoX,OAAAsgC,YAAA7wC,GAAA+P;4BACA,KAAAy/B,aAAAr2C,OAAAoX,OAAAsgC,aAAA13C,KAAA,MAAAs2C,qBAAA;gCACAD,aAAAr2C;oCACAoX;oCACAoI;;;4BAGA,IAAAP,OAAA;gCACApY,IAAAwvC,aAAAr2C,IAAAwf;gCACA3Y,EAAA+P,IAAA/P,EAAApC,UAAAwa;gCACA,IAAAw4B,OAAA;oCACA,SAAA7gC,KAAA;wCACA,IAAA/P,EAAA+P,OAAAqI,OAAA;4CACApY,EAAAojB,OAAArT,GAAA;;;;;4BAKA,OAAAy/B,aAAAr2C,IAAAwf;2BACiBm4B,eAAA,SAAAC,kBAAAC,kBAAAzgC,QAAA0gC;4BACjB,IAAA9pB,OAAA4pB,iBAAA9gC,KAAAkgC,aAAAjtB,IAAAC;4BACA,IAAAgE,MAAA;gCACAjE,KAAAiE,KAAA4pB,kBAAAC,kBAAAzgC,QAAA0gC;;4BAEA9pB,OAAAva,UAAAujC;4BACA,IAAAhpB,MAAA;gCACAhE,KAAAgE,KAAA4pB,kBAAAC,kBAAAzgC,QAAA0gC;;4BAEA,OAAA/tB,OAAA,SAAAC,OAAA;2BACiB4qB,kBAAA,SAAAx9B,QAAA6H,OAAAwL,OAAAstB,MAAAC;4BACjB,IAAAphC,GAAA2O,SAAA0yB,UAAAhkC;4BACA,IAAA8jC,SAAA,KAAAA,QAAA;gCACA9jC,IAAA+jC,SAAAvzC;gCACA,KAAAmS,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAA;oCAC1C,KAAAqhC,WAAAD,SAAAphC,QAAAqI,OAAA;wCACA,KAAAg5B,SAAAx/B,KAAA;4CACA,IAAAw/B,SAAA3yB,MAAA,MAAAlO,QAAA6H,QAAA;gDACAsG,UAAA;;;2CAG6B,IAAAwyB,SAAA;wCAC7B;;;gCAGA,OAAAxyB;;4BAEA,IAAAsuB,YAAA50B,MAAA1F,aAAAzB,UAAAogC,eAAAC,SAAA,GAAAC,UAAAn5B,MAAAhF,cAAA,GAAAo+B;4BACAzhC,IAAAohC,SAAAvzC;4BACA,SAAAmS,KAAA;gCACA,KAAAqhC,WAAAD,SAAAphC,QAAAqI,SAAAg5B,SAAAx/B,OAAAw/B,SAAA37B,SAAA,QAAsG,IAAA27B,SAAAz+B,cAAAyF,MAAAzF,WAAA;oCACtG6+B,6BAAAC,cAAAr5B,OAAA,GAAAm5B;oCACA,IAAAE,cAAAL,UAAAI,aAAAD,aAAA;wCACAF,SAAAC,YAAAF;;uCAEyB,IAAAA,SAAA1+B,cAAAs6B,WAAA,IAAAoE,SAAA1+B,aAAA0+B,SAAAl9B,kBAAAk9B,SAAAv3B,aAAAmzB,WAAA,OAAAuE,YAAAH,SAAAp+B,aAAAg6B,YAAAoE,SAAA1+B,cAAA;oCACzB2+B,SAAAC,YAAAF;;;4BAGArhC,IAAAuhC;4BACA,SAAAvhC,KAAA;gCACAqhC,WAAAC,SAAAthC;gCACA,IAAAmhC,SAAA,OAAAE,SAAA3yB,MAAAmF,OAAArT,QAAA6H,QAAA;oCACAsG,UAAA;;gCAEA,IAAAwyB,SAAA,MAAAE,SAAAl+B,YAAAk+B,SAAAp+B,UAAA;oCACA,IAAAk+B,SAAA,MAAAJ,aAAAM,UAAAh5B,QAAA;wCACA;;oCAEA,IAAAg5B,SAAAv+B,SAAA;wCACA6L,UAAA;;;;4BAIA,OAAAA;2BACiB+yB,gBAAA,SAAAr5B,OAAAs5B,WAAAH;4BACjB,IAAAp4B,KAAAf,MAAAzF,WAAAg/B,KAAAx4B,GAAAU,YAAA5L,IAAAmK,MAAA1F;4BACA,OAAAyG,GAAAxG,WAAA;gCACA1E,KAAAkL,GAAAzG;gCACAi/B,MAAAx4B,GAAAU;gCACA,IAAAV,GAAA1D,SAAA;oCACA;;gCAEA0D,QAAAxG;;4BAEA1E,KAAA0jC;4BACA,OAAA1jC,IAAAyjC,YAAAzjC,IAAAyjC,YAAAH,WAAAtjC,MAAAyjC,cAAAt5B,MAAApF,YAAA/E,IAAAyjC,YAAA,IAAAzgC,uBAAAhD,KAAAmK,MAAAlE,kBAAAkE,MAAAyB,aAAA83B,MAAAD,YAAAzgC,WAAA,IAAAhD,IAAAyjC,YAAAzgC;;wBAEAzX,EAAA+Z,QAAA;4BACA,IAAAnE,IAAAtW,KAAAmX,MAAAoZ,KAAAvwB,KAAAo1C,mBAAAruB,MAAA/mB,KAAAsa,WAAAZ,cAAApD,EAAAqD,iBAAA+M,OAAApQ,EAAAoQ,MAAAzP,GAAA6hC,aAAAn+B,IAAAja,GAAAq4C;4BACA,IAAAziC,EAAA8G,SAAA;gCACA,IAAApd,KAAA4c,UAAA;oCACA5c,KAAA4c,SAAAlQ,QAAA;oCACA1M,KAAA4c,SAAA/D;;gCAEAkgC;gCACA,KAAAr4C,KAAA4V,EAAA8G,SAAA;oCACA27B,UAAAr4C,KAAA4V,EAAA8G,QAAA1c;;gCAEAq4C,UAAA/5B,YAAA;gCACA+5B,UAAAp/B,kBAAA;gCACAo/B,UAAA58B,OAAAzC,aAAApD,EAAA6F,SAAA;gCACA48B,UAAA37B,UAAA27B,UAAAlsC,QAAA;gCACA7M,KAAA4c,WAAA9I,UAAA4E,GAAA1Y,KAAAyX,QAAA,GAAAshC;gCACA,IAAAr/B,WAAA;oCACA,IAAA1Z,KAAA8Z,QAAA;wCACA9Z,KAAA4c,WAAA;2CAC6B,IAAAmK,QAAA;wCAC7B;;;mCAGqB,IAAAzQ,EAAA0G,gBAAA+J,QAAA;gCACrB,IAAA/mB,KAAA4c,UAAA;oCACA5c,KAAA4c,SAAAlQ,QAAA;oCACA1M,KAAA4c,SAAA/D;oCACA7Y,KAAA4c,WAAA;uCACyB;oCACzB,IAAA5c,KAAA8Z,UAAA;wCACAJ,YAAA;;oCAEAiB;oCACA,KAAAja,KAAA4V,GAAA;wCACA,KAAA40B,eAAAxqC,YAAA;4CACAia,GAAAja,KAAA4V,EAAA5V;;;oCAGAia,GAAAqE,YAAA;oCACArE,GAAApQ,OAAA;oCACAoQ,GAAAwB,OAAAzC,aAAApD,EAAA6F,SAAA;oCACAxB,GAAAhB,kBAAAD;oCACA1Z,KAAA4c,WAAA9I,UAAA4E,GAAA1Y,KAAAyX,QAAA,GAAAkD;oCACA,KAAAjB,WAAA;wCACA1Z,KAAA4c,SAAAnC;wCACAza,KAAA4c,SAAA7C,SAAA;wCACA,IAAA/Z,KAAAmX,KAAAwC,iBAAA;4CACA3Z,KAAA4c,WAAA;;2CAE6B,IAAA5c,KAAA8Z,UAAA;wCAC7B;;;;4BAIA9Z,KAAA8b,QAAA4K,eAAA5S,UAAAuhC,cAAA3uB,gBAAAP,OAAAO,uBAAA,iBAAAP,KAAAO,MAAApQ,EAAA6gC,cAAAxG,SAAAjqB,SAAA5S,UAAAuhC;4BACA,IAAA/+B,EAAA6gC,sBAAAr0B,SAAA4D,KAAAgnB,QAAA;gCACA1tC,KAAA8b,QAAA4K,KAAAgnB,OAAA7vB,MAAA6I,MAAApQ,EAAA6gC;;4BAEAn3C,KAAAqc,YAAArc,KAAA8b,MAAA00B;4BACAxwC,KAAAsc,aAAAtc,KAAA8b,MAAA20B;4BACAzwC,KAAAoa,WAAA;4BACA,IAAApa,KAAAorC,UAAA;gCACAn0B,IAAAjX,KAAAorC,SAAAtmC;gCACA,SAAAmS,KAAA;oCACA,IAAAjX,KAAAg5C,WAAAh5C,KAAAorC,SAAAn0B,IAAAjX,KAAA6rC,YAAA50B,SAA0FjX,KAAA+0C,UAAA99B,IAAAsZ,QAAAtZ,KAAA;wCAC1F6hC,cAAA;;;mCAGqB;gCACrBA,cAAA94C,KAAAg5C,WAAAh5C,KAAAyX,QAAAzX,KAAA6rC,aAAA7rC,KAAA+0C,WAAAxkB;;4BAEA,IAAAuoB,aAAA;gCACAhlC,UAAAuG,eAAA,mBAAAra;;4BAEA,IAAAuwB,IAAA,KAAAvwB,KAAAoa,UAAA,WAAApa,KAAAyX,WAAA;gCACAzX,KAAA+Z,SAAA;;4BAEA,IAAAzD,EAAA0G,cAAA;gCACArC,KAAA3a,KAAAoa;gCACA,OAAAO,IAAA;oCACAA,GAAAE,KAAAF,GAAAla;oCACAka,GAAAla,KAAAka,GAAAla;oCACAka,QAAAG;;;4BAGA9a,KAAAuc,YAAAjG,EAAAiL;4BACAvhB,KAAAka,WAAA;;wBAEAxZ,EAAAs4C,aAAA,SAAAvhC,QAAAwhC,YAAAZ,UAAAa;4BACA,IAAAx4C,GAAAuW,GAAA6hC,aAAA1sB,QAAAzR,IAAArE;4BACA,IAAAmB,UAAA;gCACA;;4BAEA,IAAAk+B,YAAAl+B,OAAAsgC,aAAA;gCACAn2B;;4BAEA,KAAA5hB,KAAAmX,KAAA+9B,KAAA,IAAAz9B,OAAAhO,OAAA,IAAAgO,WAAAvE,UAAAuE,OAAA4xB,UAAA,IAAA8L,SAAAD,KAAA,IAAAl1C,KAAAmX,KAAAigC,YAAA;gCACAnoB,SAAAjvB,KAAAmX,MAAAM;;4BAEA,KAAA/W,KAAAV,KAAAmX,MAAA;gCACAb,IAAAtW,KAAAmX,KAAAzW;gCACA,IAAAwqC,eAAAxqC,IAAA;oCACA,IAAA4V,GAAA,IAAAA,aAAAwM,SAAAxM,EAAAnR,QAAAqT,SAAAlC,IAAA,IAAAA,EAAAkL,KAAA,IAAAhc,QAAA,eAAkH;wCAClHxF,KAAAmX,KAAAzW,KAAA4V,IAAAtW,KAAAyhB,kBAAAnL,GAAAtW;;uCAEyB,IAAAm1C,SAAAz0C,OAAA0rB,SAAA,IAAA+oB,SAAAz0C,MAAAyvB,aAAA1Y,QAAAzX,KAAAmX,KAAAzW,IAAAV,OAAA;oCACzBA,KAAAoa,WAAAO;wCACAG,OAAA9a,KAAAoa;wCACAjF,GAAAiX;wCACA1rB,GAAA;wCACAma,GAAA;wCACApa,GAAA;wCACAuU,GAAA;wCACAa,GAAAnV;wCACAorC,IAAA;wCACA1O,IAAAhR,OAAA+sB;;oCAEAliC,IAAAmV,OAAAe,gBAAAroB;oCACA,SAAAmS,KAAA;wCACAgiC,WAAA7sB,OAAAe,gBAAAlW,MAAAjX,KAAAoa;;oCAEA,IAAAgS,OAAA+sB,aAAA/sB,OAAAqf,iBAAA;wCACAqN,cAAA;;oCAEA,IAAA1sB,OAAAgtB,cAAAhtB,OAAAitB,WAAA;wCACAr5C,KAAAma,0BAAA;;oCAEA,IAAAQ,GAAAG,OAAA;wCACAH,GAAAG,MAAAgK,QAAAnK;;uCAEyB;oCACzBs+B,WAAAv4C,KAAA21C,cAAA91C,KAAAP,MAAAyX,QAAA/W,GAAA,OAAA4V,GAAA5V,GAAA,SAAAV,KAAAmX,KAAAo/B;;;4BAGA,IAAA2C,kBAAA,IAAAl5C,KAAA2lB,MAAAuzB,kBAAAzhC,SAAA;gCACA,OAAAzX,KAAAg5C,WAAAvhC,QAAAwhC,YAAAZ,UAAAa;;4BAEA,IAAAl5C,KAAA40C,aAAA,OAAA50C,KAAAoa,UAAA,IAAAi+B,SAAAvzC,SAAA,OAAAmwC,gBAAAx9B,QAAAzX,MAAAi5C,YAAAj5C,KAAA40C,YAAAyD,WAAA;gCACAr4C,KAAA2lB,MAAAszB,YAAAxhC;gCACA,OAAAzX,KAAAg5C,WAAAvhC,QAAAwhC,YAAAZ,UAAAa;;4BAEA,IAAAl5C,KAAAoa,UAAA,IAAApa,KAAAmX,KAAAgF,SAAA,SAAAnc,KAAAsa,aAAAta,KAAAmX,KAAAgF,SAAAnc,KAAAsa,WAAA;gCACAq7B,YAAAl+B,OAAAsgC,cAAA;;4BAEA,OAAAe;;wBAEAp4C,EAAAgM,SAAA,SAAAqO,MAAAC,gBAAAC;4BACA,IAAAV,WAAAva,KAAA8Z,OAAApC,WAAA1X,KAAAsa,WAAAiB,kBAAAvb,KAAAwb,cAAAC,YAAAC,UAAAf,IAAAkB;4BACA,IAAAd,QAAArD,WAAA;gCACA1X,KAAAwa,aAAAxa,KAAA8Z,QAAApC;gCACA1X,KAAAyZ,QAAAzZ,KAAA8b,MAAAC,WAAA/b,KAAA8b,MAAAE,SAAA;gCACA,KAAAhc,KAAAic,WAAA;oCACAR,aAAA;oCACAC,WAAA;oCACAT,iBAAAjb,KAAA6Z,UAAAqC;;gCAEA,IAAAxE,aAAA,OAAA1X,KAAAka,aAAAla,KAAAmX,KAAAgF,QAAAlB,OAAA;oCACA,IAAAjb,KAAA4Z,eAAA5Z,KAAA6Z,UAAAS,WAAA;wCACAS,OAAA;;oCAEA,IAAAQ,kBAAA,KAAAR,QAAA,KAAAA,SAAA,QAAAQ,oBAAApD,YAAAnY,KAAAuK,SAAA,eAAAgR,oBAAAR,MAAA;wCACAE,QAAA;wCACA,IAAAM,kBAAApD,UAAA;4CACAuD,WAAA;;;oCAGA1b,KAAAwb,eAAAK,eAAAb,kBAAAD,QAAAQ,oBAAAR,cAAA5C;;mCAEqB,IAAA4C,OAAA;gCACrB/a,KAAAwa,aAAAxa,KAAA8Z,QAAA;gCACA9Z,KAAAyZ,QAAAzZ,KAAA8b,MAAAC,WAAA/b,KAAA8b,MAAAE,SAAA;gCACA,IAAAzB,aAAA,KAAA7C,aAAA,KAAA6D,kBAAA;oCACAG,WAAA;oCACAD,aAAAzb,KAAAic;;gCAEA,IAAAlB,OAAA;oCACA/a,KAAAoc,UAAA;oCACA,IAAA1E,aAAA,OAAA1X,KAAAka,aAAAla,KAAAmX,KAAAgF,QAAAlB,OAAA;wCACA,IAAAM,mBAAA,OAAAA,oBAAApD,YAAAnY,KAAAuK,SAAA;4CACA0Q,QAAA;;wCAEAjb,KAAAwb,eAAAK,eAAAb,kBAAAD,QAAAQ,oBAAAR,cAAA5C;;;gCAGA,KAAAnY,KAAAka,UAAA;oCACAe,QAAA;;mCAEqB;gCACrBjb,KAAAwa,aAAAxa,KAAA8Z,QAAAiB;gCACA,IAAA/a,KAAAqc,WAAA;oCACA,IAAAvH,IAAAiG,OAAArD,UAAA5P,OAAA9H,KAAAqc,WAAAT,MAAA5b,KAAAsc;oCACA,IAAAxU,SAAA,KAAAA,SAAA,KAAAgN,KAAA;wCACAA,IAAA,IAAAA;;oCAEA,IAAAhN,SAAA;wCACAgN,KAAA;;oCAEA,IAAA8G,QAAA;wCACA9G;2CAC6B,IAAA8G,QAAA;wCAC7B9G;2CAC6B,IAAA8G,QAAA;wCAC7B9G;2CAC6B,IAAA8G,QAAA;wCAC7B9G;;oCAEA,IAAAhN,SAAA;wCACA9H,KAAAyZ,QAAA,IAAA3E;2CAC6B,IAAAhN,SAAA;wCAC7B9H,KAAAyZ,QAAA3E;2CAC6B,IAAAiG,OAAArD,WAAA;wCAC7B1X,KAAAyZ,QAAA3E,IAAA;2CAC6B;wCAC7B9U,KAAAyZ,QAAA,IAAA3E,IAAA;;uCAEyB;oCACzB9U,KAAAyZ,QAAAzZ,KAAA8b,MAAAE,SAAAjB,OAAArD;;;4BAGA,IAAA1X,KAAA8Z,UAAAS,aAAAU,OAAA;gCACA;mCACqB,KAAAjb,KAAAka,UAAA;gCACrBla,KAAAya;gCACA,KAAAza,KAAAka,YAAAla,KAAA8Y,KAAA;oCACA;uCACyB,KAAAmC,SAAAjb,KAAAoa,aAAApa,KAAAmX,KAAAgF,SAAA,SAAAnc,KAAAsa,aAAAta,KAAAmX,KAAAgF,SAAAnc,KAAAsa,YAAA;oCACzBta,KAAA8Z,QAAA9Z,KAAAwa,aAAAD;oCACAva,KAAAwb,eAAAD;oCACAoG,YAAAxc,KAAAnF;oCACAA,KAAA0c,UAAA3B,MAAAC;oCACA;;gCAEA,IAAAhb,KAAA8Z,UAAA2B,YAAA;oCACAzb,KAAAyZ,QAAAzZ,KAAA8b,MAAAE,SAAAhc,KAAA8Z,QAAApC;uCACyB,IAAA+D,cAAAzb,KAAA8b,MAAAC,UAAA;oCACzB/b,KAAAyZ,QAAAzZ,KAAA8b,MAAAE,SAAAhc,KAAA8Z,UAAA;;;4BAGA,IAAA9Z,KAAA0c,UAAA;gCACA1c,KAAA0c,QAAA;;4BAEA,KAAA1c,KAAAoc,SAAA,KAAApc,KAAA2c,WAAA3c,KAAA8Z,UAAAS,YAAAQ,QAAA;gCACA/a,KAAAoc,UAAA;;4BAEA,IAAA7B,aAAA;gCACA,IAAAva,KAAA4c,UAAA;oCACA,IAAA7B,QAAA;wCACA/a,KAAA4c,SAAAlQ,OAAAqO,MAAAC,gBAAAC;2CAC6B,KAAAS,UAAA;wCAC7BA,WAAA;;;gCAGA,IAAA1b,KAAAmX,KAAA0F,SAAA,IAAA7c,KAAA8Z,UAAA,KAAApC,aAAA,QAAAsD,gBAAA;oCACAhb,KAAAwc,UAAA;;;4BAGA7B,KAAA3a,KAAAoa;4BACA,OAAAO,IAAA;gCACA,IAAAA,GAAA3F,GAAA;oCACA2F,GAAAxF,EAAAwF,GAAAja,GAAAia,GAAAla,IAAAT,KAAAyZ,QAAAkB,GAAAE;uCACyB;oCACzBF,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAAla,IAAAT,KAAAyZ,QAAAkB,GAAAE;;gCAEAF,QAAAG;;4BAEA,IAAA9a,KAAAuc,WAAA;gCACA,IAAAxB,OAAA,OAAA/a,KAAA4c,YAAA7B,UAAA;oCACA/a,KAAA4c,SAAAlQ,OAAAqO,MAAAC,gBAAAC;;gCAEA,KAAAD,gBAAA,IAAAhb,KAAA8Z,UAAAS,YAAAkB,cAAAR,OAAA;oCACAjb,KAAAwc,UAAA;;;4BAGA,IAAAd,UAAA,KAAA1b,KAAA8Y,OAAAmC,OAAA;gCACA,IAAAF,OAAA,KAAA/a,KAAA4c,aAAA5c,KAAAuc,aAAAxB,UAAA;oCACA/a,KAAA4c,SAAAlQ,OAAAqO,MAAAC,gBAAAC;;gCAEA,IAAAQ,YAAA;oCACA,IAAAzb,KAAA6Z,UAAAqC,oBAAA;wCACAlc,KAAA+Z,SAAA;;oCAEA/Z,KAAAoc,UAAA;;gCAEA,KAAApB,kBAAAhb,KAAAmX,KAAAuE,WAAA;oCACA1b,KAAAwc,UAAAd;;gCAEA,IAAAhE,aAAA,KAAA1X,KAAAwb,iBAAArD,YAAA0D,gBAAA1D,UAAA;oCACAnY,KAAAwb,eAAA;;;;wBAIA9a,EAAAilB,QAAA,SAAAxO,MAAAM,QAAAygC;4BACA,IAAA/gC,SAAA;gCACAA,OAAA;;4BAEA,IAAAA,QAAA,UAAAM,UAAA,QAAAA,WAAAzX,KAAAyX,QAAA;gCACAzX,KAAA0c,QAAA;gCACA,OAAA1c,KAAA+Z,SAAA;;4BAEAtC,2BAAA,WAAAA,UAAAzX,KAAAorC,YAAAprC,KAAAyX,SAAA3D,UAAAqK,SAAA1G;4BACA,IAAA6hC,wBAAApB,oBAAAl4C,KAAA8Z,SAAAo+B,iBAAAt+B,eAAA5Z,KAAA4Z,cAAA5Z,KAAA6Z,cAAAq+B,iBAAAr+B,WAAA5C,GAAAiiC,kBAAAx4C,GAAAia,IAAAs+B,YAAArzB,SAAA2zB,WAAAC,QAAAC;4BACA,KAAAjhC,SAAAf,WAAAa,YAAAb,0BAAA;gCACAR,IAAAQ,OAAA3S;gCACA,SAAAmS,KAAA;oCACA,IAAAjX,KAAA2lB,MAAAxO,MAAAM,OAAAR,IAAAihC,mBAAA;wCACAtyB,UAAA;;;mCAGqB;gCACrB,IAAA5lB,KAAAorC,UAAA;oCACAn0B,IAAAjX,KAAAorC,SAAAtmC;oCACA,SAAAmS,KAAA;wCACA,IAAAQ,WAAAzX,KAAAorC,SAAAn0B,IAAA;4CACAgiC,aAAAj5C,KAAA6rC,YAAA50B;4CACAjX,KAAAo1C,oBAAAp1C,KAAAo1C;4CACA8D,mBAAAl5C,KAAAo1C,kBAAAn+B,KAAAE,OAAAnX,KAAAo1C,kBAAAn+B,WAAyH;4CACzH;;;uCAGyB,IAAAQ,WAAAzX,KAAAyX,QAAA;oCACzB;uCACyB;oCACzBwhC,aAAAj5C,KAAA6rC;oCACAqN,mBAAAl5C,KAAAo1C,oBAAAj+B,OAAAnX,KAAAo1C,0BAA2G;;gCAE3G,IAAA6D,YAAA;oCACAM,YAAApiC,QAAA8hC;oCACAO,SAAAriC,SAAA+hC,yCAAA,SAAA/hC,SAAA8hC,sBAAA9hC,SAAA,aAAAA,KAAAuiC;oCACA,IAAAxB,qBAAApkC,UAAAujC,eAAAr3C,KAAAmX,KAAAkgC,cAAA;wCACA,KAAA32C,KAAA64C,WAAA;4CACA,IAAAN,WAAAv4C,IAAA;gDACA,KAAA+4C,QAAA;oDACAA;;gDAEAA,OAAAt0C,KAAAzE;;;wCAGA,KAAA+4C,WAAAtiC,UAAA6gC,aAAAh4C,MAAAk4C,kBAAAzgC,QAAAgiC,SAAA;4CACA;;;oCAGA,KAAA/4C,KAAA64C,WAAA;wCACA,IAAA5+B,KAAAs+B,WAAAv4C,IAAA;4CACA,IAAA44C,uBAAA;gDACA,IAAA3+B,GAAA3F,GAAA;oDACA2F,GAAAxF,EAAAwF,GAAAja,GAAAia,GAAAE;uDACyC;oDACzCF,GAAAxF,EAAAwF,GAAAja,KAAAia,GAAAE;;gDAEA+K,UAAA;;4CAEA,IAAAjL,GAAAmxB,MAAAnxB,GAAAxF,EAAAwQ,MAAA4zB,YAAA;gDACA3zB,UAAA;;4CAEA,KAAAjL,GAAAmxB,MAAAnxB,GAAAxF,EAAAgY,gBAAAroB,WAAA;gDACA,IAAA6V,GAAAmK,OAAA;oDACAnK,GAAAmK,MAAAhK,QAAAH,GAAAG;uDACyC,IAAAH,OAAA3a,KAAAoa,UAAA;oDACzCpa,KAAAoa,WAAAO,GAAAG;;gDAEA,IAAAH,GAAAG,OAAA;oDACAH,GAAAG,MAAAgK,QAAAnK,GAAAmK;;gDAEAnK,GAAAG,QAAAH,GAAAmK,QAAA;;mDAEAm0B,WAAAv4C;;wCAEA,IAAA84C,QAAA;4CACAN,iBAAAx4C,KAAA;;;oCAGA,KAAAV,KAAAoa,YAAApa,KAAAka,UAAA;wCACAla,KAAA+Z,SAAA;;;;4BAIA,OAAA6L;;wBAEAllB,EAAA0Y,aAAA;4BACA,IAAApZ,KAAAma,yBAAA;gCACArG,UAAAuG,eAAA,cAAAra;;4BAEAA,KAAAoa,WAAApa,KAAAo1C,oBAAAp1C,KAAA4c,WAAA5c,KAAAuc,YAAA;4BACAvc,KAAAma,0BAAAna,KAAAoc,UAAApc,KAAA0c,QAAA;4BACA1c,KAAA6rC,cAAA7rC,KAAAorC;4BACAt0B,UAAA5V,UAAAkY,WAAA7Y,KAAAP;4BACA,IAAAA,KAAAmX,KAAAwC,iBAAA;gCACA3Z,KAAA8Z,SAAA3B;gCACAnY,KAAA0M,OAAA4F,KAAAC,IAAA,IAAAvS,KAAAia;;4BAEA,OAAAja;;wBAEAU,EAAAqZ,WAAA,SAAAhP,SAAA+a;4BACA,KAAA6pB,eAAA;gCACAD,QAAAkC;;4BAEA,IAAA7mC,WAAA/K,KAAA8Y,KAAA;gCACA,IAAA1B,UAAApX,KAAAorC,UAAAn0B;gCACA,IAAAG,SAAA;oCACAH,IAAAG,QAAAtS;oCACA,SAAAmS,KAAA;wCACAjX,KAAA+0C,UAAA99B,KAAA+9B,UAAA59B,QAAAH,IAAAjX,MAAA;;uCAEyB;oCACzBA,KAAA+0C,YAAAC,UAAAh1C,KAAAyX,QAAAzX,MAAA;;;4BAGA8W,UAAA5V,UAAA6Y,SAAAxZ,KAAAP,MAAA+K,SAAA+a;4BACA,IAAA9lB,KAAAma,yBAAA,IAAAna,KAAAoa,UAAA;gCACA,OAAAtG,UAAAuG,eAAAtP,UAAA,4BAAA/K;;4BAEA;;wBAEA8T,UAAA4E,KAAA,SAAAjB,QAAAC,UAAAP;4BACA,WAAArD,UAAA2D,QAAAC,UAAAP;;wBAEArD,UAAAiJ,OAAA,SAAAtF,QAAAC,UAAAP;4BACAA,KAAA6F,eAAA;4BACA7F,KAAAwC,kBAAAxC,KAAAwC,mBAAA;4BACA,WAAA7F,UAAA2D,QAAAC,UAAAP;;wBAEArD,UAAAmJ,SAAA,SAAAxF,QAAAC,UAAAwF,UAAAC;4BACAA,OAAAC,UAAAF;4BACAC,OAAAxD,kBAAAwD,OAAAxD,mBAAA,SAAAuD,SAAAvD,mBAAA;4BACA,WAAA7F,UAAA2D,QAAAC,UAAAyF;;wBAEArJ,UAAA2K,cAAA,SAAA5R,OAAA6O,UAAAgD,QAAAC,OAAAC;4BACA,WAAA9K,UAAA4H,UAAA;gCACA7O;gCACA+Q,YAAAlC;gCACAmD,kBAAAH;gCACAV,eAAAW;gCACAG,mBAAApD;gCACAqD,yBAAAL;gCACA/E,iBAAA;gCACAwC,MAAA;gCACAyC;gCACAI,WAAA;;;wBAGAlL,UAAAhE,MAAA,SAAA2H,QAAAN;4BACA,WAAArD,UAAA2D,QAAA,GAAAN;;wBAEArD,UAAAmF,cAAA,SAAAxB,QAAAkiC;4BACA,IAAAliC,UAAA;gCACA;;4BAEAA,2BAAA,WAAAA,SAAA3D,UAAAqK,SAAA1G;4BACA,IAAAR,GAAA/P,GAAA8jB,GAAA7V;4BACA,KAAAqD,SAAAf,WAAAa,YAAAb,0BAAA;gCACAR,IAAAQ,OAAA3S;gCACAoC;gCACA,SAAA+P,KAAA;oCACA/P,MAAA3D,OAAAuQ,UAAAmF,YAAAxB,OAAAR,IAAA0iC;;gCAEA1iC,IAAA/P,EAAApC;gCACA,SAAAmS,KAAA;oCACA9B,IAAAjO,EAAA+P;oCACA+T,IAAA/T;oCACA,SAAA+T,KAAA;wCACA,IAAA7V,MAAAjO,EAAA8jB,IAAA;4CACA9jB,EAAAojB,OAAArT,GAAA;;;;mCAIqB;gCACrB/P,IAAA8tC,UAAAv9B,QAAAlU;gCACA0T,IAAA/P,EAAApC;gCACA,SAAAmS,KAAA;oCACA,IAAA/P,EAAA+P,GAAA6B,OAAA6gC,eAAAzyC,EAAA+P,GAAAwQ,YAAA;wCACAvgB,EAAAojB,OAAArT,GAAA;;;;4BAIA,OAAA/P;;wBAEA4M,UAAAiF,eAAAjF,UAAAkF,qBAAA,SAAAvB,QAAAkiC,YAAAxiC;4BACA,WAAAwiC,eAAA;gCACAxiC,OAAAwiC;gCACAA,aAAA;;4BAEA,IAAAzyC,IAAA4M,UAAAmF,YAAAxB,QAAAkiC,aAAA1iC,IAAA/P,EAAApC;4BACA,SAAAmS,KAAA;gCACA/P,EAAA+P,GAAA0O,MAAAxO,MAAAM;;;wBAGA,IAAAgZ,cAAA8b,OAAA,gCAAAzhB,OAAAwB;4BACAtsB,KAAAmtB,mBAAArC,SAAA,IAAAwN,MAAA;4BACAt4B,KAAA45C,YAAA55C,KAAAmtB,gBAAA;4BACAntB,KAAAm5C,YAAA7sB,YAAA;4BACAtsB,KAAAuC,SAAAkuB,YAAAvvB;2BACiB;wBACjBR,IAAA+vB,YAAAvvB;wBACAuvB,YAAA7X,UAAA;wBACA6X,YAAAlE,MAAA;wBACA7rB,EAAA0Z,WAAA;wBACA1Z,EAAAsrC,YAAAqK;wBACA31C,EAAAmvB,WAAAgmB;wBACAn1C,EAAAilB,QAAA,SAAA2K;4BACA,IAAAppB,IAAAlH,KAAAmtB,iBAAAxS,KAAA3a,KAAAoa,UAAAnD;4BACA,IAAAqZ,OAAAtwB,KAAA45C,cAAA;gCACA55C,KAAAmtB;mCACqB;gCACrBlW,IAAA/P,EAAApC;gCACA,SAAAmS,KAAA;oCACA,IAAAqZ,OAAAppB,EAAA+P,OAAA;wCACA/P,EAAAojB,OAAArT,GAAA;;;;4BAIA,OAAA0D,IAAA;gCACA,IAAA2V,OAAA3V,GAAA9E,MAAA;oCACA,IAAA8E,GAAAG,OAAA;wCACAH,GAAAG,MAAAgK,QAAAnK,GAAAmK;;oCAEA,IAAAnK,GAAAmK,OAAA;wCACAnK,GAAAmK,MAAAhK,QAAAH,GAAAG;wCACAH,GAAAmK,QAAA;2CAC6B,IAAA9kB,KAAAoa,aAAAO,IAAA;wCAC7B3a,KAAAoa,WAAAO,GAAAG;;;gCAGAH,QAAAG;;4BAEA;;wBAEApa,EAAA2vB,cAAA,SAAAC,QAAAxuB;4BACA,IAAA6Y,KAAA3a,KAAAoa;4BACA,OAAAO,IAAA;gCACA,IAAA2V,OAAAtwB,KAAA45C,cAAAj/B,GAAA9E,KAAA,QAAAya,OAAA3V,GAAA9E,EAAAyiB,MAAAt4B,KAAA45C,YAAA,KAAAp4B,KAAA;oCACA7G,GAAA7F,IAAAhT;;gCAEA6Y,QAAAG;;;wBAGAhH,UAAAuG,iBAAA,SAAAvS,MAAAwX;4BACA,IAAA3E,KAAA2E,MAAAlF,UAAAwL,SAAA2jB,KAAAxe,OAAA3H,MAAAX;4BACA,IAAA3a,SAAA;gCACA,OAAA6S,IAAA;oCACA8H,OAAA9H,GAAAG;oCACAyuB,MAAAxe;oCACA,OAAAwe,WAAAnM,KAAAziB,GAAAyiB,IAAA;wCACAmM,UAAAzuB;;oCAEA,IAAAH,GAAAmK,QAAAykB,UAAAzkB,QAAA1B,MAAA;wCACAzI,GAAAmK,MAAAhK,QAAAH;2CAC6B;wCAC7BoQ,QAAApQ;;oCAEA,IAAAA,GAAAG,QAAAyuB,KAAA;wCACAA,IAAAzkB,QAAAnK;2CAC6B;wCAC7ByI,OAAAzI;;oCAEAA,KAAA8H;;gCAEA9H,KAAA2E,MAAAlF,WAAA2Q;;4BAEA,OAAApQ,IAAA;gCACA,IAAAA,GAAAmxB,IAAA,WAAAnxB,GAAAxF,EAAArN,UAAA,gBAAA6S,GAAAxF,EAAArN,SAAA;oCACA8d,UAAA;;gCAEAjL,QAAAG;;4BAEA,OAAA8K;;wBAEA6K,YAAA4a,WAAA,SAAA/hC;4BACA,IAAA2N,IAAA3N,QAAAxE;4BACA,SAAAmS,KAAA;gCACA,IAAA3N,QAAA2N,GAAAsV,QAAAkE,YAAAlE,KAAA;oCACA4oB,SAAA,IAAA7rC,QAAA2N,KAAA2iC,aAAAtwC,QAAA2N;;;4BAGA;;wBAEAJ,UAAAuV,SAAA,SAAAshB;4BACA,KAAAA,kBAAArhB,aAAAqhB,OAAAvjC,SAAAujC,OAAAnhB,KAAA;gCACA;;4BAEA,IAAAF,WAAAqhB,OAAArhB,UAAAC,WAAAohB,OAAAphB,YAAA,GAAAutB,iBAAAnM,OAAAmM,gBAAA1K;gCACAhlC,MAAA;gCACA2F,KAAA;gCACA+I,MAAA;gCACAlD,OAAA;gCACAmkC,SAAA;+BACqBC,SAAAxN,OAAA,aAAAlgB,SAAApI,OAAA,GAAAoO,gBAAAhG,SAAAlI,OAAA;gCACrBsM,YAAAlwB,KAAAP,MAAAqsB,UAAAC;gCACAtsB,KAAAmtB,kBAAA0sB;+BACqBnM,OAAAh3B,WAAA,OAAAhW,IAAAq5C,OAAA74C,YAAA,IAAAuvB,YAAApE,WAAAqD;4BACrBhvB,EAAAO,cAAA84C;4BACAA,OAAAxtB,MAAAmhB,OAAAnhB;4BACA,KAAAmD,QAAAyf,KAAA;gCACA,WAAAzB,OAAAhe,UAAA;oCACAhvB,EAAAyuC,IAAAzf,SAAAge,OAAAhe;;;4BAGAqqB,OAAAnhC,UAAA80B,OAAA90B;4BACA6X,YAAA4a,WAAA0O;4BACA,OAAAA;;wBAEA7yC,IAAAgM,OAAA0D;wBACA,IAAA1P,GAAA;4BACA,KAAA+P,IAAA,GAA+BA,IAAA/P,EAAApC,QAAcmS,KAAA;gCAC7C/P,EAAA+P;;4BAEA,KAAAvW,KAAAkvC,YAAA;gCACA,KAAAA,WAAAlvC,GAAA2tB,MAAA;oCACAnb,OAAAmhB,QAAAC,IAAA,wDAAA5zB;;;;wBAIAivC,gBAAA;8BACa9vC,WAAA,eAAAA,OAAAD,kBAAA8W,WAAA,cAAAA,SAAA1W,QAAAkT,QAAA;mBACJ3S,KAAAX,SAAA;oBACT,OAAAI;;eAEK,SAAAH,QAAAD;iBACL,SAAAo6C;oBACAn6C,OAAAD,UAAAo6C;mBACSz5C,KAAAX;eACJ,SAAAC,QAAAD;gBACL0I,MAAA2xC,uBAAA,SAAAC;oBACA5xC,MAAA6xC,SAAA55C,KAAAP;oBACAA,KAAA8H,OAAA;oBACA9H,KAAAq7B,QAAA,IAAA/yB,MAAA8xC,MAAA;oBACAp6C,KAAAq6C,UAAA,SAAA7sC,SAAA6tB;oBACAr7B,KAAAs6C,UAAAJ;;gBAEA5xC,MAAA2xC,qBAAA/4C,YAAAC,OAAAC,OAAAkH,MAAA6xC,SAAAj5C;gBACAoH,MAAA2xC,qBAAA/4C,UAAAD,cAAAqH,MAAA2xC;gBACA3xC,MAAA2xC,qBAAA/4C,UAAAiP,QAAA;oBACA,IAAAoqC,WAAA,IAAAjyC,MAAA2xC;oBACAM,SAAAr8B,KAAAle;oBACAu6C,SAAAlf,MAAAnd,KAAAle,KAAAq7B;oBACAkf,SAAAF,UAAAr6C,KAAAq6C;oBACA,OAAAE;;gBAEAjyC,MAAA6K,iBAAA,SAAA+mC;oBACA7lB,QAAAC,IAAA,wBAAAhsB,MAAAkB;oBACA0wC;oBACA,IAAAh2C,QAAAlE,MAAAw6C,aAAAC,WAAAC,SAAAC,aAAA,IAAAryC,MAAAsyC,aAAAC,UAAAX,WAAAY,WAAApmB,YAAAwlB,WAAAY,SAAAvmC,SAAAC,cAAA,WAAAumC,eAAAF,QAAA34C,OAAA84C,gBAAAH,QAAA14C,QAAA84C,mBAAA3oC,KAAA4oC,MAAAH,eAAA,IAAAI,oBAAA7oC,KAAA4oC,MAAAF,gBAAA,IAAAI,aAAA,GAAAC,aAAA,GAAAC,iBAAAP,cAAAQ,kBAAAP,eAAAQ,cAAA,GAAAC,WAAAZ,QAAA9kC,WAAA;wBACA5K,OAAA+uC,WAAA/uC,UAAA;wBACauwC,cAAA,IAAApzC,MAAA8xC,MAAA,IAAAuB,cAAAzB,WAAA/uC,UAAA,cAAAywC,sBAAA,GAAAC,mCAAA,GAAAC,sBAAA,MAAAC,oBAAA,MAAAC,oBAAA,MAAAC,kBAAA,MAAAC,mBAAA,MAAAC,uBAAAC,SAAAC,KAAAC,KAAAC,KAAAC,KAAAC,MAAA,IAAAn0C,MAAAo0C,oBAAAC,MAAA,IAAAr0C,MAAAo0C,oBAAAE,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,SAAA,IAAAl1C,MAAA8xC,SAAAqD,UAAA,IAAAn1C,MAAA8xC,SAAAsD,UAAA,IAAAp1C,MAAA8xC,SAAAuD,UAAA,IAAAr1C,MAAA8xC,SAAAwD,UAAA,IAAAt1C,MAAA8xC,SAAAyD,gBAAA,IAAAv1C,MAAA8xC,SAAA0D,iBAAA,IAAAx1C,MAAA8xC,SAAA2D,cAAA,IAAAz1C,MAAA8xC,SAAA4D,gBAAguBC,QAAAC,MAAAC,OAAAC,OAAAC,OAAAC,OAAAC,OAAAC,OAAAC,WAAA,IAAAn2C,MAAAo2C,QAAAC,YAAA,IAAAr2C,MAAAo2C,QAAAE,WAAA,IAAAt2C,MAAAo2C,QAAAG,gBAAA,IAAAv2C,MAAA8xC,SAAA0E,qBAAA,IAAAx2C,MAAA8xC,SAAA2E,eAAA,IAAAz2C,MAAA8xC,SAAA4E,WAAA,IAAA12C,MAAA22C,WAAAC,YAAA,IAAA52C,MAAA22C,WAAAE,UAAA,IAAA72C,MAAA22C,WAAAG,oBAAA,IAAA92C,MAAA+2C;oBAC7uB,IAAA5D,SAAA6D,gBAAA5qB,WAAA;wBACA+mB,SAAA6D,cAAA;;oBAEAt/C,KAAA2L,aAAAkvC;oBACA76C,KAAAu/C,YAAA;oBACAv/C,KAAAw/C,cAAA;oBACAx/C,KAAAy/C,eAAA;oBACAz/C,KAAA0/C;wBACAhzC;4BACAizC,UAAA;4BACAC,OAAA;;;oBAGA5/C,KAAA6/C,yBAAA;oBACA7/C,KAAA8/C,iBAAA;oBACA9/C,KAAA+V,aAAA;wBACA,OAAA0lC;;oBAEAz7C,KAAA+/C,uBAAA;wBACA,OAAAtE,SAAAsE;;oBAEA//C,KAAAggD,gBAAA;wBACA,OAAAxE;;oBAEAx7C,KAAAoL,gBAAA,SAAAtJ;wBACA,IAAAA,UAAA4yB,WAAA8mB,cAAA15C;;oBAEA9B,KAAAyL,UAAA,SAAAvJ,OAAAC,QAAA89C;wBACAlF,eAAA74C,QAAAs5C;wBACAR,gBAAA74C,SAAAq5C;wBACAX,QAAA34C,QAAA64C;wBACAF,QAAA14C,SAAA64C;wBACAC,mBAAA3oC,KAAA4oC,MAAAH,eAAA;wBACAI,oBAAA7oC,KAAA4oC,MAAAF,gBAAA;wBACA,IAAAiF,gBAAA;4BACApF,QAAApxC,MAAAvH,gBAAA;4BACA24C,QAAApxC,MAAAtH,kBAAA;;wBAEAs8C,SAAAlsC,IAAAzC,KAAAmrC,mBAAAE;wBACAsD,SAAAjsC,IAAA1C,IAAAmrC,kBAAAE;wBACAwD,UAAApsC,IAAAzC,KAAAmrC,mBAAAE;wBACAwD,UAAAnsC,IAAA1C,IAAAmrC,kBAAAE;wBACAS,sBAAA;wBACAC,mCAAA;wBACAC,sBAAA;wBACAC,oBAAA;wBACAC,oBAAA;wBACAC,kBAAA;wBACAC,mBAAA;wBACAl8C,KAAAkgD,YAAA,MAAAh+C,OAAAC;;oBAEAnC,KAAAkgD,cAAA,SAAAnwC,GAAAC,GAAA9N,OAAAC;wBACAi5C,aAAArrC,IAAAyrC;wBACAH,aAAArrC,IAAAwrC;wBACAF,iBAAAp5C,QAAAs5C;wBACAD,kBAAAp5C,SAAAq5C;;oBAEAx7C,KAAAmgD,aAAA;oBACAngD,KAAAogD,iBAAA;oBACApgD,KAAAsL,gBAAA,SAAA+vB,OAAAlwB;wBACAuwC,YAAA5rC,IAAAurB;wBACAsgB,cAAAxwC,UAAAupB,YAAAvpB,QAAA;wBACAwzC,UAAApsC,IAAAzC,KAAAmrC,mBAAAE;wBACAwD,UAAAnsC,IAAA1C,IAAAmrC,kBAAAE;;oBAEAn7C,KAAAqgD,mBAAA,SAAAC,KAAAn1C;wBACAkpB,QAAAksB,KAAA;wBACAvgD,KAAAsL,cAAAg1C,KAAAn1C;;oBAEAnL,KAAAwgD,gBAAA;wBACA,OAAA9E;;oBAEA17C,KAAAygD,gBAAA;wBACA,OAAA9E;;oBAEA37C,KAAA0gD,mBAAA;wBACA;;oBAEA1gD,KAAA6lB,QAAA;wBACA,IAAA84B,UAAAgC,cAAA;4BACAhC,UAAAiC,UAAAnC;4BACAE,UAAAkC,eAAA;4BACAlC,UAAApsC,IAAAxC,IAAA4uC,UAAApsC,IAAAxC,IAAAkrC;4BACA0D,UAAApsC,IAAAvC,KAAA2uC,UAAApsC,IAAAvC,IAAAmrC;4BACAwD,UAAAnsC,IAAAzC,IAAA4uC,UAAAnsC,IAAAzC,IAAAkrC;4BACA0D,UAAAnsC,IAAAxC,KAAA2uC,UAAAnsC,IAAAxC,IAAAmrC;4BACA,IAAAQ,cAAA;gCACAF,SAAAqF,UAAAnC,UAAApsC,IAAAxC,IAAA,GAAA4uC,UAAAnsC,IAAAxC,IAAA,GAAA2uC,UAAAnsC,IAAAzC,IAAA4uC,UAAApsC,IAAAxC,IAAA,GAAA4uC,UAAApsC,IAAAvC,IAAA2uC,UAAAnsC,IAAAxC,IAAA;;4BAEA,IAAA2rC,cAAA;gCACAoF,YAAAz4C,MAAA04C;gCACAC,WAAA;gCACAC,aAAA,UAAA5uC,KAAA4oC,MAAAQ,YAAA5mC,IAAA,aAAAxC,KAAA4oC,MAAAQ,YAAAhnC,IAAA,aAAApC,KAAA4oC,MAAAQ,YAAA36C,IAAA,aAAA46C,cAAA;gCACAF,SAAAtlC,SAAAwoC,UAAApsC,IAAAxC,IAAA,GAAA4uC,UAAAnsC,IAAAxC,IAAA,GAAA2uC,UAAAnsC,IAAAzC,IAAA4uC,UAAApsC,IAAAxC,IAAA,GAAA4uC,UAAApsC,IAAAvC,IAAA2uC,UAAAnsC,IAAAxC,IAAA;;4BAEA2uC,UAAAwC;;;oBAGAnhD,KAAAohD,aAAA;oBACAphD,KAAAqhD,aAAA;oBACArhD,KAAAshD,eAAA;oBACAthD,KAAA0M,SAAA,SAAA9B,OAAAqC;wBACA,IAAAA,kBAAA3E,MAAAi5C,WAAA;4BACAltB,QAAAjvB,MAAA;4BACA;;wBAEA,IAAApF,KAAAu/C,cAAA,MAAAv/C,KAAA6lB;wBACA3hB,MAAAw7C,KAAAhzC,OAAAizC,WAAA;wBACAz7C,MAAAw7C,KAAAhzC,OAAAkzC,QAAA;wBACAnE,SAAA+F,aAAAlG,iBAAAP,cAAA,OAAAQ,kBAAAP,eAAAI,YAAAJ,gBAAAK;wBACAI,SAAAgG,UAAAxG,kBAAAE;wBACAX,cAAAG,WAAA+G,aAAA92C,OAAAqC,QAAAjN,KAAAw/C,aAAAx/C,KAAAy/C;wBACAhF,YAAAD,YAAAmH;wBACAjH,UAAAF,YAAAoH;wBACAxF,UAAAnvC;wBACAmyC,kBAAAyC,gBAAA50C,OAAA60C;wBACAC;wBACA,SAAA9yC,IAAA,GAAA+yC,KAAAvH,UAAA31C,QAAsDmK,IAAA+yC,IAAQ/yC,KAAA;4BAC9D,IAAAmxB,UAAAqa,UAAAxrC;4BACA,IAAAsrC,WAAAna,QAAAma;4BACA,IAAAA,aAAA7lB,aAAA6lB,SAAAvmB,YAAA;4BACA4qB,SAAAuC;4BACA,IAAA/gB,mBAAA93B,MAAA25C,kBAAA;gCACA5F,MAAAjc;gCACAic,IAAAtsC,KAAAkrC;gCACAoB,IAAArsC,KAAAmrC;gCACA+G,aAAA7F,KAAAjc,SAAAma;mCACqB,IAAAna,mBAAA93B,MAAA65C,gBAAA;gCACrB9F,MAAAjc,QAAAgiB;gCACA9F,MAAAlc,QAAAiiB;gCACAhG,IAAAiG,eAAAvyC,KAAAkrC;gCACAoB,IAAAiG,eAAAtyC,KAAAmrC;gCACAmB,IAAAgG,eAAAvyC,KAAAkrC;gCACAqB,IAAAgG,eAAAtyC,KAAAmrC;gCACAyD,SAAA2D,gBAAAlG,IAAAiG,gBAAAhG,IAAAgG;gCACA,IAAA7D,SAAA+D,cAAA5D,cAAA;oCACA6D,WAAApG,KAAAC,KAAAlc,SAAAma;;mCAEqB,IAAAna,mBAAA93B,MAAAo6C,gBAAA;gCACrBrG,MAAAjc,QAAAgiB;gCACA9F,MAAAlc,QAAAiiB;gCACA9F,MAAAnc,QAAAuiB;gCACA,IAAAtG,IAAAiG,eAAAryC,KAAA,KAAAosC,IAAAiG,eAAAryC,IAAA;gCACA,IAAAqsC,IAAAgG,eAAAryC,KAAA,KAAAqsC,IAAAgG,eAAAryC,IAAA;gCACA,IAAAssC,IAAA+F,eAAAryC,KAAA,KAAAssC,IAAA+F,eAAAryC,IAAA;gCACAosC,IAAAiG,eAAAvyC,KAAAkrC;gCACAoB,IAAAiG,eAAAtyC,KAAAmrC;gCACAmB,IAAAgG,eAAAvyC,KAAAkrC;gCACAqB,IAAAgG,eAAAtyC,KAAAmrC;gCACAoB,IAAA+F,eAAAvyC,KAAAkrC;gCACAsB,IAAA+F,eAAAtyC,KAAAmrC;gCACA,IAAAZ,SAAAqI,WAAA;oCACAC,OAAAxG,IAAAiG,gBAAAhG,IAAAgG,gBAAA/H,SAAAqI;oCACAC,OAAAvG,IAAAgG,gBAAA/F,IAAA+F,gBAAA/H,SAAAqI;oCACAC,OAAAtG,IAAA+F,gBAAAjG,IAAAiG,gBAAA/H,SAAAqI;;gCAEAhE,SAAA2D,gBAAAlG,IAAAiG,gBAAAhG,IAAAgG,gBAAA/F,IAAA+F;gCACA,IAAA7D,SAAA+D,cAAA5D,cAAA;oCACAkE,YAAAzG,KAAAC,KAAAC,KAAA,SAAAnc,SAAAma;;;4BAGAoE,UAAAoE,MAAAnE;;wBAEAnD,SAAA+F,aAAA;;oBAEA,SAAAO;wBACAlD,cAAAmE,OAAA;wBACAlE,mBAAAkE,OAAA;wBACAjE,aAAAiE,OAAA;wBACA,SAAA1uC,IAAA,GAAA2uC,KAAAvI,QAAA51C,QAAoDwP,IAAA2uC,IAAQ3uC,KAAA;4BAC5D,IAAA4uC,QAAAxI,QAAApmC;4BACA,IAAA6uC,aAAAD,MAAA7nB;4BACA,IAAA6nB,iBAAA56C,MAAA86C,cAAA;gCACAvE,cAAAxyC,IAAA82C;mCACqB,IAAAD,iBAAA56C,MAAA+6C,kBAAA;gCACrBvE,mBAAAzyC,IAAA82C;mCACqB,IAAAD,iBAAA56C,MAAAg7C,YAAA;gCACrBvE,aAAA1yC,IAAA82C;;;;oBAIA,SAAAI,eAAA1zC,UAAA2zC,QAAAnoB;wBACA,SAAA/mB,IAAA,GAAA2uC,KAAAvI,QAAA51C,QAAoDwP,IAAA2uC,IAAQ3uC,KAAA;4BAC5D,IAAA4uC,QAAAxI,QAAApmC;4BACAypC,YAAA7/B,KAAAglC,MAAA7nB;4BACA,IAAA6nB,iBAAA56C,MAAA+6C,kBAAA;gCACA,IAAAI,gBAAAzE,SAAA0E,sBAAAR,MAAAS,aAAAC;gCACA,IAAAp+B,SAAAg+B,OAAAK,IAAAJ;gCACA,IAAAj+B,UAAA;gCACAA,UAAA09B,MAAAY;gCACAzoB,MAAAhvB,IAAA0xC,YAAAgG,eAAAv+B;mCACqB,IAAA09B,iBAAA56C,MAAAg7C,YAAA;gCACrB,IAAAG,gBAAAzE,SAAA0E,sBAAAR,MAAAS;gCACA,IAAAn+B,SAAAg+B,OAAAK,IAAA7E,SAAAgF,WAAAP,eAAA5zC,UAAA+zC;gCACA,IAAAp+B,UAAA;gCACAA,UAAA09B,MAAAe,YAAA,YAAA3xC,KAAAC,IAAA1C,SAAAq0C,WAAAT,iBAAAP,MAAAe,UAAA;gCACA,IAAAz+B,UAAA;gCACAA,UAAA09B,MAAAY;gCACAzoB,MAAAhvB,IAAA0xC,YAAAgG,eAAAv+B;;;;oBAIA,SAAA08B,aAAAE,IAAAhiB,SAAAma;wBACA0G,WAAA1G,SAAAvmB;wBACA+sB,YAAAxG,SAAA4J;wBACA,IAAAttB,SAAAuJ,QAAAoG,MAAAz2B,IAAAkrC;wBACA,IAAAnkB,SAAAsJ,QAAAoG,MAAAx2B,IAAAmrC;wBACA,IAAAiJ,OAAA,KAAA9xC,KAAA6Y,KAAA0L,kBAAAC;wBACA8nB,SAAArsC,IAAAzC,IAAAsyC,GAAAryC,IAAAq0C,MAAAhC,GAAApyC,IAAAo0C;wBACAxF,SAAApsC,IAAA1C,IAAAsyC,GAAAryC,IAAAq0C,MAAAhC,GAAApyC,IAAAo0C;wBACA,IAAA7J,oBAAAjyC,MAAA+7C,gBAAA;4BACA,IAAAC,UAAA/J,SAAApL;4BACA,IAAAmV,YAAA;gCACA,IAAAC,UAAAvG,UAAAsG,QAAAjkD;gCACA,IAAAkkD,YAAA7vB,aAAA6vB,QAAA3rC,YAAA0rC,QAAA1rC,SAAA;oCACA2rC,UAAAC,iBAAAF;oCACAtG,UAAAsG,QAAAjkD,MAAAkkD;;gCAEA,IAAAA,QAAAzJ,WAAApmB,WAAA;oCACAwsB,aAAAqD,QAAAzJ;oCACA,IAAA2J,SAAAH,QAAAI;oCACA,IAAA/rB,KAAA8rB,OAAAviD,QAAAoiD,QAAAliD,OAAA2N;oCACA,IAAA6oB,KAAA6rB,OAAAtiD,SAAAmiD,QAAAliD,OAAA4N;oCACA,IAAAm1B,KAAAsf,OAAAviD,QAAAoiD,QAAAvsC,OAAAhI;oCACA,IAAAq1B,KAAAqf,OAAAtiD,SAAAmiD,QAAAvsC,OAAA/H;oCACA,IAAA20C,KAAA9tB,SAAAsO;oCACA,IAAAyf,KAAA9tB,SAAAsO;oCACAqW,SAAAoJ;oCACApJ,SAAAgG,UAAAW,GAAAryC,GAAAqyC,GAAApyC;oCACA,IAAAuqC,SAAArqB,aAAA,GAAAurB,SAAAqJ,OAAAvK,SAAArqB;oCACAurB,SAAAgG,WAAA5qB,SAAA,IAAAC,SAAA;oCACA2kB,SAAAjV,MAAAme,IAAAC;oCACAnJ,SAAAgG,WAAA9oB,KAAAC;oCACA6iB,SAAAtlC,SAAAwiB,IAAAC,IAAAuM,IAAAC;oCACAqW,SAAAsJ;;mCAEqB;gCACrB7D,aAAA3G,SAAAlf,MAAAtG;gCACA0mB,SAAAoJ;gCACApJ,SAAAgG,UAAAW,GAAAryC,GAAAqyC,GAAApyC;gCACA,IAAAuqC,SAAArqB,aAAA,GAAAurB,SAAAqJ,OAAAvK,SAAArqB;gCACAurB,SAAAjV,MAAA3P,SAAAC;gCACA2kB,SAAAtlC,UAAA;gCACAslC,SAAAsJ;;+BAEiB,IAAAxK,oBAAAjyC,MAAA2xC,sBAAA;4BACjB+K,eAAAzK,SAAAlf,MAAAtG;4BACAmsB,aAAA3G,SAAAlf,MAAAtG;4BACA0mB,SAAAoJ;4BACApJ,SAAAgG,UAAAW,GAAAryC,GAAAqyC,GAAApyC;4BACA,IAAAuqC,SAAArqB,aAAA,GAAAurB,SAAAqJ,OAAAvK,SAAArqB;4BACAurB,SAAAjV,MAAA3P,QAAAC;4BACAyjB,SAAAF,QAAAoB;4BACAA,SAAAsJ;;;oBAGA,SAAAtC,WAAAL,IAAAC,IAAAjiB,SAAAma;wBACA0G,WAAA1G,SAAAvmB;wBACA+sB,YAAAxG,SAAA4J;wBACA1I,SAAAwJ;wBACAxJ,SAAAyJ,OAAA9C,GAAAE,eAAAvyC,GAAAqyC,GAAAE,eAAAtyC;wBACAyrC,SAAA0J,OAAA9C,GAAAC,eAAAvyC,GAAAsyC,GAAAC,eAAAtyC;wBACA,IAAAuqC,oBAAAjyC,MAAA88C,mBAAA;4BACAC,aAAA9K,SAAA+K;4BACAC,WAAAhL,SAAAiL;4BACAC,YAAAlL,SAAAmL;4BACA,IAAAnL,SAAAoL,iBAAAr9C,MAAAs9C,cAAA;gCACAZ,eAAAzK,SAAAlf,MAAAtG;mCACqB;gCACrB,IAAA8wB,cAAAzlB,QAAAulB,aAAA,GAAA5wB;gCACA,IAAA+wB,cAAA1lB,QAAAulB,aAAA,GAAA5wB;gCACA,IAAA8wB,gBAAAC,aAAA;oCACAd,eAAAa;uCACyB;oCACzB;wCACA,IAAAE,OAAAtK,SAAAuK,qBAAA5D,GAAAE,eAAAvyC,GAAAqyC,GAAAE,eAAAtyC,GAAAqyC,GAAAC,eAAAvyC,GAAAsyC,GAAAC,eAAAtyC;wCACA+1C,KAAAE,aAAA,GAAAJ;wCACAE,KAAAE,aAAA,GAAAH;sCAC6B,OAAAI;wCAC7BH,OAAAF;;oCAEAb,eAAAe;;;4BAGAtK,SAAA0K;4BACAvH,SAAAiC,eAAAtG,SAAA+K,YAAA;+BACiB,IAAA/K,oBAAAjyC,MAAA89C,oBAAA;4BACjBf,aAAA9K,SAAA+K;4BACAC,WAAAhL,SAAAiL;4BACAC,YAAAlL,SAAAmL;4BACAV,eAAAzK,SAAAlf,MAAAtG;4BACAuqB,cAAA/E,SAAA8L,UAAA9L,SAAA+L;4BACA7K,SAAA0K;4BACAvH,SAAAiC,eAAAtG,SAAA+K,YAAA;4BACAhG;;;oBAGA,SAAAwD,YAAAV,IAAAC,IAAAM,IAAA4D,KAAAC,KAAAC,KAAArmB,SAAAma;wBACAr2C,MAAAw7C,KAAAhzC,OAAAizC,YAAA;wBACAz7C,MAAAw7C,KAAAhzC,OAAAkzC;wBACAqB,WAAA1G,SAAAvmB;wBACA+sB,YAAAxG,SAAA4J;wBACAvH,OAAAwF,GAAAE,eAAAvyC;wBACA8sC,OAAAuF,GAAAE,eAAAtyC;wBACA8sC,OAAAuF,GAAAC,eAAAvyC;wBACAgtC,OAAAsF,GAAAC,eAAAtyC;wBACAgtC,OAAA2F,GAAAL,eAAAvyC;wBACAktC,OAAA0F,GAAAL,eAAAtyC;wBACA02C,aAAA9J,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC;wBACA,KAAA1C,oBAAAjyC,MAAAq+C,uBAAApM,oBAAAjyC,MAAAs+C,sBAAArM,SAAApL,QAAA;4BACA0O,cAAA3/B,KAAAq8B,SAAAlf;4BACAyiB,eAAA5/B,KAAAq8B,SAAAsM;4BACA,IAAAtM,SAAAoL,iBAAAr9C,MAAAw+C,YAAA;gCACAjJ,cAAAkJ,SAAA3mB,QAAA/E;;4BAEAmiB,OAAAt/B,KAAA2gC;4BACAK,UAAAhhC,KAAAkkC,GAAA4E,eAAA36C,IAAAg2C,GAAA2E,eAAA36C,IAAAs2C,GAAAqE,eAAAC,aAAA;4BACA1D,eAAArE,WAAA9e,QAAA8mB,aAAA1J;4BACAA,OAAAuJ,SAAAlJ,eAAAxxC,IAAAyxC;4BACAvD,SAAA4M,cAAA,OAAAC,WAAA5J,QAAAjD,SAAA8M,oBAAA9M,SAAA+M,kBAAA/M,SAAAgN,qBAAAC,SAAAhK;+BACiB,IAAAjD,oBAAAjyC,MAAAm/C,qBAAAlN,oBAAAjyC,MAAAq+C,uBAAApM,oBAAAjyC,MAAAs+C,mBAAA;4BACjB,IAAArM,SAAApL,QAAA;gCACA,IAAAuY,UAAAnN,SAAApL,IAAAuY;gCACA,IAAAA,YAAAp/C,MAAAq/C,WAAA;oCACAzJ,OAAA9d,QAAAwnB;oCACAC,YAAAjL,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAiB,KAAAqI,KAAAx2C,GAAAmuC,KAAAqI,KAAAv2C,GAAAkuC,KAAAsI,KAAAz2C,GAAAmuC,KAAAsI,KAAAx2C,GAAAkuC,KAAAuI,KAAA12C,GAAAmuC,KAAAuI,KAAAz2C,GAAAuqC,SAAApL;;mCAEqB,IAAAoL,SAAAuN,WAAA;gCACrB,IAAAvN,SAAAuN,OAAAJ,YAAAp/C,MAAAy/C,4BAAA;oCACA5I,QAAAjhC,KAAAkiB,QAAA4nB,mBAAAzB,MAAA0B,aAAA7I;oCACAjB,QAAA,KAAAgB,QAAApvC,IAAA;oCACAquC,QAAA,KAAAe,QAAAnvC,IAAA;oCACAmvC,QAAAjhC,KAAAkiB,QAAA4nB,mBAAAxB,MAAAyB,aAAA7I;oCACAf,QAAA,KAAAc,QAAApvC,IAAA;oCACAuuC,QAAA,KAAAa,QAAAnvC,IAAA;oCACAmvC,QAAAjhC,KAAAkiB,QAAA4nB,mBAAAvB,MAAAwB,aAAA7I;oCACAb,QAAA,KAAAY,QAAApvC,IAAA;oCACAyuC,QAAA,KAAAW,QAAAnvC,IAAA;oCACA63C,YAAAjL,MAAAC,MAAAC,MAAAC,MAAAC,MAAAC,MAAAkB,OAAAC,OAAAC,OAAAC,OAAAC,OAAAC,OAAAjE,SAAAuN;;mCAEqB;gCACrBtK,OAAAt/B,KAAAq8B,SAAAlf;gCACA,IAAAkf,SAAAoL,iBAAAr9C,MAAAw+C,YAAA;oCACAtJ,OAAAuJ,SAAA3mB,QAAA/E;;gCAEAkf,SAAA4M,cAAA,OAAAC,WAAA5J,QAAAjD,SAAA8M,oBAAA9M,SAAA+M,kBAAA/M,SAAAgN,qBAAAC,SAAAhK;;+BAEiB,IAAAjD,oBAAAjyC,MAAA4/C,oBAAA;4BACjB/I,QAAAjhC,KAAAkiB,QAAA8mB,aAAAe,aAAA7I;4BACA5B,OAAAwF,OAAA7D,QAAApvC,GAAAovC,QAAAnvC,GAAAmvC,QAAAlvC,GAAA8zC,eAAA,IAAAoE,UAAA;4BACA5N,SAAA4M,cAAA,OAAAC,WAAA5J,QAAAjD,SAAA8M,oBAAA9M,SAAA+M,kBAAA/M,SAAAgN,qBAAAC,SAAAhK;+BACiB;4BACjBA,OAAAwF,OAAA;4BACAzI,SAAA4M,cAAA,OAAAC,WAAA5J,QAAAjD,SAAA8M,oBAAA9M,SAAA+M,kBAAA/M,SAAAgN,qBAAAC,SAAAhK;;;oBAGA,SAAAkJ,aAAA0B,IAAAC,IAAA15B,IAAAC,IAAAC,IAAAC;wBACA2sB,SAAAwJ;wBACAxJ,SAAAyJ,OAAAkD,IAAAC;wBACA5M,SAAA0J,OAAAx2B,IAAAC;wBACA6sB,SAAA0J,OAAAt2B,IAAAC;wBACA2sB,SAAA6M;;oBAEA,SAAAlB,WAAA/rB,OAAAiqB,WAAAE,SAAAE;wBACAL,aAAAC;wBACAC,WAAAC;wBACAC,YAAAC;wBACAV,eAAA3pB,MAAAtG;wBACA0mB,SAAA0K;wBACAvH,SAAAiC,eAAAyE,YAAA;;oBAEA,SAAAkC,SAAAnsB;wBACA6lB,aAAA7lB,MAAAtG;wBACA0mB,SAAA8M;;oBAEA,SAAA/D,iBAAAF;wBACA,IAAAA,QAAA1rC,YAAA,KAAA0rC,mBAAAh8C,MAAAkgD,qBAAAlE,mBAAAh8C,MAAAmgD,aAAA;4BACA;gCACA3N,QAAApmB;gCACA9b,SAAA0rC,QAAA1rC;;;wBAGA,IAAA8rC,QAAAJ,QAAAI;wBACA,IAAAA,MAAA9kC,aAAA;4BACA;gCACAk7B,QAAApmB;gCACA9b,SAAA;;;wBAGA,IAAAkiC,SAAAvmC,SAAAC,cAAA;wBACAsmC,OAAA54C,QAAAwiD,MAAAxiD;wBACA44C,OAAA34C,SAAAuiD,MAAAviD;wBACA,IAAAqL,UAAAstC,OAAA/kC,WAAA;wBACAvI,QAAAg0C,aAAA,gBAAAkD,MAAAviD;wBACAqL,QAAA+I,UAAAmuC,OAAA;wBACA,IAAAgE,UAAApE,QAAAqE,UAAArgD,MAAAsgD;wBACA,IAAAC,UAAAvE,QAAAwE,UAAAxgD,MAAAsgD;wBACA,IAAA7wC,SAAA;wBACA,IAAA2wC,YAAA,QAAAG,YAAA;4BACA9wC,SAAA;+BACiB,IAAA2wC,YAAA;4BACjB3wC,SAAA;+BACiB,IAAA8wC,YAAA;4BACjB9wC,SAAA;;wBAEA,IAAAwsC,UAAA9I,SAAAsN,cAAAjO,QAAA/iC;wBACA,IAAAusC,QAAA/iC,UAAA+iC,QAAA/iC,SAAA+iC;wBACA;4BACAxJ,QAAAyJ;4BACA3rC,SAAA0rC,QAAA1rC;;;oBAGA,SAAAivC,YAAAO,IAAAC,IAAA15B,IAAAC,IAAAC,IAAAC,IAAAk6B,IAAAC,IAAAC,IAAA9G,IAAA+G,IAAA9G,IAAAiC;wBACA,IAAAC,UAAAvG,UAAAsG,QAAAjkD;wBACA,IAAAkkD,YAAA7vB,aAAA6vB,QAAA3rC,YAAA0rC,QAAA1rC,SAAA;4BACA2rC,UAAAC,iBAAAF;4BACAtG,UAAAsG,QAAAjkD,MAAAkkD;;wBAEA,IAAAA,QAAAzJ,WAAApmB,WAAA;4BACAwsB,aAAAqD,QAAAzJ;+BACiB;4BACjBoG,aAAA;4BACAzF,SAAA8M;4BACA;;wBAEA,IAAArhD,GAAAnG,GAAAN,GAAAK,GAAAmO,GAAA+F,GAAAo0C,KAAAC,MAAAC,UAAAhF,QAAAliD,OAAA2N,IAAAu0C,QAAAvsC,OAAAhI,GAAAw5C,UAAAjF,QAAAliD,OAAA4N,IAAAs0C,QAAAvsC,OAAA/H,GAAA9N,QAAAoiD,QAAAI,MAAAxiD,QAAAoiD,QAAAvsC,OAAAhI,GAAA5N,SAAAmiD,QAAAI,MAAAviD,SAAAmiD,QAAAvsC,OAAA/H;wBACAg5C,WAAAM,WAAApnD;wBACA+mD,WAAAM,WAAApnD;wBACA+mD,WAAAI,WAAApnD;wBACAkgD,WAAAmH,WAAApnD;wBACAgnD,WAAAG,WAAApnD;wBACAmgD,WAAAkH,WAAApnD;wBACAwsB,MAAAy5B;wBACAx5B,MAAAy5B;wBACAx5B,MAAAu5B;wBACAt5B,MAAAu5B;wBACAa,MAAAF;wBACA5G,MAAA6G;wBACAE,MAAAH;wBACA3G,MAAA4G;wBACAG,MAAAF,KAAA7G,KAAA8G,KAAA/G;wBACA,IAAAgH,QAAA;wBACAC,OAAA,IAAAD;wBACAliD,KAAAm7C,KAAA1zB,KAAAyzB,KAAAvzB,MAAAw6B;wBACAtoD,KAAAshD,KAAAzzB,KAAAwzB,KAAAtzB,MAAAu6B;wBACA5oD,KAAAyoD,KAAAr6B,KAAAs6B,KAAAx6B,MAAA06B;wBACAvoD,KAAAooD,KAAAp6B,KAAAq6B,KAAAv6B,MAAAy6B;wBACAp6C,IAAAm5C,KAAAlhD,IAAA8hD,KAAAvoD,IAAAwoD;wBACAj0C,IAAAqzC,KAAAtnD,IAAAioD,KAAAloD,IAAAmoD;wBACAxN,SAAAoJ;wBACApJ,SAAA1e,UAAA71B,GAAAnG,GAAAN,GAAAK,GAAAmO,GAAA+F;wBACAymC,SAAA8M;wBACA9M,SAAAsJ;;oBAEA,SAAAyE,UAAApB,IAAAC,IAAA15B,IAAAC,IAAAC,IAAAC,IAAAk6B,IAAAC,IAAAC,IAAA9G,IAAA+G,IAAA9G,IAAAqC;wBACA,IAAAx9C,GAAAnG,GAAAN,GAAAK,GAAAmO,GAAA+F,GAAAo0C,KAAAC,MAAAnnD,QAAAwiD,MAAAxiD,QAAA,GAAAC,SAAAuiD,MAAAviD,SAAA;wBACA6mD,MAAA9mD;wBACA+mD,MAAA9mD;wBACA+mD,MAAAhnD;wBACAkgD,MAAAjgD;wBACAgnD,MAAAjnD;wBACAmgD,MAAAlgD;wBACAwsB,MAAAy5B;wBACAx5B,MAAAy5B;wBACAx5B,MAAAu5B;wBACAt5B,MAAAu5B;wBACAa,MAAAF;wBACA5G,MAAA6G;wBACAE,MAAAH;wBACA3G,MAAA4G;wBACAG,MAAAF,KAAA7G,KAAA8G,KAAA/G;wBACAiH,OAAA,IAAAD;wBACAliD,KAAAm7C,KAAA1zB,KAAAyzB,KAAAvzB,MAAAw6B;wBACAtoD,KAAAshD,KAAAzzB,KAAAwzB,KAAAtzB,MAAAu6B;wBACA5oD,KAAAyoD,KAAAr6B,KAAAs6B,KAAAx6B,MAAA06B;wBACAvoD,KAAAooD,KAAAp6B,KAAAq6B,KAAAv6B,MAAAy6B;wBACAp6C,IAAAm5C,KAAAlhD,IAAA8hD,KAAAvoD,IAAAwoD;wBACAj0C,IAAAqzC,KAAAtnD,IAAAioD,KAAAloD,IAAAmoD;wBACAxN,SAAAoJ;wBACApJ,SAAA1e,UAAA71B,GAAAnG,GAAAN,GAAAK,GAAAmO,GAAA+F;wBACAymC,SAAAlX;wBACAkX,SAAAllC,UAAAmuC,OAAA;wBACAjJ,SAAAsJ;;oBAEA,SAAAlC,OAAAT,IAAAC,IAAAoH;wBACA,IAAA15C,IAAAsyC,GAAAtyC,IAAAqyC,GAAAryC,GAAAC,IAAAqyC,GAAAryC,IAAAoyC,GAAApyC,GAAAo5C,MAAAr5C,QAAAC,OAAAq5C;wBACA,IAAAD,QAAA;wBACAC,OAAAI,SAAAn3C,KAAA6Y,KAAAi+B;wBACAr5C,KAAAs5C;wBACAr5C,KAAAq5C;wBACAhH,GAAAtyC;wBACAsyC,GAAAryC;wBACAoyC,GAAAryC;wBACAqyC,GAAApyC;;oBAEA,SAAAixC,WAAAn/C;wBACA,IAAA85C,wBAAA95C,OAAA;4BACA25C,SAAAplC,cAAAvU;4BACA85C,sBAAA95C;;;oBAGA,SAAAi/C,YAAAj/C;wBACA,IAAA+5C,qCAAA/5C,OAAA;4BACA,IAAAA,UAAAwG,MAAA04C,gBAAA;gCACAvF,SAAAiO,2BAAA;mCACqB,IAAA5nD,UAAAwG,MAAAqhD,kBAAA;gCACrBlO,SAAAiO,2BAAA;mCACqB,IAAA5nD,UAAAwG,MAAAshD,qBAAA;gCACrBnO,SAAAiO,2BAAA;;4BAEA7N,mCAAA/5C;;;oBAGA,SAAAujD,aAAAvjD;wBACA,IAAAk6C,sBAAAl6C,OAAA;4BACA25C,SAAAoO,YAAA/nD;4BACAk6C,oBAAAl6C;;;oBAGA,SAAAyjD,WAAAzjD;wBACA,IAAAm6C,oBAAAn6C,OAAA;4BACA25C,SAAAqO,UAAAhoD;4BACAm6C,kBAAAn6C;;;oBAGA,SAAA2jD,YAAA3jD;wBACA,IAAAo6C,qBAAAp6C,OAAA;4BACA25C,SAAAsO,WAAAjoD;4BACAo6C,mBAAAp6C;;;oBAGA,SAAAkjD,eAAAljD;wBACA,IAAAg6C,wBAAAh6C,OAAA;4BACA25C,SAAAuO,cAAAloD;4BACAg6C,sBAAAh6C;;;oBAGA,SAAAo/C,aAAAp/C;wBACA,IAAAi6C,sBAAAj6C,OAAA;4BACA25C,SAAAvlC,YAAApU;4BACAi6C,oBAAAj6C;;;oBAGA,SAAAw9C,YAAAx9C;wBACA,IAAAq6C,iBAAAr3C,WAAAhD,MAAAgD,QAAA;4BACA22C,SAAA6D,YAAAx9C;4BACAq6C,mBAAAr6C;;;;eAIK,SAAAjC,QAAAD;gBACL0I,MAAA2hD,mBAAA;oBACAjqD,KAAAK,KAAA;oBACAL,KAAAkqD,SAAA;oBACAlqD,KAAAiQ,IAAA;oBACAjQ,KAAAmqD,cAAA;;gBAEA7hD,MAAAo6C,iBAAA;oBACA1iD,KAAAK,KAAA;oBACAL,KAAAoiD,KAAA,IAAA95C,MAAAo0C;oBACA18C,KAAAqiD,KAAA,IAAA/5C,MAAAo0C;oBACA18C,KAAA2iD,KAAA,IAAAr6C,MAAAo0C;oBACA18C,KAAAknD,cAAA,IAAA5+C,MAAA22C;oBACAj/C,KAAAgoD,uBAAA,IAAA1/C,MAAA22C,WAAA,IAAA32C,MAAA22C,WAAA,IAAA32C,MAAA22C;oBACAj/C,KAAAoqD,sBAAA;oBACApqD,KAAAq7B,QAAA,IAAA/yB,MAAA8xC;oBACAp6C,KAAAu6C,WAAA;oBACAv6C,KAAA4nD,QAAA,IAAAt/C,MAAA+hD,WAAA,IAAA/hD,MAAA+hD,WAAA,IAAA/hD,MAAA+hD;oBACArqD,KAAAiQ,IAAA;oBACAjQ,KAAAmqD,cAAA;;gBAEA7hD,MAAAo0C,mBAAA;oBACA18C,KAAA6P,WAAA,IAAAvH,MAAA22C;oBACAj/C,KAAAgnD,gBAAA,IAAA1+C,MAAA22C;oBACAj/C,KAAAsiD,iBAAA,IAAAh6C,MAAAgiD;oBACAtqD,KAAAuqD,UAAA;;gBAEAjiD,MAAAo0C,iBAAAx7C,UAAAgd,OAAA,SAAAssC;oBACAxqD,KAAAgnD,cAAA9oC,KAAAssC,OAAAxD;oBACAhnD,KAAAsiD,eAAApkC,KAAAssC,OAAAlI;;gBAEAh6C,MAAA65C,iBAAA;oBACAniD,KAAAK,KAAA;oBACAL,KAAAoiD,KAAA,IAAA95C,MAAAo0C;oBACA18C,KAAAqiD,KAAA,IAAA/5C,MAAAo0C;oBACA18C,KAAA2lD,iBAAA,IAAAr9C,MAAA8xC,SAAA,IAAA9xC,MAAA8xC;oBACAp6C,KAAAu6C,WAAA;oBACAv6C,KAAAiQ,IAAA;oBACAjQ,KAAAmqD,cAAA;;gBAEA7hD,MAAA25C,mBAAA;oBACAjiD,KAAAK,KAAA;oBACAL,KAAAkqD,SAAA;oBACAlqD,KAAA+P,IAAA;oBACA/P,KAAAgQ,IAAA;oBACAhQ,KAAAiQ,IAAA;oBACAjQ,KAAAkwB,WAAA;oBACAlwB,KAAAwmC,QAAA,IAAAl+B,MAAA+hD;oBACArqD,KAAAu6C,WAAA;oBACAv6C,KAAAmqD,cAAA;;gBAEA7hD,MAAAsyC,YAAA;oBACA,IAAA6P,SAAAC,cAAAC,kBAAAC,oBAAA,GAAAC,SAAAC,cAAAC,kBAAAC,oBAAA,GAAAC,OAAAC,YAAAC,gBAAAC,kBAAA,GAAAC,OAAAC,YAAAC,gBAAAC,kBAAA,GAAAC,SAAAC,cAAAC,kBAAAC,oBAAA,GAAApR;wBACAqR;wBACAjK;wBACAD;uBACa3C,WAAA,IAAA12C,MAAA22C,WAAA6M,WAAA,IAAAxjD,MAAAgiD,WAAA7L,WAAA,IAAAn2C,MAAAyjD,KAAA,IAAAzjD,MAAA22C,SAAA,gBAAA32C,MAAA22C,QAAA,WAAA+M,eAAA,IAAA1jD,MAAAyjD,QAAAE,WAAA,IAAAnpC,MAAA,IAAAopC,WAAA,IAAAppC,MAAA,IAAAqpC,cAAA,IAAA7jD,MAAA8jD,WAAAC,wBAAA,IAAA/jD,MAAA8jD,WAAAE,cAAAC,6BAAA,IAAAjkD,MAAA8jD,WAAAI,gBAAA,IAAAlkD,MAAA+2C,WAAAoN,WAAA,IAAAnkD,MAAAokD,WAAAC,gCAAA,IAAArkD,MAAAgiD,WAAAsC,gCAAA,IAAAtkD,MAAAgiD;oBACbtqD,KAAA6sD,gBAAA,SAAAC,QAAA7/C;wBACAonB,QAAAksB,KAAA;wBACAuM,OAAAC,QAAA9/C;;oBAEAjN,KAAAgtD,kBAAA,SAAAF,QAAA7/C;wBACAonB,QAAAksB,KAAA;wBACAuM,OAAAG,UAAAhgD;;oBAEAjN,KAAAktD,aAAA,SAAAJ,QAAA7/C;wBACAonB,QAAAjvB,MAAA;;oBAEA,IAAA+nD,aAAA;wBACA,IAAAC;wBACA,IAAAxF;wBACA,IAAAsC,SAAA;wBACA,IAAA3P,WAAA;wBACA,IAAA8S,eAAA,IAAA/kD,MAAA+2C;wBACA,SAAAiO,UAAAxrD;4BACAooD,SAAApoD;4BACAy4C,WAAA2P,OAAA3P;4BACA8S,aAAAxL,gBAAAqI,OAAAvG;4BACAyJ,QAAAtoD,SAAA;4BACA8iD,IAAA9iD,SAAA;;wBAEA,SAAAyoD,cAAA/C;4BACA,IAAA36C,WAAA26C,OAAA36C;4BACA,IAAAm3C,gBAAAwD,OAAAxD;4BACA,IAAA1E,iBAAAkI,OAAAlI;4BACA0E,cAAA9oC,KAAArO,UAAA29C,aAAAlB;4BACAhK,eAAApkC,KAAA8oC,eAAAwG,aAAAnB;4BACA,IAAAoB,OAAA,IAAAnL,eAAA93C;4BACA83C,eAAAvyC,KAAA09C;4BACAnL,eAAAtyC,KAAAy9C;4BACAnL,eAAAryC,KAAAw9C;4BACAjD,OAAAD,UAAAjI,eAAAvyC,MAAA,KAAAuyC,eAAAvyC,KAAA,KAAAuyC,eAAAtyC,MAAA,KAAAsyC,eAAAtyC,KAAA,KAAAsyC,eAAAryC,MAAA,KAAAqyC,eAAAryC,KAAA;;wBAEA,SAAAy9C,WAAA39C,GAAAC,GAAAC;4BACA46C,UAAA8C;4BACA9C,QAAAh7C,SAAAC,IAAAC,GAAAC,GAAAC;4BACAs9C,cAAA1C;;wBAEA,SAAA+C,WAAA79C,GAAAC,GAAAC;4BACAm9C,QAAAjoD,KAAA4K,GAAAC,GAAAC;;wBAEA,SAAA49C,OAAA99C,GAAAC;4BACA43C,IAAAziD,KAAA4K,GAAAC;;wBAEA,SAAA89C,wBAAA1L,IAAAC,IAAAM;4BACA,IAAAP,GAAAmI,YAAA,QAAAlI,GAAAkI,YAAA,QAAA5H,GAAA4H,YAAA;4BACA0B,SAAA,KAAA7J,GAAAE;4BACA2J,SAAA,KAAA5J,GAAAC;4BACA2J,SAAA,KAAAtJ,GAAAL;4BACA,OAAA7D,SAAA+D,cAAAwJ,aAAAzJ,cAAA0J;;wBAEA,SAAA8B,qBAAA3L,IAAAC,IAAAM;4BACA,QAAAA,GAAAL,eAAAvyC,IAAAqyC,GAAAE,eAAAvyC,MAAAsyC,GAAAC,eAAAtyC,IAAAoyC,GAAAE,eAAAtyC,MAAA2yC,GAAAL,eAAAtyC,IAAAoyC,GAAAE,eAAAtyC,MAAAqyC,GAAAC,eAAAvyC,IAAAqyC,GAAAE,eAAAvyC,KAAA;;wBAEA,SAAAi+C,SAAA9mD,GAAAnG;4BACA,IAAAqhD,KAAA2I,YAAA7jD;4BACA,IAAAm7C,KAAA0I,YAAAhqD;4BACAsqD,QAAA4C;4BACA5C,MAAAhrD,KAAA6pD,OAAA7pD;4BACAgrD,MAAAjJ,GAAAlkC,KAAAkkC;4BACAiJ,MAAAhJ,GAAAnkC,KAAAmkC;4BACAgJ,MAAAp7C,KAAAmyC,GAAAE,eAAAryC,IAAAoyC,GAAAC,eAAAryC,KAAA;4BACAo7C,MAAAlB,cAAAD,OAAAC;4BACAkB,MAAA9Q,WAAA2P,OAAA3P;4BACAC,YAAAmH,SAAAx8C,KAAAkmD;;wBAEA,SAAA6C,aAAAhnD,GAAAnG,GAAAN;4BACA,IAAA2hD,KAAA2I,YAAA7jD;4BACA,IAAAm7C,KAAA0I,YAAAhqD;4BACA,IAAA4hD,KAAAoI,YAAAtqD;4BACA,IAAAqtD,wBAAA1L,IAAAC,IAAAM,QAAA;4BACA,IAAApI,SAAA4T,SAAA7lD,MAAA8lD,cAAAL,qBAAA3L,IAAAC,IAAAM,QAAA;gCACAsI,QAAAoD;gCACApD,MAAA5qD,KAAA6pD,OAAA7pD;gCACA4qD,MAAA7I,GAAAlkC,KAAAkkC;gCACA6I,MAAA5I,GAAAnkC,KAAAmkC;gCACA4I,MAAAtI,GAAAzkC,KAAAykC;gCACAsI,MAAAh7C,KAAAmyC,GAAAE,eAAAryC,IAAAoyC,GAAAC,eAAAryC,IAAA0yC,GAAAL,eAAAryC,KAAA;gCACAg7C,MAAAd,cAAAD,OAAAC;gCACAc,MAAA/D,YAAAoH,UAAAlB,SAAAlmD,IAAA;gCACA+jD,MAAA/D,YAAAe,aAAAoF,cAAAzJ;gCACA,SAAA3sC,IAAA,GAAuCA,IAAA,GAAOA,KAAA;oCAC9C,IAAAusC,SAAAyH,MAAAjD,mBAAA/wC;oCACAusC,OAAA8K,UAAAlB,SAAArvC,UAAA9G,KAAA;oCACAusC,OAAAyE,aAAAoF,cAAAzJ;oCACA,IAAA2K,KAAAtD,MAAArD,IAAA3wC;oCACAs3C,GAAAD,UAAA1G,KAAA7pC,UAAA9G,KAAA;;gCAEAg0C,MAAAb,sBAAA;gCACAa,MAAA1Q,WAAA2P,OAAA3P;gCACAC,YAAAmH,SAAAx8C,KAAA8lD;;;wBAGA;4BACAqC;4BACAC;4BACAO;4BACAC;4BACAL;4BACAE;4BACAC;4BACAG;4BACAE;;;oBAGA,IAAAM,aAAA,IAAArB;oBACAntD,KAAA0hD,eAAA,SAAA92C,OAAAqC,QAAAuyC,aAAAC;wBACAyL,aAAA;wBACAI,aAAA;wBACAI,eAAA;wBACAlR,YAAAmH,SAAA78C,SAAA;wBACA,IAAA8F,MAAA6jD,eAAA,MAAA7jD,MAAA8jD;wBACA,IAAAzhD,OAAAmT,WAAA,MAAAnT,OAAAyhD;wBACAvC,YAAAjuC,KAAAjR,OAAA60C,mBAAA6M,WAAA1hD,OAAA02C;wBACA0I,sBAAAuC,iBAAA3hD,OAAA4hD,kBAAA1C;wBACAM,SAAAqC,cAAAzC;wBACA3B,eAAA;wBACAlQ,YAAAqR,QAAA/mD,SAAA;wBACA01C,YAAAoH,OAAA98C,SAAA;wBACA8F,MAAAmkD,gBAAA,SAAA7E;4BACA,IAAAA,kBAAA5hD,MAAA0mD,OAAA;gCACAxU,YAAAoH,OAAAz8C,KAAA+kD;mCACqB,IAAAA,kBAAA5hD,MAAA2mD,QAAA/E,kBAAA5hD,MAAA4mD,QAAAhF,kBAAA5hD,MAAA6mD,QAAA;gCACrB,IAAA5U,WAAA2P,OAAA3P;gCACA,IAAAA,SAAAgQ,YAAA;gCACA,IAAAL,OAAAkF,kBAAA,SAAA3C,SAAA4C,iBAAAnF,YAAA;oCACAO,UAAA6E;oCACA7E,QAAApqD,KAAA6pD,OAAA7pD;oCACAoqD,QAAAP;oCACAlL,SAAA0E,sBAAAwG,OAAAvG;oCACA3E,SAAAuQ,gBAAAlD;oCACA5B,QAAAx6C,IAAA+uC,SAAA/uC;oCACAw6C,QAAAN,cAAAD,OAAAC;oCACA3P,YAAAqR,QAAA1mD,KAAAslD;;;;wBAIA,IAAAjL,gBAAA;4BACAhF,YAAAqR,QAAA5kD,KAAAuoD;;wBAEA,SAAAC,IAAA,GAAAC,KAAAlV,YAAAqR,QAAA/mD,QAAgE2qD,IAAAC,IAAQD,KAAA;4BACxE,IAAAvF,SAAA1P,YAAAqR,QAAA4D,GAAAvF;4BACA,IAAAyF,WAAAzF,OAAAyF;4BACAnB,WAAAlB,UAAApD;4BACAoC,eAAApC,OAAAvG;4BACAmH,eAAA;4BACA,IAAAZ,kBAAA5hD,MAAA2mD,MAAA;gCACA,IAAAU,oBAAArnD,MAAAsnD,gBAAA;oCACA,IAAAzvB,aAAAwvB,SAAAxvB;oCACA,IAAA0vB,SAAAF,SAAAE;oCACA,IAAA1vB,WAAAtwB,aAAA6kB,WAAA;oCACA,IAAAo7B,YAAA3vB,WAAAtwB,SAAA4/B;oCACA,SAAAx4B,IAAA,GAAA3C,IAAAw7C,UAAAhrD,QAAiEmS,IAAA3C,GAAO2C,KAAA;wCACxEu3C,WAAAd,WAAAoC,UAAA74C,IAAA64C,UAAA74C,IAAA,IAAA64C,UAAA74C,IAAA;;oCAEA,IAAAkpB,WAAAqjB,WAAA9uB,WAAA;wCACA,IAAA04B,UAAAjtB,WAAAqjB,OAAA/T;wCACA,SAAAx4B,IAAA,GAAA3C,IAAA84C,QAAAtoD,QAAmEmS,IAAA3C,GAAO2C,KAAA;4CAC1Eu3C,WAAAZ,WAAAR,QAAAn2C,IAAAm2C,QAAAn2C,IAAA,IAAAm2C,QAAAn2C,IAAA;;;oCAGA,IAAAkpB,WAAAouB,OAAA75B,WAAA;wCACA,IAAAkzB,MAAAznB,WAAAouB,GAAA9e;wCACA,SAAAx4B,IAAA,GAAA3C,IAAAszC,IAAA9iD,QAA+DmS,IAAA3C,GAAO2C,KAAA;4CACtEu3C,WAAAX,OAAAjG,IAAA3wC,IAAA2wC,IAAA3wC,IAAA;;;oCAGA,IAAA04C,SAAA9jC,UAAA;wCACA,IAAAkkC,UAAAJ,SAAA9jC,MAAA4jB;wCACA,IAAAogB,OAAA/qD,SAAA;4CACA,SAAA2qD,IAAA,GAAmDA,IAAAI,OAAA/qD,QAAmB2qD,KAAA;gDACtE,IAAAO,QAAAH,OAAAJ;gDACA,SAAAx4C,IAAA+4C,MAAAlzB,OAAAxoB,IAAA07C,MAAAlzB,QAAAkzB,MAAAC,OAAgGh5C,IAAA3C,GAAO2C,KAAA;oDACvGu3C,WAAAN,aAAA6B,QAAA94C,IAAA84C,QAAA94C,IAAA,IAAA84C,QAAA94C,IAAA;;;+CAGiC;4CACjC,SAAAA,IAAA,GAAA3C,IAAAy7C,QAAAjrD,QAAuEmS,IAAA3C,GAAO2C,KAAA;gDAC9Eu3C,WAAAN,aAAA6B,QAAA94C,IAAA84C,QAAA94C,IAAA,IAAA84C,QAAA94C,IAAA;;;2CAG6B;wCAC7B,SAAAA,IAAA,GAAA3C,IAAAw7C,UAAAhrD,SAAA,GAAyEmS,IAAA3C,GAAO2C,KAAA;4CAChFu3C,WAAAN,aAAAj3C,OAAA,GAAAA,IAAA;;;uCAGyB,IAAA04C,oBAAArnD,MAAA4nD,UAAA;oCACzB,IAAAvQ,WAAAgQ,SAAAhQ;oCACA,IAAAC,QAAA+P,SAAA/P;oCACA,IAAAuQ,gBAAAR,SAAAQ,cAAA;oCACA3D,cAAA3K,gBAAAyK;oCACA,IAAA/R,WAAA2P,OAAA3P;oCACA,IAAA6V,iBAAA7V,oBAAAjyC,MAAA+nD;oCACA,IAAAC,kBAAAF,mBAAA,OAAAlG,OAAA3P,WAAA;oCACA,SAAAjkC,IAAA,GAAAi6C,KAAA5Q,SAAA76C,QAAiEwR,IAAAi6C,IAAQj6C,KAAA;wCACzE,IAAAk0C,SAAA7K,SAAArpC;wCACA0oC,SAAA9gC,KAAAssC;wCACA,IAAAjQ,SAAAiW,iBAAA;4CACA,IAAAA,eAAAb,SAAAa;4CACA,IAAAC,kBAAAvG,OAAAwG;4CACA,SAAAv7C,IAAA,GAAAkL,KAAAmwC,aAAA1rD,QAA6EqQ,IAAAkL,IAAQlL,KAAA;gDACrF,IAAAw7C,YAAAF,gBAAAt7C;gDACA,IAAAw7C,cAAA;gDACA,IAAAl5C,SAAA+4C,aAAAr7C;gDACA,IAAAy7C,eAAAn5C,OAAAkoC,SAAArpC;gDACA0oC,SAAAjvC,MAAA6gD,aAAA7gD,IAAAy6C,OAAAz6C,KAAA4gD;gDACA3R,SAAAhvC,MAAA4gD,aAAA5gD,IAAAw6C,OAAAx6C,KAAA2gD;gDACA3R,SAAA/uC,MAAA2gD,aAAA3gD,IAAAu6C,OAAAv6C,KAAA0gD;;;wCAGAnC,WAAAd,WAAA1O,SAAAjvC,GAAAivC,SAAAhvC,GAAAgvC,SAAA/uC;;oCAEA,SAAA+E,IAAA,GAAA67C,KAAAjR,MAAA96C,QAA8DkQ,IAAA67C,IAAQ77C,KAAA;wCACtE,IAAA87C,OAAAlR,MAAA5qC;wCACAulC,WAAA6V,mBAAA,OAAAE,gBAAAS,UAAAD,KAAAE,iBAAA9G,OAAA3P;wCACA,IAAAA,aAAA7lB,WAAA;wCACA,IAAAy5B,OAAA5T,SAAA4T;wCACA,IAAA/L,KAAA2I,YAAA+F,KAAA5pD;wCACA,IAAAm7C,KAAA0I,YAAA+F,KAAA/vD;wCACA,IAAA4hD,KAAAoI,YAAA+F,KAAArwD;wCACA,IAAA+tD,WAAAV,wBAAA1L,IAAAC,IAAAM,QAAA;wCACA,IAAA4H,UAAAiE,WAAAT,qBAAA3L,IAAAC,IAAAM;wCACA,IAAAwL,SAAA7lD,MAAA8lD,YAAA;4CACA,IAAAD,SAAA7lD,MAAA2oD,aAAA1G,YAAA;4CACA,IAAA4D,SAAA7lD,MAAA4oD,YAAA3G,YAAA;;wCAEAU,QAAAoD;wCACApD,MAAA5qD,KAAA6pD,OAAA7pD;wCACA4qD,MAAA7I,GAAAlkC,KAAAkkC;wCACA6I,MAAA5I,GAAAnkC,KAAAmkC;wCACA4I,MAAAtI,GAAAzkC,KAAAykC;wCACAsI,MAAA/D,YAAAhpC,KAAA4yC,KAAAtN;wCACA,IAAA+G,YAAA,UAAA4D,SAAA7lD,MAAA4oD,YAAA/C,SAAA7lD,MAAA8lD,aAAA;4CACAnD,MAAA/D,YAAAiK;;wCAEAlG,MAAA/D,YAAAe,aAAAuE,eAAA5I;wCACA,IAAAwN,oBAAAN,KAAAO;wCACA,SAAAx7C,IAAA,GAAAy7C,KAAAh/C,KAAAC,IAAA6+C,kBAAAtsD,QAAA,IAA2F+Q,IAAAy7C,IAAQz7C,KAAA;4CACnG,IAAAqxC,cAAA+D,MAAAjD,mBAAAnyC;4CACAqxC,YAAAhpC,KAAAkzC,kBAAAv7C;4CACA,IAAA00C,YAAA,UAAA4D,SAAA7lD,MAAA4oD,YAAA/C,SAAA7lD,MAAA8lD,aAAA;gDACAlH,YAAAiK;;4CAEAjK,YAAAe,aAAAuE,eAAA5I;;wCAEAqH,MAAAb,sBAAAgH,kBAAAtsD;wCACA,IAAAysD,YAAApB,cAAAn7C;wCACA,IAAAu8C,cAAA78B,WAAA;4CACA,SAAA9e,IAAA,GAAmDA,IAAA,GAAOA,KAAA;gDAC1Dq1C,MAAArD,IAAAhyC,GAAAsI,KAAAqzC,UAAA37C;;;wCAGAq1C,MAAA5vB,QAAAy1B,KAAAz1B;wCACA4vB,MAAA1Q;wCACA0Q,MAAAh7C,KAAAmyC,GAAAE,eAAAryC,IAAAoyC,GAAAC,eAAAryC,IAAA0yC,GAAAL,eAAAryC,KAAA;wCACAg7C,MAAAd,cAAAD,OAAAC;wCACA3P,YAAAmH,SAAAx8C,KAAA8lD;;;mCAGqB,IAAAf,kBAAA5hD,MAAA4mD,MAAA;gCACrB,IAAAS,oBAAArnD,MAAAsnD,gBAAA;oCACA,IAAAzvB,aAAAwvB,SAAAxvB;oCACA,IAAAA,WAAAtwB,aAAA6kB,WAAA;wCACA,IAAAo7B,YAAA3vB,WAAAtwB,SAAA4/B;wCACA,SAAAx4B,IAAA,GAAA3C,IAAAw7C,UAAAhrD,QAAqEmS,IAAA3C,GAAO2C,KAAA;4CAC5Eu3C,WAAAd,WAAAoC,UAAA74C,IAAA64C,UAAA74C,IAAA,IAAA64C,UAAA74C,IAAA;;wCAEA,IAAA04C,SAAA9jC,UAAA;4CACA,IAAAkkC,UAAAJ,SAAA9jC,MAAA4jB;4CACA,SAAAx4B,IAAA,GAAA3C,IAAAy7C,QAAAjrD,QAAuEmS,IAAA3C,GAAO2C,KAAA;gDAC9Eu3C,WAAAR,SAAA+B,QAAA94C,IAAA84C,QAAA94C,IAAA;;+CAEiC;4CACjC,IAAAu6C,OAAAtH,kBAAA5hD,MAAAmpD,eAAA;4CACA,SAAAx6C,IAAA,GAAA3C,IAAAw7C,UAAAhrD,SAAA,OAAiFmS,IAAA3C,GAAO2C,KAAAu6C,MAAA;gDACxFhD,WAAAR,SAAA/2C,OAAA;;;;uCAIyB,IAAA04C,oBAAArnD,MAAA4nD,UAAA;oCACzB3D,2BAAAqC,iBAAAvC,uBAAAC;oCACA,IAAA3M,WAAAuK,OAAAyF,SAAAhQ;oCACA,IAAAA,SAAA76C,WAAA;oCACAs9C,KAAAuL;oCACAvL,GAAAE,eAAApkC,KAAAyhC,SAAA,IAAA6N,aAAAjB;oCACA,IAAAiF,OAAAtH,kBAAA5hD,MAAAmpD,eAAA;oCACA,SAAAn7C,IAAA,GAAAi6C,KAAA5Q,SAAA76C,QAAiEwR,IAAAi6C,IAAQj6C,KAAA;wCACzE8rC,KAAAuL;wCACAvL,GAAAE,eAAApkC,KAAAyhC,SAAArpC,IAAAk3C,aAAAjB;wCACA,KAAAj2C,IAAA,KAAAk7C,OAAA;wCACAnP,KAAA0I,YAAAD,eAAA;wCACA6B,8BAAAzuC,KAAAkkC,GAAAE;wCACAsK,8BAAA1uC,KAAAmkC,GAAAC;wCACA,IAAAoP,SAAA/E,+BAAAC,mCAAA;4CACAD,8BAAA5I,eAAA,IAAA4I,8BAAAniD;4CACAoiD,8BAAA7I,eAAA,IAAA6I,8BAAApiD;4CACA6gD,QAAA4C;4CACA5C,MAAAhrD,KAAA6pD,OAAA7pD;4CACAgrD,MAAAjJ,GAAAE,eAAApkC,KAAAyuC;4CACAtB,MAAAhJ,GAAAC,eAAApkC,KAAA0uC;4CACAvB,MAAAp7C,IAAAqC,KAAAE,IAAAm6C,8BAAA18C,GAAA28C,8BAAA38C;4CACAo7C,MAAAlB,cAAAD,OAAAC;4CACAkB,MAAA9Q,WAAA2P,OAAA3P;4CACA,IAAA2P,OAAA3P,SAAAoL,iBAAAr9C,MAAAs9C,cAAA;gDACAyF,MAAA1F,aAAA,GAAAznC,KAAAgsC,OAAAyF,SAAA10B,OAAA3kB;gDACA+0C,MAAA1F,aAAA,GAAAznC,KAAAgsC,OAAAyF,SAAA10B,OAAA3kB,IAAA;;4CAEAkkC,YAAAmH,SAAAx8C,KAAAkmD;;;;mCAIqB,IAAAnB,kBAAA5hD,MAAA6mD,QAAA;gCACrBrD,SAAAh8C,IAAAw8C,aAAA3K,SAAA,KAAA2K,aAAA3K,SAAA,KAAA2K,aAAA3K,SAAA;gCACAmK,SAAA0B,aAAAnB;gCACA,IAAAoB,OAAA,IAAA3B,SAAAthD;gCACAshD,SAAA77C,KAAAw9C;gCACA,IAAA3B,SAAA77C,MAAA,KAAA67C,SAAA77C,KAAA;oCACAw7C,UAAAkG;oCACAlG,QAAAprD,KAAA6pD,OAAA7pD;oCACAorD,QAAA17C,IAAA+7C,SAAA/7C,IAAA09C;oCACAhC,QAAAz7C,IAAA87C,SAAA97C,IAAAy9C;oCACAhC,QAAAx7C,IAAA67C,SAAA77C;oCACAw7C,QAAAtB,cAAAD,OAAAC;oCACAsB,QAAAvB;oCACAuB,QAAAv7B,WAAAg6B,OAAAh6B;oCACAu7B,QAAAjlB,MAAAz2B,IAAAm6C,OAAA1jB,MAAAz2B,IAAAuC,KAAAqU,IAAA8kC,QAAA17C,KAAA+7C,SAAA/7C,IAAA9C,OAAA4hD,iBAAAlN,SAAA,OAAAmK,SAAAthD,IAAAyC,OAAA4hD,iBAAAlN,SAAA;oCACA8J,QAAAjlB,MAAAx2B,IAAAk6C,OAAA1jB,MAAAx2B,IAAAsC,KAAAqU,IAAA8kC,QAAAz7C,KAAA87C,SAAA97C,IAAA/C,OAAA4hD,iBAAAlN,SAAA,OAAAmK,SAAAthD,IAAAyC,OAAA4hD,iBAAAlN,SAAA;oCACA8J,QAAAlR,WAAA2P,OAAA3P;oCACAC,YAAAmH,SAAAx8C,KAAAsmD;;;;wBAIA,IAAAhM,iBAAA;4BACAjF,YAAAmH,SAAA16C,KAAAuoD;;wBAEA,OAAAhV;;oBAEA,SAAA8U;wBACA,IAAA5E,iBAAAE,mBAAA;4BACA,IAAAV,SAAA,IAAA5hD,MAAA2hD;4BACAU,YAAAxlD,KAAA+kD;4BACAU;4BACAF;4BACA,OAAAR;;wBAEA,OAAAS,YAAAD;;oBAEA,SAAAiD;wBACA,IAAA7C,iBAAAE,mBAAA;4BACA,IAAAR,SAAA,IAAAliD,MAAAo0C;4BACAqO,YAAA5lD,KAAAqlD;4BACAQ;4BACAF;4BACA,OAAAN;;wBAEA,OAAAO,YAAAD;;oBAEA,SAAAuD;wBACA,IAAAnD,eAAAE,iBAAA;4BACA,IAAA0F,OAAA,IAAAxoD,MAAAo6C;4BACAyI,UAAAhmD,KAAA2rD;4BACA1F;4BACAF;4BACA,OAAA4F;;wBAEA,OAAA3F,UAAAD;;oBAEA,SAAA+C;wBACA,IAAA3C,eAAAE,iBAAA;4BACA,IAAAoG,OAAA,IAAAtpD,MAAA65C;4BACAoJ,UAAApmD,KAAAysD;4BACApG;4BACAF;4BACA,OAAAsG;;wBAEA,OAAArG,UAAAD;;oBAEA,SAAAqG;wBACA,IAAAjG,iBAAAE,mBAAA;4BACA,IAAAiG,SAAA,IAAAvpD,MAAA25C;4BACA0J,YAAAxmD,KAAA0sD;4BACAjG;4BACAF;4BACA,OAAAmG;;wBAEA,OAAAlG,YAAAD;;oBAEA,SAAA8D,YAAAtoD,GAAAnG;wBACA,IAAAmG,EAAAijD,gBAAAppD,EAAAopD,aAAA;4BACA,OAAAjjD,EAAAijD,cAAAppD,EAAAopD;+BACiB,IAAAjjD,EAAA+I,MAAAlP,EAAAkP,GAAA;4BACjB,OAAAlP,EAAAkP,IAAA/I,EAAA+I;+BACiB,IAAA/I,EAAA7G,OAAAU,EAAAV,IAAA;4BACjB,OAAA6G,EAAA7G,KAAAU,EAAAV;+BACiB;4BACjB;;;oBAGA,SAAAqxD,SAAAr6B,IAAAC;wBACA,IAAAw6B,SAAA,GAAAC,SAAA,GAAAC,UAAA36B,GAAApnB,IAAAonB,GAAA7sB,GAAAynD,UAAA36B,GAAArnB,IAAAqnB,GAAA9sB,GAAA0nD,UAAA76B,GAAApnB,IAAAonB,GAAA7sB,GAAA2nD,UAAA76B,GAAArnB,IAAAqnB,GAAA9sB;wBACA,IAAAwnD,WAAA,KAAAC,WAAA,KAAAC,UAAA,KAAAC,UAAA;4BACA;+BACiB,IAAAH,UAAA,KAAAC,UAAA,KAAAC,SAAA,KAAAC,SAAA;4BACjB;+BACiB;4BACjB,IAAAH,UAAA;gCACAF,SAAAx/C,KAAAE,IAAAs/C,QAAAE,qBAAAC;mCACqB,IAAAA,UAAA;gCACrBF,SAAAz/C,KAAAC,IAAAw/C,QAAAC,qBAAAC;;4BAEA,IAAAC,SAAA;gCACAJ,SAAAx/C,KAAAE,IAAAs/C,QAAAI,mBAAAC;mCACqB,IAAAA,SAAA;gCACrBJ,SAAAz/C,KAAAC,IAAAw/C,QAAAG,mBAAAC;;4BAEA,IAAAJ,SAAAD,QAAA;gCACA;mCACqB;gCACrBz6B,GAAA+6B,KAAA96B,IAAAw6B;gCACAx6B,GAAA86B,KAAA/6B,IAAA,IAAA06B;gCACA;;;;;eAKK,SAAAlyD,QAAAD,SAAAO;;;;;;;gBAOL;gBACA,IAAAkyD,WAAAlyD,oBAAA;gBACA,SAAAmyD,eAAA7C;oBACA,OAAA4C,SAAA5C,OAAA,QAAAtuD,OAAAD,UAAAgE,SAAA3E,KAAAkvD,OAAA;;gBAEA5vD,OAAAD,UAAA,SAAAmU,cAAA07C;oBACA,IAAA8C,MAAAC;oBACA,IAAAF,eAAA7C,OAAA;oBACA8C,OAAA9C,EAAAxuD;oBACA,WAAAsxD,SAAA;oBACAC,OAAAD,KAAArxD;oBACA,IAAAoxD,eAAAE,UAAA;oBACA,IAAAA,KAAA5xD,eAAA;wBACA;;oBAEA;;eAEK,SAAAf,QAAAD;;;;;;;gBAOL;gBACAC,OAAAD,UAAA,SAAAyyD,SAAA96C;oBACA,OAAAA,OAAA,eAAAA,QAAA,aAAAuL,MAAArK,QAAAlB;;eAEK,SAAA1X,QAAAD,SAAAO;gBACL,IAAAsW;iBACA,SAAAie;oBACA,IAAAjc,UAAAqK,MAAArK,UAAAqK,MAAArK,UAAA,SAAAD,SAAAqS;wBACA,OAAA1pB,OAAAD,UAAAgE,SAAA3E,KAAAsqB,SAAA;;oBAEA,IAAA4nC,sBAAA;oBACA,SAAAtoD;wBACAnK,KAAA0yD;wBACA,IAAA1yD,KAAA2yD,OAAA;4BACAC,UAAAryD,KAAAP,WAAA2yD;;;oBAGA,SAAAC,UAAAC;wBACA,IAAAA,MAAA;4BACA7yD,KAAA2yD,QAAAE;4BACAA,KAAAC,cAAA9yD,KAAA8yD,YAAAD,KAAAC;4BACAD,KAAAE,iBAAA/yD,KAAA0yD,QAAAK,eAAAF,KAAAE;4BACAF,KAAAG,aAAAhzD,KAAAgzD,WAAAH,KAAAG;4BACAH,KAAAI,gBAAAjzD,KAAAizD,cAAAJ,KAAAI;4BACA,IAAAjzD,KAAAgzD,UAAA;gCACAhzD,KAAAkzD;;;;oBAIA,SAAAC,aAAAN;wBACA7yD,KAAA0yD;wBACA1yD,KAAAizD,cAAA;wBACAL,UAAAryD,KAAAP,MAAA6yD;;oBAEA,SAAAO,mBAAAC,UAAAvrD,MAAAwrD,MAAAr8C;wBACA,KAAAq8C,MAAA;4BACA;;wBAEA,IAAAC,gBAAAC,MAAAC,KAAAC,QAAAC,OAAAC,QAAAC,gBAAAC,YAAAC,aAAAjsD,KAAAhD,QAAAkvD,cAAAlsD,KAAAmP,IAAAg9C,WAAAnsD,KAAAmP,IAAA;wBACA,IAAAA,MAAA88C,cAAAT,KAAA/hB,YAAA;4BACA,WAAA+hB,KAAA/hB,eAAA;gCACA8hB,qBAAAluD,KAAAmuD,KAAA/hB;gCACA,SAAA+hB;mCACqB;gCACrB,KAAAE,OAAA,GAAAC,MAAAH,KAAA/hB,WAAAzsC,QAAoE0uD,OAAAC,KAAYD,QAAA;oCAChFH,qBAAAluD,KAAAmuD,KAAA/hB,WAAAiiB;;gCAEA,SAAAF;;;wBAGA,IAAAU,gBAAA,OAAAA,gBAAA,QAAAV,KAAAU,cAAA;4BACA,IAAAA,gBAAA;gCACA,KAAAN,UAAAJ,MAAA;oCACA,IAAAI,WAAA,gBAAAJ,KAAA1yD,eAAA8yD,SAAA;wCACAH,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,KAAAI,SAAAz8C,IAAA;;;gCAGA,OAAAs8C;mCACqB,IAAAS,gBAAA;gCACrBF,aAAA78C,IAAA,MAAA88C,cAAA98C,IAAA,MAAA88C,cAAAE,aAAA;gCACA,IAAAH,cAAAR,KAAA/hB,YAAA;oCACAgiB,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,MAAAS;;gCAEA,KAAAL,UAAAJ,MAAA;oCACA,IAAAI,WAAA,gBAAAJ,KAAA1yD,eAAA8yD,SAAA;wCACA,IAAAA,WAAA,OAAAA,WAAA;4CACA,IAAAJ,KAAAI,QAAAniB,eAAAuiB,YAAA;gDACAP,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,KAAAI,SAAAK;;4CAEAR,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,KAAAI,SAAAz8C;+CACiC,IAAAy8C,WAAAO,UAAA;4CACjCV,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,KAAAI,SAAAz8C,IAAA;+CACiC;4CACjCs8C,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,KAAAI,SAAAz8C;;;;gCAIA,OAAAs8C;;4BAEAA,sBAAAhwD,OAAA6vD,mBAAAC,UAAAvrD,MAAAwrD,KAAAU,cAAA/8C,IAAA;;wBAEA08C,QAAAL,KAAA;wBACA,IAAAK,OAAA;4BACAP,mBAAAC,UAAAvrD,MAAA6rD,OAAA18C,IAAA;;wBAEA28C,SAAAN,KAAA;wBACA,IAAAM,QAAA;4BACA,IAAA38C,IAAA88C,YAAA;gCACA,IAAAH,OAAAriB,YAAA;oCACA6hB,mBAAAC,UAAAvrD,MAAA8rD,QAAAG;;gCAEA,KAAAL,UAAAE,QAAA;oCACA,IAAAF,WAAA,gBAAAE,OAAAhzD,eAAA8yD,SAAA;wCACA,IAAAA,WAAAO,UAAA;4CACAb,mBAAAC,UAAAvrD,MAAA8rD,OAAAF,SAAAz8C,IAAA;+CACiC,IAAAy8C,WAAAM,aAAA;4CACjCZ,mBAAAC,UAAAvrD,MAAA8rD,OAAAF,SAAAz8C,IAAA;+CACiC;4CACjC48C;4CACAA,eAAAH,UAAAE,OAAAF;4CACAN,mBAAAC,UAAAvrD;gDACAosD,MAAAL;+CACqC58C,IAAA;;;;mCAIhB,IAAA28C,OAAAriB,YAAA;gCACrB6hB,mBAAAC,UAAAvrD,MAAA8rD,QAAAG;mCACqB,IAAAH,OAAA,QAAAA,OAAA,KAAAriB,YAAA;gCACrB6hB,mBAAAC,UAAAvrD,MAAA8rD,OAAA,MAAAG;;;wBAGA,OAAAR;;oBAEA,SAAAY,iBAAArsD,MAAA6pC;wBACA7pC,uBAAA,WAAAA,KAAAwwB,MAAAt4B,KAAA8yD,aAAAhrD,KAAAgjC;wBACA,SAAA7zB,IAAA,GAAAw8C,MAAA3rD,KAAAhD,QAAkDmS,IAAA,IAAAw8C,KAAax8C,KAAA;4BAC/D,IAAAnP,KAAAmP,OAAA,QAAAnP,KAAAmP,IAAA;gCACA;;;wBAGA,IAAAq8C,OAAAtzD,KAAAkzD;wBACA,IAAAtvD,OAAAkE,KAAAssD;wBACA,OAAAxwD,MAAA;4BACA,KAAA0vD,KAAA1vD,OAAA;gCACA0vD,KAAA1vD;;4BAEA0vD,YAAA1vD;4BACA,IAAAkE,KAAAhD,WAAA;gCACA,KAAAwuD,KAAA/hB,YAAA;oCACA+hB,KAAA/hB,aAAAI;uCACyB,WAAA2hB,KAAA/hB,eAAA;oCACzB+hB,KAAA/hB,eAAA+hB,KAAA/hB,YAAAI;uCACyB,IAAAl5B,QAAA66C,KAAA/hB,aAAA;oCACzB+hB,KAAA/hB,WAAApsC,KAAAwsC;oCACA,KAAA2hB,KAAA/hB,WAAA8iB,QAAA;wCACA,IAAA7zD,IAAAiyD;wCACA,WAAAzyD,KAAA0yD,QAAAK,iBAAA;4CACAvyD,IAAAR,KAAA0yD,QAAAK;;wCAEA,IAAAvyD,IAAA,KAAA8yD,KAAA/hB,WAAAzsC,SAAAtE,GAAA;4CACA8yD,KAAA/hB,WAAA8iB,SAAA;4CACAhgC,QAAAjvB,MAAA,8IAAAkuD,KAAA/hB,WAAAzsC;4CACAuvB,QAAAigC;;;;gCAIA;;4BAEA1wD,OAAAkE,KAAAssD;;wBAEA;;oBAEAjB,aAAAjyD,UAAA4xD,YAAA;oBACAK,aAAAjyD,UAAAqzD,kBAAA,SAAA1+C;wBACA7V,KAAA0yD,WAAAvoD,KAAA5J,KAAAP;wBACAA,KAAA0yD,QAAAK,eAAAl9C;wBACA,KAAA7V,KAAA2yD,OAAA3yD,KAAA2yD;wBACA3yD,KAAA2yD,MAAAI,eAAAl9C;;oBAEAs9C,aAAAjyD,UAAAszD,QAAA;oBACArB,aAAAjyD,UAAAuzD,OAAA,SAAAD,OAAAE;wBACA10D,KAAA20D,KAAAH,OAAA,GAAAE;wBACA,OAAA10D;;oBAEAmzD,aAAAjyD,UAAAyzD,OAAA,SAAAH,OAAAI,KAAAF;wBACA,IAAAz/C,OAAAjV;wBACA,WAAA00D,OAAA;4BACA,UAAAG,MAAA;;wBAEA,SAAAljB;4BACA,MAAAijB,QAAA;gCACA3/C,KAAA6/C,IAAAN,OAAA7iB;;4BAEA+iB,GAAA72C,MAAA7d,MAAA+d;;wBAEA4zB,SAAAojB,UAAAL;wBACA10D,KAAAg1D,GAAAR,OAAA7iB;wBACA,OAAA18B;;oBAEAk+C,aAAAjyD,UAAAuE,OAAA;wBACAzF,KAAA0yD,WAAAvoD,KAAA5J,KAAAP;wBACA,IAAA8H,OAAAiW,UAAA;wBACA,IAAAjW,SAAA,kBAAA9H,KAAAizD,aAAA;4BACA,KAAAjzD,KAAA0yD,QAAAO,aAAA;gCACA;;;wBAGA,IAAAjzD,KAAAi1D,MAAA;4BACA,IAAA3gD,IAAAyJ,UAAAjZ;4BACA,IAAAowD,OAAA,IAAApyC,MAAAxO,IAAA;4BACA,SAAA2C,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAAi+C,KAAAj+C,IAAA,KAAA8G,UAAA9G;4BAC1C,KAAAA,IAAA,GAAA3C,IAAAtU,KAAAi1D,KAAAnwD,QAAqDmS,IAAA3C,GAAO2C,KAAA;gCAC5DjX,KAAAw0D,QAAA1sD;gCACA9H,KAAAi1D,KAAAh+C,GAAA4G,MAAA7d,MAAAk1D;;;wBAGA,IAAAptD,SAAA;4BACA,KAAA9H,KAAAi1D,SAAAj1D,KAAA0yD,QAAAttD,WAAApF,KAAAgzD,YAAAhzD,KAAAkzD,aAAA9tD,QAAA;gCACA,IAAA2Y,UAAA,cAAA82C,OAAA;oCACA,MAAA92C,UAAA;uCACyB;oCACzB,UAAA82C,MAAA;;gCAEA;;;wBAGA,IAAAM;wBACA,IAAAn1D,KAAAgzD,UAAA;4BACAmC;4BACA,IAAA5lB,YAAAznC,SAAA,WAAAA,KAAAwwB,MAAAt4B,KAAA8yD,aAAAhrD,KAAAgjC;4BACAsoB,mBAAA7yD,KAAAP,MAAAm1D,SAAA5lB,IAAAvvC,KAAAkzD,cAAA;+BACiB;4BACjBiC,UAAAn1D,KAAA0yD,QAAA5qD;;wBAEA,WAAAqtD,YAAA;4BACAn1D,KAAAw0D,QAAA1sD;4BACA,IAAAiW,UAAAjZ,WAAA;gCACAqwD,QAAA50D,KAAAP;mCACqB,IAAA+d,UAAAjZ,SAAA,WAAAiZ,UAAAjZ;8BACrB;gCACAqwD,QAAA50D,KAAAP,MAAA+d,UAAA;gCACA;;8BAEA;gCACAo3C,QAAA50D,KAAAP,MAAA+d,UAAA,IAAAA,UAAA;gCACA;;8BAEA;gCACA,IAAAzJ,IAAAyJ,UAAAjZ;gCACA,IAAAowD,OAAA,IAAApyC,MAAAxO,IAAA;gCACA,SAAA2C,IAAA,GAAuCA,IAAA3C,GAAO2C,KAAAi+C,KAAAj+C,IAAA,KAAA8G,UAAA9G;gCAC9Ck+C,QAAAt3C,MAAA7d,MAAAk1D;;4BAEA;+BACiB,IAAAC,SAAA;4BACjB,IAAA7gD,IAAAyJ,UAAAjZ;4BACA,IAAAowD,OAAA,IAAApyC,MAAAxO,IAAA;4BACA,SAAA2C,IAAA,GAAmCA,IAAA3C,GAAO2C,KAAAi+C,KAAAj+C,IAAA,KAAA8G,UAAA9G;4BAC1C,IAAAs8C,YAAA4B,QAAArqB;4BACA,SAAA7zB,IAAA,GAAA3C,IAAAi/C,UAAAzuD,QAAyDmS,IAAA3C,GAAO2C,KAAA;gCAChEjX,KAAAw0D,QAAA1sD;gCACAyrD,UAAAt8C,GAAA4G,MAAA7d,MAAAk1D;;4BAEA,OAAA3B,UAAAzuD,SAAA,OAAA9E,KAAAi1D;+BACiB;4BACjB,SAAAj1D,KAAAi1D;;;oBAGA9B,aAAAjyD,UAAA8zD,KAAA,SAAAltD,MAAA6pC;wBACA,WAAA7pC,SAAA;4BACA9H,KAAAo1D,MAAAttD;4BACA,OAAA9H;;wBAEA,WAAA2xC,aAAA;4BACA,UAAAkjB,MAAA;;wBAEA70D,KAAA0yD,WAAAvoD,KAAA5J,KAAAP;wBACAA,KAAAyF,KAAA,eAAAqC,MAAA6pC;wBACA,IAAA3xC,KAAAgzD,UAAA;4BACAmB,iBAAA5zD,KAAAP,MAAA8H,MAAA6pC;4BACA,OAAA3xC;;wBAEA,KAAAA,KAAA0yD,QAAA5qD,OAAA;4BACA9H,KAAA0yD,QAAA5qD,QAAA6pC;+BACiB,WAAA3xC,KAAA0yD,QAAA5qD,UAAA;4BACjB9H,KAAA0yD,QAAA5qD,UAAA9H,KAAA0yD,QAAA5qD,OAAA6pC;+BACiB,IAAAl5B,QAAAzY,KAAA0yD,QAAA5qD,QAAA;4BACjB9H,KAAA0yD,QAAA5qD,MAAA3C,KAAAwsC;4BACA,KAAA3xC,KAAA0yD,QAAA5qD,MAAAusD,QAAA;gCACA,IAAA7zD,IAAAiyD;gCACA,WAAAzyD,KAAA0yD,QAAAK,iBAAA;oCACAvyD,IAAAR,KAAA0yD,QAAAK;;gCAEA,IAAAvyD,IAAA,KAAAR,KAAA0yD,QAAA5qD,MAAAhD,SAAAtE,GAAA;oCACAR,KAAA0yD,QAAA5qD,MAAAusD,SAAA;oCACAhgC,QAAAjvB,MAAA,8IAAApF,KAAA0yD,QAAA5qD,MAAAhD;oCACAuvB,QAAAigC;;;;wBAIA,OAAAt0D;;oBAEAmzD,aAAAjyD,UAAAk0D,QAAA,SAAAV;wBACA,WAAAA,OAAA;4BACA,UAAAG,MAAA;;wBAEA,KAAA70D,KAAAi1D,MAAA;4BACAj1D,KAAAi1D;;wBAEAj1D,KAAAi1D,KAAA9vD,KAAAuvD;wBACA,OAAA10D;;oBAEAmzD,aAAAjyD,UAAAm0D,cAAAlC,aAAAjyD,UAAA8zD;oBACA7B,aAAAjyD,UAAA4zD,MAAA,SAAAhtD,MAAA6pC;wBACA,WAAAA,aAAA;4BACA,UAAAkjB,MAAA;;wBAEA,IAAAxB,UAAAiC;wBACA,IAAAt1D,KAAAgzD,UAAA;4BACA,IAAAzjB,YAAAznC,SAAA,WAAAA,KAAAwwB,MAAAt4B,KAAA8yD,aAAAhrD,KAAAgjC;4BACAwqB,QAAAlC,mBAAA7yD,KAAAP,MAAA,MAAAuvC,IAAAvvC,KAAAkzD,cAAA;+BACiB;4BACjB,KAAAlzD,KAAA0yD,QAAA5qD,OAAA,OAAA9H;4BACAqzD,WAAArzD,KAAA0yD,QAAA5qD;4BACAwtD,MAAAnwD;gCACAosC,YAAA8hB;;;wBAGA,SAAAkC,QAAA,GAAmCA,QAAAD,MAAAxwD,QAAsBywD,SAAA;4BACzD,IAAA/B,OAAA8B,MAAAC;4BACAlC,WAAAG,KAAAjiB;4BACA,IAAA94B,QAAA46C,WAAA;gCACA,IAAAxjD,YAAA;gCACA,SAAAoH,IAAA,GAAAnS,SAAAuuD,SAAAvuD,QAAiEmS,IAAAnS,QAAYmS,KAAA;oCAC7E,IAAAo8C,SAAAp8C,OAAA06B,YAAA0hB,SAAAp8C,GAAA06B,YAAA0hB,SAAAp8C,GAAA06B,yBAAA0hB,SAAAp8C,GAAA89C,WAAA1B,SAAAp8C,GAAA89C,YAAApjB,UAAA;wCACA9hC,WAAAoH;wCACA;;;gCAGA,IAAApH,WAAA;oCACA;;gCAEA,IAAA7P,KAAAgzD,UAAA;oCACAQ,KAAAjiB,WAAAjnB,OAAAza,UAAA;uCACyB;oCACzB7P,KAAA0yD,QAAA5qD,MAAAwiB,OAAAza,UAAA;;gCAEA,IAAAwjD,SAAAvuD,WAAA;oCACA,IAAA9E,KAAAgzD,UAAA;+CACAQ,KAAAjiB;2CAC6B;+CAC7BvxC,KAAA0yD,QAAA5qD;;;gCAGA,OAAA9H;mCACqB,IAAAqzD,aAAA1hB,YAAA0hB,SAAA1hB,YAAA0hB,SAAA1hB,yBAAA0hB,SAAA0B,WAAA1B,SAAA0B,YAAApjB,UAAA;gCACrB,IAAA3xC,KAAAgzD,UAAA;2CACAQ,KAAAjiB;uCACyB;2CACzBvxC,KAAA0yD,QAAA5qD;;;;wBAIA,OAAA9H;;oBAEAmzD,aAAAjyD,UAAAs0D,SAAA,SAAAd;wBACA,IAAAz9C,IAAA,GAAA3C,IAAA,GAAAmhD;wBACA,IAAAf,MAAA10D,KAAAi1D,QAAAj1D,KAAAi1D,KAAAnwD,SAAA;4BACA2wD,MAAAz1D,KAAAi1D;4BACA,KAAAh+C,IAAA,GAAA3C,IAAAmhD,IAAA3wD,QAA+CmS,IAAA3C,GAAO2C,KAAA;gCACtD,IAAAy9C,OAAAe,IAAAx+C,IAAA;oCACAw+C,IAAAnrC,OAAArT,GAAA;oCACA,OAAAjX;;;+BAGiB;4BACjBA,KAAAi1D;;wBAEA,OAAAj1D;;oBAEAmzD,aAAAjyD,UAAAw0D,iBAAAvC,aAAAjyD,UAAA4zD;oBACA3B,aAAAjyD,UAAAy0D,qBAAA,SAAA7tD;wBACA,IAAAiW,UAAAjZ,WAAA;6BACA9E,KAAA0yD,WAAAvoD,KAAA5J,KAAAP;4BACA,OAAAA;;wBAEA,IAAAA,KAAAgzD,UAAA;4BACA,IAAAzjB,YAAAznC,SAAA,WAAAA,KAAAwwB,MAAAt4B,KAAA8yD,aAAAhrD,KAAAgjC;4BACA,IAAAwqB,QAAAlC,mBAAA7yD,KAAAP,MAAA,MAAAuvC,IAAAvvC,KAAAkzD,cAAA;4BACA,SAAAqC,QAAA,GAAuCA,QAAAD,MAAAxwD,QAAsBywD,SAAA;gCAC7D,IAAA/B,OAAA8B,MAAAC;gCACA/B,KAAAjiB,aAAA;;+BAEiB;4BACjB,KAAAvxC,KAAA0yD,QAAA5qD,OAAA,OAAA9H;4BACAA,KAAA0yD,QAAA5qD,QAAA;;wBAEA,OAAA9H;;oBAEAmzD,aAAAjyD,UAAAqyD,YAAA,SAAAzrD;wBACA,IAAA9H,KAAAgzD,UAAA;4BACA,IAAAK;4BACA,IAAA9jB,YAAAznC,SAAA,WAAAA,KAAAwwB,MAAAt4B,KAAA8yD,aAAAhrD,KAAAgjC;4BACAsoB,mBAAA7yD,KAAAP,MAAAqzD,UAAA9jB,IAAAvvC,KAAAkzD,cAAA;4BACA,OAAAG;;wBAEArzD,KAAA0yD,WAAAvoD,KAAA5J,KAAAP;wBACA,KAAAA,KAAA0yD,QAAA5qD,OAAA9H,KAAA0yD,QAAA5qD;wBACA,KAAA2Q,QAAAzY,KAAA0yD,QAAA5qD,QAAA;4BACA9H,KAAA0yD,QAAA5qD,UAAA9H,KAAA0yD,QAAA5qD;;wBAEA,OAAA9H,KAAA0yD,QAAA5qD;;oBAEAqrD,aAAAjyD,UAAA00D,eAAA;wBACA,IAAA51D,KAAAi1D,MAAA;4BACA,OAAAj1D,KAAAi1D;+BACiB;4BACjB;;;oBAGA;0BACAx+C,gCAAA;4BACA,OAAA08C;0BACiB5yD,KAAAX,SAAAO,qBAAAP,SAAAC,SAAA4W,kCAAAie,cAAA70B,OAAAD,UAAA6W;2BACJ,WAAA7W,YAAA;wBACbA,QAAAi2D,gBAAA1C;2BACa;wBACbjgD,OAAA2iD,gBAAA1C;;;eAGK,SAAAtzD,QAAAD;gBACLC,OAAAD;oBACAsU,SAAAhB,OAAA;;eAEK,SAAArT,QAAAD;iBACL;oBACA,IAAAyO,eAAA,SAAA+xB,SAAA1kB;wBACA,SAAAo6C;4BACA91D,KAAA8V;4BACA9V,KAAAqM,MAAA,SAAAuB;gCACA5N,KAAA8V,EAAA3Q,KAAAyI;;4BAEA,IAAAqJ,GAAA+T;4BACAhrB,KAAAO,OAAA;gCACA,KAAA0W,IAAA,GAAA+T,IAAAhrB,KAAA8V,EAAAhR,QAAsDmS,IAAA+T,GAAO/T,KAAA;oCAC7DjX,KAAA8V,EAAAmB,GAAA1W;;;;wBAIA,SAAAmJ,iBAAA02B,SAAA1Q;4BACA,IAAA0Q,QAAAlM,cAAA;gCACA,OAAAkM,QAAAlM,aAAAxE;mCACqB,IAAAxc,OAAAxJ,kBAAA;gCACrB,OAAAwJ,OAAAxJ,iBAAA02B,SAAA,MAAAhL,iBAAA1F;mCACqB;gCACrB,OAAA0Q,QAAA32B,MAAAimB;;;wBAGA,SAAAqmC,kBAAA31B,SAAA41B;4BACA,KAAA51B,QAAA61B,iBAAA;gCACA71B,QAAA61B,kBAAA,IAAAH;gCACA11B,QAAA61B,gBAAA5pD,IAAA2pD;mCACqB,IAAA51B,QAAA61B,iBAAA;gCACrB71B,QAAA61B,gBAAA5pD,IAAA2pD;gCACA;;4BAEA51B,QAAAhyB,eAAAmG,SAAAC,cAAA;4BACA4rB,QAAAhyB,aAAAw7B,YAAA;4BACA,IAAAngC,QAAA;4BACA,IAAAysD,aAAA;4BACA91B,QAAAhyB,aAAA3E,MAAAgL,UAAAhL;4BACA22B,QAAAhyB,aAAA+nD,YAAA,8CAAA1sD,QAAA,wBAAAysD,aAAA,sEAAAzsD,QAAA,wBAAAysD,aAAA,uCAAiR;4BACjR91B,QAAA10B,YAAA00B,QAAAhyB;4BACA;gCACAgoD,OAAA;gCACAp1B,UAAA;8BACqBt3B,iBAAA02B,SAAA;gCACrBA,QAAA32B,MAAAoG,WAAA;;4BAEA,IAAAgzC,SAAAziB,QAAAhyB,aAAA28B,WAAA;4BACA,IAAAsrB,cAAAxT,OAAA9X,WAAA;4BACA,IAAAurB,SAAAl2B,QAAAhyB,aAAA28B,WAAA;4BACA,IAAAwrB,cAAAD,OAAAvrB,WAAA;4BACA,IAAAyrB,WAAAC;4BACA,IAAAC,QAAA;gCACAL,YAAA5sD,MAAAvH,QAAA2gD,OAAA3qB,cAAA;gCACAm+B,YAAA5sD,MAAAtH,SAAA0gD,OAAA1qB,eAAA;gCACA0qB,OAAA8T,aAAA9T,OAAA+T;gCACA/T,OAAAgU,YAAAhU,OAAAiU;gCACAR,OAAAK,aAAAL,OAAAM;gCACAN,OAAAO,YAAAP,OAAAQ;gCACAN,YAAAp2B,QAAAlI;gCACAu+B,aAAAr2B,QAAAjI;;4BAEAu+B;4BACA,IAAA9wC,UAAA;gCACA,IAAAwa,QAAA61B,iBAAA;oCACA71B,QAAA61B,gBAAA11D;;;4BAGA,IAAAw2D,WAAA,SAAA/U,IAAAp+C,MAAAE;gCACA,IAAAk+C,GAAAgV,aAAA;oCACAhV,GAAAgV,YAAA,OAAApzD,MAAAE;uCACyB;oCACzBk+C,GAAAr0C,iBAAA/J,MAAAE;;;4BAGA,IAAAmzD,WAAA;gCACA,IAAA72B,QAAAlI,eAAAs+B,aAAAp2B,QAAAjI,gBAAAs+B,YAAA;oCACA7wC;;gCAEA8wC;;4BAEAK,SAAAlU,QAAA,UAAAoU;4BACAF,SAAAT,QAAA,UAAAW;;wBAEA,IAAAC,cAAA/1D,OAAAD,UAAAgE,SAAA3E,KAAA6/B;wBACA,IAAA+2B,oBAAA,qBAAAD,eAAA,wBAAAA,eAAA,8BAAAA,eAAA,uBAAA1hB,UAAApV,mBAAAoV,UAAA,uBAAA4hB,YAAAh3B,mBAAAg3B;wBACA,IAAAD,mBAAA;4BACA,IAAAlgD,IAAA,GAAA+T,IAAAoV,QAAAt7B;4BACA,MAA0BmS,IAAA+T,GAAM/T,KAAA;gCAChC8+C,kBAAA31B,QAAAnpB,IAAAyE;;+BAEiB;4BACjBq6C,kBAAA31B,SAAA1kB;;wBAEA1b,KAAAgP,SAAA;4BACA,IAAAmoD,mBAAA;gCACA,IAAAlgD,IAAA,GAAA+T,IAAAoV,QAAAt7B;gCACA,MAA8BmS,IAAA+T,GAAM/T,KAAA;oCACpC5I,aAAAW,OAAAoxB,QAAAnpB;;mCAEqB;gCACrB5I,aAAAW,OAAAoxB;;;;oBAIA/xB,aAAAW,SAAA,SAAAoxB;wBACA,IAAAA,QAAAhyB,cAAA;4BACAgyB,QAAAlK,YAAAkK,QAAAhyB;mCACAgyB,QAAAhyB;mCACAgyB,QAAA61B;;;oBAGA,WAAAp2D,WAAA,sBAAAA,OAAAD,YAAA;wBACAC,OAAAD,UAAAyO;2BACa;wBACb6E,OAAA7E;;;eAGK,SAAAxO,QAAAD,SAAAO;gBACL;gBACA,IAAA8+C,UAAA32C,MAAA22C;gBACA,IAAAoY,iBAAAl3D,oBAAA;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAAm3D,WAAAn3D,oBAAA;gBACA,IAAAo3D,kBAAAp3D,oBAAA;gBACA,IAAAq3D,WAAAr3D,oBAAA;gBACA,IAAAs3D,cAAAt3D,oBAAA;gBACA,IAAAu3D,eAAAv3D,oBAAA;gBACA,IAAA+I,SAAA/I,oBAAA;gBACA,IAAAw3D;oBACAC,uBAAA;oBACAC,OAAA;oBACAC,SAAA;oBACA7zD,QAAA;oBACA8zD,cAAA;oBACAC,eAAA;oBACAC,MAAA;oBACAC,QAAA;oBACAC,QAAA;oBACAC,aAAA;oBACAC,uBAAA;;gBAEA,IAAAzuD,aAAA;oBACA,SAAAA,WAAA0uD,cAAArsD,gBAAA3C;wBACA,IAAA2C,wBAAA;4BACAA;;wBAEA,IAAA3C,iBAAA;4BACAA;;wBAEAtJ,KAAAuK;4BACAqG;4BACAhF,KAAA;4BACA1B,MAAA;4BACAmH;gCACAC;oCACAxJ,MAAA4vD,aAAAa,gBAAAC;oCACAz7C,MAAA;oCACArE,IAAA;oCACAnH,QAAA;oCACArH,MAAA;oCACAmnB;wCACAyL,OAAA;wCACA9vB,KAAA;;oCAEA3K;wCACAy6B,OAAA;wCACA9vB,KAAA;;;gCAGAyrD,UAAAf,aAAAgB,eAAAC;gCACAC,aAAA;gCACAloD,YAAA;gCACA3L;;4BAEA8zD;gCACAvnD;oCACAxJ,MAAA4vD,aAAAa,gBAAAO;oCACA/7C,MAAA;oCACArE,IAAA;oCACAxO,MAAA;oCACAmnB;wCACAyL,OAAA;wCACA9vB,KAAA;;oCAEA3K;wCACAy6B,OAAA;wCACA9vB,KAAA;;;gCAGAyrD,UAAAf,aAAAgB,eAAAC;gCACAC,aAAA;gCACA7zD;;4BAEA+N;gCACA/H,SAAA;gCACAguD,kBAAA;gCACAC,sBAAA;gCACAC,WAAA;gCACAC,UAAA/nB,OAAAgoB;gCACAC,aAAA;gCACAC,YAAAloB,OAAAgoB;gCACAG,iBAAA;gCACAC,gBAAApoB,OAAAgoB;;4BAEAxuD;gCACAI,SAAA;gCACA6B,KAAA;;4BAEAuB,YAAA;4BACAnD,UAAA;4BACA0F,YAAA;4BACAhD;gCACA3C,SAAA;;4BAEA2G;gCACAC,UAAA;gCACA5B,GAAA;gCACAC,GAAA;;4BAEAzE,iBAAA;4BACAC,mBAAA;4BACAd,WAAA;4BACAhH;4BACA81D,0BAAA;;wBAEAx5D,KAAAiM;wBACAjM,KAAAsJ;wBACAtJ,KAAAy5D,UAAA;wBACAz5D,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAA+D,GAAAwwD,gBAAA+D,aAAAkB,4BAAAx5D,KAAAuK,KAAAivD;wBACAx5D,KAAAiM;wBACAjM,KAAAmE,gBAAA,IAAAozD,gBAAAmC,cAAA15D,MAAAs4D;wBACAA,aAAA1xD,SAAA5G,KAAAmE,cAAAw1D;wBACArB,eAAAt4D,KAAA45D,eAAAtwD,SAAAgvD;wBACAt4D,KAAAyD,SAAA60D;wBACAt4D,KAAAyD;4BACAoN,cAAA7Q,KAAA65D;;wBAEA75D,KAAA85D;wBACA95D,KAAAsE,SAAA,IAAAkzD,SAAAuC,OAAA/5D;wBACAA,KAAAg6D,aAAA,IAAAvC,YAAAwC,UAAAj6D,MAAA03D,aAAAwC,UAAAC;wBACAn6D,KAAAo6D,aAAA,IAAA3C,YAAAwC,UAAAj6D,MAAA03D,aAAAwC,UAAAG;wBACAr6D,KAAAs6D;wBACAt6D,KAAA+D,GAAA0B,KAAAkyD,mBAAAC,uBAAAU;wBACAt4D,KAAAy5D,UAAA;wBACAz5D,KAAA+D,GAAA0B,KAAAkyD,mBAAAE,OAAAS;;oBAEA1uD,WAAA1I,UAAAkM,UAAA;wBACApN,KAAA+D,GAAA0B,KAAAkyD,mBAAAG;wBACA93D,KAAA+D,GAAA4xD;wBACA31D,KAAAuK;;oBAEAX,WAAA1I,UAAAq5D,YAAA,SAAAz2D;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAG,SAAAh0D;;oBAEA8F,WAAA1I,UAAAyB,wBAAA,SAAAmB;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAC,uBAAA9zD;;oBAEA8F,WAAA1I,UAAAs5D,UAAA,SAAA12D;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAE,OAAA/zD;;oBAEA8F,WAAA1I,UAAA2C,WAAA,SAAAC;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAA1zD,QAAAH;;oBAEA8F,WAAA1I,UAAAu5D,gBAAA,SAAA32D;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAI,cAAAj0D;;oBAEA8F,WAAA1I,UAAAwN,iBAAA,SAAA5K;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAK,eAAAl0D;;oBAEA8F,WAAA1I,UAAAuQ,eAAA,SAAA3N;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAS,aAAAt0D;;oBAEA8F,WAAA1I,UAAA+1D,WAAA,SAAAnzD;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAQ,QAAAr0D;;oBAEA8F,WAAA1I,UAAAw5D,SAAA,SAAA52D;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAM,MAAAn0D;;oBAEA8F,WAAA1I,UAAA4N,WAAA,SAAAhL;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAO,QAAAp0D;;oBAEA8F,WAAA1I,UAAAy5D,uBAAA,SAAA72D;wBACA,OAAA9D,KAAA+D,GAAAC,UAAA2zD,mBAAAU,uBAAAv0D;;oBAEA8F,WAAA1I,UAAAkG,WAAA,SAAA1F;wBACA,OAAA1B,KAAAmE,cAAAiD,SAAA1F;;oBAEAkI,WAAA1I,UAAAuC,WAAA,SAAAm3D,UAAAC,WAAAC;wBACA,IAAAA,gBAAA;4BACAA,SAAA;;wBAEA,IAAAC,YAAA/6D,KAAAuK;wBACA,IAAAywD;wBACA,SAAAC,OAAAL,UAAA;4BACA,IAAAG,UAAAE,SAAAL,SAAAK,MAAA;gCACAD,aAAAC,OAAAL,SAAAK;;;wBAGAj7D,KAAA85D,cAAAkB;wBACA,IAAAE;wBACA,IAAAN,SAAAh0D,QAAA,SAAAlF,aAAAk5D,SAAAh0D,QAAA;4BACA,IAAAu0D,eAAAP,SAAAh0D,OAAAlF;4BACA,IAAAy5D,aAAA5wD,MAAA2wD,WAAAx5D,aAAAy5D,aAAA5wD;mCACA4wD,aAAA5wD;;wBAEA,IAAA6wD,uBAAAj6D,OAAAk6D,KAAAH,YAAAp2D,SAAA;wBACA9E,KAAAuK,OAAA/B,QAAAxD,MAAAK,UAAArF,KAAAuK,MAAAqwD,UAAA;wBACA,IAAAQ,sBAAA,SAAA15D,aAAAw5D,YAAA;4BACAl7D,KAAAuK,KAAA3D,OAAAlF,WAAA6I,OAAA2wD,WAAAx5D;;wBAEA,IAAAo5D,QAAA;wBACA,IAAAQ,oBAAAt7D,KAAAu7D,iBAAAP;wBACAA,eAAAM,kBAAAN;wBACAh7D,KAAAw7D,uBAAAR,cAAAH;;oBAEAjxD,WAAA1I,UAAAq6D,mBAAA,SAAAP;wBACA,IAAAzwD,OAAAvK,KAAAuK;wBACA,IAAAkxD;wBACA,IAAAC,aAAAlzD,QAAAxD,MAAAK,cAA2DkF;wBAC3D,IAAAywD,aAAAzxD,YAAAgB,KAAAhB,SAAA;4BACAkyD,MAAAlyD;4BACA,IAAAoyD,iBAAApxD,KAAAhB;4BACA,SAAAe,cAAAtK,KAAAiM,gBAAA;gCACA,IAAA2vD,cAAA57D,KAAAiM,eAAA3B;gCACA,IAAAsI,cAAA+oD,eAAArxD;gCACA,IAAAuxD,iBAAAD,YAAAE,uBAAAxE,SAAAyE,YAAAD;gCACAL,MAAAlyD,QAAAe,cAAA9B,QAAAxD,MAAAK,UAAAw2D,gBAAAjpD;;;wBAGA,IAAAopD,gBAAAhB,aAAAtpD;wBACA,IAAAuqD,cAAAD,iBAAAzxD,KAAAmH,OAAAC,YAAApH,KAAAqG,UAAAc,OAAAC;wBACA,IAAAsqD,aAAA;4BACA,IAAAC,OAAA3xD,KAAAqG,UAAAc,OAAA3B;4BACA,IAAAosD,WAAAH,cAAAjsD;4BACA,IAAAqB,gBAAA7G,KAAA8G,MAAAC,MAAAC;4BACA,IAAA6qD,YAAAp8D,KAAAq8D,iBAAAH,OAAAC;4BACAV,MAAApqD;gCACAC;oCACAC,QAAAH,gBAAAgrD;;;4BAGAV,aAAAlzD,QAAAxD,MAAAK,UAAAq2D;gCACArqD,OAAAoqD,MAAApqD;;;wBAGA,IAAAirD,kBAAAtB,aAAA94D,cAAA,KAAA84D,aAAA74D,eAAA;wBACA,IAAAo6D,iBAAA;wBACA,IAAAC,yBAAAP,eAAAK,mBAAAtB,aAAA3pD,SAAA2pD,aAAA3pD,MAAAC,SAAAtR,KAAAuK,KAAA8G,MAAAC,MAAAmrD,gBAAA;wBACA,IAAAD,wBAAA;4BACA,IAAAE,aAAA18D,KAAA28D,iBAAAjB,YAAAV;4BACA,IAAA0B,YAAA;gCACAH,iBAAA;gCACAd,QAAAjzD,QAAAxD,MAAAK,UAAAo2D;oCACApqD,OAAAqrD;;gCAEAhB,aAAAlzD,QAAAxD,MAAAK,UAAAq2D;oCACArqD,OAAAqrD;;;;wBAIA,IAAAE,yBAAAN,oBAAA/xD,KAAAsuD,MAAAvnD,MAAAxJ,SAAA4vD,aAAAa,gBAAAO,gBAAAvuD,KAAAsuD,MAAAvnD,MAAAxJ,SAAA4vD,aAAAa,gBAAAsE,QAAAtyD,KAAAsuD,MAAAvnD,MAAAwrD,kBAAAP,kBAAAvB,aAAAp0D,UAAAo0D,aAAAnC,UAAA74D,KAAAuK,KAAAsuD,MAAAvnD,MAAAmrD,gBAAA;wBACA,IAAAG,wBAAA;4BACA,IAAAG,aAAA/8D,KAAAg9D,iBAAAtB;4BACA,IAAAqB,YAAA;gCACAtB,QAAAjzD,QAAAxD,MAAAK,UAAAo2D;oCACA5C,OAAAkE;;gCAEArB,aAAAlzD,QAAAxD,MAAAK,UAAAq2D;oCACA7C,OAAAkE;;;;wBAIA/8D,KAAA85D,cAAA2B;wBACA,IAAAwB,kBAAAz0D,QAAAxD,MAAAK,UAAA21D,cAAAS;wBACAA,MAAA5qD,eAAA7Q,KAAA65D,gBAAAoD;wBACAj9D,KAAA85D,cAAA2B;wBACAz7D,KAAAuK,OAAA/B,QAAAxD,MAAAK,UAAArF,KAAAuK,MAAAkxD;wBACA;4BACAT,cAAAiC;4BACAxB;;;oBAGA7xD,WAAA1I,UAAA24D,kBAAA,SAAAmB;wBACA,IAAAkC,cAAAlC;wBACA,IAAAnqD;wBACA,IAAAqsD,cAAAlC,aAAAp0D,UAAA5G,KAAAmE,eAAA;4BACA0M,aAAAjK;gCACAkK,SAAA9Q,KAAAmE,cAAAg5D;gCACAC,SAAAp9D,KAAAmE,cAAAk5D;;;wBAGA,OAAAxsD;;oBAEAjH,WAAA1I,UAAA44D,gBAAA,SAAAkB;wBACA,KAAAA,6BAAAh7D,KAAAuK;wBACA,IAAAqG,YAAA5Q,KAAAuK,KAAAqG;wBACApI,QAAAxD,MAAAs4D,UAAAt9D,KAAAuK,MAAAqG,WAAAoqD,gBAAA;;oBAEApxD,WAAA1I,UAAAs6D,yBAAA,SAAAR,cAAAH;wBACA,IAAAjqD,YAAA5Q,KAAAuK,KAAAqG;wBACA5Q,KAAA+D,GAAA0B,KAAAkyD,mBAAA1zD,QAAA+2D,cAAAH;wBACA,SAAAI,OAAAD,cAAA;4BACAh7D,KAAA+D,GAAA0B,KAAAw1D,MAAA,UAAAD,aAAAC,MAAAJ;;wBAEA,KAAA76D,KAAAy5D,SAAA;wBACA,IAAA8D,wBAAAvC,aAAAtpD,UAAAspD,aAAAtpD,OAAAC,aAAA,SAAAf,UAAAc,OAAAC,aAAA;wBACA4rD,yBAAAv9D,KAAA+D,GAAA0B,KAAAkyD,mBAAAS,aAAA4C;wBACA,IAAAwC,2BAAAxC,aAAA3pD,SAAA2pD,aAAA3pD,MAAAC,SAAA0pD,aAAA3pD,MAAAC,MAAAC,gBAAA;wBACAisD,4BAAAx9D,KAAA+D,GAAA0B,KAAAkyD,mBAAAQ,QAAA6C;wBACA,IAAAyC,mBAAAzC,aAAA3pD,SAAA2pD,aAAA3pD,MAAAC,SAAA0pD,aAAA3pD,MAAAC,MAAApH,QAAA8wD,aAAAnC,SAAAmC,aAAAnC,MAAAvnD,SAAA0pD,aAAAnC,MAAAvnD,MAAApH;wBACAuzD,oBAAAz9D,KAAA+D,GAAA0B,KAAAkyD,mBAAAM,MAAA+C;wBACA,IAAA0C,oBAAA1C,aAAA94D,SAAA84D,aAAA74D;wBACAu7D,qBAAA19D,KAAA+D,GAAA0B,KAAAkyD,mBAAAO,QAAA8C;wBACA,IAAA2C,kCAAA3C,aAAAt3D;wBACAi6D,iCAAA39D,KAAA+D,GAAA0B,KAAAkyD,mBAAAU,uBAAA2C,aAAAt3D;;oBAEAkG,WAAA1I,UAAA04D,iBAAA,SAAAtwD,SAAAgvD;wBACA,IAAAp0D,QAAAlE;wBACAs4D,aAAA50D;wBACA4F,QAAA6F,QAAA,SAAAid;4BACA,IAAAwxC,cAAAxxC,OAAAnrB;4BACA,IAAA89B,aAAA6+B,YAAAl2D;4BACAk2D,YAAAj2D,cAAAwH,QAAA,SAAA0uD;gCACA,OAAA35D,MAAA+H,eAAA4xD,aAAAvzD,cAAAuzD;;4BAEAvF,aAAA50D,aAAAq7B,cAAAv2B,QAAAxD,MAAAK,cAAsF+mB,OAAAksC;4BACtFp0D,MAAAoF,QAAAy1B,cAAA3S;4BACAA,OAAA0xC,gBAAA55D;;wBAEA,OAAAo0D;;oBAEA1uD,WAAA1I,UAAA68D,YAAA,SAAAh/B;wBACA,OAAA/+B,KAAAsJ,QAAAy1B;;oBAEAn1B,WAAA1I,UAAAo5D,gBAAA;wBACA,IAAAp2D,QAAAlE;wBACAA,KAAA+D,GAAAixD,GAAA2C,mBAAAK,eAAA,SAAAgG,eAAAC;4BACA/5D,MAAAg6D,mBAAAF,eAAAC;;;oBAGAr0D,WAAA1I,UAAAg9D,qBAAA,SAAAF,eAAAC;wBACA,SAAAv8D,aAAAs8D,eAAA;4BACAh+D,KAAA+D,GAAA0B,KAAAkyD,mBAAAI,cAAAr2D,WAAAs8D,cAAAt8D,YAAAu8D;;;oBAGAr0D,WAAA1I,UAAAy7D,mBAAA,SAAAjB,YAAAV;wBACA,IAAAmD,YAAAzC,WAAArqD,MAAAC;wBACA,IAAAmqD;4BACAnqD;;wBAEA,IAAA8sD,eAAAD,UAAA1B,gBAAA;wBACA,IAAAA,SAAA4B;wBACA,IAAAn0D,OAAAi0D,UAAAj0D;wBACA,IAAAi0D,UAAArB,cAAA;4BACAt0D,QAAAxD,MAAAI,MAAA;;wBAEA,IAAAg5D,cAAA;4BACA3B,UAAA0B,UAAAphD;4BACAshD,cAAA3C,WAAAx5D,SAAAi8D,UAAAzlD,KAAAylD,UAAAphD;4BACA0+C;gCACAnqD;oCACAmrD;oCACA4B;;;+BAGiB;4BACjB5B,UAAA0B,UAAA1B;4BACA4B,cAAAF,UAAAE;4BACA,IAAArD,aAAA3pD,UAAA2pD,aAAA3pD,MAAAC,MAAAyL,aAAA,KAAAi+C,aAAA3pD,MAAAC,MAAAoH,KAAA;gCACA,IAAAsiD,aAAA3pD,MAAAC,MAAApH,MAAA;oCACA1B,QAAAxD,MAAAI,MAAA;;gCAEA,IAAAk5D,qBAAA5C,WAAAx5D,SAAAi8D,UAAAzlD,KAAAylD,UAAAphD;gCACA0+C,MAAAnqD,MAAAC,SAAA4sD,UAAAphD,OAAA0/C;gCACAhB,MAAAnqD,MAAApH,OAAAo0D,qBAAAD;gCACA,OAAA5C;;;wBAGA;4BACA,IAAA1+C,OAAA0/C,UAAA0B,UAAA5sD;4BACA,IAAAmH,KAAAqE,OAAA2+C,WAAAx5D,SAAAm8D,cAAAn0D;4BACA,IAAAq0D,cAAA7lD,KAAAqE;4BACA,IAAAyhD,wBAAA;4BACA,IAAAC,wBAAAN,UAAAO,aAAAH,cAAAJ,UAAAO;4BACA,IAAAC,wBAAAR,UAAAS,aAAAL,cAAAJ,UAAAS;4BACAJ,wBAAAC,yBAAAE;4BACA,IAAAH,uBAAA;gCACA,IAAAK,WAAAN,cAAAJ,UAAAO,YAAAH,cAAAJ,UAAAO,YAAAH,cAAAJ,UAAAS;gCACA,IAAA10D,cAAA20D;gCACApD,MAAAnqD,MAAApH;;iCAEiBs0D;wBACjB/C,MAAAnqD,MAAAyL;wBACA0+C,MAAAnqD,MAAAoH;wBACA,OAAA+iD;;oBAEA7xD,WAAA1I,UAAA87D,mBAAA,SAAAtB;wBACA,IAAAD;4BACAnqD;;wBAEA,IAAAwtD,aAAApD,WAAA7C,MAAAvnD;wBACA,IAAA8sD,eAAAU,WAAAT,oBAAA;wBACA,IAAAz3D,SAAA5G,KAAAmE;wBACA,IAAA46D,gBAAAn4D,OAAAu2D;wBACA,IAAA6B,kBAAAp4D,OAAAy2D;wBACA,IAAA4B,SAAAvD,WAAArqD,MAAAC;wBACA,IAAA4tD,QAAAD,OAAAliD,MAAAoiD,MAAAF,OAAAvmD;wBACA,IAAA0mD,eAAAD,MAAAD;wBACA,IAAAzC,SAAA4B,aAAA9sD,QAAArH,MAAAm1D;wBACA,IAAAF,MAAAJ,eAAA;4BACAI,MAAAJ;4BACAG,QAAAC,MAAAC;+BACiB,IAAAF,QAAAF,iBAAA;4BACjBE,QAAAF;4BACAG,MAAAD,QAAAE;;wBAEA,IAAAE,OAAA14D,OAAA24D,WAAAL,OAAAC;wBACA,IAAAK,OAAA54D,OAAA64D,WAAAP,OAAAC;wBACA,IAAAO,aAAA94D,OAAA24D,WAAAR;wBACA,IAAAD,WAAAh3D,QAAA4vD,aAAAa,gBAAAO,cAAA;4BACA,IAAA4G,aAAAJ,aAAAI;4BACA,IAAAA,aAAAF,aAAAE;;wBAEA,IAAAZ,WAAAhC,cAAA;4BACA,IAAAgC,WAAArC,gBAAA,GAAAj0D,QAAAxD,MAAAI,MAAA;4BACA,IAAAu6D,6BAAArtD,KAAAqU,IAAAm4C,WAAArC,UAAA6C;4BACA,IAAAM,6BAAAttD,KAAAqU,IAAAm4C,WAAArC,UAAA+C;4BACA,IAAAK,yBAAAvtD,KAAAE,IAAAmtD,4BAAAC;4BACAN,OAAAR,WAAArC,UAAAoD;4BACAL,OAAAV,WAAArC,UAAAoD;;wBAEA,IAAAx9D,SAAAy8D,WAAAz8D;wBACA,IAAAgvB;4BACAyL,OAAAgiC,WAAAztC,QAAAyL,QAAAz6B,OAAAy6B;4BACA9vB,KAAA8xD,WAAAztC,QAAArkB,MAAA3K,OAAA2K;;wBAEA,IAAAqkB,QAAArkB,MAAAqkB,QAAAyL,SAAA4+B,WAAAv5D,QAAA;4BACAqG,QAAAxD,MAAAu7C,KAAA;;wBAEA,IAAAge,cAAAe,OAAAE;wBACA,IAAAM,uBAAAzuC,QAAArkB,MAAA0uD,WAAAv5D;wBACA,IAAA49D,0BAAA1uC,QAAAyL,QAAA4+B,WAAAv5D;wBACA,IAAA69D,wBAAA,IAAAF,uBAAAC;wBACA,IAAAE,qBAAA1B,cAAAyB;wBACA,IAAAE,UAAAV,OAAAS,qBAAAF;wBACA,IAAAI,QAAAb,OAAAW,qBAAAH;wBACA,IAAA1B,cAAA;4BACA3B,UAAAqC,WAAArC,gBAAA,IAAAqC,WAAArC,UAAAyD;4BACA7B,cAAA3C,WAAAv5D,UAAAg+D,QAAAD;4BACAzE;gCACAnqD;oCACAmrD;oCACA4B;;;4BAGAgB,aAAA;+BACiB;4BACjBhB,cAAAS,WAAAT;4BACA5B,UAAAqC,WAAArC;4BACA,IAAA2D,aAAA9tD,KAAAqD,MAAA3V,KAAAqgE,kBAAAf;4BACA,IAAAgB,aAAAhuD,KAAAqD,MAAA3V,KAAAqgE,kBAAAb;4BACAH,aAAAe,aAAA1E,WAAAv5D,SAAAE,OAAA2K,OAAAozD,aAAA1E,WAAAv5D,SAAAkvB,QAAArkB,OAAAszD,aAAAj+D,OAAAy6B,SAAAwjC,aAAAjvC,QAAAyL;;wBAEA,KAAAuiC,YAAA;wBACA9tD,SAAA2uD,UAAAzD;wBACAvyD,OAAAwxD,WAAAv5D,UAAAg+D,QAAAD,WAAA7B;wBACA,IAAAkC,mBAAAvgE,KAAAuK,KAAAsuD,MAAAvnD;wBACA,IAAAivD,iBAAAxjD,SAAAmjD,SAAAzE,MAAAnqD,MAAAyL,OAAAmjD;wBACA,IAAAK,iBAAA7nD,OAAAynD,OAAA1E,MAAAnqD,MAAAoH,KAAAynD;wBACA,IAAAI,iBAAAhvD,mBAAAkqD,MAAAnqD,MAAAC;wBACA,IAAAgvD,iBAAAr2D,eAAAuxD,MAAAnqD,MAAApH;wBACA,OAAAuxD;;oBAEA7xD,WAAA1I,UAAAgJ,OAAA,SAAAF,WAAAC;wBACA,IAAA/F,QAAAlE;wBACA,IAAAiK,gBAAA;4BACAA,SAAA;;wBAEA,IAAAtG,KAAA3D,KAAAuK,KAAA8G,MAAAC,OAAApH,OAAAvG,GAAAuG,MAAAqH,SAAA5N,GAAA4N,QAAA8sD,cAAA16D,GAAA06D;wBACA,IAAAmC,UAAAt2D,OAAAF;wBACA,IAAAy2D,eAAAzgE,KAAAuK,KAAArI,SAAAm8D,cAAAn0D;wBACA,IAAAw2D,YAAA1gE,KAAAuK,KAAArI,SAAAm8D,cAAAmC;wBACA,IAAAG,YAAApvD,UAAAkvD,eAAAC,aAAAz2D;wBACAjK,KAAAyD;4BACA4N;gCACAC;oCACApH,MAAAs2D;oCACAjvD,QAAAovD;;;;wBAIA,WAAAz3D,OAAAgL,QAAA,SAAA0sD;4BACA,IAAAC,gBAAA38D,MAAAqG,KAAAuI,WAAA/H,UAAA7G,MAAAqG,KAAAuI,WAAAmmD,YAAA;4BACAnsD,WAAA8zD,SAAAC,gBAAA;;;oBAGAj3D,WAAA1I,UAAA4/D,cAAA,SAAAxvD,OAAArH;wBACA,IAAAtG,KAAA3D,KAAAuK,KAAA8G,MAAAC,OAAA+sD,cAAA16D,GAAA06D,aAAAn0D,OAAAvG,GAAAuG;wBACA,IAAAu2D,eAAAzgE,KAAAuK,KAAArI,SAAAm8D,cAAAn0D;wBACA,OAAAlK,KAAAkK,KAAAu2D,eAAAnvD,OAAArH;;oBAEAL,WAAA1I,UAAA6/D,cAAA;wBACA,IAAA78D,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAuK;wBACA,IAAAtC,UAAAjI,KAAAmE,cAAAg5D;wBACA,IAAA7rD,QAAA1L,MAAAyL,MAAAC;wBACA,IAAAC,SAAAtJ,UAAAjI,KAAAq8D,iBAAAz2D,MAAA1D,SAAAlC,KAAAq8D,iBAAA/qD,MAAA+f,QAAArkB,OAAAsE,MAAAmrD;wBACAz8D,KAAAyD;4BACA4N;gCACAC;oCACAC;;;;wBAIA,WAAArI,OAAAgL,QAAA,SAAA0sD;4BACA,IAAAC,gBAAA38D,MAAAqG,KAAAuI,WAAA/H,UAAA7G,MAAAqG,KAAAuI,WAAAsmD,cAAA;4BACAtsD,WAAA8zD,SAAAC,gBAAA;;;oBAGAj3D,WAAA1I,UAAA4E,kBAAA,SAAAC;wBACA,IAAApC,KAAA3D,KAAAuK,KAAA8G,MAAAC,OAAA+sD,cAAA16D,GAAA06D,aAAAn0D,OAAAvG,GAAAuG,MAAAuyD,UAAA94D,GAAA84D;wBACA,QAAA12D,OAAA02D,WAAA4B,cAAAn0D;;oBAEAN,WAAA1I,UAAA+E,kBAAA,SAAAC;wBACA,IAAAvC,KAAA3D,KAAAuK,KAAAsuD,MAAAvnD,OAAA+sD,cAAA16D,GAAA06D,aAAAn0D,OAAAvG,GAAAuG,MAAAuyD,UAAA94D,GAAA84D;wBACA,QAAAv2D,OAAAu2D,WAAA4B,cAAAn0D;;oBAEAN,WAAA1I,UAAA8/D,kBAAA,SAAAjxD;wBACA,OAAA/P,KAAAuK,KAAA8G,MAAAC,MAAAmrD,UAAAz8D,KAAAq8D,iBAAAtsD;;oBAEAnG,WAAA1I,UAAA+/D,mBAAA,SAAAl7D;wBACA,OAAAA,OAAA/F,KAAAuK,KAAA8G,MAAAC,MAAA+sD,cAAAr+D,KAAAuK,KAAA8G,MAAAC,MAAApH;;oBAEAN,WAAA1I,UAAAggE,mBAAA,SAAAh7D;wBACA,OAAAA,OAAAlG,KAAAuK,KAAAsuD,MAAAvnD,MAAA+sD,cAAAr+D,KAAAuK,KAAAsuD,MAAAvnD,MAAApH;;oBAEAN,WAAA1I,UAAAm7D,mBAAA,SAAAt2D;wBACA,OAAAA,OAAA/F,KAAAuK,KAAA8G,MAAAC,MAAA+sD,cAAAr+D,KAAAuK,KAAA8G,MAAAC,MAAApH;;oBAEAN,WAAA1I,UAAAigE,mBAAA,SAAAj7D;wBACA,OAAAA,OAAAlG,KAAAuK,KAAAsuD,MAAAvnD,MAAA+sD,cAAAr+D,KAAAuK,KAAAsuD,MAAAvnD,MAAApH;;oBAEAN,WAAA1I,UAAAkgE,oBAAA,SAAArxD;wBACA,IAAApM,KAAA3D,KAAAuK,KAAA8G,MAAAC,OAAAmrD,UAAA94D,GAAA84D,SAAAlrD,SAAA5N,GAAA4N;wBACA,OAAAkrD,UAAAlrD,SAAAvR,KAAAq8D,iBAAAtsD;;oBAEAnG,WAAA1I,UAAAmgE,oBAAA,SAAArxD;wBACA,IAAArM,KAAA3D,KAAAuK,KAAAsuD,MAAAvnD,OAAAmrD,UAAA94D,GAAA84D,SAAAlrD,SAAA5N,GAAA4N;wBACA,OAAAkrD,UAAAlrD,SAAAvR,KAAAmhE,iBAAAnxD;;oBAEApG,WAAA1I,UAAAogE,oBAAA,SAAAv7D;wBACA,IAAApC,KAAA3D,KAAAuK,KAAA8G,MAAAC,OAAAC,SAAA5N,GAAA4N,QAAAkrD,UAAA94D,GAAA84D;wBACA,OAAAz8D,KAAAihE,iBAAAl7D,OAAA02D,UAAAlrD;;oBAEA3H,WAAA1I,UAAAm/D,oBAAA,SAAAn6D;wBACA,IAAAvC,KAAA3D,KAAAuK,KAAAsuD,MAAAvnD,OAAAC,SAAA5N,GAAA4N,QAAAkrD,UAAA94D,GAAA84D;wBACA,OAAAz8D,KAAAkhE,iBAAAh7D,OAAAu2D,UAAAlrD;;oBAEA3H,WAAA1I,UAAAqgE,oBAAA,SAAAx7D;wBACA,OAAA/F,KAAAshE,kBAAAthE,KAAAghE,gBAAAj7D;;oBAEA6D,WAAA1I,UAAAsgE,oBAAA,SAAAC;wBACA,OAAAzhE,KAAA8F,gBAAA9F,KAAAohE,kBAAAK;;oBAEA73D,WAAA1I,UAAAwgE,kBAAA,SAAA37D,MAAAG;wBACA,WAAA+4C,QAAAj/C,KAAA8F,gBAAAC,OAAA/F,KAAAiG,gBAAAC,OAAA;;oBAEA0D,WAAA1I,UAAAygE,mBAAA;wBACA,OAAA3hE,KAAAohE,kBAAA;;oBAEAx3D,WAAA1I,UAAA+P,oBAAA;wBACA,OAAAjR,KAAAohE,kBAAAphE,KAAAuK,KAAArI;;oBAEA0H,WAAA1I,UAAAiQ,kBAAA;wBACA,OAAAnR,KAAAohE,kBAAAphE,KAAAuK,KAAArI,QAAAlC,KAAAuK,KAAA8G,MAAAC,MAAA+f,QAAArkB;;oBAEA,OAAApD;;gBAEAhK,QAAAgK;eACK,SAAA/J,QAAAD,SAAAO;gBACL;gBACA,IAAA+I,SAAA/I,oBAAA;gBACA,IAAAgzD,eAAA;oBACA,SAAAA;wBACAnzD,KAAA+D,KAAA,IAAAmF,OAAA8K;;oBAEAm/C,aAAAjyD,UAAAuE,OAAA,SAAAm8D;wBACA,IAAA1M;wBACA,SAAAtwD,KAAA,GAAgCA,KAAAmZ,UAAAjZ,QAAuBF,MAAA;4BACvDswD,KAAAtwD,KAAA,KAAAmZ,UAAAnZ;;yBAEAjB,KAAA3D,KAAA+D,IAAA0B,KAAAoY,MAAAla,MAAAi+D,YAAAr+D,OAAA2xD;wBACA,IAAAvxD;;oBAEAwvD,aAAAjyD,UAAA8zD,KAAA,SAAA4M,WAAAlmD;wBACA,OAAA1b,KAAA+D,GAAAixD,GAAA4M,WAAAlmD;;oBAEAy3C,aAAAjyD,UAAA4zD,MAAA,SAAA8M,WAAAlmD;wBACA,OAAA1b,KAAA+D,GAAA+wD,IAAA8M,WAAAlmD;;oBAEAy3C,aAAAjyD,UAAA8C,YAAA,SAAA49D,WAAAlmD;wBACA,IAAAxX,QAAAlE;wBACAA,KAAAg1D,GAAA4M,WAAAlmD;wBACA;4BACA,OAAAxX,MAAA4wD,IAAA8M,WAAAlmD;;;oBAGAy3C,aAAAjyD,UAAAqzD,kBAAA,SAAAsN;wBACA7hE,KAAA+D,GAAAwwD,gBAAAsN;;oBAEA1O,aAAAjyD,UAAAy0D,qBAAA,SAAAiM;wBACA5hE,KAAA+D,GAAA4xD,mBAAAiM;;oBAEA,OAAAzO;;gBAEAvzD,QAAAuzD;eACK,SAAAtzD,QAAAD,SAAAO;gBACL;gBACA,IAAA+I,SAAA/I,oBAAA;gBACA,SAAA2hE,UAAArqD,QAAAwwB,KAAA85B;oBACA,IAAAA,qBAAA;wBACAA,cAAA;;oBAEA,IAAAtyB,QAAA3sB,MAAArK,QAAAwvB;oBACA,IAAA+5B,MAAAvyB;oBACA,IAAAA,OAAA;wBACAh4B;wBACA,IAAAsqD,aAAA;4BACAC,UAAAz+D,OAAAkU;;wBAEAwwB,IAAA94B,QAAA,SAAAF,GAAAgI;4BACA,WAAA+qD,IAAA/qD,OAAA;gCACA+qD,IAAA/qD,KAAAhI;mCACqB,WAAAA,MAAA;gCACrB+yD,IAAA/qD,KAAA6qD,UAAArqD,OAAAR,IAAAhI,GAAA8yD;mCACqB;gCACrB,IAAAtqD,OAAAjS,QAAAyJ,QAAA;oCACA+yD,IAAA78D,KAAA8J;;;;2BAIa;wBACb,IAAAwI,4BAAA;4BACAtW,OAAAk6D,KAAA5jD,QAAAtI,QAAA,SAAA8rD;gCACA+G,IAAA/G,OAAAxjD,OAAAwjD;;;wBAGA95D,OAAAk6D,KAAApzB,KAAA94B,QAAA,SAAA8rD;4BACA,WAAAhzB,IAAAgzB,SAAA,aAAAhzB,IAAAgzB,MAAA;gCACA+G,IAAA/G,OAAAhzB,IAAAgzB;mCACqB;gCACrB,KAAAxjD,OAAAwjD,MAAA;oCACA+G,IAAA/G,OAAAhzB,IAAAgzB;uCACyB;oCACzB+G,IAAA/G,OAAA6G,UAAArqD,OAAAwjD,MAAAhzB,IAAAgzB,MAAA8G;;;;;oBAKA,OAAAC;;gBAEA,IAAAh9D,QAAA;oBACA,SAAAA;oBACAA,MAAAK,YAAA,SAAA48D,MAAAC,MAAAH;wBACA,OAAAD,UAAAG,MAAAC,MAAAH;;oBAEA/8D,MAAAm9D,WAAA,SAAAt3C;wBACA,OAAAu3C,KAAA5lC,MAAA4lC,KAAAC,UAAAx3C;;oBAEA7lB,MAAAs9D,UAAA,SAAApsB,KAAAqsB;wBACA,IAAAC,YAAA;wBACA,IAAArpC,SAAA;wBACA,IAAAspC,SAAAnwD,KAAA4oC,MAAAhF;wBACA,IAAAwsB,SAAAD,OAAAv9D;wBACA,IAAAy9D,aAAAJ,cAAAG,OAAA59D;wBACA,IAAA69D,aAAA;4BACAxpC,SAAA,IAAAphB,OAAA4qD,cAAAD;+BACiB;4BACjBvpC,SAAAupC;;wBAEA,IAAAE,wBAAAJ,YAAAE,OAAA59D;wBACA,IAAA+9D,gBAAA3sB,IAAAhxC,WAAAozB,MAAA;wBACA,IAAAuqC,eAAA;4BACA1pC,UAAA,MAAA0pC,cAAA1+C,OAAA,GAAAy+C;;wBAEA,OAAAzpC;;oBAEAn0B,MAAA89D,YAAA;oBACA99D,MAAA+9D,gBAAA,SAAA7gE,OAAAC,QAAAuyD;wBACA,IAAA5Z,SAAAvmC,SAAAC,cAAA;wBACAsmC,OAAA54C;wBACA44C,OAAA34C;wBACA,IAAA6gE,MAAAloB,OAAA/kC,WAAA;wBACA2+C,GAAAsO;wBACA,IAAA1e,UAAA,IAAAh8C,MAAA26D,QAAAnoB;wBACAwJ,QAAA4e,cAAA;wBACA,OAAA5e;;oBAEAt/C,MAAAm+D,4BAAA,SAAAjhE,OAAAC,QAAAuyD;wBACA,IAAApQ,UAAAtkD,KAAA+iE,cAAA7gE,OAAAC,QAAAuyD;wBACApQ,QAAA8e,YAAA96D,MAAA+6D;wBACA,OAAA/e;;oBAEAt/C,MAAAI,QAAA,SAAAk+D;wBACAjvC,QAAAjvB,MAAA,kBAAAk+D;wBACA,kBAAAA;;oBAEAt+D,MAAAu7C,OAAA,SAAA+iB;wBACAjvC,QAAAksB,KAAA,oBAAA+iB;;oBAEAt+D,MAAAC,SAAA;wBACA,OAAAjF,KAAAujE;;oBAEAv+D,MAAAw+D,cAAA,SAAAC,MAAAC;wBACA,OAAApxD,KAAAE,IAAAixD,MAAAC,QAAApxD,KAAAC,IAAAkxD,MAAAC;;oBAEA1+D,MAAA2+D,yBAAA,SAAAC,KAAA1tB,KAAA+kB;wBACA,IAAA4I;wBACA,IAAAC,KAAA;wBACA,IAAAC,KAAAH,IAAA9+D,SAAA;wBACA,OAAAi/D,KAAAD,KAAA;4BACAD,MAAAvxD,KAAA4oC,OAAA4oB,KAAAC,MAAA;4BACA,IAAAH,IAAAC,KAAA5I,OAAA/kB,KAAA;gCACA4tB,KAAAD;mCACqB;gCACrBE,KAAAF;;;wBAGA,IAAA3tB,MAAA0tB,IAAAE,IAAA7I,QAAA2I,IAAAG,IAAA9I,OAAA/kB,KAAA;4BACA,OAAA4tB;;wBAEA,OAAAC;;oBAEA/+D,MAAAg/D,sBAAA,SAAAJ,KAAA1tB,KAAA+kB;wBACA,IAAAgJ,MAAAjkE,KAAA2jE,uBAAAC,KAAA1tB,KAAA+kB;wBACA,OAAA2I,IAAAK;;oBAEAj/D,MAAAyB,iBAAA,SAAA2jB,IAAAC;wBACA,IAAA65C,QAAA95C,GAAA,IAAA+5C,OAAA/5C,GAAA,IAAAg6C,SAAAh6C,GAAA,IAAAi6C,UAAAj6C,GAAA;wBACA,IAAAk6C,QAAAj6C,GAAA,IAAAk6C,OAAAl6C,GAAA,IAAAm6C,SAAAn6C,GAAA,IAAAo6C,UAAAp6C,GAAA;wBACA,IAAA1mB,OAAAugE,QAAAE,QAAAE,QAAAE,QAAAL,OAAAE,SAAAE,OAAAE,WAAAC,SAAA/gE,GAAA,IAAAghE,SAAAhhE,GAAA,IAAAihE,UAAAjhE,GAAA,IAAAkhE,UAAAlhE,GAAA;wBACA,SAAA2gE,QAAAI,UAAAC,SAAAT,SAAAK,OAAAK,WAAAC,UAAAV;;;;;;;oBAOAn/D,MAAA41B,aAAA,SAAAS;wBACA,IAAAtF,OAAAr1B,IAAAiJ,UAAA0xB,cAAAhG,QAAA;wBACA,IAAAU,QAAA,kDAA2EnC,KAAAyH,QAAAtF,UAAAr1B,EAAAq1B,MAAA,SAAAr1B,EAAAq1B,MAAA,SAAAr1B,EAAAq1B,MAAA,gBAA8E,IAAAA,QAAA,yCAAAnC,KAAAyH,QAAAtF,UAAAr1B,EAAAq1B,MAAA,cAAAr1B,EAAAq1B,MAAA,cAAAr1B,EAAAq1B,MAAA,qBAAqJ,IAAAA,QAAA,uDAAAnC,KAAAyH,QAAAtF,iBAAA,KAAAA,MAAA,KAAAA,MAAA,KAAAA,MAAA,WAA6I,IAAAA,QAAA,kCAAAnC,KAAAyH,QAAAtF,iBAAA,KAAAA,MAAA,KAAAA,MAAA,WAA6G,MAAA8+B,MAAAx5B,QAAA;wBACxiBrX,MAAA+R,MAAA,QAAAA,MAAA;wBACA,OAAAA;;oBAEA/wB,MAAA8/D,cAAA,SAAAroC;wBACA,IAAAsoC,MAAA/kE,KAAA46B,WAAA6B;wBACA,QAAAsoC,IAAA,gBAAAA,IAAA,WAAAA,IAAA;;oBAEA//D,MAAA+E,WAAA,SAAAskB,MAAA22C;wBACA,IAAAC,cAAA,OAAAC,WAAAC;wBACA,SAAAC;4BACA,IAAAH,aAAA;gCACAC,YAAAnnD;gCACAonD,YAAAnlE;gCACA;;4BAEAquB,KAAAxQ,MAAA7d,MAAA+d;4BACAknD,cAAA;4BACAn4D,WAAA;gCACAm4D,cAAA;gCACA,IAAAC,WAAA;oCACAE,QAAAvnD,MAAAsnD,WAAAD;oCACAA,YAAAC,YAAA;;+BAEqBH;;wBAErB,OAAAI;;oBAEApgE,MAAAqgE,iBAAA,SAAAC;wBACA,IAAA76D,IAAA6H,KAAA4oC,MAAAoqB,YAAA;wBACA,IAAA9kE,IAAA8R,KAAA4oC,MAAAoqB,YAAA;wBACA,IAAAzqD,IAAAvI,KAAA4oC,MAAAoqB,YAAA;wBACA,OAAA76D,IAAA,MAAAjK,IAAA,MAAAqa;;oBAEA7V,MAAAugE,gBAAA,SAAA3B;wBACA,IAAAK,MAAA3xD,KAAA4oC,MAAA5oC,KAAAs8B,WAAAg1B,IAAA9+D;wBACA,OAAA8+D,IAAAK;;oBAEAj/D,MAAAs4D,YAAA,SAAAkI,WAAAC,WAAA36C,OAAA46C;wBACA,IAAAA,sBAAA;4BACAA;;wBAEA,SAAAzK,OAAAnwC,OAAA;4BACA,IAAA46C,aAAAlgE,QAAAy1D,UAAA;4BACA,IAAAuK,UAAAvK,aAAA;4BACA,IAAA/xD,OAAA6K,cAAA+W,MAAAmwC,SAAAwK,UAAAxK,cAAA;gCACAj7D,KAAAs9D,UAAAkI,UAAAvK,MAAAwK,UAAAxK,MAAAnwC,MAAAmwC;mCACqB;gCACrBwK,UAAAxK,OAAAj7D,KAAAmiE,SAAAqD,UAAAvK;;;;oBAIAj2D,MAAAu+D,YAAA;oBACA,OAAAv+D;;gBAEApF,QAAAoF;eACK,SAAAnF,QAAAD;gBACL;gBACA,IAAAm8D,cAAA;oBACA,SAAAA,YAAAv4D;wBACAxD,KAAAyO;wBACAzO,KAAAwD;wBACAxD,KAAA4C;;oBAEAm5D,YAAA76D,UAAA0B,aAAA;oBACAm5D,YAAA76D,UAAA4hE,YAAA;wBACA,IAAA5N;wBACA,SAAAtwD,KAAA,GAAgCA,KAAAmZ,UAAAjZ,QAAuBF,MAAA;4BACvDswD,KAAAtwD,KAAA,KAAAmZ,UAAAnZ;;wBAEA,IAAA6J;wBACA,KAAAqU,MAAArK,QAAAy8C,KAAA;4BACAzmD,cAAAtJ,KAAA+vD,KAAA;+BACiB;4BACjBzmD,cAAAtJ,KAAA0Y,MAAApP,eAAAymD;;yBAEAvxD,KAAA3D,KAAAyO,eAAAtJ,KAAA0Y,MAAAla,IAAA8K;wBACA,IAAA9K;;oBAEAo4D,YAAA76D,UAAAmM,eAAA;wBACArN,KAAAyO,cAAAU,QAAA,SAAAw2D;4BACA,OAAAA;;wBAEA3lE,KAAAyO,cAAA3J,SAAA;;oBAEAi3D,YAAAD,oBAAA;wBACA;4BACA/wD,SAAA;;;oBAGAgxD,YAAAzxD,aAAA;oBACA,OAAAyxD;;gBAEAn8D,QAAAm8D;eACK,SAAAl8D,QAAAD,SAAAO;gBACL;gBACA,IAAAylE,UAAAzlE,oBAAA;gBACA,IAAAk3D,iBAAAl3D,oBAAA;gBACA,IAAAqB;oBACAqkE,oBAAA;;gBAEA,IAAAnM,gBAAA;oBACA,SAAAA,cAAA9zD,OAAA0yD;wBACAt4D,KAAA4G;wBACA5G,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAAwD,aAAAoC;wBACA,IAAAkgE;wBACA,SAAApkE,aAAA42D,aAAA1xD,QAAA;4BACA,IAAAO,QAAAnH,KAAA+lE,YAAAngE,OAAAlE,WAAA42D;4BACAwN,wBAAApkE,aAAAyF,MAAA6+D;;wBAEAhmE,KAAA25D,oBAAAmM;wBACA9lE,KAAA4C;;oBAEA82D,cAAAx4D,UAAAkG,WAAA,SAAA1F;wBACA,OAAA1B,KAAA4G,OAAAlF;;oBAEAg4D,cAAAx4D,UAAA+kE,mBAAA;wBACA,IAAAC;wBACA,IAAAC,YAAAnmE,KAAA4G;wBACA,SAAAlF,aAAAykE,WAAA;4BACA,IAAAh/D,QAAAg/D,UAAAzkE;4BACAyF,MAAApE,aAAAgI,WAAAm7D,cAAA/gE,KAAAgC;;wBAEA,OAAA++D;;oBAEAxM,cAAAx4D,UAAAm8D,eAAA;wBACA,IAAAz2D,SAAA5G,KAAAimE;wBACA,OAAAr/D,OAAA,GAAAw/D,UAAA,GAAArgE;;oBAEA2zD,cAAAx4D,UAAAi8D,aAAA;wBACA,IAAAv2D,SAAA5G,KAAAimE;wBACA,IAAAI,iBAAAz/D,OAAA,GAAAw/D;wBACA,OAAAC,8BAAAvhE,SAAA,GAAAiB;;oBAEA2zD,cAAAx4D,UAAAolE,kBAAA,SAAAC,eAAAC,OAAAC;wBACA,IAAA7/D,SAAA5G,KAAAimE;wBACA,IAAAS;wBACA,IAAAvtC;wBACA,IAAAotC,eAAA;4BACAptC,UAAAzjB;4BACAgxD,YAAAp0D,KAAAE;+BACiB;4BACjB2mB,SAAAzjB;4BACAgxD,YAAAp0D,KAAAC;;wBAEA,SAAA3N,KAAA,GAAA+hE,WAAA//D,QAAmDhC,KAAA+hE,SAAA7hE,QAAsBF,MAAA;4BACzE,IAAAuC,QAAAw/D,SAAA/hE;4BACA,IAAAgiE,YAAAz/D,MAAAi/D,QAAAI,OAAAC;4BACA,IAAAI,eAAAD,UAAAz3B,IAAA,SAAA23B;gCACA,OAAAA,SAAA5gE;;4BAEAizB,SAAAutC,UAAA7oD,WAAA,KAAAsb,SAAA51B,OAAAsjE;;wBAEA,IAAA1tC,UAAAzjB,YAAAyjB,WAAAzjB,UAAAyjB,SAAA4tC;wBACA,OAAA5tC;;oBAEAugC,cAAAx4D,UAAAq+D,aAAA,SAAAiH,OAAAC;wBACA,OAAAzmE,KAAAsmE,gBAAA,MAAAE,OAAAC;;oBAEA/M,cAAAx4D,UAAAu+D,aAAA,SAAA+G,OAAAC;wBACA,OAAAzmE,KAAAsmE,gBAAA,OAAAE,OAAAC;;oBAEA/M,cAAAx4D,UAAAkD,sBAAA,SAAAN;wBACA,OAAA9D,KAAA+D,GAAAC,UAAAxC,OAAAqkE,oBAAA/hE;;oBAEA41D,cAAAx4D,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAAwD,WAAAb,sBAAA;4BACA,OAAAuB,MAAAO;;;oBAGAi1D,cAAAx4D,UAAAuD,+BAAA;wBACA,IAAAP,QAAAlE;wBACA,IAAAgnE,UAAA,SAAAtlE;4BACAulE,OAAArgE,OAAAlF,WAAA4F,SAAA4/D,UAAA;gCACA,OAAAhjE,MAAAH,GAAA0B,KAAAjE,OAAAqkE,oBAAAnkE;;;wBAGA,IAAAulE,SAAAjnE;wBACA,SAAA0B,aAAA1B,KAAA4G,QAAA;4BACAogE,QAAAtlE;;;oBAGAg4D,cAAAx4D,UAAA6kE,cAAA,SAAAngE,OAAAlE,WAAA42D;wBACA,IAAAnxD,QAAA,IAAAy+D,QAAAuB,MAAAvhE,OAAAlE,WAAA42D;wBACAt4D,KAAA4G,OAAAlF,aAAAyF;wBACA,OAAAA;;oBAEA,OAAAuyD;;gBAEA95D,QAAA85D;eACK,SAAA75D,QAAAD,SAAAO;gBACL;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAAinE,kBAAAjnE,oBAAA;gBACA,IAAAk3D,iBAAAl3D,oBAAA;gBACA,IAAA+I,SAAA/I,oBAAA;gBACA,IAAAqB;oBACAyC,QAAA;oBACAojE,iBAAA;;iBAEA,SAAAt/D;oBACAA,sBAAA;oBACAA,sBAAA;mBACSnI,QAAAmI,eAAAnI,QAAAmI;gBACT,IAAAA,aAAAnI,QAAAmI;gBACA,IAAAu/D;oBACAv8D,SAAA;oBACAjD,MAAAC,WAAAC;oBACAuC;oBACAg9D,kBAAA;oBACA1d,WAAA;oBACA2d,WAAA;oBACAC,aAAA;oBACAC,WAAA;oBACAC;wBACAC;4BACAC,sBAAA;4BACAC,sBAAA;;wBAEA9/D;4BACA6/D,sBAAA;4BACAC,sBAAA;;;;gBAIA,IAAAX,QAAA;oBACA,SAAAA,MAAA3jE,YAAA9B,WAAA42D;wBACAt4D,KAAAo9D,UAAA1nD;wBACA1V,KAAAoI,UAAAsN;wBACA1V,KAAA8Q,WAAA4E;wBACA1V,KAAAmI,WAAAuN;wBACA,IAAAtS,UAAAk1D,aAAA1xD,OAAAlF;wBACA1B,KAAA4D,OAAAlC;wBACA1B,KAAAwD;wBACAxD,KAAA25D,oBAAAnxD,QAAAxD,MAAAK,UAAAiiE,iBAAAlkE;wBACApD,KAAA25D,kBAAA/1D,OAAAlC;wBACA,IAAA0B,QAAA2kE,SAAA/nE,KAAA25D,kBAAApvD,OAAA48D,MAAAa,YAAA5kE,QAAA2kE;wBACA/nE,KAAA25D,kBAAAoO;wBACA/nE,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAA4C;;oBAEAukE,MAAAjmE,UAAAyB,wBAAA;wBACA3C,KAAAsH,WAAA,IAAA8/D,gBAAAa,cAAAjoE,KAAAwD,YAAAxD;;oBAEAmnE,MAAAjmE,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACA,IAAAwD,aAAAxD,KAAAwD;wBACAA,WAAAb,sBAAA;4BACA,OAAAuB,MAAAvB;;wBAEAa,WAAAiO,aAAA;4BACA,OAAAvN,MAAAgkE;;wBAEA1kE,WAAAk3D,OAAA;4BACA,OAAAx2D,MAAAgkE;;wBAEA1kE,WAAAi3D,cAAA,SAAA/4D,WAAAymE,gBAAAlK;4BACA,OAAA/5D,MAAAH,GAAA0B,KAAAjE,OAAAyC,QAAAkkE,gBAAAlK;;wBAEAz6D,WAAA+2D,UAAA;4BACA,OAAAr2D,MAAAH,GAAA4xD;;;oBAGAwR,MAAAjmE,UAAA8kE,uBAAA;wBACA,OAAAhmE,KAAA25D;;oBAEAwN,MAAAjmE,UAAAknE,aAAA,SAAAC;wBACA,IAAAjlE,UAAApD,KAAA+C;wBACA,IAAAk7D,UAAAkJ,MAAAa,YAAAK,SAAAroE,KAAAomE;wBACA,IAAAkC,mBAAAllE,QAAAmH,KAAAhH,OAAA06D;wBACAj+D,KAAAuoE,WAAAD,kBAAArK;;oBAEAkJ,MAAAjmE,UAAAsnE,cAAA,SAAAH;wBACA,IAAAjlE,UAAApD,KAAA+C;wBACA,IAAAk7D,UAAAkJ,MAAAa,YAAAK,SAAAroE,KAAAomE,WAAA;wBACA,IAAAkC,mBAAArK,QAAA16D,OAAAH,QAAAmH;wBACAvK,KAAAuoE,WAAAD,kBAAArK;;oBAEAkJ,MAAAjmE,UAAAqnE,aAAA,SAAAE,SAAAxK;wBACA,SAAAr5D,KAAA,GAAA8jE,YAAAzK,SAAqDr5D,KAAA8jE,UAAA5jE,QAAuBF,MAAA;4BAC5E,IAAA+jE,OAAAD,UAAA9jE;4BACA,IAAA+jE,KAAA5iE,OAAA/F,KAAAo9D,SAAAp9D,KAAAo9D,UAAAuL,KAAA5iE;4BACA,IAAA4iE,KAAA5iE,OAAA/F,KAAA8Q,SAAA9Q,KAAA8Q,UAAA63D,KAAA5iE;4BACA,IAAA4iE,KAAAziE,OAAAlG,KAAAoI,SAAApI,KAAAoI,UAAAugE,KAAAziE;4BACA,IAAAyiE,KAAAziE,OAAAlG,KAAAmI,SAAAnI,KAAAmI,UAAAwgE,KAAAziE;;wBAEA,IAAA9C,UAAApD,KAAA+C;wBACA,IAAA6lE;4BACAhiE,SAAAjD,SAAoCA,GAAAP,QAAAQ;gCACpC2G,MAAAk+D;+BACqB9kE;;wBAErB3D,KAAAwD,WAAAC,SAAAmlE,YAAA3K;wBACA,IAAAt6D;;oBAEAwjE,MAAAjmE,UAAAklE,UAAA,SAAAI,OAAAC;wBACA,IAAAl8D,OAAAvK,KAAA+C,aAAAwH;wBACA,IAAAi8D,cAAA,KAAAC,YAAA,UAAAl8D;wBACAi8D,uBAAA,IAAAA,QAAAj8D,KAAA,GAAAxE;wBACA0gE,mBAAA,IAAAA,MAAAl8D,UAAAzF,QAAAiB;wBACA,IAAA8iE;wBACA,SAAAjkE,KAAA,GAAAkkE,SAAAv+D,MAA+C3F,KAAAkkE,OAAAhkE,QAAoBF,MAAA;4BACnE,IAAA+jE,OAAAG,OAAAlkE;4BACA,IAAA+jE,KAAA5iE,OAAAygE,OAAA;4BACA,IAAAmC,KAAA5iE,OAAA0gE,KAAA;4BACAoC,aAAA1jE,KAAAwjE;;wBAEA,OAAAE;;oBAEA1B,MAAAjmE,UAAA6nE,eAAA;wBACA,OAAA/oE,KAAA+C,aAAAwH,KAAA;;oBAEA48D,MAAAjmE,UAAA8nE,cAAA;wBACA,IAAAz+D,OAAAvK,KAAA+C,aAAAwH;wBACA,OAAAA,UAAAzF,SAAA;;oBAEAqiE,MAAAjmE,UAAA6B,aAAA;wBACA,OAAA/C,KAAAwD,WAAA+G,KAAA3D,OAAA5G,KAAA4D;;oBAEAujE,MAAAjmE,UAAA+nE,aAAA,SAAA7lE;wBACApD,KAAAwD,WAAAC;4BACAmD,SAAAjD,SAAoCA,GAAA3D,KAAA4D,QAAAR,SAAAO;;wBAEpC,IAAAA;;oBAEAwjE,MAAAjmE,UAAAgoE,mBAAA,SAAAplE;wBACA,IAAAI,QAAAlE;wBACAA,KAAA+D,GAAAixD,GAAAxzD,OAAA6lE,iBAAAvjE;wBACA;4BACAI,MAAAH,GAAA+wD,IAAAtzD,OAAA6lE,iBAAAvjE;;;oBAGAqjE,MAAAjmE,UAAA2C,WAAA,SAAAC;wBACA,IAAAI,QAAAlE;wBACAA,KAAA+D,GAAAixD,GAAAxzD,OAAAyC,QAAAH;wBACA;4BACAI,MAAAH,GAAA+wD,IAAAtzD,OAAAyC,QAAAH;;;oBAGAqjE,MAAAjmE,UAAAioE,eAAA,SAAArlE;wBACA,IAAAI,QAAAlE;wBACA,IAAAopE,aAAA,SAAAjB,gBAAAlK;4BACA,IAAAA,SAAAn6D,GAAAm6D;;wBAEAj+D,KAAA+D,GAAAixD,GAAAxzD,OAAAyC,QAAAmlE;wBACA;4BACAllE,MAAAH,GAAA+wD,IAAAtzD,OAAAyC,QAAAmlE;;;oBAGAjC,MAAAjmE,UAAAgnE,yBAAA;wBACA,IAAAhkE,QAAAlE;wBACA,IAAAA,KAAAqpE,gBAAA;wBACA,IAAA7lE,aAAAxD,KAAAwD;wBACA,IAAA45D,UAAA55D,WAAA+G,KAAAsG,aAAAjK,OAAAw2D;wBACA,IAAAkM,aAAA9lE,WAAA89D,kBAAAlE;wBACA,IAAAmM,gBAAAD,aAAA;wBACA,IAAA3lE,KAAAH,WAAA+G,KAAA8G,MAAAC,OAAAyL,OAAApZ,GAAAoZ,MAAArE,KAAA/U,GAAA+U;wBACA,IAAA8wD,sBAAA9wD,KAAAqE;wBACA,KAAAwsD,eAAA;wBACAvpE,KAAAqpE,iBAAA,IAAAngE,OAAAgL,QAAA,SAAA0sD,SAAA6I;4BACAvlE,MAAAH,GAAA0B,KAAAjE,OAAA6lE,iBAAAmC,qBAAA5I,SAAA6I;;wBAEAzpE,KAAAqpE,eAAA32D,KAAA,SAAAurD;4BACA/5D,MAAAskE,YAAAvK;4BACA/5D,MAAAmlE,iBAAA;2BACiB;4BACjBnlE,MAAAmlE,iBAAA;;;oBAGAlC,MAAAa,cAAA,SAAA/J,SAAAyL,aAAAC;wBACA,IAAAA,mBAAA;4BACAA,YAAA;;wBAEA,IAAAp/D;wBACA,WAAA0zD,QAAA;4BACAyL;4BACA,IAAAE,mBAAA;4BACA,IAAA7jE,YAAA;4BACA,IAAA4jE,WAAA;gCACAC,cAAAF,YAAA;gCACA3jE,OAAA6jE,YAAA7jE,OAAAk4D,QAAAn5D;mCACqB;gCACrB8kE,cAAAF,wBAAA5kE,SAAA;gCACAiB,OAAA6jE,0BAAA7jE,OAAA;;4BAEA,SAAAnB,KAAA,GAAAjB,KAAAs6D,SAAkDr5D,KAAAjB,GAAAmB,QAAgBF,MAAA;gCAClE,IAAAsB,OAAAvC,GAAAiB;gCACA2F,KAAApF;oCACAY;oCACAG;oCACA7F,IAAAmI,QAAAxD,MAAAC;;gCAEAc;;+BAEiB;4BACjBwE,OAAA0zD;;wBAEA,OAAA1zD;;oBAEA,OAAA48D;;gBAEAvnE,QAAAunE;eACK,SAAAtnE,QAAAD,SAAAO;gBACL;gBACA,IAAAk3D,iBAAAl3D,oBAAA;gBACA,IAAA8+C,UAAA32C,MAAA22C;gBACA,IAAA2mB,UAAAzlE,oBAAA;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAA0pE,wBAAA;gBACA,IAAAroE;oBACAsoE,SAAA;oBACAC,yBAAA;oBACAC,iBAAA;;gBAEA,IAAA/B,gBAAA;oBACA,SAAAA,cAAAzkE,YAAA2D;wBACAnH,KAAAiqE;wBACAjqE,KAAAsH;wBACAtH,KAAAkqE;wBACAlqE,KAAAmqE,iBAAA;wBACAnqE,KAAAoqE;wBACApqE,KAAAqqE;wBACArqE,KAAAsqE,cAAA;wBACAtqE,KAAAuqE,iBAAA;wBACAvqE,KAAAwqE,eAAA;wBACAxqE,KAAAwD;wBACAxD,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAAmH;wBACAnH,KAAAunE,mBAAApgE,MAAApE,aAAAwkE;wBACAvnE,KAAAyqE;wBACAzqE,KAAA4C;;oBAEAqlE,cAAA/mE,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAAmH,MAAAtD,SAAA,SAAAskE,gBAAAlK;4BACA,OAAA/5D,MAAAwmE,qBAAAvC,gBAAAlK;;wBAEAj+D,KAAAwD,WAAAk3D,OAAA;4BACA,OAAAx2D,MAAAymE;;wBAEA3qE,KAAAwD,WAAAyzD,SAAA;4BACA,OAAA/yD,MAAA0mE;;wBAEA5qE,KAAAwD,WAAA+2D,UAAA;4BACA,OAAAr2D,MAAA2mE;;;oBAGA5C,cAAA/mE,UAAA2pE,mBAAA;wBACA7qE,KAAA+D,GAAA4xD;wBACA31D,KAAA8qE,mBAAA9qE,KAAA8qE,gBAAAjyD;wBACA7Y,KAAA+qE,oBAAA/qE,KAAA+qE,iBAAAlyD;;oBAEAovD,cAAA/mE,UAAAypE,gBAAA;wBACA,IAAAK,oBAAAhrE,KAAAyqE;wBACA,KAAAO,mBAAA;4BACAhrE,KAAA4qE;;;oBAGA3C,cAAA/mE,UAAAwpE,uBAAA,SAAAvC,gBAAAlK;wBACA,IAAAgN,wBAAA9C,eAAArgE,aAAA,KAAAqgE,eAAAZ,yBAAA;wBACA,IAAA0D,uBAAA;4BACAjrE,KAAAyqE,qBAAA;4BACA;;wBAEA,KAAAxM,SAAA;wBACA,IAAA1zD,OAAAvK,KAAAmH,MAAAi/D;wBACA,IAAA8E,YAAA3gE,KAAAzF,UAAAyF,KAAA,GAAAxE,OAAAk4D,QAAA,GAAAl4D;wBACAmlE,WAAAlrE,KAAAooE,WAAAnK,WAAAj+D,KAAAwoE,YAAAvK;wBACAj+D,KAAA4qE;;oBAEA3C,cAAA/mE,UAAAiqE,gBAAA;wBACA,OAAAnrE,KAAAiqE,aAAAjqE,KAAAwqE;;oBAEAvC,cAAA/mE,UAAAkqE,kBAAA;wBACA,OAAAprE,KAAAiqE,aAAAjqE,KAAAuqE;;oBAEAtC,cAAA/mE,UAAAupE,uBAAA,SAAAxvD;wBACA,IAAAA,eAAA;4BACAA,QAAA;;wBAEA,IAAA7X,UAAApD,KAAAmH,MAAApE;wBACA,IAAAsoE,gBAAAzF,QAAA79D,WAAA3E,QAAA0E;wBACA,IAAAwjE,qBAAAloE,QAAAukE;wBACA,IAAA4D,oBAAAD,mBAAAD;wBACA,IAAAxD,uBAAA0D,kBAAA1D,sBAAAC,uBAAAyD,kBAAAzD;wBACA,IAAA0D,gBAAAxrE,KAAAsH,SAAAxC,WAAA,KAAAmW;wBACA,IAAAwwD,gBAAAzrE,KAAAunE;wBACA,IAAAmE,2BAAAxnD,OAAAlkB,KAAAwD,WAAAy9D,iBAAAwK,eAAAnJ,QAAA;wBACA,IAAAqJ,8BAAAznD,OAAAlkB,KAAAwD,WAAAy9D,iBAAAjhE,KAAAunE,kBAAAjF,QAAA;wBACA,IAAAoJ,2BAAA7D,sBAAA;4BACA2D,gBAAA;4BACAC,gBAAAn5D,KAAAs5D,KAAA5rE,KAAAwD,WAAA64D,iBAAAyL;+BACiB,IAAA6D,8BAAA7D,sBAAA;4BACjB0D,gBAAA;4BACAC,gBAAAzrE,KAAAwD,WAAA64D,iBAAAwL;;wBAEA,KAAA2D,eAAA;wBACAxrE,KAAAunE,mBAAAkE;wBACAzrE,KAAAiqE;wBACAjqE,KAAAsH;wBACAtH,KAAAsqE,cAAA;wBACAtqE,KAAAuqE,iBAAA;wBACAvqE,KAAAwqE,eAAA;wBACAxqE,KAAAmqE,iBAAA;wBACAnqE,KAAA6rE;wBACA7rE,KAAAooE,WAAA;wBACApoE,KAAA4qE,0BAAA;wBACA5qE,KAAA+D,GAAA0B,KAAAjE,OAAAsoE;;oBAEA7B,cAAA/mE,UAAA2qE,oBAAA;wBACA7rE,KAAAkqE;wBACAlqE,KAAAoqE;wBACApqE,KAAAoqE;wBACA,IAAApqE,KAAA+qE,kBAAA/qE,KAAA+qE,iBAAAlyD;wBACA,IAAA7Y,KAAA8qE,iBAAA9qE,KAAA8qE,gBAAAjyD;;oBAEAovD,cAAA/mE,UAAA0pE,4BAAA,SAAAkB;wBACA,IAAAA,8BAAA;4BACAA,uBAAA;;wBAEA,IAAAnoE,KAAA3D,KAAAwD,WAAA+G,KAAA8G,MAAAC,OAAAyL,OAAApZ,GAAAoZ,MAAArE,KAAA/U,GAAA+U;wBACA,IAAAqzD,KAAA/rE,MAAAgsE,wBAAAD,GAAAC,uBAAAC,uBAAAF,GAAAE;wBACA,IAAAC,iBAAAxzD,KAAAqE;wBACA/c,KAAAgsE,wBAAAxjE,QAAAxD,MAAAg/D,oBAAAhkE,KAAAsH,UAAAyV,OAAAmvD,gBAAA;wBACAlsE,KAAAisE,uBAAAzjE,QAAAxD,MAAAg/D,oBAAAhkE,KAAAsH,UAAAoR,KAAAwzD,gBAAA;wBACA,IAAAJ,sBAAA;wBACA,IAAAK,wBAAAH,sBAAA3rE,OAAAL,KAAAgsE,sBAAA3rE,MAAA4rE,qBAAA5rE,OAAAL,KAAAisE,qBAAA5rE;wBACA,IAAA8rE,uBAAAnsE,KAAA+D,GAAA0B,KAAAjE,OAAAuoE;;oBAEA9B,cAAA/mE,UAAAqG,wBAAA,SAAAijB;wBACA,IAAA4hD,WAAA;wBACA,IAAAtqE,QAAA0oB,OAAA4hD;wBACA,IAAAC,eAAA7hD,OAAA1lB,SAAA;wBACA,IAAAmmC;wBACA,IAAAtlC,UAAA3F,KAAAorE;wBACA,KAAAzlE,QAAA2mE,UAAA;wBACA,OAAA3mE,SAAA;4BACA,OAAA7D,QAAA6D,QAAA4mE,WAAA;gCACAthC,QAAA9lC,UAAA;gCACArD,QAAA0oB,SAAA4hD;;4BAEA,OAAAtqE,QAAA6D,QAAAsC,SAAA;gCACAtC,kBAAA6mE;gCACA,KAAA7mE,SAAA;;4BAEA,IAAA8mE,eAAA9mE,QAAA4mE,aAAAzqE,SAAA6D,QAAAsC,WAAAnG,SAAA6D,QAAA4mE,YAAAzqE,SAAA6D,QAAAsC,UAAAnG;4BACA,IAAA2qE,cAAA;gCACAxhC,QAAA9lC,KAAAQ;gCACA7D,QAAA0oB,SAAA4hD;;4BAEA,IAAAA,WAAAC,cAAA;;wBAEA,OAAAphC;;oBAEAg9B,cAAA/mE,UAAAwrE,mBAAA,SAAA5oE;wBACA,OAAA9D,KAAA+D,GAAAC,UAAAxC,OAAAwoE,iBAAAlmE;;oBAEAmkE,cAAA/mE,UAAAgmE,YAAA,SAAApjE;wBACA,OAAA9D,KAAA+D,GAAAC,UAAAxC,OAAAsoE,SAAAhmE;;oBAEAmkE,cAAA/mE,UAAAyrE,0BAAA,SAAA7oE;wBACA,OAAA9D,KAAA+D,GAAAC,UAAAxC,OAAAuoE,yBAAAjmE;;oBAEAmkE,cAAA/mE,UAAA0rE,sBAAA;wBACA,IAAAvsE,KAAAL,KAAAsqE;wBACA,IAAA3kE,UAAA,IAAAknE,aAAA7sE,MAAAK;wBACA,IAAAysE,cAAA9sE,KAAAiqE,aAAAjqE,KAAAwqE;wBACA,IAAAsC,2BAAAR,UAAA;4BACAQ,YAAAC,SAAA1sE;4BACAsF,QAAAqnE,SAAAF,YAAAzsE;;wBAEAL,KAAAwqE,eAAAnqE;wBACAL,KAAAmqE;wBACAnqE,KAAAiqE,aAAA5pE,MAAAsF;wBACA3F,KAAAsH,SAAAnC,KAAAQ;wBACA,OAAAA;;oBAEAsiE,cAAA/mE,UAAA+rE,sBAAA;wBACA,IAAA5sE,KAAAL,KAAAsqE;wBACA,IAAA3kE,UAAA,IAAAknE,aAAA7sE,MAAAK;wBACA,IAAA6sE,cAAAltE,KAAAiqE,aAAAjqE,KAAAuqE;wBACA,IAAA2C,2BAAAZ,UAAA;4BACAY,YAAAF,SAAA3sE;4BACAsF,QAAAonE,SAAAG,YAAA7sE;;wBAEAL,KAAAuqE,iBAAAlqE;wBACAL,KAAAmqE;wBACAnqE,KAAAiqE,aAAA5pE,MAAAsF;wBACA3F,KAAAsH,SAAA4jB,QAAAvlB;wBACA,OAAAA;;oBAEAsiE,cAAA/mE,UAAAknE,aAAA,SAAAnK,SAAAkP;wBACA,IAAAA,6BAAA;4BACAA,sBAAA;;wBAEA,IAAAvG,YAAA5mE,KAAAmH,MAAAi/D;wBACA,IAAA+G,qBAAA;4BACAlP,UAAA2I;4BACA5mE,KAAAoqE;;wBAEA,IAAAgD,eAAAxG,UAAA9hE,SAAAm5D,QAAAn5D;wBACA,IAAAa,UAAA3F,KAAAmrE,mBAAAnrE,KAAA4sE;wBACA,IAAAS,iBAAA1nE,QAAA2mE,WAAA3mE,UAAA;wBACA,IAAA2nE,wBAAA3nE,QAAA4nE;wBACA,IAAAC,UAAA;wBACA,OAAAA,UAAAvP,QAAAn5D,QAAA;4BACA,IAAA6jE,OAAA1K,QAAAuP;4BACA,IAAAC,iBAAA9nE,QAAA+nE,WAAA/E;4BACA,IAAAgF,aAAAH,WAAAvP,QAAAn5D,SAAA;4BACA,IAAA2oE,gBAAA;gCACA,KAAAE,YAAAH;mCACqB;gCACrB,KAAA7nE,QAAAioE,aAAAjoE,QAAAia;;4BAEA,IAAA+tD,cAAAF,gBAAA;gCACA9nE,QAAAkoE;;4BAEA,IAAAC,2BAAAnoE,QAAAioE,eAAAD,cAAAF;4BACA,IAAAK,0BAAA;gCACA,IAAAztE,KAAAsF,QAAAtF;gCACA,KAAAgtE,iCAAA1nE;gCACA,KAAA2nE,+CAAAD,eAAAE;gCACA5nE,QAAA2nE,wBAAA9kE,QAAAxD,MAAAK,cAAkFioE;gCAClF,IAAAttE,KAAAoqE,0BAAAtlE,SAAA;oCACAa,QAAA2nE,sBAAAf,YAAAe,sBAAArlE;oCACAtC,QAAA2nE,sBAAAS,YAAAT,sBAAAplE;;gCAEAvC,QAAAqoE,uBAAAroE,QAAA4nE;gCACAvtE,KAAAoqE,0BAAAjlE,KAAA9E;;4BAEA,IAAAstE,cAAAF,gBAAA;4BACA,KAAA9nE,QAAAioE,aAAA;4BACAjoE,UAAA3F,KAAA4sE;4BACA,IAAAqB,WAAArH,UAAAwG,eAAAI,UAAA;4BACA7nE,QAAA+nE,WAAAO;;wBAEA,IAAAC,oBAAAluE,KAAAwD,WAAA+G,KAAAuI;wBACA,IAAAiI,OAAAmzD,kBAAAnjE,UAAAmjE,kBAAAnV,mBAAA;wBACA,IAAAoU,qBAAA;4BACA,SAAAvoE,KAAA,GAAAjB,KAAA3D,KAAAoqE,2BAAyExlE,KAAAjB,GAAAmB,QAAgBF,MAAA;gCACzF,IAAAupE,YAAAxqE,GAAAiB;gCACA,IAAAwpE,YAAApuE,KAAAiqE,aAAAkE;gCACAC,UAAAC,wBAAAD,UAAAb;;4BAEAvtE,KAAAoqE;4BACA;;wBAEA,IAAApqE,KAAAoqE,0BAAAtlE,SAAA+kE,uBAAA9uD,OAAA;wBACA/a,KAAAsuE,QAAAvzD;;oBAEAktD,cAAA/mE,UAAAsnE,cAAA,SAAAvK;wBACA,IAAA2I,YAAA5mE,KAAAmH,MAAAi/D;wBACA,IAAAzgE,UAAA3F,KAAAorE,qBAAAprE,KAAAiqE,aAAA;wBACA,IAAAoD,iBAAA1nE,QAAA2mE,WAAA3mE,UAAA;wBACA,IAAA6nE,UAAAvP,QAAAn5D,SAAA;wBACA,IAAAwoE,wBAAA3nE,QAAA4nE;wBACA,OAAAC,WAAA;4BACA,IAAA7E,OAAA1K,QAAAuP;4BACA,IAAAC,iBAAA9nE,QAAA4oE,YAAA5F;4BACA,IAAAgF,aAAAH,WAAA;4BACA,IAAAC,gBAAA;gCACA,KAAAE,YAAAH;mCACqB;gCACrB,KAAA7nE,QAAAioE,aAAAjoE,QAAAia;;4BAEA,IAAA+tD,cAAAF,gBAAA;gCACA9nE,QAAAkoE;;4BAEA,IAAAC,2BAAAnoE,QAAAioE,eAAAD,cAAAF;4BACA,IAAAK,0BAAA;gCACA,IAAAztE,KAAAsF,QAAAtF;gCACA,KAAAgtE,iCAAA1nE;gCACA,KAAA2nE,+CAAAD,eAAAE;gCACA5nE,QAAA2nE,wBAAA9kE,QAAAxD,MAAAK,cAAkFioE;gCAClF,IAAAttE,KAAAqqE,2BAAAvlE,SAAA;oCACAa,QAAA2nE,sBAAArlE,UAAAqlE,sBAAAf;oCACA5mE,QAAA2nE,sBAAAplE,UAAAolE,sBAAAS;;gCAEApoE,QAAAqoE,uBAAAroE,QAAA4nE;gCACAvtE,KAAAqqE,2BAAAllE,KAAA9E;;4BAEA,IAAAstE,cAAAF,gBAAA;4BACA,KAAA9nE,QAAAioE,aAAA;4BACAjoE,UAAA3F,KAAAitE;4BACA,IAAAuB,WAAA5H,UAAA4G,UAAA;4BACA7nE,QAAA4oE,YAAAC;;wBAEA,IAAAN,oBAAAluE,KAAAwD,WAAA+G,KAAAuI;wBACA,IAAAiI,OAAAmzD,kBAAAnjE,UAAAmjE,kBAAAnV,mBAAA;wBACA,IAAA/4D,KAAAqqE,2BAAAvlE,SAAA+kE,uBAAA9uD,OAAA;wBACA/a,KAAAsuE,QAAAvzD,MAAA;;oBAEAktD,cAAA/mE,UAAAotE,UAAA,SAAAvzD,MAAA4uD;wBACA,IAAAzlE,QAAAlE;wBACA,IAAA2pE,mBAAA;4BACAA,YAAA;;wBAEA,IAAAO,sBAAAP,YAAA3pE,KAAAqqE,6BAAArqE,KAAAoqE;wBACA,IAAAqE,YAAA9E,YAAA3pE,KAAA+qE,mBAAA/qE,KAAA8qE;wBACA,IAAA2D,uBAAAhnD,cAAA1M,QAAA;4BACA,IAAA0zD,qBAAA51D;4BACA7Y,KAAA0uE,wBAAA,GAAA/E;4BACAO,oBAAAplE,SAAA;4BACA;;wBAEA,IAAAopE,oBAAAluE,KAAAwD,WAAA+G,KAAAuI;wBACA,IAAA4T,OAAAwnD,kBAAAlV;wBACA,IAAA2V;4BACAC,gBAAA;;wBAEAH,YAAA36D,UAAA4E,GAAAi2D,iBAAA5zD;4BACA6zD,gBAAA;4BACAloD;;wBAEA+nD,UAAAr6B,cAAA;4BACA,OAAAlwC,MAAAwqE,wBAAAC,gBAAAC,gBAAAjF;;wBAEA8E,UAAAr6B,cAAA;4BACA81B,oBAAAplE,SAAA;4BACAZ,MAAA4mE,kBAAA;;wBAEA,IAAAnB,WAAA;4BACA3pE,KAAA+qE,mBAAA0D;+BACiB;4BACjBzuE,KAAA8qE,kBAAA2D;;;oBAGAxG,cAAA/mE,UAAAwtE,0BAAA,SAAAG,aAAAlF;wBACA,IAAAA,mBAAA;4BACAA,YAAA;;wBAEA,IAAAO,sBAAAP,YAAA3pE,KAAAqqE,6BAAArqE,KAAAoqE;wBACA,SAAAxlE,KAAA,GAAAkqE,wBAAA5E,qBAA6EtlE,KAAAkqE,sBAAAhqE,QAAmCF,MAAA;4BAChH,IAAAupE,YAAAW,sBAAAlqE;4BACA,IAAAe,UAAA3F,KAAAiqE,aAAAkE;4BACA,SAAAlT,OAAAt1D,QAAAqoE,sBAAA;gCACA,IAAAe,cAAAppE,QAAAqoE,qBAAA/S;gCACA,IAAA+T,eAAArpE,QAAA2nE,sBAAArS;gCACA,IAAAgU,eAAAD,gBAAAD,cAAAC,gBAAAH;gCACAlpE,QAAA0oE,sBAAApT,OAAAgU;;;wBAGAjvE,KAAAkqE,sBAAAlqE,KAAAoqE,0BAAA7mE,OAAAvD,KAAAqqE;wBACArqE,KAAA+D,GAAA0B,KAAAjE,OAAAwoE,iBAAAhqE;;oBAEA,OAAAioE;;gBAEAroE,QAAAqoE;gBACA,IAAA4E,eAAA;oBACA,SAAAA,aAAAqC,aAAA7uE;wBACAL,KAAA4tE,cAAA;wBACA5tE,KAAAyC;wBACAzC,KAAAstE;wBACAttE,KAAAguE;wBACAhuE,KAAAquE;wBACAruE,KAAAmvE,gBAAAD;wBACAlvE,KAAAK;wBACAL,KAAA0+D,YAAAwQ,YAAA3H;;oBAEAsF,aAAA3rE,UAAAqsE,uBAAA;wBACA,IAAA5pE,KAAA3D,MAAA+F,OAAApC,GAAAoC,MAAAG,OAAAvC,GAAAuC,MAAAqmE,YAAA5oE,GAAA4oE,WAAAwB,YAAApqE,GAAAoqE,WAAA9lE,UAAAtE,GAAAsE,SAAAC,UAAAvE,GAAAuE,SAAAC,UAAAxE,GAAAwE,SAAAC,UAAAzE,GAAAyE,SAAAs2D,YAAA/6D,GAAA+6D;wBACA;4BACA34D;4BACAG;4BACAqmE;4BACAwB;4BACA9lE;4BACAC;4BACAC;4BACAC;4BACAs2D;;;oBAGAmO,aAAA3rE,UAAAwsE,aAAA,SAAA/E;wBACA,IAAA3oE,KAAA4tE,aAAA;wBACA,IAAAnrE,QAAAzC,KAAAyC;wBACA,IAAAA,MAAAqC,SAAA;4BACA9E,KAAAyC,MAAA0C,KAAAwjE;4BACA3oE,KAAAssE,WAAA;4BACA;;wBAEA,IAAAC,YAAA9pE,MAAA,GAAAsD;wBACA,IAAA4iE,KAAA5iE,OAAAwmE,YAAAvsE,KAAA0+D,WAAA;wBACAj8D,MAAA0C,KAAAwjE;wBACA;;oBAEAkE,aAAA3rE,UAAAqtE,cAAA,SAAA5F;wBACA,IAAA3oE,KAAA4tE,aAAA;wBACA,IAAAnrE,QAAAzC,KAAAyC;wBACA,IAAAA,MAAAqC,SAAA;4BACA9E,KAAAyC,MAAAyoB,QAAAy9C;4BACA3oE,KAAAssE,WAAA;4BACA;;wBAEA,IAAArkE,UAAAxF,YAAAqC,SAAA,GAAAiB;wBACA,IAAAkC,UAAA0gE,KAAA5iE,OAAA/F,KAAA0+D,WAAA;wBACAj8D,MAAAyoB,QAAAy9C;wBACA;;oBAEAkE,aAAA3rE,UAAA0e,WAAA;wBACA5f,KAAA4tE,cAAA;wBACA5tE,KAAA6tE;wBACA7tE,KAAAyC;;oBAEAoqE,aAAA3rE,UAAA2sE,mBAAA;wBACA,IAAAprE,QAAAzC,KAAAyC;wBACA,IAAA2sE,cAAA3sE,MAAAqC;wBACA,IAAAsqE,gBAAA,GAAA5mE,QAAAxD,MAAAI,MAAA;wBACA,IAAAiqE,UAAA5sE,MAAA2sE,cAAA;wBACA,IAAAnnE,UAAAonE,QAAAtpE,MAAAmC,UAAAmnE,QAAAnpE;wBACA,IAAAqmE,WAAAwB;wBACA,IAAAuB,YAAA7sE,MAAA;wBACA8pE,YAAA+C,UAAAvpE;wBACAgoE,YAAAuB,UAAAppE;wBACA,IAAAqpE,OAAAj9D,KAAAC,IAAAg6D,WAAAtkE;wBACA,IAAAunE,OAAAl9D,KAAAE,IAAA+5D,WAAAtkE;wBACA,IAAAwnE,aAAAF,QAAAC,OAAAD,QAAA;wBACA,IAAA/P,OAAAltD,KAAAC,IAAAw7D,WAAA7lE;wBACA,IAAAo3D,OAAAhtD,KAAAE,IAAAu7D,WAAA7lE;wBACA,IAAAwnE,aAAAlQ,QAAAF,OAAAE,QAAA;wBACA,IAAAmQ,QAAAltE,MAAA0sC,IAAA,SAAAw5B;4BACA,OAAAA,KAAAziE;;wBAEAlG,KAAAusE;wBACAvsE,KAAA+tE;wBACA/tE,KAAAiI;wBACAjI,KAAAkI;wBACAlI,KAAA+F,OAAA0pE;wBACAzvE,KAAAkG,OAAAwpE;wBACA1vE,KAAAmI,UAAAmK,KAAAE,IAAAqL,MAAAvL,MAAAq9D;wBACA3vE,KAAAoI,UAAAkK,KAAAC,IAAAsL,MAAAvL,MAAAq9D;wBACA,KAAA3vE,KAAAquE,uBAAAruE,KAAAquE,wBAAAruE,KAAAutE;;oBAEAV,aAAA3rE,UAAAsrE,UAAA;wBACA,IAAAoD,YAAA5vE,KAAAmvE,cAAAlF,aAAAjqE,KAAA+sE;wBACA,OAAA6C,uBAAAtD,WAAAsD,YAAA;;oBAEA/C,aAAA3rE,UAAA2uE,UAAA;wBACA,IAAAC,YAAA9vE,KAAAmvE,cAAAlF,aAAAjqE,KAAAgtE;wBACA,OAAA8C,uBAAAxD,WAAAwD,YAAA;;oBAEAjD,aAAA3rE,UAAA6uE,cAAA;wBACA,IAAApsE,KAAA3D,KAAAutE,wBAAAxnE,OAAApC,GAAAoC,MAAAG,OAAAvC,GAAAuC;wBACA,WAAA+4C,QAAAl5C,MAAAG,MAAA;;oBAEA2mE,aAAA3rE,UAAA8uE,gBAAA;wBACA,IAAAC,WAAAjwE,KAAA+vE;wBACA,OAAA/vE,KAAAmvE,cAAA3rE,WAAAc,OAAAo9D,gBAAAuO,SAAAlgE,GAAAkgE,SAAAjgE;;oBAEA,OAAA68D;;gBAEAjtE,QAAAitE;eACK,SAAAhtE,QAAAD,SAAAO;gBACL;gBACA,IAAA8+C,UAAA32C,MAAA22C;gBACA,IAAAoY,iBAAAl3D,oBAAA;gBACA,IAAA45D,SAAA;oBACA,SAAAA,OAAAv2D;wBACAxD,KAAAoD;4BACA8sE,YAAA;4BACA9/D,SAAA;4BACA+/D,YAAA;4BACA5/D,SAAA;4BACA6/D,OAAA;4BACAC,OAAA;;wBAEArwE,KAAAswE;4BACAvgE,GAAA;;wBAEA/P,KAAAuwE;4BACAvgE,GAAA;;wBAEAhQ,KAAAwwE;4BACAj5D,KAAA;;wBAEAvX,KAAAywE;4BACAl5D,KAAA;;wBAEAvX,KAAAwD;wBACA,IAAAG,KAAAH,WAAA+G,MAAAC,IAAA7G,GAAAzB,OAAAuI,IAAA9G,GAAAxB;wBACAnC,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAA+8B;4BACAxsB,SAAAvQ,KAAAkhE,iBAAAlhE,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,MAAAC;4BACA8+D,OAAA;;wBAEArwE,KAAA4C;;oBAEAm3D,OAAA74D,UAAAoO,oBAAA;wBACA,IAAA3L,KAAA3D,KAAAwD,WAAA+G,MAAAC,IAAA7G,GAAAzB,OAAAuI,IAAA9G,GAAAxB;wBACA,IAAAoN,MAAA;wBACA,IAAAmhE,OAAAnhE,OAAA+C,KAAAyV,KAAA;wBACA;4BACAxY;4BACAC,QAAAhF,IAAAC;4BACAgF,MAAA;4BACAC,KAAA;4BACAO,GAAAxF,KAAA,IAAA6H,KAAAozB,IAAAgrC,OAAA;4BACA3gE,GAAAvF,IAAA;4BACAwF,GAAAvF,IAAA;;;oBAGAsvD,OAAA74D,UAAAqD,cAAA,SAAAT;wBACA,IAAAI,QAAAlE;wBACA,IAAA4hE,YAAA;wBACA5hE,KAAA+D,GAAAixD,GAAA4M,WAAA99D;wBACA;4BACAI,MAAAH,GAAA+wD,IAAA8M,WAAA99D;;;oBAGAi2D,OAAA74D,UAAAyvE,gBAAA,SAAA7sE;wBACA,IAAAI,QAAAlE;wBACA,IAAA4hE,YAAA;wBACA5hE,KAAA+D,GAAAixD,GAAA4M,WAAA99D;wBACA;4BACAI,MAAAH,GAAA+wD,IAAA8M,WAAA99D;;;oBAGAi2D,OAAA74D,UAAA0N,wBAAA,SAAA9K;wBACA,IAAAI,QAAAlE;wBACA,IAAA4hE,YAAA;wBACA5hE,KAAA+D,GAAAixD,GAAA4M,WAAA99D;wBACA;4BACAI,MAAAH,GAAA+wD,IAAA8M,WAAA99D;;;oBAGAi2D,OAAA74D,UAAA0vE,iBAAA;wBACA,UAAA5wE,KAAA6wE,oBAAA7wE,KAAA6wE,iBAAAppD,cAAAznB,KAAA8wE,kBAAA9wE,KAAA8wE,eAAArpD;;oBAEAsyC,OAAA74D,UAAA67B,YAAA,SAAA35B,SAAA03D;wBACA,IAAAA,gBAAA;4BACAA,SAAA;;wBAEA,IAAA1qD,UAAAhN,QAAAgN,SAAAG,UAAAnN,QAAAmN,SAAA6/D,QAAAhtE,QAAAgtE,OAAAC,QAAAjtE,QAAAitE;wBACA,IAAAjgE,gBAAA,GAAApQ,KAAAoD,QAAAgN;wBACA,IAAAG,gBAAA,GAAAvQ,KAAAoD,QAAAmN;wBACA,IAAA6/D,cAAA,GAAApwE,KAAAoD,QAAAgtE;wBACA,IAAAC,cAAA,GAAArwE,KAAAoD,QAAAitE;wBACA,IAAAjgE,gBAAA,KAAAggE,OAAA;4BACAhtE,QAAA8sE,aAAAlwE,KAAAq8D,iBAAAjsD,gBAAA,IAAAA,UAAApQ,KAAAoD,QAAAgN;4BACApQ,KAAAoD,QAAA8sE,aAAA9sE,QAAA8sE;;wBAEA,IAAA3/D,gBAAA,KAAA8/D,OAAA;4BACAjtE,QAAA+sE,aAAAnwE,KAAAmhE,iBAAA5wD,gBAAA,IAAAA,UAAAvQ,KAAAoD,QAAAmN;4BACAvQ,KAAAoD,QAAA+sE,aAAA/sE,QAAA+sE;;wBAEA,IAAArV,QAAA;wBACA96D,KAAA+D,GAAA0B,KAAA,uBAAArC;wBACA,IAAAA,QAAA8sE,mBAAA,KAAA9sE,QAAA+sE,mBAAA;4BACAnwE,KAAA+D,GAAA0B,KAAA,eAAArC;;wBAEA,IAAAA,QAAAgtE,cAAA,KAAAhtE,QAAAitE,cAAA;4BACArwE,KAAA+D,GAAA0B,KAAA,aAAArC;;;oBAGA22D,OAAA74D,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACAoC,MAAA/B,SAAA,SAAAm3D;4BACA,IAAAA,aAAA3pD,SAAA2pD,aAAA3pD,MAAAC,OAAA;gCACA,IAAA0pD,aAAA3pD,MAAAC,MAAAC,eAAA,GAAArN,MAAA6sE,iBAAA/V;gCACA,IAAAA,aAAA3pD,MAAAC,MAAApH,MAAAhG,MAAA8sE;;4BAEA,IAAAhW,aAAAnC,SAAAmC,aAAAnC,MAAAvnD,OAAA;gCACA,IAAA0pD,aAAAnC,MAAAvnD,MAAAC,eAAA,GAAArN,MAAA+sE;gCACA,IAAAjW,aAAAnC,MAAAvnD,MAAApH,MAAAhG,MAAAgtE;;;wBAGAtrE,MAAA20D,UAAA;4BACA,OAAAr2D,MAAA2mE;;;oBAGA9Q,OAAA74D,UAAA2pE,mBAAA;wBACA7qE,KAAA+D,GAAA4xD;wBACA31D,KAAA6wE,oBAAA7wE,KAAA6wE,iBAAAh4D;wBACA7Y,KAAAmxE,oBAAAnxE,KAAAmxE,iBAAAt4D;wBACA7Y,KAAA8wE,kBAAA9wE,KAAA8wE,eAAAj4D;wBACA7Y,KAAAoxE,kBAAApxE,KAAAoxE,eAAAv4D;;oBAEAkhD,OAAA74D,UAAA6vE,mBAAA,SAAA/V;wBACA,IAAA92D,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACA,IAAA6tE,aAAAzrE,MAAA2E,KAAAmH,OAAAC;wBACA,IAAAmB,aAAAlN,MAAA2E,KAAAuI;wBACA,IAAAw+D,aAAAx+D,WAAA/H,YAAAsmE;wBACA,IAAAE,eAAAvW,aAAA3pD,MAAAC,MAAApH;wBACA,IAAAsnE,eAAA5rE,MAAA2E,KAAAmG,eAAA2gE,eAAAE;wBACA,IAAAx2D,OAAAy2D,eAAA1+D,WAAAwmD,kBAAAxmD,WAAAmmD;wBACA,IAAAvyC,OAAA8qD,eAAA1+D,WAAAymD,iBAAAzmD,WAAAomD;wBACA,IAAAl5D,KAAA6wE,kBAAA7wE,KAAA6wE,iBAAAnwD;wBACA,IAAApP,QAAA1L,MAAA2E,KAAA8G,MAAAC;wBACA,IAAAmgE,UAAAngE,MAAAC,SAAAD,MAAA+sD,cAAA/sD,MAAApH;wBACAlK,KAAAswE,eAAAvgE,IAAA/P,KAAAoD,QAAAgN;wBACA,IAAAtM,KAAA;4BACAI,MAAA64B;gCACA3sB,SAAAlM,MAAAosE,eAAAvgE;;;wBAGA,IAAAuhE,YAAA;4BACAtxE,KAAA6wE,mBAAA/8D,UAAA4E,GAAA1Y,KAAAswE,gBAAAv1D;gCACAhL,GAAA0hE;gCACA/qD;;4BAEA1mB,KAAA6wE,iBAAAz8B,cAAA,YAAAtwC;+BACiB;4BACjB9D,KAAAswE,eAAAvgE,IAAA0hE;4BACA3tE;;;oBAGAi2D,OAAA74D,UAAA+vE,mBAAA;wBACA,IAAA/sE,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACA,IAAAsP,aAAAlN,MAAA2E,KAAAuI;wBACA,IAAAw+D,aAAAx+D,WAAA/H;wBACA,IAAAgQ,OAAAjI,WAAAmmD;wBACA,IAAAj5D,KAAAmxE,kBAAAnxE,KAAAmxE,iBAAAzwD;wBACA,IAAApP,QAAA1L,MAAA2E,KAAAsuD,MAAAvnD;wBACA,IAAAogE,UAAApgE,MAAAC,SAAAD,MAAA+sD,cAAA/sD,MAAApH;wBACAlK,KAAAuwE,eAAAvgE,IAAAhQ,KAAAoD,QAAAmN;wBACA,IAAAzM,KAAA;4BACAI,MAAA64B;gCACAxsB,SAAArM,MAAAqsE,eAAAvgE;;;wBAGA,IAAAshE,YAAA;4BACAtxE,KAAAmxE,mBAAAr9D,UAAA4E,GAAA1Y,KAAAuwE,gBAAAx1D;gCACA/K,GAAA0hE;gCACAhrD,MAAA5T,WAAAomD;;4BAEAl5D,KAAAmxE,iBAAA/8B,cAAA,YAAAtwC;+BACiB;4BACjB9D,KAAAuwE,eAAAvgE,IAAA0hE;4BACA5tE;;;oBAGAi2D,OAAA74D,UAAA8vE,iBAAA;wBACA,IAAA9sE,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACA,IAAAsP,aAAAlN,MAAA2E,KAAAuI;wBACA,IAAAw+D,aAAAx+D,WAAA/H;wBACA,IAAAgQ,OAAAjI,WAAAmmD;wBACA,IAAA0Y,aAAA/rE,MAAA2E,KAAA8G,MAAAC,MAAApH;wBACA,IAAAlK,KAAA8wE,gBAAA9wE,KAAA8wE,eAAApwD;wBACA,IAAA5c,KAAA;4BACAI,MAAA64B;gCACAqzC,OAAAlsE,MAAAssE,aAAAj5D;;;wBAGA,IAAA+5D,YAAA;4BACAtxE,KAAA8wE,iBAAAh9D,UAAA4E,GAAA1Y,KAAAwwE,cAAAz1D;gCACAxD,KAAAo6D;gCACAjrD,MAAA5T,WAAAomD;;4BAEAl5D,KAAA8wE,eAAA18B,cAAA,YAAAtwC;+BACiB;4BACjB9D,KAAAwwE,aAAAj5D,MAAAo6D;4BACA7tE;;;oBAGAi2D,OAAA74D,UAAAgwE,iBAAA;wBACA,IAAAhtE,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACA,IAAAsP,aAAAlN,MAAA2E,KAAAuI;wBACA,IAAAw+D,aAAAx+D,WAAA/H;wBACA,IAAAgQ,OAAAjI,WAAAmmD;wBACA,IAAA0Y,aAAA/rE,MAAA2E,KAAAsuD,MAAAvnD,MAAApH;wBACA,IAAAlK,KAAAoxE,gBAAApxE,KAAAoxE,eAAA1wD;wBACA,IAAA5c,KAAA;4BACAI,MAAA64B;gCACAszC,OAAAnsE,MAAAusE,aAAAl5D;;;wBAGA,IAAA+5D,YAAA;4BACAtxE,KAAAoxE,iBAAAt9D,UAAA4E,GAAA1Y,KAAAywE,cAAA11D;gCACAxD,KAAAo6D;gCACAjrD,MAAA5T,WAAAomD;;4BAEAl5D,KAAAoxE,eAAAh9B,cAAA,YAAAtwC;+BACiB;4BACjB9D,KAAAywE,aAAAl5D,MAAAo6D;4BACA7tE;;;oBAGAi2D,OAAA74D,UAAA4E,kBAAA,SAAAC;wBACA,IAAApC,KAAA3D,KAAAwD,WAAA+G,KAAA8G,MAAAC,OAAA+sD,cAAA16D,GAAA06D,aAAA5B,UAAA94D,GAAA84D;wBACA,IAAAvyD,OAAAlK,KAAAoD,QAAAgtE;wBACA,QAAArqE,OAAA02D,WAAA4B,cAAAn0D;;oBAEA6vD,OAAA74D,UAAA+E,kBAAA,SAAAC;wBACA,IAAAvC,KAAA3D,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,OAAA+sD,cAAA16D,GAAA06D,aAAA5B,UAAA94D,GAAA84D;wBACA,IAAAvyD,OAAAlK,KAAAoD,QAAAitE;wBACA,QAAAnqE,OAAAu2D,WAAA4B,cAAAn0D;;oBAEA6vD,OAAA74D,UAAAwgE,kBAAA,SAAA37D,MAAAG;wBACA,WAAA+4C,QAAAj/C,KAAA8F,gBAAAC,OAAA/F,KAAAiG,gBAAAC,OAAA;;oBAEA6zD,OAAA74D,UAAA8/D,kBAAA,SAAAjxD;wBACA,OAAA/P,KAAAwD,WAAA+G,KAAA8G,MAAAC,MAAAmrD,UAAAz8D,KAAAq8D,iBAAAtsD;;oBAEAgqD,OAAA74D,UAAA+/D,mBAAA,SAAAl7D;wBACA,OAAAA,OAAA/F,KAAAwD,WAAA+G,KAAA8G,MAAAC,MAAA+sD,cAAAr+D,KAAAoD,QAAAgtE;;oBAEArW,OAAA74D,UAAAggE,mBAAA,SAAAh7D;wBACA,OAAAA,OAAAlG,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,MAAA+sD,cAAAr+D,KAAAoD,QAAAitE;;oBAEAtW,OAAA74D,UAAAm7D,mBAAA,SAAAt2D;wBACA,OAAAA,OAAA/F,KAAAwD,WAAA+G,KAAA8G,MAAAC,MAAA+sD,cAAAr+D,KAAAoD,QAAAgtE;;oBAEArW,OAAA74D,UAAAigE,mBAAA,SAAAj7D;wBACA,OAAAA,OAAAlG,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,MAAA+sD,cAAAr+D,KAAAoD,QAAAitE;;oBAEAtW,OAAA74D,UAAAkgE,oBAAA,SAAArxD;wBACA,OAAA/P,KAAAwD,WAAA+G,KAAA8G,MAAAC,MAAAmrD,UAAAz8D,KAAAoD,QAAA8sE,aAAAlwE,KAAAq8D,iBAAAtsD;;oBAEAgqD,OAAA74D,UAAAmgE,oBAAA,SAAArxD;wBACA,OAAAhQ,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,MAAAmrD,UAAAz8D,KAAAoD,QAAA+sE,aAAAnwE,KAAAmhE,iBAAAnxD;;oBAEA+pD,OAAA74D,UAAAogE,oBAAA,SAAAv7D;wBACA,IAAApC,KAAA3D,KAAAwD,WAAA+G,KAAA8G,MAAAC,OAAAC,SAAA5N,GAAA4N,QAAAkrD,UAAA94D,GAAA84D;wBACA,OAAAz8D,KAAAihE,iBAAAl7D,OAAA02D,UAAAlrD;;oBAEAwoD,OAAA74D,UAAAqgE,oBAAA,SAAAx7D;wBACA,OAAA/F,KAAAshE,kBAAAthE,KAAAghE,gBAAAj7D;;oBAEAg0D,OAAA74D,UAAAsgE,oBAAA,SAAAC;wBACA,OAAAzhE,KAAA8F,gBAAA9F,KAAAohE,kBAAAK;;oBAEA1H,OAAA74D,UAAA0wE,oBAAA,SAAAC;wBACA,OAAA7xE,KAAAiG,gBAAAjG,KAAAqhE,kBAAAwQ;;oBAEA9X,OAAA74D,UAAA4wE,SAAA;wBACA,OAAA9xE,KAAA4xE,kBAAA5xE,KAAAwD,WAAA+G,KAAApI;;oBAEA43D,OAAA74D,UAAA6wE,YAAA;wBACA,OAAA/xE,KAAA4xE,kBAAA;;oBAEA7X,OAAA74D,UAAA8wE,UAAA;wBACA,OAAAhyE,KAAAwhE,kBAAA;;oBAEAzH,OAAA74D,UAAA+P,oBAAA;wBACA,OAAAjR,KAAAohE,kBAAAphE,KAAAwD,WAAA+G,KAAArI;;oBAEA63D,OAAA74D,UAAA+wE,YAAA;wBACA,OAAAjyE,KAAAqhE,kBAAArhE,KAAAwD,WAAA+G,KAAApI;;oBAEA43D,OAAA74D,UAAAgxE,eAAA;wBACA,OAAAlyE,KAAAqhE,kBAAA;;oBAEAtH,OAAA74D,UAAAixE,gBAAA;wBACA,OAAAnyE,KAAAqhE,kBAAArhE,KAAAwD,WAAA+G,KAAApI,SAAA;;oBAEA,OAAA43D;;gBAEAn6D,QAAAm6D;eACK,SAAAl6D,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAwH,UAAArI,oBAAA;gBACA,IAAAu3D,eAAAv3D,oBAAA;gBACA,IAAAk3D,iBAAAl3D,oBAAA;gBACA,IAAAsB;oBACAqG,MAAA;oBACA+hD,WAAA;oBACA/nD,OAAA;oBACAswE,WAAA;oBACAC,cAAA;oBACA7K,WAAA;oBACA7lE,OAAA;;gBAEA,IAAAs4D,YAAA;oBACA,SAAAA,UAAAz2D,YAAA8uE;wBACAtyE,KAAAyC;wBACAzC,KAAAwD;wBACAxD,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAAsyE;wBACA,IAAAvtE,QAAA/E,KAAAyC;wBACA,IAAA8vE,mBAAAD,YAAA5a,aAAAwC,UAAAC,IAAA32D,WAAA+G,KAAA8G,MAAAtM,QAAAvB,WAAA+G,KAAAsuD,MAAA9zD;wBACA,SAAAH,KAAA,GAAA4tE,qBAAAD,kBAAuE3tE,KAAA4tE,mBAAA1tE,QAAgCF,MAAA;4BACvG,IAAAxB,UAAAovE,mBAAA5tE;4BACA,IAAA6tE,gBAAA;4BACArvE,UAAAoF,QAAAxD,MAAAK,UAAA5D,2BAAA2B;4BACA,KAAAA,QAAAQ,MAAAR,QAAAQ,OAAA4E,QAAAxD,MAAAC,SAAAC;4BACA,IAAAH,MAAA3B,QAAAQ,OAAA4E,QAAAxD,MAAAI,MAAA,0BAAAhC,QAAAQ;4BACA,IAAAR,QAAA0E,QAAA;gCACA2qE,WAAA,IAAAC,iBAAAlvE,YAAA8uE,UAAAlvE;mCACqB;gCACrBqvE,WAAA,IAAAE,SAAAnvE,YAAA8uE,UAAAlvE;;4BAEA2B,MAAA3B,QAAAQ,QAAA6uE;;wBAEAzyE,KAAA4C;;oBAEAq3D,UAAA/4D,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAAwD,WAAAi3D,cAAA,SAAA/4D,WAAAymE,gBAAAlK;4BACA/5D,MAAAu2D,cAAA/4D,WAAAu8D;;wBAEAj+D,KAAAwD,WAAA+2D,UAAA;4BACA,OAAAr2D,MAAAH,GAAA4xD;;;oBAGAsE,UAAA/4D,UAAAu5D,gBAAA,SAAA/4D,WAAAu8D;wBACA,KAAAA,SAAA;wBACA,IAAA2U,WAAA3U,QAAA,GAAAl4D;wBACA,IAAA8sE,SAAA5U,gBAAAn5D,SAAA,GAAAiB;wBACA,IAAAhB,QAAA/E,KAAAyC;wBACA,SAAAS,YAAA6B,OAAA;4BACA,IAAAO,OAAAP,MAAA7B;4BACA,IAAA4vE,UAAAxtE,KAAAlC,QAAAtB;4BACA,IAAAixE,iBAAAH,YAAAE,WAAAD,UAAAC,WAAAF,WAAAE,WAAAD,SAAAC;4BACA,IAAAC,gBAAA/yE,KAAA+D,GAAA0B,KAAA,eAAA/D,WAAAu8D;;;oBAGAhE,UAAA/4D,UAAA8B,WAAA;wBACA,OAAAhD,KAAAyC;;oBAEAw3D,UAAA/4D,UAAA+B,UAAA,SAAAC;wBACA,OAAAlD,KAAAyC,MAAAS;;oBAEA,OAAA+2D;;gBAEAr6D,QAAAq6D;gBACA,IAAA0Y,WAAA;oBACA,SAAAA,SAAAnvE,YAAA8uE,UAAAlvE;wBACApD,KAAAgzE,uBAAA;wBACAhzE,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAAoD;wBACApD,KAAAsyE;wBACAtyE,KAAAwD;wBACAxD,KAAA4C;;oBAEA+vE,SAAAzxE,UAAA0B,aAAA;oBACA+vE,SAAAzxE,UAAA+nE,aAAA,SAAAgK;wBACA,IAAAnxE,QAAA9B,KAAAoD,QAAAtB;wBACA9B,KAAAoD,UAAAoF,QAAAxD,MAAAK,UAAArF,KAAAoD,SAAA6vE;wBACA,IAAAjzE,KAAAoD,QAAAtB,iBAAA9B,KAAA+D,GAAA0B,KAAA;wBACAzF,KAAA+D,GAAA0B,KAAA;;oBAEAktE,SAAAzxE,UAAAgyE,kBAAA;wBACA,IAAAvvE,KAAA3D,KAAAoD,SAAAtB,QAAA6B,GAAA7B,OAAAqxE,iBAAAxvE,GAAAwvE;wBACA,OAAAC,OAAAD,wBAAA,IAAAA,iBAAArxE;;oBAEA6wE,SAAAzxE,UAAAmyE,gBAAA,SAAAvvE;wBACA,IAAAI,QAAAlE;wBACAA,KAAA+D,GAAAixD,GAAA,eAAAlxD;wBACA;4BACAI,MAAAH,GAAA+wD,IAAA,eAAAhxD;;;oBAGA6uE,SAAAzxE,UAAAoyE,gBAAA,SAAAxvE;wBACA,IAAAI,QAAAlE;wBACAA,KAAA+D,GAAAixD,GAAA,eAAAlxD;wBACA;4BACAI,MAAAH,GAAA+wD,IAAA,eAAAhxD;;;oBAGA6uE,SAAAzxE,UAAAqyE,yBAAA,SAAAzvE;wBACA,IAAAI,QAAAlE;wBACAA,KAAA+D,GAAAixD,GAAA,0BAAAlxD;wBACA;4BACAI,MAAAH,GAAA+wD,IAAA,0BAAAhxD;;;oBAGA6uE,SAAAa,WAAA;oBACA,OAAAb;;gBAEA/yE,QAAA+yE;gBACA,IAAAD,mBAAA,SAAAnwE;oBACA1B,UAAA6xE,kBAAAnwE;oBACA,SAAAmwE;wBACAnwE,OAAAsb,MAAA7d,MAAA+d;wBACA/d,KAAAgzE,uBAAA;;oBAEAN,iBAAAxxE,UAAAgyE,kBAAA;wBACA,IAAAJ,UAAA9yE,KAAAoD,QAAAtB;wBACA,IAAAgP,UAAA9Q,KAAAwD,WAAA+G,KAAAsG,aAAAjK,OAAAkK;wBACA,IAAAiK,OAAA+3D,UAAAhiE;wBACA,IAAAiK,OAAA,GAAAA,OAAA;wBACA,OAAAvS,QAAAxD,MAAAqgE,eAAAtqD;;oBAEA23D,iBAAAxxE,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAAwD,WAAAkL,eAAA;4BACA,OAAAxK,MAAAwK;;;oBAGAgkE,iBAAAxxE,UAAAwN,iBAAA;wBACA1O,KAAA+D,GAAA0B,KAAA;;oBAEAitE,iBAAAc,WAAA;oBACA,OAAAd;kBACSC;gBACT/yE,QAAA8yE;eACK,SAAA7yE,QAAAD;gBACL;iBACA,SAAA24D;oBACAA,gCAAA;oBACAA,gCAAA;oBACAA,gCAAA;oBACAA,gCAAA;mBACS34D,QAAA24D,oBAAA34D,QAAA24D;gBACT,IAAAA,kBAAA34D,QAAA24D;iBACA,SAAA2B;oBACAA,oBAAA;oBACAA,oBAAA;mBACSt6D,QAAAs6D,cAAAt6D,QAAAs6D;gBACT,IAAAA,YAAAt6D,QAAAs6D;iBACA,SAAAxB;oBACAA,8BAAA;oBACAA,8BAAA;mBACS94D,QAAA84D,mBAAA94D,QAAA84D;gBACT,IAAAA,iBAAA94D,QAAA84D;eACK,SAAA74D,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAiuD,OAAA3mD,MAAA2mD;gBACA,IAAAwkB,WAAAnrE,MAAAmrE;gBACA,IAAAnc,WAAAn3D,oBAAA;gBACA,IAAAuI,eAAAvI,oBAAA;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAAu3D,eAAAv3D,oBAAA;gBACA,IAAAoT,aAAA,SAAAhR;oBACA1B,UAAA0S,YAAAhR;oBACA,SAAAgR,WAAA3N;wBACA,IAAA1B,QAAAlE;wBACAuC,OAAAhC,KAAAP,MAAA4F;wBACA5F,KAAAwM,cAAA;wBACAxM,KAAA0zE,WAAA,IAAAD;wBACAzzE,KAAA2zE,cAAA,IAAAF;wBACAzzE,KAAA4zE,cAAA,IAAAH;wBACAzzE,KAAA0zE,SAAArnE,IAAArM,KAAA2zE;wBACA3zE,KAAA0zE,SAAArnE,IAAArM,KAAA4zE;wBACA5zE,KAAA6zE,UAAAnc,aAAAwC,UAAAC;wBACAn6D,KAAA6zE,UAAAnc,aAAAwC,UAAAG;wBACAr6D,KAAA8zE,qBAAAtrE,QAAAxD,MAAA+E,SAAA;4BACA,OAAA7F,MAAA6vE,WAAArc,aAAAwC,UAAAC;2BACiB;wBACjBn6D,KAAAg0E,eAAApuE,MAAAtB,OAAAlB,QAAAgN,SAAAxK,MAAAtB,OAAAlB,QAAAmN;;oBAEAgD,WAAArS,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACAxD,KAAA8iE,UAAAl9D,MAAAtB,OAAAsK,sBAAA,SAAAxL;4BACAc,MAAA8vE,eAAA5wE,QAAAgN,SAAAhN,QAAAmN;4BACiB3K,MAAAtB,OAAAC,YAAA,SAAAnB;4BACjBc,MAAAK,YAAAnB;4BACiBwC,MAAA20D,UAAA;4BACjB,OAAAr2D,MAAAq2D;4BACiB30D,MAAAkJ,SAAA;4BACjB,OAAA5K,MAAA4K;;;oBAGAyE,WAAArS,UAAAq5D,YAAA;wBACAv6D,KAAAwM,cAAA;wBACAxM,KAAAqN;;oBAEAkG,WAAArS,UAAA8yE,iBAAA,SAAAjkE,GAAAC;wBACA,IAAAA,UAAA;4BACAhQ,KAAA4zE,YAAA/jE,SAAAG;4BACAhQ,KAAA2zE,YAAA9jE,SAAAG;;wBAEA,IAAAD,UAAA;4BACA/P,KAAA4zE,YAAA/jE,SAAAE;4BACA/P,KAAA8zE;;;oBAGAvgE,WAAArS,UAAA4N,WAAA;wBACA9O,KAAA6zE,UAAAnc,aAAAwC,UAAAC;wBACAn6D,KAAA6zE,UAAAnc,aAAAwC,UAAAG;;oBAEA9mD,WAAArS,UAAA2yE,YAAA,SAAA7xE;wBACA,IAAAkC,QAAAlE;wBACA,IAAAi0E,UAAAjyE,eAAA01D,aAAAwC,UAAAC;wBACA,IAAAx2D,KAAA3D,KAAAwD,WAAA+G,MAAA2pE,eAAAvwE,GAAAzB,OAAAiyE,gBAAAxwE,GAAAxB;wBACA,IAAAiyE,cAAA,GAAAC,eAAA;wBACA,IAAAJ,SAAA;4BACAj0E,KAAA2zE,YAAAW,SAAA,SAAAzpD;gCACA,OAAA3mB,MAAAyvE,YAAAzkE,OAAA2b;;4BAEAupD,cAAAF,eAAA;4BACAG,eAAA;+BACiB;4BACjBr0E,KAAA4zE,YAAAU,SAAA,SAAAzpD;gCACA,OAAA3mB,MAAA0vE,YAAA1kE,OAAA2b;;4BAEAupD,cAAA;4BACAC,eAAAF,gBAAA;;wBAEA,IAAA7vB,UAAA97C,QAAAxD,MAAAm+D,0BAAAiR,aAAAC,cAAA,SAAArR;4BACAA,IAAA/d;4BACA+d,IAAAhtD,OAAA;4BACAgtD,IAAA9sD,YAAA;4BACA8sD,IAAAhZ,cAAA;;wBAEA,IAAAzP,WAAA,IAAAjyC,MAAAm/C;4BACAtY,KAAAmV;4BACA6J,MAAA7lD,MAAA2oD;;wBAEA1W,SAAA9f,cAAA;wBACA,IAAA85C,WAAA,IAAAtlB,KAAA,IAAA3mD,MAAAksE,cAAAJ,aAAAC,eAAA95B;wBACA,IAAA05B,SAAA;4BACAM,SAAA1kE,SAAAC,IAAAskE,cAAA,GAAAC,eAAA;4BACAr0E,KAAA2zE,YAAAtnE,IAAAkoE;+BACiB;4BACjBA,SAAA1kE,SAAAC,IAAAokE,eAAAE,cAAA,GAAAC,eAAA;4BACAr0E,KAAA4zE,YAAAvnE,IAAAkoE;;wBAEAv0E,KAAA+zE,WAAA/xE;;oBAEAuR,WAAArS,UAAAoL,cAAA;wBACA,OAAAtM,KAAA0zE;;oBAEAngE,WAAArS,UAAA6yE,aAAA,SAAA/xE;wBACA,IAAAhC,KAAAwM,aAAA;wBACA,IAAAynE,UAAAjyE,eAAA01D,aAAAwC,UAAAC;wBACA,IAAAx2D,KAAA3D,KAAAwD,WAAA+G,MAAA2pE,eAAAvwE,GAAAzB,OAAAiyE,gBAAAxwE,GAAAxB;wBACA,IAAA4pE,KAAA/rE,KAAAwD,WAAAc,OAAAlB,SAAAgN,UAAA27D,GAAA37D,SAAAG,UAAAw7D,GAAAx7D,SAAA6/D,QAAArE,GAAAqE,OAAAC,QAAAtE,GAAAsE;wBACA,IAAAoE;wBACA,IAAAF;wBACA,IAAAG;wBACA,IAAAT,SAAA;4BACAM,WAAAv0E,KAAA2zE,YAAAt/D,SAAA;4BACAogE,cAAAz0E,KAAAwD,WAAA+G,KAAA8G;4BACAqjE,iBAAAhsE,aAAA8K,WAAAmhE,qBAAAF,aAAAP,cAAA9D;+BACiB;4BACjBmE,WAAAv0E,KAAA4zE,YAAAv/D,SAAA;4BACAogE,cAAAz0E,KAAAwD,WAAA+G,KAAAsuD;4BACA6b,iBAAAhsE,aAAA8K,WAAAmhE,qBAAAF,aAAAN,eAAA9D;;wBAEA,IAAA1gB,WAAA4kB,SAAA5kB;wBACA,IAAAykB,cAAAzkB,SAAAzV,WAAAh4C;wBACA,IAAAmyE,eAAA1kB,SAAAzV,WAAA/3C;wBACA,IAAAmiD,UAAAiwB,SAAAh6B,SAAApL;wBACA,IAAA6zB,MAAA1e,QAAAI,MAAA3uC,WAAA;wBACAitD,IAAAliB,UAAA,MAAAszB,aAAAC;wBACA,IAAAJ,SAAA;4BACAM,SAAA1kE,SAAAE,IAAAqkE,cAAA,IAAAF,eAAA9jE;;wBAEA,IAAAwkE,aAAAF,eAAAG,gBAAAH,eAAAljB;wBACA,IAAAohB,WAAA8B,eAAA53C,QAAA83C;wBACA,IAAA/B,SAAA6B,eAAA1nE,MAAA4nE;wBACA5R,IAAA/d;wBACA,SAAA1tC,MAAAq7D,UAAwCr7D,OAAAs7D,QAAet7D,OAAAm9D,eAAAljB,MAAA;4BACvD,IAAA2hB,iBAAA;4BACA,IAAAc,SAAA;gCACA,IAAAa,QAAA90E,KAAAwD,WAAAc,OAAAwB,gBAAAyR,OAAAnH,UAAA8jE;gCACAlR,IAAA+R,YAAA;gCACA,IAAAN,YAAAhc,YAAAf,aAAAgB,eAAAsc,MAAA;oCACA7B,iBAAA5/D,WAAA0hE,WAAA19D,KAAAm9D;uCACyB;oCACzBvB,iBAAAjvD,OAAA3M,IAAA+qD,QAAA,KAAAp9D;;gCAEA89D,IAAA5sD,SAAA+8D,gBAAA2B,OAAAT,eAAA;mCACqB;gCACrB,IAAAS,QAAAT,eAAAr0E,KAAAwD,WAAAc,OAAA2B,gBAAAsR,OAAAhH;gCACAyyD,IAAA+R,YAAA;gCACA5B,iBAAAjvD,OAAA3M,IAAA+qD,QAAA,KAAAp9D;gCACA89D,IAAA5sD,SAAA+8D,gBAAAiB,cAAA,IAAAU,QAAA;;4BAEA9R,IAAA7c;;wBAEA6c,IAAA7c;wBACA6c,IAAA1a;wBACAhE,QAAA4e,cAAA;;oBAEA3vD,WAAArS,UAAAqD,cAAA,SAAAnB;wBACA,IAAAA,QAAAgtE,OAAA;4BACApwE,KAAA+zE,WAAArc,aAAAwC,UAAAC;;wBAEA,IAAA/2D,QAAAitE,OAAA;4BACArwE,KAAA+zE,WAAArc,aAAAwC,UAAAG;;;oBAGA9mD,WAAA0hE,aAAA,SAAA3P,WAAA4P;wBACA,IAAAC,MAAA;wBACA,IAAA5iE,MAAA4iE,MAAA;wBACA,IAAAC,OAAA7iE,MAAA;wBACA,IAAA8iE,MAAAD,OAAA;wBACA,IAAA5jB,OAAA0jB,WAAA1jB;wBACA,IAAA1wD,IAAA,IAAA8T,KAAA0wD;wBACA,IAAAgQ,KAAA,SAAAp/B;4BACA,OAAA1tC,QAAAxD,MAAAs9D,QAAApsB,KAAA;;wBAEA,OAAAo/B,GAAAx0E,EAAAy0E,cAAA,MAAAD,GAAAx0E,EAAA00E,gBAAA,MAAAF,GAAAx0E,EAAA20E;;oBAEAliE,WAAAjJ,aAAA;oBACA,OAAAiJ;kBACS+jD,SAAAyE;gBACTn8D,QAAA2T;eACK,SAAA1T,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAi+C,UAAA32C,MAAA22C;gBACA,IAAAqY,WAAAn3D,oBAAA;gBACA,IAAAsxD,eAAAnpD,MAAAmpD;gBACA,IAAAjpD,UAAArI,oBAAA;gBACA,IAAAqT,aAAA,SAAAjR;oBACA1B,UAAA2S,YAAAjR;oBACA,SAAAiR,WAAAhQ;wBACAjB,OAAAhC,KAAAP,MAAAwD;wBACAxD,KAAAwM,cAAA;wBACA,IAAA7I,KAAAH,WAAA+G,MAAArI,QAAAyB,GAAAzB,OAAAC,SAAAwB,GAAAxB,QAAAkP,QAAA1N,GAAA0N,OAAAwnD,QAAAl1D,GAAAk1D;wBACA74D,KAAA01E,YAAApjE,KAAA4oC,MAAAh5C,QAAAmP,MAAAunD,eAAA;wBACA54D,KAAA21E,YAAArjE,KAAA4oC,MAAA/4C,SAAA02D,MAAAD,eAAA;wBACA54D,KAAA41E;wBACA51E,KAAA61E;;oBAEAriE,WAAAtS,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACA,IAAA81E,sBAAAttE,QAAAxD,MAAA+E,SAAA;4BACA,OAAA7F,MAAA2xE;2BACiB;wBACjB71E,KAAA8iE,UAAA9iE,KAAAwD,WAAAyzD,SAAA;4BACA,OAAA6e;4BACiB91E,KAAAwD,WAAAc,OAAAC,YAAA,SAAAnB;4BACjB0yE;4BACA5xE,MAAAK,YAAAnB;4BACiBpD,KAAAwD,WAAA+2D,UAAA;4BACjBr2D,MAAAsI,cAAA;4BACAtI,MAAAmJ;4BACiBrN,KAAAwD,WAAAsL,SAAA;4BACjB5K,MAAA2xE;;;oBAGAriE,WAAAtS,UAAA00E,WAAA;wBACA,IAAAjmB,WAAA,IAAArnD,MAAA4nD;wBACA,IAAA3V,WAAA,IAAAjyC,MAAA88C;4BACAE,WAAA;4BACAtxB,SAAA;4BACAyG,aAAA;;wBAEA,IAAAs7C,cAAA/1E,KAAA01E;wBACA,IAAAM,cAAAh2E,KAAA21E;wBACA,OAAAI,eAAApmB,SAAAhQ,SAAAx6C,KAAA,IAAA85C,WAAA,IAAAA;wBACA,OAAA+2B,eAAArmB,SAAAhQ,SAAAx6C,KAAA,IAAA85C,WAAA,IAAAA;wBACAj/C,KAAAi2E,eAAA,IAAAxkB,aAAA9B,UAAApV;wBACAv6C,KAAAi2E,aAAApmE,SAAAqmE,MAAA;wBACAl2E,KAAAi2E,aAAA7mB,gBAAA;;oBAEA57C,WAAAtS,UAAA20E,aAAA;wBACA,IAAA71E,KAAAwM,aAAA;wBACA,IAAA7I,KAAA3D,KAAAwD,WAAA+G,MAAAsuD,QAAAl1D,GAAAk1D,OAAAxnD,QAAA1N,GAAA0N,OAAAnP,QAAAyB,GAAAzB,OAAAC,SAAAwB,GAAAxB;wBACA,IAAAg0E,YAAA3iE,WAAAmhE,qBAAAtjE,OAAAnP,OAAAmP,MAAAC,MAAApH;wBACA,IAAAksE,YAAA5iE,WAAAmhE,qBAAA9b,OAAA12D,QAAA02D,MAAAvnD,MAAApH;wBACA,IAAAmsE,oBAAA/jE,KAAAs5D,KAAAv6D,MAAAC,MAAAC,SAAA4kE,UAAA3kB;wBACA,IAAA8kB,oBAAAhkE,KAAAs5D,KAAA/S,MAAAvnD,MAAAC,SAAA6kE,UAAA5kB;wBACA,IAAA+kB,iBAAAF,oBAAAF,UAAA3kB;wBACA,IAAAglB,iBAAAF,oBAAAF,UAAA5kB;wBACA,IAAA+a,YAAA4J,UAAAr5C,QAAAy5C;wBACA,IAAAxI,YAAAqI,UAAAt5C,QAAA05C;wBACA,IAAA7mB,WAAA3vD,KAAAi2E,aAAAtmB;wBACA,IAAAhQ,WAAAgQ,SAAAhQ;wBACA,IAAA82B,UAAA;wBACA,SAAAx/D,KAAAjX,KAAA01E,YAAA,GAAiDz+D,IAAAjX,KAAA01E,YAAA,OAA4Bz+D,KAAA;4BAC7E,IAAAnV,QAAAyqE,YAAAt1D,IAAAk/D,UAAA3kB;4BACA,IAAAklB,cAAA12E,KAAA22E,uBAAA70E,OAAAy0E,gBAAAC;4BACA72B,SAAA82B,UAAA,GAAA3mE,IAAA4mE,YAAA,GAAA3mE,GAAA2mE,YAAA,GAAA1mE,GAAA;4BACA2vC,SAAA82B,UAAA,OAAA3mE,IAAA4mE,YAAA,GAAA3mE,GAAA2mE,YAAA,GAAA1mE,GAAA;4BACAymE;;wBAEA,SAAAx/D,KAAAjX,KAAA21E,YAAA,GAAiD1+D,IAAAjX,KAAA21E,YAAA,OAA4B1+D,KAAA;4BAC7E,IAAAnV,QAAAisE,YAAA92D,IAAAm/D,UAAA5kB;4BACA,IAAAklB,cAAA12E,KAAA42E,yBAAA90E,OAAAy0E,gBAAAC;4BACA72B,SAAA82B,UAAA,GAAA3mE,IAAA4mE,YAAA,GAAA3mE,GAAA2mE,YAAA,GAAA1mE,GAAA;4BACA2vC,SAAA82B,UAAA,OAAA3mE,IAAA4mE,YAAA,GAAA3mE,GAAA2mE,YAAA,GAAA1mE,GAAA;4BACAymE;;wBAEA9mB,SAAAknB,qBAAA;wBACA72E,KAAAi2E,aAAAzvC,MAAA12B,IAAAuB,MAAAC,MAAA+sD,cAAAhtD,MAAAC,MAAApH,MAAA2uD,MAAAvnD,MAAA+sD,cAAAxF,MAAAvnD,MAAApH,MAAA;;oBAEAsJ,WAAAtS,UAAA01E,2BAAA,SAAA1wE,MAAAgqE,YAAAC;wBACA,IAAA3sE,aAAAxD,KAAAwD;wBACA,IAAAszE,YAAA5wE,OAAA1C,WAAA+G,KAAAsuD,MAAAvnD,MAAAmrD,UAAA0T;wBACA,IAAA4G,WAAAvzE,WAAA64D,iBAAA74D,WAAA+G,KAAArI;wBACA,aAAAoG,MAAA22C,QAAA83B,WAAA,IAAA7G,YAAA4G,WAAA,QAAAxuE,MAAA22C,SAAA83B,WAAA7G,YAAA4G,WAAA;;oBAEAtjE,WAAAtS,UAAAy1E,yBAAA,SAAA5wE,MAAAmqE,YAAAC;wBACA,IAAA3sE,aAAAxD,KAAAwD;wBACA,IAAAwzE,YAAAjxE,OAAAvC,WAAA+G,KAAA8G,MAAAC,MAAAmrD,UAAAyT;wBACA,IAAA+G,YAAAzzE,WAAA29D,iBAAA39D,WAAA+G,KAAApI;wBACA,aAAAmG,MAAA22C,QAAA+3B,WAAAC,YAAA,IAAA9G,YAAA,QAAA7nE,MAAA22C,QAAA+3B,YAAAC,YAAA9G,YAAA;;oBAEA38D,WAAAtS,UAAAqD,cAAA,SAAAnB;wBACA,IAAAO,KAAA3D,KAAAwD,WAAA+G,MAAA8G,QAAA1N,GAAA0N,OAAAwnD,QAAAl1D,GAAAk1D;wBACA,IAAAz1D,QAAAgtE,OAAApwE,KAAAi2E,aAAAzvC,MAAAl2B,KAAAe,MAAAC,MAAA+sD,cAAAj7D,QAAAgtE;wBACA,IAAAhtE,QAAAitE,OAAArwE,KAAAi2E,aAAAzvC,MAAA/1B,KAAAooD,MAAAvnD,MAAA+sD,cAAAj7D,QAAAitE;;oBAEA78D,WAAAmhE,uBAAA,SAAAF,aAAAyC,WAAAhtE;wBACA,IAAAi0D,YAAAsW,YAAAnjE;wBACA,IAAAyL,OAAAohD,UAAAphD;wBACA,IAAArE,KAAAylD,UAAAzlD;wBACA,IAAAy+D,aAAAz+D,KAAAqE;wBACA,IAAAq6D,WAAA;wBACA,IAAAC,mBAAA;wBACA,IAAAC,sBAAA7C,YAAA7b;wBACA,IAAA2e,gBAAAnE,OAAA+D;wBACA,IAAAK,0BAAAD,cAAA/xE,QAAA;wBACA,IAAAiyE,gBAAAD,6BAAA,IAAAA,0BAAAD,cAAAzyE;wBACA,IAAA4yE,gBAAA;wBACA,IAAAC,WAAA;wBACA,QAAAD,eAAA;4BACA,IAAA5pC,QAAA2pC,gBAAAE,WAAA;4BACA,IAAAC,aAAAtlE,KAAAsJ,IAAA,IAAAkyB,UAAA;4BACA,IAAA+pC,aAAA;4BACA,SAAAC,aAAA,GAA4CA,aAAAD,SAAA/yE,QAA8BgzE,cAAA;gCAC1E,IAAAC,eAAAH,aAAAC,SAAAC;gCACA,IAAAE,uBAAAD,eAAAZ,aAAAD;gCACA,IAAAc,wBAAAV,qBAAA;oCACAF,WAAAW;oCACAV,mBAAAW;uCACyB;oCACzBN,gBAAA;oCACA,IAAAN,aAAA;wCACAA,WAAAW;wCACAV,mBAAAW;;oCAEA;;;4BAGA,KAAAN,eAAAC;;wBAEA,IAAAM,YAAA3lE,KAAA4oC,MAAAn+B,OAAAq6D;wBACA,IAAAc,UAAA5lE,KAAA4oC,MAAAxiC,KAAA0+D;wBACA;4BACAt6C,OAAAm7C;4BACAjrE,KAAAkrE;4BACA1mB,MAAA4lB;4BACAe,UAAAd;4BACAvyE,QAAAozE,UAAAD;4BACApD,eAAAviE,KAAAqD,OAAAuiE,UAAAD,aAAAb;;;oBAGA5jE,WAAAtS,UAAAoL,cAAA;wBACA,OAAAtM,KAAAi2E;;oBAEAziE,WAAAlJ,aAAA;oBACA,OAAAkJ;kBACS8jD,SAAAyE;gBACTn8D,QAAA4T;eACK,SAAA3T,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAwH,UAAArI,oBAAA;gBACA,IAAA8uD,OAAA3mD,MAAA2mD;gBACA,IAAAmpB,sBAAA9vE,MAAA8vE;gBACA,IAAA3wB,oBAAAn/C,MAAAm/C;gBACA,IAAA4wB,iBAAAl4E,oBAAA;gBACA,IAAAylE,UAAAzlE,oBAAA;gBACA,IAAAwT,sBAAA,SAAApR;oBACA1B,UAAA8S,qBAAApR;oBACA,SAAAoR;wBACApR,OAAAsb,MAAA7d,MAAA+d;;oBAEApK,oBAAAzS,UAAAo3E,sBAAA;wBACA,OAAAC;;oBAEA5kE,oBAAArJ,aAAA;oBACA,OAAAqJ;kBACS0kE,eAAAG;gBACT54E,QAAA+T;gBACA,IAAA4kE,eAAA,SAAAh2E;oBACA1B,UAAA03E,cAAAh2E;oBACA,SAAAg2E,aAAA3yE,OAAAlE;wBACAa,OAAAhC,KAAAP,MAAA4F,OAAAlE;wBACA1B,KAAAynB,WAAA;wBACAznB,KAAAy4E,OAAA,IAAAxpB,KAAA,IAAAmpB,oBAAA,aAAA3wB;4BACAtY,KAAAopC,aAAAxV;4BACAtoC,aAAA;;wBAEAz6B,KAAA04E;;oBAEAH,aAAAI,kBAAA,SAAAxd,cAAA33D;wBACA,OAAA23D,aAAApwD,WAAAvH,WAAA+G,KAAAuI,WAAA/H;;oBAEAwtE,aAAAr3E,UAAAoL,cAAA;wBACA,OAAAtM,KAAAy4E;;oBAEAF,aAAAr3E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAuC,OAAArB,UAAA0B,WAAArC,KAAAP;wBACAA,KAAA8iE,UAAA9iE,KAAAmH,MAAA+hE,iBAAA;4BACA,OAAAhlE,MAAAmnC;;;oBAGAktC,aAAAr3E,UAAAsnE,cAAA;wBACAxoE,KAAA04E;;oBAEAH,aAAAr3E,UAAAmqC,WAAA;wBACA,IAAAotC,OAAAz4E,KAAAy4E;wBACAA,KAAAl+B,SAAAvmB,UAAA;wBACAykD,KAAAvoD,SAAAjgB,IAAA;wBACA,IAAAw+D,YAAA36D,UAAA4E,GAAA1Y,KAAAy4E,KAAAvoD,UAAA;4BACAjgB,GAAAqC,KAAAyV,KAAA;;wBAEA0mD,UAAAr6B,cAAA;4BACAq6B,UAAAz6B;;wBAEAh0C,KAAAyuE;wBACAzuE,KAAAynB,WAAA;wBACAznB,KAAA44E;;oBAEAL,aAAAr3E,UAAAw3E,aAAA;wBACA14E,KAAAyuE,aAAAzuE,KAAAyuE,UAAA51D;wBACA7Y,KAAAy4E,KAAAl+B,SAAAvmB,UAAA;wBACAh0B,KAAAynB,WAAA;;oBAEA8wD,aAAAxV,gBAAA;wBACA,IAAAt4D,IAAA,IAAAD,IAAA;wBACA,OAAAhC,QAAAxD,MAAA+9D,cAAAt4D,GAAAD,GAAA,SAAAw4D;4BACAA,IAAAhZ,cAAA;4BACAgZ,IAAAnZ,YAAA;4BACA,IAAAgvB,SAAApuE,IAAA;4BACAu4D,IAAA/d;4BACA+d,IAAA8V,IAAAD,gBAAA,OAAAvmE,KAAAyV,KAAA;4BACAi7C,IAAA7c;4BACA6c,IAAA/d;4BACA+d,IAAA8V,IAAAD,gBAAA,IAAAvmE,KAAAyV,IAAAzV,KAAAyV,KAAAzV,KAAAyV,KAAA;4BACAi7C,IAAA7c;4BACA6c,IAAA/d;4BACA+d,IAAA8V,IAAAD,gBAAA,MAAAvmE,KAAAyV,KAAA;4BACAi7C,IAAA7c;;;oBAGAoyB,aAAAr3E,UAAAqD,cAAA;wBACAvE,KAAA44E;;oBAEAL,aAAAr3E,UAAA03E,iBAAA;wBACA,KAAA54E,KAAAynB,UAAA;wBACA,IAAAtgB,QAAAnH,KAAAmH;wBACA,IAAAxB,UAAAwB,MAAAG,SAAA8jE;wBACA,IAAAr7D,GAAAC;wBACA,IAAA7I,MAAApE,aAAA+E,QAAA89D,QAAA79D,WAAAC,MAAA;4BACA+H,IAAApK,QAAA0oE,sBAAA9B;4BACAv8D,IAAArK,QAAA0oE,sBAAAN;+BACiB;4BACjBh+D,IAAApK,QAAA0oE,sBAAAtoE,OAAAJ,QAAA+4D;4BACA1uD,IAAArK,QAAA0oE,sBAAAnoE;;wBAEA,IAAA6yE,cAAA/4E,KAAAwD,WAAAc,OAAAo9D,gBAAA3xD,GAAAC;wBACAhQ,KAAAy4E,KAAA5oE,SAAAC,IAAAipE,YAAAhpE,GAAAgpE,YAAA/oE,GAAA;;oBAEA,OAAAuoE;kBACSF,eAAAW;gBACTp5E,QAAA24E;eACK,SAAA14E,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAs2D,WAAAn3D,oBAAA;gBACA,IAAAszE,WAAAnrE,MAAAmrE;gBACA,IAAA+E,eAAA,SAAAj2E;oBACA1B,UAAA23E,cAAAj2E;oBACA,SAAAi2E,aAAA5yE;wBACArD,OAAAhC,KAAAP,MAAA4F;wBACA5F,KAAAuJ;wBACAvJ,KAAA0zE,WAAA,IAAAD;wBACAzzE,KAAA0O;;oBAEA8pE,aAAAt3E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACA,IAAA4F,QAAA5F,KAAAwD;wBACAoC,MAAA8I,eAAA;4BACA,OAAAxK,MAAAwK;;wBAEA9I,MAAA60D,cAAA,SAAA/4D,WAAAymE,gBAAAlK;4BACA/5D,MAAAu2D,cAAA/4D,WAAAymE,gBAAAlK;;;oBAGAua,aAAAt3E,UAAAwN,iBAAA;wBACA,IAAAuqE,gBAAAj5E,KAAAwD,WAAA+G,KAAA3D;wBACA,IAAAsyE,mBAAAl5E,KAAAs4E;wBACA,SAAA52E,aAAAu3E,eAAA;4BACA,IAAA9d,eAAA8d,cAAAv3E;4BACA,IAAAy3E,qBAAAD,iBAAAP,gBAAAxd,cAAAn7D,KAAAwD;4BACA,IAAA21E,uBAAAn5E,KAAAuJ,QAAA7H,YAAA;gCACA1B,KAAAo5E,kBAAA13E;mCACqB,KAAAy3E,sBAAAn5E,KAAAuJ,QAAA7H,YAAA;gCACrB1B,KAAAq5E,mBAAA33E;;;;oBAIA82E,aAAAt3E,UAAAu5D,gBAAA,SAAA/4D,WAAAymE,gBAAAlK;wBACA,IAAA7xD,SAAApM,KAAAuJ,QAAA7H;wBACA,KAAA0K,QAAA;wBACAA,OAAAquD,cAAA0N;wBACA,IAAAlK,SAAA;4BACA,IAAA1zD,OAAAvK,KAAAwD,WAAA4D,SAAA1F,WAAA0kE;4BACA,IAAA8E,YAAA3gE,KAAAzF,UAAAyF,KAAA,GAAAxE,OAAAk4D,QAAA,GAAAl4D;4BACAmlE,WAAA9+D,OAAAg8D,WAAAnK,WAAA7xD,OAAAo8D,YAAAvK;;;oBAGAua,aAAAt3E,UAAAoL,cAAA;wBACA,OAAAtM,KAAA0zE;;oBAEA8E,aAAAt3E,UAAAk4E,oBAAA,SAAA13E;wBACA,IAAAyK,oBAAAnM,KAAAs4E;wBACA,IAAAlsE,SAAA,IAAAD,kBAAAnM,KAAAwD,YAAA9B;wBACA1B,KAAAuJ,QAAA7H,aAAA0K;wBACA,IAAAktE,eAAAltE,OAAAE;wBACAgtE,aAAA11E,OAAAlC;wBACA1B,KAAA0zE,SAAArnE,IAAAD,OAAAE;;oBAEAksE,aAAAt3E,UAAAm4E,qBAAA,SAAA33E;wBACA1B,KAAAuJ,QAAA7H,WAAA64D;+BACAv6D,KAAAuJ,QAAA7H;wBACA,IAAA43E,eAAAt5E,KAAA0zE,SAAA6F,gBAAA73E;wBACA1B,KAAA0zE,SAAAxkE,OAAAoqE;;oBAEA,OAAAd;kBACSlhB,SAAAyE;gBACTn8D,QAAA44E;gBACA,IAAAQ,cAAA;oBACA,SAAAA,YAAAx1E,YAAA9B;wBACA1B,KAAAwD;wBACAxD,KAAA0B;wBACA1B,KAAAyO;wBACAzO,KAAAmH,QAAA3D,WAAAW,cAAAiD,SAAA1F;wBACA1B,KAAAwD;wBACAxD,KAAA4C;;oBAEAo2E,YAAAL,kBAAA,SAAAxd,cAAA33D;wBACA,OAAA23D,aAAApwD;;oBAEAiuE,YAAA93E,UAAAknE,aAAA,SAAAnK;oBACA+a,YAAA93E,UAAAsnE,cAAA,SAAAvK;oBACA+a,YAAA93E,UAAAu5D,gBAAA,SAAA0N;oBACA6Q,YAAA93E,UAAAq5D,YAAA;wBACA,SAAA31D,KAAA,GAAAjB,KAAA3D,KAAAyO,eAAyD7J,KAAAjB,GAAAmB,QAAgBF,MAAA;4BACzE,IAAA+gE,eAAAhiE,GAAAiB;4BACA+gE;;;oBAGAqT,YAAA93E,UAAAs4E,oBAAA,SAAAlyE;oBACA0xE,YAAA93E,UAAAqD,cAAA,SAAAnB;oBACA41E,YAAA93E,UAAA0N,wBAAA,SAAAxL;oBACA41E,YAAA93E,UAAAw5D,SAAA;oBACAse,YAAA93E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAA8iE,UAAA9iE,KAAAmH,MAAAG,SAAAolE,iBAAA,SAAAwC;4BACA,OAAAhrE,MAAAs1E,kBAAAtK;;wBAEAlvE,KAAA8iE,UAAA9iE,KAAAwD,WAAAc,OAAAsK,sBAAA,SAAAxL;4BACA,OAAAc,MAAA0K,sBAAAxL;;wBAEApD,KAAA8iE,UAAA9iE,KAAAwD,WAAAc,OAAAC,YAAA,SAAAnB;4BACA,OAAAc,MAAAK,YAAAnB;;wBAEApD,KAAA8iE,UAAA9iE,KAAAwD,WAAAk3D,OAAA;4BACA,OAAAx2D,MAAAw2D;;;oBAGAse,YAAA93E,UAAA4hE,YAAA,SAAA6C;wBACA3lE,KAAAyO,cAAAtJ,KAAAwgE;;oBAEA,OAAAqT;;gBAEAp5E,QAAAo5E;eACK,SAAAn5E,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAs2D,WAAAn3D,oBAAA;gBACA,IAAAszE,WAAAnrE,MAAAmrE;gBACA,IAAAvjB,WAAA5nD,MAAA4nD;gBACA,IAAA9K,oBAAA98C,MAAA88C;gBACA,IAAAnG,UAAA32C,MAAA22C;gBACA,IAAAz2C,UAAArI,oBAAA;gBACA,IAAA+uD,OAAA5mD,MAAA4mD;gBACA,IAAAD,OAAA3mD,MAAA2mD;gBACA,IAAAyI,eAAAv3D,oBAAA;gBACA,IAAAyT,kBAAA,SAAArR;oBACA1B,UAAA+S,iBAAArR;oBACA,SAAAqR,gBAAApQ;wBACAjB,OAAAhC,KAAAP,MAAAwD;wBACAxD,KAAAy5E;wBACAz5E,KAAA0zE,WAAA,IAAAD;wBACA,IAAAzZ,aAAAx2D,WAAAw2D,YAAAI,aAAA52D,WAAA42D;wBACA,IAAA33D,QAAAu3D,WAAAh3D;wBACA,SAAAE,YAAAT,OAAA;4BACAzC,KAAA05E,eAAAj3E,MAAAS;;wBAEAT,QAAA23D,WAAAp3D;wBACA,SAAAE,YAAAT,OAAA;4BACAzC,KAAA05E,eAAAj3E,MAAAS;;;oBAGA0Q,gBAAA1S,UAAAw4E,iBAAA,SAAAjH;wBACA,IAAAkH,iBAAA,IAAAC,eAAA55E,KAAAwD,YAAAivE;wBACAzyE,KAAAy5E,iBAAAt0E,KAAAw0E;wBACA35E,KAAA0zE,SAAArnE,IAAAstE,eAAArtE;;oBAEAsH,gBAAA1S,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAA8iE,UAAA9iE,KAAAwD,WAAAc,OAAAsK,sBAAA;4BACA,OAAA1K,MAAA21E;4BACiB75E,KAAAwD,WAAAsL,SAAA;4BACjB,OAAA5K,MAAA21E;;;oBAGAjmE,gBAAA1S,UAAA24E,uBAAA;wBACA,SAAAj1E,KAAA,GAAAjB,KAAA3D,KAAAy5E,kBAA4D70E,KAAAjB,GAAAmB,QAAgBF,MAAA;4BAC5E,IAAAwH,SAAAzI,GAAAiB;4BACAwH,OAAAwsE;;;oBAGAhlE,gBAAA1S,UAAAoL,cAAA;wBACA,OAAAtM,KAAA0zE;;oBAEA9/D,gBAAAtJ,aAAA;oBACA,OAAAsJ;kBACS0jD,SAAAyE;gBACTn8D,QAAAgU;gBACA,IAAAkmE,oCAAA,SAAAH,gBAAA3W;oBACA,IAAAyP,WAAAkH,eAAAlH;oBACAzP,IAAA9sD,YAAAu8D,SAAArvE,QAAAokE;oBACAxE,IAAAliB,UAAA,MAAA64B,eAAAI,gBAAAJ,eAAAK;oBACA,IAAAC,SAAA;oBACA,IAAAxH,SAAAH,YAAA5a,aAAAwC,UAAAG,GAAA;wBACA2I,IAAA+R,YAAA;wBACAkF,SAAAN,eAAAI;;oBAEA/W,IAAA5sD,SAAAq8D,SAAArvE,QAAAzB,OAAAs4E,QAAA;oBACA,KAAAxH,SAAArvE,QAAAgvE,WAAA;oBACApP,IAAA9sD,YAAA;oBACA8sD,IAAA5sD,SAAAq8D,SAAAS,mBAAA;;gBAEA,IAAAgH,kBAAA;gBACA,IAAAN,iBAAA;oBACA,SAAAA,eAAAp2E,YAAAivE;wBACAzyE,KAAA+5E,iBAAA;wBACA/5E,KAAAg6E,kBAAA;wBACAh6E,KAAAm6E,0BAAAL;wBACA95E,KAAAwD;wBACAxD,KAAAyyE;wBACAzyE,KAAAsyE,WAAAG,SAAAH;wBACAtyE,KAAAo6E,aAAA3H,SAAArvE,QAAAtB;wBACA9B,KAAA0zE,WAAA,IAAAD;wBACAzzE,KAAA0zE,SAAA7jE,SAAAqmE,MAAA;wBACAl2E,KAAA4xD,OAAA5xD,KAAAq6E;wBACAr6E,KAAA0zE,SAAArnE,IAAArM,KAAA4xD;wBACA5xD,KAAAs6E,YAAAt6E,KAAAu6E;wBACAv6E,KAAA0zE,SAAArnE,IAAArM,KAAAs6E;wBACAt6E,KAAAw6E;wBACAx6E,KAAA44E;wBACA54E,KAAA4C;;oBAEAg3E,eAAA14E,UAAAoL,cAAA;wBACA,OAAAtM,KAAA0zE;;oBAEAkG,eAAA14E,UAAAm5E,aAAA;wBACA,IAAA12E,KAAA3D,KAAAyyE,SAAArvE,SAAAymD,YAAAlmD,GAAAkmD,WAAA2d,YAAA7jE,GAAA6jE;wBACA,IAAAiT,eAAA,IAAAvqB;wBACAuqB,aAAA96B,SAAAx6C,KAAA,IAAA85C,QAAA,cAAAA,QAAA;wBACA,WAAAiQ,KAAAurB,cAAA,IAAAr1B;4BACA/pB,OAAA7yB,QAAAxD,MAAA8/D,YAAA0C;4BACAliB,WAAAuE;;;oBAGA+vB,eAAA14E,UAAAq5E,kBAAA;wBACA,IAAA52E,KAAA3D,MAAAkC,QAAAyB,GAAAo2E,gBAAA53E,SAAAwB,GAAAq2E;wBACA,IAAA11B,UAAA97C,QAAAxD,MAAAm+D,0BAAAjhE,OAAAC,QAAA,SAAA6gE;4BACAA,IAAA/d;4BACA+d,IAAAhtD,OAAA;;wBAEA,IAAAukC,WAAA,IAAAjyC,MAAAm/C;4BACAtY,KAAAmV;4BACA6J,MAAA7lD,MAAA2oD;;wBAEA1W,SAAA9f,cAAA;wBACA,WAAAw0B,KAAA,IAAA3mD,MAAAksE,cAAAtyE,OAAAC,SAAAo4C;;oBAEAq/B,eAAA14E,UAAAs5E,kBAAA;wBACA,IAAAl2B,UAAAtkD,KAAAs6E,UAAA//B,SAAApL;wBACA,IAAA6zB,MAAA1e,QAAAI,MAAA3uC,WAAA;wBACA+jE,kCAAA95E,MAAAgjE;wBACA1e,QAAA4e,cAAA;;oBAEA0W,eAAA14E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAA,KAAAyyE,SAAAc,uBAAA;4BACA,OAAArvE,MAAAs2E;;wBAEAx6E,KAAAyyE,SAAAa,cAAA;4BACA,OAAApvE,MAAAw2E;;;oBAGAd,eAAA14E,UAAAw5E,uBAAA;wBACA,IAAAx2E,QAAAlE;wBACA,IAAAA,KAAA26E,eAAA36E,KAAA26E,cAAA9hE;wBACA,IAAA/F,aAAA9S,KAAAwD,WAAA+G,KAAAuI;wBACA,IAAAi8D,cAAA/uE,KAAAyyE,SAAArvE,QAAAtB;wBACA,IAAAgC,KAAA;4BACAI,MAAA00E;;wBAEA,IAAA9lE,WAAA/H,SAAA;4BACA/K,KAAA26E,gBAAA7mE,UAAA4E,GAAA1Y,MAAA8S,WAAAimD;gCACAqhB,YAAArL;gCACAroD,MAAA5T,WAAAkmD;;4BAEAh5D,KAAA26E,cAAAvmC,cAAA,YAAAtwC;+BACiB;4BACjB9D,KAAAo6E,aAAArL;4BACAjrE;;;oBAGA81E,eAAA14E,UAAA03E,iBAAA;wBACA,IAAAp1E,aAAAxD,KAAAwD;wBACA,IAAAc,SAAAd,WAAAc;wBACA,IAAA2vE,UAAAj0E,KAAAsyE,YAAA5a,aAAAwC,UAAAC;wBACA,IAAAsgB,eAAAz6E,KAAA4xD,KAAAjC;wBACA,IAAAirB,eAAA56E,KAAAyyE,SAAArvE,QAAAivE;wBACA,IAAA1uE,KAAA3D,KAAAwD,WAAA+G,MAAArI,QAAAyB,GAAAzB,OAAAC,SAAAwB,GAAAxB;wBACA,IAAA8xE,SAAA;4BACAj0E,KAAA0zE,SAAA7jE,SAAAE,IAAAzL,OAAAwB,gBAAA9F,KAAAo6E;4BACAp6E,KAAA0zE,SAAA7jE,SAAAG,IAAA1L,OAAAytE;4BACA0I,aAAA96B,SAAA,GAAAlvC,KAAAtO;4BACAnC,KAAAs6E,UAAAzqE,SAAAC,IAAA9P,KAAA+5E,iBAAA,GAAAv2E,WAAA+G,KAAApI,SAAAnC,KAAAg6E,kBAAA,GAAAE;+BACiB;4BACjB,IAAA3iE,MAAAvX,KAAAo6E;4BACA,IAAAS,YAAAv2E,OAAA4tE;4BACA,IAAA4I,SAAAx2E,OAAA2tE;4BACA,IAAA8I,mBAAAH,gBAAArjE,MAAAujE;4BACA,IAAAE,sBAAAJ,gBAAArjE,MAAAsjE;4BACA,IAAAI,aAAA32E,OAAA6tE;4BACAnyE,KAAA0zE,SAAA7jE,SAAAE,IAAAzL,OAAA0tE;4BACA,IAAA+I,kBAAA;gCACA/6E,KAAA0zE,SAAA7jE,SAAAG,IAAA1L,OAAAwtE;mCACqB,IAAAkJ,qBAAA;gCACrBh7E,KAAA0zE,SAAA7jE,SAAAG,IAAA1L,OAAAytE;mCACqB;gCACrB/xE,KAAA0zE,SAAA7jE,SAAAG,IAAA1L,OAAA2B,gBAAAjG,KAAAo6E;;4BAEAK,aAAA96B,SAAA,GAAArvC,KAAApO;4BACA,IAAAg5E,gBAAA3jE,MAAA0jE,cAAA;4BACAj7E,KAAAs6E,UAAAzqE,SAAAC,IAAA5N,QAAAlC,KAAA+5E,iBAAA,QAAAmB,eAAAhB;;wBAEAO,aAAA5D,qBAAA;;oBAEA+C,eAAApG,WAAA;oBACA,OAAAoG;;eAEK,SAAA/5E,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAs2D,WAAAn3D,oBAAA;gBACA,IAAAsxD,eAAAnpD,MAAAmpD;gBACA,IAAAxS,UAAA32C,MAAA22C;gBACA,IAAAprC,eAAA,SAAAtR;oBACA1B,UAAAgT,cAAAtR;oBACA,SAAAsR,aAAArQ;wBACAjB,OAAAhC,KAAAP,MAAAwD;wBACA,IAAAG,KAAAH,WAAA+G,MAAArI,QAAAyB,GAAAzB,OAAAC,SAAAwB,GAAAxB;wBACA,IAAAwtD,WAAA,IAAArnD,MAAA4nD;wBACA,IAAA3V,WAAA,IAAAjyC,MAAA88C;4BACAE,WAAA;4BACAtxB,SAAA;4BACAyG,aAAA;;wBAEAk1B,SAAAhQ,SAAAx6C,KAAA,IAAA85C,QAAA,cAAAA,QAAA,GAAA98C,QAAA,QAAA88C,QAAA,GAAA98C,QAAA,QAAA88C,QAAA/8C,OAAAC,QAAA,QAAA88C,QAAA/8C,OAAAC,QAAA,QAAA88C,QAAA/8C,OAAA,WAAA+8C,QAAA/8C,OAAA,WAAA+8C,QAAA,cAAAA,QAAA/8C,QAAA,GAAAC,QAAA,QAAA88C,QAAA/8C,QAAA;wBACAlC,KAAAi2E,eAAA,IAAAxkB,aAAA9B,UAAApV;;oBAEA1mC,aAAA3S,UAAAoL,cAAA;wBACA,OAAAtM,KAAAi2E;;oBAEApiE,aAAAvJ,aAAA;oBACA,OAAAuJ;kBACSyjD,SAAAyE;gBACTn8D,QAAAiU;eACK,SAAAhU,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAwH,UAAArI,oBAAA;gBACA,IAAA8uD,OAAA3mD,MAAA2mD;gBACA,IAAAopB,iBAAAl4E,oBAAA;gBACA,IAAAi6C,QAAA9xC,MAAA8xC;gBACA,IAAA+gC,eAAA;gBACA,IAAAC,gBAAA;gBACA,IAAAC,WAAA;gBACA,IAAA3nE,wBAAA,SAAAnR;oBACA1B,UAAA6S,uBAAAnR;oBACA,SAAAmR;wBACAnR,OAAAsb,MAAA7d,MAAA+d;;oBAEArK,sBAAAxS,UAAAo3E,sBAAA;wBACA,OAAAgD;;oBAEA5nE,sBAAApJ,aAAA;oBACA,OAAAoJ;kBACS2kE,eAAAG;gBACT54E,QAAA8T;gBACA,IAAA4nE,iBAAA,SAAA/4E;oBACA1B,UAAAy6E,gBAAA/4E;oBACA,SAAA+4E,eAAA11E,OAAAlE;wBACAa,OAAAhC,KAAAP,MAAA4F,OAAAlE;wBACA1B,KAAAu7E;wBACAv7E,KAAAy6D;;oBAEA6gB,eAAA3C,kBAAA,SAAAxd;wBACA,OAAAA,aAAApwD,WAAAowD,aAAAqgB;;oBAEAF,eAAAp6E,UAAAoL,cAAA;wBACA,OAAAtM,KAAAy4E;;oBAEA6C,eAAAp6E,UAAAu5D,gBAAA;wBACA,IAAAmM,YAAA5mE,KAAAmH,MAAAi/D;wBACA,IAAAqV,WAAA7U,oBAAA9hE,SAAA;wBACA,IAAAw/C,UAAAtkD,KAAAy4E,KAAAl+B,SAAApL;wBACA,IAAA6zB,MAAA1e,QAAAI,MAAA3uC,WAAA;wBACAitD,IAAAliB,UAAA,MAAAq6B,cAAAC;wBACApY,IAAA5sD,SAAAqlE,SAAAv1E,KAAAo8D,QAAA;wBACAhe,QAAA4e,cAAA;;oBAEAoY,eAAAp6E,UAAAq6E,aAAA;wBACA,IAAAlgD,QAAA,IAAA+e,MAAAp6C,KAAAmH,MAAApE,aAAAykE;wBACA,IAAAljB,UAAA97C,QAAAxD,MAAAm+D,0BAAAgY,cAAAC,eAAA,SAAApY;4BACAA,IAAA/d;4BACA+d,IAAAhtD,OAAA;4BACAgtD,IAAA9sD,YAAAmlB,MAAAtG;4BACAiuC,IAAAhZ,cAAA;;wBAEA,IAAAzP,WAAA,IAAAjyC,MAAAm/C;4BACAtY,KAAAmV;4BACA6J,MAAA7lD,MAAA2oD;;wBAEA1W,SAAA9f,cAAA;wBACAz6B,KAAAy4E,OAAA,IAAAxpB,KAAA,IAAA3mD,MAAAksE,cAAA2G,cAAAC,gBAAA7gC;;oBAEA+gC,eAAAp6E,UAAA0N,wBAAA;wBACA5O,KAAA2F,UAAA3F,KAAAmH,MAAAG,SAAA6jE;wBACAnrE,KAAA44E;;oBAEA0C,eAAAp6E,UAAAs4E,oBAAA,SAAAlyE;wBACAtH,KAAA2F,UAAA2B,SAAA6jE;wBACAnrE,KAAA44E;;oBAEA0C,eAAAp6E,UAAA03E,iBAAA;wBACA,IAAAhzE,QAAA5F,KAAAwD;wBACA,IAAAG,KAAA3D,KAAA2F,QAAA0oE,uBAAAqN,iBAAA/3E,GAAAsE,SAAA0zE,iBAAAh4E,GAAAuE;wBACA,IAAA0zE,iBAAAh2E,MAAAtB,OAAAo9D,gBAAAga,gBAAAC;wBACA,IAAAE,cAAAj2E,MAAA2E,KAAArI;wBACA,IAAA6N,IAAA6rE,eAAA7rE,IAAAsrE;wBACA,IAAArrE,IAAA4rE,eAAA5rE;wBACA,IAAAyxD,UAAA77D,MAAAtB,OAAAi9D,kBAAAqa,eAAA7rE;wBACA,IAAA+rE,yBAAAra,UAAA,KAAAA,UAAAoa;wBACA,IAAAC,wBAAA;4BACA,IAAAra,UAAA,GAAA1xD,IAAAnK,MAAAtB,OAAAk9D,kBAAA;4BACA,IAAAC,UAAAoa,aAAA9rE,IAAAnK,MAAAtB,OAAAk9D,kBAAAqa,eAAAV,eAAA;4BACAnrE,KAAA;;wBAEAhQ,KAAAy4E,KAAA5oE,SAAAC,IAAAC,IAAAorE,eAAA,GAAAnrE,IAAAorE,gBAAA;;oBAEA,OAAAE;kBACSjD,eAAAW;gBACTp5E,QAAA07E;eACK,SAAAz7E,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAkvD,WAAA5nD,MAAA4nD;gBACA,IAAA9K,oBAAA98C,MAAA88C;gBACA,IAAAnG,UAAA32C,MAAA22C;gBACA,IAAAo5B,iBAAAl4E,oBAAA;gBACA,IAAAsxD,eAAAnpD,MAAAmpD;gBACA,IAAAmU,UAAAzlE,oBAAA;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAA47E,yBAAA;gBACA,IAAA1oE,mBAAA,SAAA9Q;oBACA1B,UAAAwS,kBAAA9Q;oBACA,SAAA8Q;wBACA9Q,OAAAsb,MAAA7d,MAAA+d;;oBAEA1K,iBAAAnS,UAAAo3E,sBAAA;wBACA,OAAA0D;;oBAEA3oE,iBAAA/I,aAAA;oBACA,OAAA+I;kBACSglE,eAAAG;gBACT54E,QAAAyT;gBACA,IAAA2oE,YAAA,SAAAz5E;oBACA1B,UAAAm7E,WAAAz5E;oBACA,SAAAy5E,UAAAx4E,YAAA9B;wBACAa,OAAAhC,KAAAP,MAAAwD,YAAA9B;wBACA1B,KAAAi8E;wBACAj8E,KAAAk8E;wBACA,IAAA94E,UAAApD,KAAAmH,MAAApE;wBACA/C,KAAAu6C,WAAA,IAAA6K;4BACA/pB,OAAAj4B,QAAAokE;4BACAliB,WAAAliD,QAAAymD;;wBAEA7pD,KAAAm8E;;oBAEAH,UAAArD,kBAAA,SAAAxd;wBACA,OAAAA,aAAApwD,WAAAowD,aAAArzD,QAAA89D,QAAA79D,WAAAC;;oBAEAg0E,UAAA96E,UAAAoL,cAAA;wBACA,OAAAtM,KAAAi2E;;oBAEA+F,UAAA96E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAuC,OAAArB,UAAA0B,WAAArC,KAAAP;wBACAA,KAAA8iE,UAAA9iE,KAAAmH,MAAAG,SAAA4/D,UAAA;4BACAhjE,MAAAk4E;4BACAl4E,MAAAm4E;;wBAEAr8E,KAAA8iE,UAAA9iE,KAAAmH,MAAAG,SAAAqlE,wBAAA;4BACAzoE,MAAAm4E;;;oBAGAL,UAAA96E,UAAAi7E,WAAA;wBACA,IAAAxsB,WAAA,IAAAO;wBACA,IAAAvsD,KAAA3D,KAAAwD,WAAA+G,KAAA8G,MAAAC,OAAAgrE,eAAA34E,GAAA06D,aAAA+R,QAAAzsE,GAAAuG;wBACA,IAAA6hE,KAAA/rE,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,OAAAirE,eAAAxQ,GAAA1N,aAAAgS,QAAAtE,GAAA7hE;wBACAlK,KAAAs8E;wBACAt8E,KAAAu8E;wBACAv8E,KAAAi2E,eAAA,IAAAxkB,aAAA9B,UAAA3vD,KAAAu6C;wBACAv6C,KAAAi2E,aAAAzvC,MAAA12B,IAAAwsE,eAAAlM,OAAAmM,eAAAlM,OAAA;wBACArwE,KAAAi2E,aAAA7mB,gBAAA;wBACA,SAAAn4C,IAAA,GAA+BA,IAAA8kE,wBAA4B9kE,KAAA;4BAC3D04C,SAAAhQ,SAAAx6C,KAAA,IAAA85C,WAAA,IAAAA;4BACAj/C,KAAAi8E,iBAAA92E,KAAA8R;;wBAEAjX,KAAA2/C,WAAAgQ,SAAAhQ;wBACA3/C,KAAAq8E;;oBAEAL,UAAA96E,UAAAm7E,gBAAA;wBACA,IAAA1sB,WAAA3vD,KAAAi2E,aAAAtmB;wBACA,IAAAhsD,KAAA3D,KAAAmH,MAAAG,UAAA0kE,wBAAAroE,GAAAqoE,uBAAAC,uBAAAtoE,GAAAsoE;wBACA,SAAAkC,aAAAnuE,KAAAk8E,mBAAA;4BACA,IAAAxF,cAAA12E,KAAAk8E,kBAAA/N;4BACA,IAAAC,YAAApuE,KAAAmH,MAAAG,kBAAAovE,YAAAvI;4BACA,IAAAqO,wBAAApO,UAAA7B,YAAAP,sBAAAO,aAAA6B,UAAAnmE,UAAAgkE,qBAAAhkE;4BACA,IAAAu0E,uBAAAx8E,KAAAy8E,eAAAv4D,OAAAiqD;;wBAEA,IAAAxoE,UAAAqmE;wBACA,OAAArmE,mBAAAI,QAAAkmE,qBAAAlmE,MAAA;4BACA/F,KAAA08E,aAAA/2E,QAAAtF,IAAAsF,QAAA0oE;4BACA1oE,kBAAA6mE;;wBAEA7c,SAAAknB,qBAAA;;oBAEAmF,UAAA96E,UAAAw7E,eAAA,SAAAvO,WAAAwO;wBACA,IAAAjG,cAAA12E,KAAAk8E,kBAAA/N;wBACA,KAAAuI,aAAA;4BACA,IAAA12E,KAAAi8E,iBAAAn3E,UAAA,GAAA0D,QAAAxD,MAAAI,MAAA;4BACA,IAAA6+D,MAAAjkE,KAAAi8E,iBAAAlyC;4BACA2sC,cAAA12E,KAAAk8E,kBAAA/N;gCACAA;gCACAlK;;;wBAGA,IAAA2Y,aAAAlG,YAAAzS;wBACA,IAAA4Y,kBAAA78E,KAAA2/C,SAAAi9B,aAAA;wBACA,IAAAE,gBAAA98E,KAAA2/C,SAAAi9B,aAAA;wBACAC,gBAAA/sE,IAAA9P,KAAA+8E,SAAAJ,aAAApQ,YAAAvsE,KAAAg9E,SAAAL,aAAA5O,YAAA;wBACA+O,cAAAhtE,IAAA9P,KAAA+8E,SAAAJ,aAAA10E,UAAAjI,KAAAg9E,SAAAL,aAAAz0E,UAAA;;oBAEA8zE,UAAA96E,UAAAk7E,kBAAA;wBACA,SAAAjO,aAAAnuE,KAAAk8E,mBAAAl8E,KAAAy8E,eAAAv4D,OAAAiqD;;oBAEA6N,UAAA96E,UAAAu7E,iBAAA,SAAAtO;wBACA,IAAAuI,cAAA12E,KAAAk8E,kBAAA/N;wBACA,IAAA0O,kBAAA78E,KAAA2/C,SAAA+2B,YAAAzS,MAAA;wBACA,IAAA6Y,gBAAA98E,KAAA2/C,SAAA+2B,YAAAzS,MAAA;wBACA4Y,gBAAA/sE,IAAA;wBACAgtE,cAAAhtE,IAAA;+BACA9P,KAAAk8E,kBAAA/N;wBACAnuE,KAAAi8E,iBAAA92E,KAAAuxE,YAAAzS;;oBAEA+X,UAAA96E,UAAAqD,cAAA,SAAAnB;wBACA,IAAA65E,eAAAj9E,KAAAi2E,aAAAzvC;wBACA,IAAApjC,QAAAgtE,OAAA6M,aAAA3sE,KAAAtQ,KAAAs8E,eAAAl5E,QAAAgtE;wBACA,IAAAhtE,QAAAitE,OAAA4M,aAAAxsE,KAAAzQ,KAAAu8E,eAAAn5E,QAAAitE;;oBAEA2L,UAAA96E,UAAAs4E,oBAAA,SAAArK;wBACA,IAAAxf,WAAA3vD,KAAAi2E,aAAAtmB;wBACA,SAAA/qD,KAAA,GAAAjB,KAAAwrE,cAAAjF,qBAAwEtlE,KAAAjB,GAAAmB,QAAgBF,MAAA;4BACxF,IAAAupE,YAAAxqE,GAAAiB;4BACA,KAAA5E,KAAAk8E,kBAAA/N,YAAA;4BACAnuE,KAAA08E,aAAAvO,WAAAgB,cAAAlF,aAAAkE,WAAAE;;wBAEA1e,SAAAknB,qBAAA;;oBAEAmF,UAAA96E,UAAA67E,WAAA,SAAAh3E;wBACA,OAAAA,OAAA/F,KAAAwD,WAAA+G,KAAA8G,MAAAC,MAAAmrD;;oBAEAuf,UAAA96E,UAAA87E,WAAA,SAAA92E;wBACA,OAAAA,OAAAlG,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,MAAAmrD;;oBAEAuf,UAAA96E,UAAAg8E,aAAA,SAAAC;wBACA,WAAAl+B,QAAAj/C,KAAA+8E,SAAAI,IAAAptE,IAAA/P,KAAAg9E,SAAAG,IAAAntE,IAAA;;oBAEA,OAAAgsE;kBACS3D,eAAAW;gBACTp5E,QAAAo8E;eACK,SAAAn8E,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAq3E,iBAAAl4E,oBAAA;gBACA,IAAAszE,WAAAnrE,MAAAmrE;gBACA,IAAAvjB,WAAA5nD,MAAA4nD;gBACA,IAAAjR,UAAA32C,MAAA22C;gBACA,IAAAgQ,OAAA3mD,MAAA2mD;gBACA,IAAAC,OAAA5mD,MAAA4mD;gBACA,IAAAzH,oBAAAn/C,MAAAm/C;gBACA,IAAA+sB,gBAAAlsE,MAAAksE;gBACA,IAAA5O,UAAAzlE,oBAAA;gBACA,IAAAilD,oBAAA98C,MAAA88C;gBACA,IAAA58C,UAAArI,oBAAA;gBACA,IAAAi9E,aAAA;gBACA,IAAAC,aAAA;gBACA,IAAAC,iBAAA;gBACA,IAAAC,cAAA;gBACA,IAAAjqE,sBAAA,SAAA/Q;oBACA1B,UAAAyS,qBAAA/Q;oBACA,SAAA+Q;wBACA/Q,OAAAsb,MAAA7d,MAAA+d;;oBAEAzK,oBAAApS,UAAAo3E,sBAAA;wBACA,OAAAkF;;oBAEAlqE,oBAAAhJ,aAAA;oBACA,OAAAgJ;kBACS+kE,eAAAG;gBACT54E,QAAA0T;gBACA,IAAAkqE,qBAAA,SAAAj7E;oBACA1B,UAAA28E,oBAAAj7E;oBACA,SAAAi7E,mBAAAh6E,YAAA9B;wBACAa,OAAAhC,KAAAP,MAAAwD,YAAA9B;wBACA1B,KAAAy9E;wBACAz9E,KAAA09E;wBACA19E,KAAA29E;wBACA39E,KAAAu7E;;oBAEAiC,mBAAA7E,kBAAA,SAAAxd;wBACA,OAAAA,aAAApwD,WAAAowD,aAAArzD,QAAA89D,QAAA79D,WAAA6/D;;oBAEA4V,mBAAAt8E,UAAAoL,cAAA;wBACA,OAAAtM,KAAA0zE;;oBAEA8J,mBAAAt8E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAuC,OAAArB,UAAA0B,WAAArC,KAAAP;wBACAA,KAAA8iE,UAAA9iE,KAAAmH,MAAAG,SAAA4/D,UAAA;4BACAhjE,MAAA05E;4BACA15E,MAAA25E;;wBAEA79E,KAAA8iE,UAAA9iE,KAAAmH,MAAAG,SAAAqlE,wBAAA;4BACAzoE,MAAA25E;;;oBAGAL,mBAAAt8E,UAAAq6E,aAAA;wBACA,IAAAxgB,YAAA/6D,KAAAwD,WAAA+G;wBACA,IAAA5G,KAAAo3D,UAAA1pD,MAAAC,OAAAgrE,eAAA34E,GAAA06D,aAAA+R,QAAAzsE,GAAAuG;wBACA,IAAA6hE,KAAAhR,UAAAlC,MAAAvnD,OAAAirE,eAAAxQ,GAAA1N,aAAAgS,QAAAtE,GAAA7hE;wBACAlK,KAAAs8E;wBACAt8E,KAAAu8E;wBACAv8E,KAAA0zE,WAAA,IAAAD;wBACAzzE,KAAA0zE,SAAAltC,MAAA12B,IAAAwsE,eAAAlM,OAAAmM,eAAAlM,OAAA;wBACArwE,KAAA0zE,SAAAtkB,gBAAA;wBACA,SAAAn4C,IAAA,GAA+BA,IAAAsmE,aAAiBtmE,KAAAjX,KAAAy9E,gBAAAt4E,KAAA8R;wBAChDjX,KAAA69E;;oBAEAL,mBAAAt8E,UAAA28E,eAAA;wBACA,IAAAl6E,KAAA3D,KAAAmH,MAAAG,UAAA0kE,wBAAAroE,GAAAqoE,uBAAAC,uBAAAtoE,GAAAsoE;wBACA,SAAAkC,aAAAnuE,KAAA29E,SAAA;4BACA,IAAAvP,YAAApuE,KAAA29E,QAAAxP,WAAAxoE;4BACA,IAAA62E,wBAAApO,UAAA7B,YAAAP,sBAAAO,aAAA6B,UAAAnmE,UAAAgkE,qBAAAhkE;4BACA,IAAAu0E,uBAAAx8E,KAAA89E,cAAA55D,OAAAiqD;;wBAEA,IAAAxoE,UAAAqmE;wBACA,OAAArmE,mBAAAI,QAAAkmE,qBAAAlmE,MAAA;4BACA/F,KAAA+9E,YAAAp4E,QAAAtF,IAAAsF,QAAA0oE;4BACA1oE,kBAAA6mE;;;oBAGAgR,mBAAAt8E,UAAA08E,iBAAA;wBACA,SAAAzP,aAAAnuE,KAAA29E,SAAA39E,KAAA89E,cAAA55D,OAAAiqD;;oBAEAqP,mBAAAt8E,UAAA48E,gBAAA,SAAA3P;wBACA,IAAA6P,SAAAh+E,KAAA29E,QAAAxP;wBACAnuE,KAAA0zE,SAAAxkE,OAAA8uE,OAAA1xE;+BACAtM,KAAA29E,QAAAxP;;oBAEAqP,mBAAAt8E,UAAAqD,cAAA,SAAAnB;wBACA,IAAA65E,eAAAj9E,KAAA0zE,SAAAltC;wBACA,IAAApjC,QAAAgtE,OAAA6M,aAAA3sE,KAAAtQ,KAAAs8E,eAAAl5E,QAAAgtE;wBACA,IAAAhtE,QAAAitE,OAAA4M,aAAAxsE,KAAAzQ,KAAAu8E,eAAAn5E,QAAAitE;;oBAEAmN,mBAAAt8E,UAAAs4E,oBAAA,SAAArK;wBACA,SAAAvqE,KAAA,GAAAjB,KAAAwrE,cAAAjF,qBAAwEtlE,KAAAjB,GAAAmB,QAAgBF,MAAA;4BACxF,IAAAupE,YAAAxqE,GAAAiB;4BACA,KAAA5E,KAAA29E,QAAAxP,YAAA;4BACA,IAAAwO,eAAAxN,cAAAlF,aAAAkE,WAAAE;4BACAruE,KAAA+9E,YAAA5P,WAAAwO;;;oBAGAa,mBAAAt8E,UAAA68E,cAAA,SAAAE,UAAAtB;wBACA,IAAAuB,YAAAD,WAAAV;wBACA,IAAAS,SAAAh+E,KAAA09E,YAAAQ;wBACA,KAAAF,QAAA;4BACAA,SAAAh+E,KAAA09E,YAAAQ,aAAA,IAAAC;;wBAEA,KAAAn+E,KAAA29E,QAAAM,WAAA;4BACAj+E,KAAA29E,QAAAM,YAAAD;4BACAh+E,KAAA0zE,SAAArnE,IAAA2xE,OAAA1xE;;wBAEA0xE,OAAA1xE,cAAAuD,SAAAC,IAAA9P,KAAA+8E,SAAAJ,aAAA52E,OAAA/F,KAAAg9E,SAAAL,aAAAz2E,OAAA;wBACA83E,OAAAI,WAAAzB;;oBAEAa,mBAAAt8E,UAAA67E,WAAA,SAAAh3E;wBACA,OAAAA,OAAA/F,KAAAwD,WAAA+G,KAAA8G,MAAAC,MAAAmrD;;oBAEA+gB,mBAAAt8E,UAAA87E,WAAA,SAAA92E;wBACA,OAAAA,OAAAlG,KAAAwD,WAAA+G,KAAAsuD,MAAAvnD,MAAAmrD;;oBAEA+gB,mBAAAt8E,UAAAg8E,aAAA,SAAAC;wBACA,WAAAl+B,QAAAj/C,KAAA+8E,SAAAI,IAAAptE,IAAA/P,KAAAg9E,SAAAG,IAAAntE,IAAA;;oBAEA,OAAAwtE;kBACSnF,eAAAW;gBACTp5E,QAAA49E;gBACA,IAAAW,eAAA;oBACA,SAAAA;wBACAn+E,KAAAu7E;;oBAEA4C,aAAAj9E,UAAAoL,cAAA;wBACA,OAAAtM,KAAAwG;;oBAEA23E,aAAAj9E,UAAAk9E,aAAA,SAAAz4E;wBACA3F,KAAA2F;wBACA,IAAA01B,QAAA11B,QAAAuC,UAAAvC,QAAAooE,YAAAsP,aAAAD;wBACA,IAAAztB,WAAA3vD,KAAAwG,KAAAmpD;wBACA,IAAApV,WAAAv6C,KAAAwG,KAAA+zC;wBACA,IAAAr4C,QAAAyD,QAAAsC,UAAAtC,QAAA4mE;wBACArqE,iBAAAo7E;wBACA,IAAAn7E,SAAAmQ,KAAAE,IAAA7M,QAAAooE,WAAApoE,QAAAuC,WAAAoK,KAAAC,IAAA5M,QAAAooE,WAAApoE,QAAAuC;wBACA,IAAAvE,KAAAgsD,SAAAhQ,UAAA0+B,UAAA16E,GAAA,IAAA26E,WAAA36E,GAAA,IAAA46E,aAAA56E,GAAA,IAAA66E,cAAA76E,GAAA;wBACA06E,QAAAvuE,KAAA5N,QAAA,GAAAC,SAAA;wBACAm8E,SAAAxuE,IAAA5N,QAAA,GAAAC,SAAA;wBACAo8E,WAAAzuE,KAAA5N,QAAA,IAAAC,SAAA;wBACAq8E,YAAA1uE,IAAA5N,QAAA,IAAAC,SAAA;wBACA,IAAAqG,QAAAxD,MAAAw+D,YAAA6a,QAAAruE,GAAAuuE,WAAAvuE,KAAA;4BACAuuE,WAAA9tE,KAAA8tE,WAAAvuE,IAAA;4BACAwuE,YAAA/tE,KAAA+tE,YAAAxuE,IAAA;;wBAEAuqC,SAAAlf,MAAAvrB,IAAAurB;wBACAs0B,SAAAknB,qBAAA;wBACA,IAAA4H,gBAAAz+E,KAAA0+E,MAAA/uB;wBACA,IAAAgvB,gBAAA3+E,KAAA0+E,MAAAnkC;wBACA,IAAAqkC,UAAAj5E,QAAAwC,UAAAxC,QAAAO;wBACA,IAAA24E,aAAAl5E,QAAAyC,UAAAzC,QAAAO;wBACAu4E,cAAA9+B,SAAA,GAAA7vC,IAAA,GAAA8uE,SAAA;wBACAH,cAAA9+B,SAAA,GAAA7vC,IAAA,GAAA+uE,YAAA;wBACAF,cAAAtjD,MAAAvrB,IAAAurB;wBACAojD,cAAA5H,qBAAA;wBACA,IAAAiI,gBAAA9+E,KAAA++E,MAAApvB;wBACA,IAAAqvB,gBAAAh/E,KAAA++E,MAAAxkC;wBACA,IAAA0kC,YAAA/8E,QAAA;wBACA,IAAAg9E,YAAAh9E,QAAA;wBACA48E,cAAAn/B,SAAA,GAAA7vC,IAAAmvE,UAAA;wBACAH,cAAAn/B,SAAA,GAAA7vC,IAAAovE,WAAA;wBACAF,cAAA3jD,MAAAvrB,IAAAurB;wBACAyjD,cAAAjI,qBAAA;;oBAEAsH,aAAAj9E,UAAAq6E,aAAA;wBACAv7E,KAAAwG,OAAA,IAAAyoD,KAAA,IAAAulB,cAAA,WAAA/sB;wBACA,IAAAg3B,gBAAA,IAAAvuB;wBACA,IAAA4uB,gBAAA,IAAA5uB;wBACAuuB,cAAA9+B,SAAAx6C,KAAA,IAAA85C,WAAA,IAAAA;wBACA6/B,cAAAn/B,SAAAx6C,KAAA,IAAA85C,WAAA,IAAAA;wBACAj/C,KAAA0+E,QAAA,IAAAxvB,KAAAuvB,eAAA,IAAAr5B;4BACAE,WAAA;;wBAEAtlD,KAAA++E,QAAA,IAAA7vB,KAAA4vB,eAAA,IAAA15B;4BACAE,WAAA;;wBAEAtlD,KAAAwG,KAAA6F,IAAArM,KAAA0+E;wBACA1+E,KAAAwG,KAAA6F,IAAArM,KAAA++E;;oBAEA,OAAAZ;;eAEK,SAAAt+E,QAAAD,SAAAO;gBACL;gBACA,IAAAU,YAAAb,aAAAa,aAAA,SAAAC,GAAAC;oBACA,SAAAL,KAAAK,GAAA,IAAAA,EAAAH,eAAAF,IAAAI,EAAAJ,KAAAK,EAAAL;oBACA,SAAAM;wBACAhB,KAAAiB,cAAAH;;oBAEAA,EAAAI,YAAAH,MAAA,OAAAI,OAAAC,OAAAL,MAAAC,GAAAE,YAAAH,EAAAG,WAAA,IAAAF;;gBAEA,IAAAwH,UAAArI,oBAAA;gBACA,IAAA8uD,OAAA3mD,MAAA2mD;gBACA,IAAAmpB,sBAAA9vE,MAAA8vE;gBACA,IAAA3wB,oBAAAn/C,MAAAm/C;gBACA,IAAA4wB,iBAAAl4E,oBAAA;gBACA,IAAAylE,UAAAzlE,oBAAA;gBACA,IAAAsT,qBAAA,SAAAlR;oBACA1B,UAAA4S,oBAAAlR;oBACA,SAAAkR;wBACAlR,OAAAsb,MAAA7d,MAAA+d;;oBAEAtK,mBAAAvS,UAAAo3E,sBAAA;wBACA,OAAA6G;;oBAEA1rE,mBAAAnJ,aAAA;oBACA,OAAAmJ;kBACS4kE,eAAAG;gBACT54E,QAAA6T;gBACA,IAAA0rE,cAAA,SAAA58E;oBACA1B,UAAAs+E,aAAA58E;oBACA,SAAA48E,YAAAv5E,OAAAlE;wBACAa,OAAAhC,KAAAP,MAAA4F,OAAAlE;wBACA1B,KAAAu7E;wBACA,IAAA31E,MAAA2E,KAAAuI,WAAA/H,SAAA;4BACA/K,KAAAsuE;;wBAEAtuE,KAAA44E;;oBAEAuG,YAAAxG,kBAAA,SAAAxd;wBACA,OAAAA,aAAApwD,WAAAowD,aAAAuM,aAAAvM,aAAArzD,QAAA89D,QAAA79D,WAAAC;;oBAEAm3E,YAAAj+E,UAAAoL,cAAA;wBACA,OAAAtM,KAAAy4E;;oBAEA0G,YAAAj+E,UAAAu5D,gBAAA;wBACAz6D,KAAA44E;;oBAEAuG,YAAAj+E,UAAA0B,aAAA;wBACA,IAAAsB,QAAAlE;wBACAuC,OAAArB,UAAA0B,WAAArC,KAAAP;wBACAA,KAAA8iE,UAAA9iE,KAAAwD,WAAAyzD,SAAA;4BACA,OAAA/yD,MAAA00E;;wBAEA54E,KAAA8iE,UAAA9iE,KAAAwD,WAAAK,SAAA,SAAAm3D;4BACA,OAAA92D,MAAAk7E,cAAApkB;;wBAEAh7D,KAAA8iE,UAAA9iE,KAAAwD,WAAA+2D,UAAA;4BACA,OAAAr2D,MAAAm7E;;;oBAGAF,YAAAj+E,UAAAq6E,aAAA;wBACA,IAAAr4B,QAAAljD,KAAAy4E,OAAA,IAAAxpB,KAAA,IAAAmpB,oBAAA,aAAA3wB;4BACAtY,KAAAgwC,YAAApc;4BACAtoC,aAAA;;wBAEAyoB,MAAA1c,MAAA12B,IAAA;wBACAozC,MAAA72C,IAAA,IAAA4iD,KAAA,IAAAmpB,oBAAA,WAAA3wB;4BACAtY,KAAAgwC,YAAApc;;wBAEA/iE,KAAA2F,UAAA3F,KAAAmH,MAAAG,SAAA6jE;;oBAEAgU,YAAAj+E,UAAAotE,UAAA;wBACA,IAAApqE,QAAAlE;wBACAA,KAAAs/E,WAAA;wBACA,IAAAp1B,SAAAlqD,KAAAy4E;wBACA,IAAA8G;4BACA/4C,OAAA0jB,OAAA1jB,MAAAz2B;4BACAikB,SAAAk2B,OAAA3P,SAAAvmB;;wBAEAh0B,KAAAy4E,KAAAjyC,MAAA12B,IAAA;wBACAhD,WAAA;4BACA,IAAA2hE,YAAAvqE,MAAAuqE,YAAA36D,UAAA4E,GAAA6mE,iBAAA;gCACA/4C,OAAA;gCACAxS,SAAA;;4BAEAy6C,UAAAr6B,cAAA;gCACA8V,OAAA1jB,MAAA12B,IAAAyvE,gBAAA/4C,OAAA+4C,gBAAA/4C,OAAA;gCACA0jB,OAAA3P,SAAAvmB,UAAAurD,gBAAAvrD;+BACqBogB,cAAA;gCACrBlwC,MAAAuqE,uBAAAz6B;;2BAEiB;;oBAEjBmrC,YAAAj+E,UAAAm+E,gBAAA;wBACAr/E,KAAAs/E,WAAA;wBACAt/E,KAAAyuE,aAAAzuE,KAAAyuE,UAAA51D;wBACA7Y,KAAAyuE,YAAA;;oBAEA0Q,YAAApc,gBAAA;wBACA,IAAAt4D,IAAA,IAAAD,IAAA;wBACA,OAAAhC,QAAAxD,MAAA+9D,cAAAt4D,GAAAD,GAAA,SAAAw4D;4BACAA,IAAA/d;4BACA+d,IAAA8V,IAAAtuE,IAAA,GAAAC,IAAA,GAAAD,IAAA,UAAA8H,KAAAyV,IAAA;4BACAi7C,IAAA9sD,YAAA;4BACA8sD,IAAAza;;;oBAGA42B,YAAAj+E,UAAA0N,wBAAA;wBACA5O,KAAA2F,UAAA3F,KAAAmH,MAAAG,SAAA6jE;wBACAnrE,KAAA44E;;oBAEAuG,YAAAj+E,UAAAs4E,oBAAA,SAAAgG;wBACAx/E,KAAA2F,UAAA65E,eAAArU;wBACAnrE,KAAA44E;;oBAEAuG,YAAAj+E,UAAAk+E,gBAAA,SAAApkB;wBACA,KAAAA,aAAAloD,YAAA;wBACA,IAAAkoD,aAAAloD,WAAA/H,gBAAA,KAAAiwD,aAAAloD,WAAA/H,WAAA/K,KAAAs/E,UAAA;wBACA,IAAAtkB,aAAAloD,WAAA/H,SAAA;4BACA/K,KAAAsuE;+BACiB;4BACjBtuE,KAAAq/E;;;oBAGAF,YAAAj+E,UAAA03E,iBAAA;wBACA,IAAAhzE,QAAA5F,KAAAwD;wBACA,IAAAuC,MAAAG;wBACA,IAAAmoE,wBAAAruE,KAAA2F,QAAA0oE;wBACA,IAAAruE,KAAAmH,MAAApE,aAAA+E,QAAA89D,QAAA79D,WAAAC,MAAA;4BACAjC,OAAAsoE,sBAAApmE;4BACA/B,OAAAmoE,sBAAAnmE;+BACiB;4BACjBnC,OAAAsoE,sBAAAtoE;4BACAG,OAAAmoE,sBAAAnmE;;wBAEA,IAAA0zE,iBAAAh2E,MAAAtB,OAAAo9D,gBAAA37D,MAAAG;wBACA,IAAA21E,cAAAj2E,MAAA2E,KAAArI;wBACA,IAAA6N,IAAA6rE,eAAA7rE;wBACA,IAAA0xD,UAAA77D,MAAAtB,OAAAi9D,kBAAAqa,eAAA7rE;wBACA,IAAA0xD,UAAA,GAAA1xD,IAAAnK,MAAAtB,OAAAk9D,kBAAA;wBACA,IAAAC,UAAAoa,aAAA9rE,IAAAnK,MAAAtB,OAAAk9D,kBAAAqa;wBACA77E,KAAAy4E,KAAA5oE,SAAAC,IAAAC,GAAA6rE,eAAA5rE,GAAA;;oBAEA,OAAAmvE;kBACS9G,eAAAW;gBACTp5E,QAAAu/E;eACK,SAAAt/E,QAAAD,SAAAO;gBACL;gBACA,SAAAQ,SAAAH;oBACA,SAAAE,KAAAF,GAAA,KAAAZ,QAAAgB,eAAAF,IAAAd,QAAAc,KAAAF,EAAAE;;gBAEAC,SAAAR,oBAAA;eACK,SAAAN,QAAAD,SAAAO;gBACL;gBACA,IAAAqI,UAAArI,oBAAA;gBACA,IAAAk3D,iBAAAl3D,oBAAA;gBACAP,QAAA6/E;oBACAC,sBAAA;;gBAEA,IAAA73E,cAAA;oBACA,SAAAA,YAAAzE,SAAAsqC;wBACA,IAAAA,gBAAA;4BACAA;;wBAEA1tC,KAAAyO;wBACAzO,KAAAs4D,eAAAl1D;wBACApD,KAAA0tC,SAAAllC,QAAAxD,MAAAK,UAAAzF,QAAA6/E,gBAAA/xC;wBACA1tC,KAAA4D,OAAA5D,KAAAiB,YAAAyG;wBACA,KAAA1H,KAAA4D,MAAA4E,QAAAxD,MAAAI,MAAA;;oBAEAyC,YAAA3G,UAAA48D,kBAAA,SAAAt6D;wBACA,IAAAU,QAAAlE;wBACAA,KAAAwD;wBACAxD,KAAA+D,KAAA,IAAAszD,eAAAlE;wBACAnzD,KAAA8iE,UAAA9iE,KAAAwD,WAAAb,sBAAA,SAAA21D;4BACA,OAAAp0D,MAAAO,6BAAA6zD;4BACiBt4D,KAAAwD,WAAAg3D,QAAA;4BACjB,OAAAt2D,MAAAy7E;4BACiB3/E,KAAAwD,WAAA+2D,UAAA;4BACjB,OAAAr2D,MAAA2mE;4BACiB7qE,KAAAwD,WAAAm3D,qBAAA,SAAAilB;4BACjB,OAAAA,qBAAA17E,MAAAN,SAAAM,MAAApB,eAAA88E,qBAAA17E,MAAAN;;;oBAGAiE,YAAA3G,UAAA6B,aAAA;wBACA,OAAA/C,KAAAwD,WAAA+G,KAAA7G,aAAA1D,KAAA4D;;oBAEAiE,YAAA3G,UAAAuD,+BAAA,SAAA6zD;oBACAzwD,YAAA3G,UAAAy+E,sBAAA;oBACA93E,YAAA3G,UAAA4B,iBAAA,SAAA+8E;oBACAh4E,YAAA3G,UAAA2pE,mBAAA;wBACA7qE,KAAA+D,GAAA4xD;;oBAEA9tD,YAAA3G,UAAA4hE,YAAA;wBACA,IAAA5N;wBACA,SAAAtwD,KAAA,GAAgCA,KAAAmZ,UAAAjZ,QAAuBF,MAAA;4BACvDswD,KAAAtwD,KAAA,KAAAmZ,UAAAnZ;;wBAEA,IAAA6J;wBACA,KAAAqU,MAAArK,QAAAy8C,KAAA;4BACAzmD,cAAAtJ,KAAA+vD,KAAA;+BACiB;4BACjBzmD,cAAAtJ,KAAA0Y,MAAApP,eAAAymD;;yBAEAvxD,KAAA3D,KAAAyO,eAAAtJ,KAAA0Y,MAAAla,IAAA8K;wBACA,IAAA9K;;oBAEAkE,YAAA3G,UAAAmM,eAAA;wBACArN,KAAAyO,cAAAU,QAAA,SAAAw2D;4BACA,OAAAA;;wBAEA3lE,KAAAyO,cAAA3J,SAAA;;oBAEA+C,YAAAH,OAAA;oBACAG,YAAAF;oBACA,OAAAE;;gBAEAjI,QAAAiI;;;OLuTM,SAAShI,QAAQD,SAASO;QAE/B;QACA,IAAIU,YAAab,QAAQA,KAAKa,aAAc,SAAUC,GAAGC;YACrD,KAAK,IAAIL,KAAKK,GAAG,IAAIA,EAAEH,eAAeF,IAAII,EAAEJ,KAAKK,EAAEL;YACnD,SAASM;gBAAOhB,KAAKiB,cAAcH;;YACnCA,EAAEI,YAAYH,MAAM,OAAOI,OAAOC,OAAOL,MAAMC,GAAGE,YAAYH,EAAEG,WAAW,IAAIF;;QMr6XpF,IAAAK,gBAAAlB,oBAA4D;QAC5D,IAAO+vD,WAAW5nD,MAAM4nD;QACxB,IAAOjB,OAAO3mD,MAAM2mD;QAKpB,IAAOwkB,WAAWnrE,MAAMmrE;QAOxB,IAAAqM,sBAAA3/E,oBAA8D;QAG9D,IAAM4/E,mBAAmB;QAKzB,IAAAn4E,oBAAA,SAAArF;YAAuC1B,UAAA+G,mBAAArF;YAAvC,SAAAqF;gBAAuCrF,OAAAsb,MAAA7d,MAAA+d;;YAE5BnW,kBAAA1G,UAAAo3E,sBAAV;gBACC,OAAO0H;;YAFDp4E,kBAAA0C,aAAa;YAIrB,OAAA1C;UALuCvG,cAAAm3E;QAA1B54E,QAAAgI,oBAAiBA;QAU9B,IAAAo4E,mBAAA,SAAAz9E;YAAsC1B,UAAAm/E,kBAAAz9E;YAMrC,SAAAy9E,iBAAax8E,YAAwB9B;gBACpCa,OAAAhC,KAAAP,MAAMwD,YAAY9B;gBAHX1B,KAAAigF;gBAIPjgF,KAAK0zE,WAAW,IAAID;gBACpBzzE,KAAKkgF;;YAGNF,iBAAA9+E,UAAAoL,cAAA;gBACC,OAAOtM,KAAK0zE;;YAGHsM,iBAAA9+E,UAAA0B,aAAV;gBAAA,IAAAsB,QAAAlE;gBACCuC,OAAArB,UAAM0B,WAAUrC,KAAAP;gBAChBA,KAAKmgF,uBAAuBt8E,SAAS;oBAAM,OAAAK,MAAKg8E;;;YAGzCF,iBAAA9+E,UAAAi/E,uBAAR;gBACC,OAAOngF,KAAKwD,WAAWu6D,UAAU+hB,oBAAAx9E,kBAAkBoF;;YAG5Cs4E,iBAAA9+E,UAAAg/E,gBAAR;gBACC,IAAIE,aAAapgF,KAAKmgF,uBAAuBn9E;gBAC7C,IAAIuG,UAAUvJ,KAAKigF;gBACnB,IAAIt7E;gBACJ,KAAK,IAAIzB,YAAYk9E,YAAY;oBAChCz7E,iBAAiBQ,KAAKjC;oBACtB,KAAKqG,QAAQrG,WAAWlD,KAAKqgF,iBAAiBD,WAAWl9E;;gBAE1D,KAAK,IAAIA,YAAYlD,KAAKigF,cAAc;oBACvC,IAAIt7E,iBAAiBa,QAAQtC,eAAe,GAAG;oBAC/ClD,KAAKsgF,kBAAkBp9E;;;YAKjB88E,iBAAA9+E,UAAAm/E,mBAAR,SAAyB/6E;gBACxB,KAAKA,KAAKK,SAAS;gBACnB,IAAI46E,aAAa,IAAIC,gBAAgBxgF,KAAKwD,YAAY8B;gBACtDtF,KAAKigF,aAAa36E,KAAKlC,QAAQQ,QAAQ28E;gBACvCvgF,KAAK0zE,SAASrnE,IAAIk0E,WAAWj0E;;YAGtB0zE,iBAAA9+E,UAAAo/E,oBAAR,SAA0Bp9E;gBACzBlD,KAAK0zE,SAASxkE,OAAOlP,KAAKigF,aAAa/8E,UAAUoJ;uBAC1CtM,KAAKigF,aAAa/8E;;YAGhB88E,iBAAA9+E,UAAAqD,cAAV;gBACC,IAAIgF,UAAUvJ,KAAKigF;gBACnB,KAAK,IAAI/8E,YAAYqG,SAAS;oBAC7BA,QAAQrG,UAAUu9E;;;YAIVT,iBAAA9+E,UAAAs4E,oBAAV;gBACC,IAAIjwE,UAAUvJ,KAAKigF;gBACnB,KAAK,IAAI/8E,YAAYqG,SAAS;oBAC7BA,QAAQrG,UAAUs2E;;;YAGrB,OAAAwG;UAjEsC3+E,cAAA23E;QAAzBp5E,QAAAogF,mBAAgBA;QAsE7B,IAAAQ,kBAAA;YAUC,SAAAA,gBAAYh9E,YAAwBk9E;gBAJ5B1gF,KAAA2gF,aAAa;gBACb3gF,KAAA4gF,YAAY;gBACZ5gF,KAAA6P;oBAAY0hB,YAAY;oBAAIxhB,GAAG;oBAAGC,GAAG;;gBAG5ChQ,KAAKwD,aAAaA;gBAClBxD,KAAKsF,OAAOo7E;gBACZ1gF,KAAKu7E;gBACLv7E,KAAK6gF;;YAGIL,gBAAAt/E,UAAAq6E,aAAV;gBACCv7E,KAAK0zE,WAAW,IAAID;gBACpBzzE,KAAK8gF,WAAW9gF,KAAK+gF;gBACrB/gF,KAAK4xD,OAAO5xD,KAAKghF;gBACjBhhF,KAAK0zE,SAASrnE,IAAIrM,KAAK8gF;gBACvB9gF,KAAK0zE,SAASrnE,IAAIrM,KAAK4xD;;YAGd4uB,gBAAAt/E,UAAA6/E,iBAAV;gBACC,IAAAp9E,KAAA3D,MAAK2gF,aAAAh9E,GAAAg9E,YAAYC,YAAAj9E,GAAAi9E;gBACjB,IAAIt7E,OAAOtF,KAAKsF,KAAKlC;gBACrB,IAAI69E,YAAY37E,KAAKtD,eAAe89E,oBAAAv+E,gBAAgBU;gBAEpD,IAAIqiD,UAAUjjD,cAAA2D,MAAMm+D,0BAA0Byd,WAAWD,YAAY,SAAC3d;oBAErE,IAAIke,eAAeD,YAAY,KAAK;oBACpC,IAAIE,UAAU;oBACd,IAAIC,UAAUR,YAAY;oBAC1B,IAAIS,UAAUH,eAAeC;oBAC7B,IAAIG,aAAaL,YAAY,KAAKE,UAAU,IAAI;oBAGhDne,IAAI/d;oBACJ+d,IAAI+R,YAAY;oBAChB/R,IAAIhtD,OAAO;oBACXgtD,IAAI9sD,YAAY;oBAChB8sD,IAAI5sD,SAAS9Q,KAAK3D,OAAOy/E,SAASE;oBAClCte,IAAI9sD,YAAY5Q,KAAKzD;oBACrBmhE,IAAI5sD,SAAS9Q,KAAK1D,aAAaw/E,SAASE,aAAa;oBAGrDte,IAAI/d;oBACJ+d,IAAI9sD,YAAY5Q,KAAKvD;oBACrBihE,IAAI8V,IAAIsI,SAASC,SAASF,SAAS,GAAG,IAAI7uE,KAAKyV;oBAC/Ci7C,IAAIza;oBAGJya,IAAIhtD,OAAO;oBACXgtD,IAAI9sD,YAAY;oBAChB8sD,IAAI5sD,SAAS9Q,KAAKi8E,MAAMH,SAASC,UAAU;;gBAI5C,IAAI9mC,WAAW,IAAIjyC,MAAMm/C;oBAAoBtY,KAAKmV;oBAAS6J,MAAM7lD,MAAM2oD;;gBACvE1W,SAAS9f,cAAc;gBAEvB,IAAIg+C,OAAO,IAAIxpB,KACd,IAAI3mD,MAAMksE,cAAcoM,WAAWD,aACnCpmC;gBAGD,IAAIn4C,SAASpC,KAAKsF,KAAKlC,QAAQpB,eAAe89E,oBAAAv+E,gBAAgBU,MAAMjC,KAAKsF,KAAKlD,UAAUpC,KAAKsF,KAAKlD;gBAGlG,OAAOq2E;;YAGE+H,gBAAAt/E,UAAA8/E,iBAAV;gBACC,IAAIvG,eAAe,IAAIvqB;gBACvBuqB,aAAa96B,SAASx6C,KAAM,IAAImD,MAAM22C,QAAQ,GAAG,GAAG,IAAI,IAAI32C,MAAM22C,QAAQ,GAAGj/C,KAAKsF,KAAKlD,QAAQ;gBAC/Fq4E,aAAa+G;gBACb,IAAIC,eAAe,IAAIn5E,MAAM89C;oBAAqBC,UAAU;oBAAGC,SAAS;oBAAG7rB,aAAa;oBAAMzG,SAAS;;gBACvG,IAAI49B,OAAO,IAAItpD,MAAM4mD,KAAMurB,cAAcgH;gBACzC7vB,KAAK/hD,SAASqmE,MAAM;gBACpB,OAAOtkB;;YAGR4uB,gBAAAt/E,UAAAoL,cAAA;gBACC,OAAOtM,KAAK0zE;;YAGb8M,gBAAAt/E,UAAAs4E,oBAAA;gBACCx5E,KAAK44E;;YAGN4H,gBAAAt/E,UAAAu/E,qBAAA;gBACCzgF,KAAK44E;;YAGE4H,gBAAAt/E,UAAA03E,iBAAR;gBACC,KAAK54E,KAAKsF,KAAKK,SAAS;gBACxB,IAAIL,OAAOtF,KAAKsF;gBAChB,IAAIo8E,eAAe1hF,KAAK8gF,SAASvmC;gBACjC,IAAIknC,eAAezhF,KAAK4xD,KAAKrX;gBAC7B,IAAIj1C,KAAKe,OAAO05E,mBAAmB,GAAG;oBACrC2B,aAAa1tD,UAAU;oBACvBytD,aAAaztD,UAAU;uBACjB;oBACN0tD,aAAa1tD,UAAU;oBACvBytD,aAAaztD,UAAU;;gBAGxB,IAAI1vB,SAAStE,KAAKwD,WAAWc;gBAC7B,IAAIq9E,OAAOr9E,OAAOwB,gBAAgBR,KAAKS;gBACvC,IAAI67E,OAAOt9E,OAAO2B,gBAAgBX,KAAKY;gBACvC,IAAIu0E,eAAez6E,KAAK4xD,KAAKjC;gBAE7B,IAAIrqD,KAAKlC,QAAQpB,eAAe89E,oBAAAv+E,gBAAgBU,KAAK;oBACpDjC,KAAK8gF,SAASjxE,SAASY,KAAKzQ,KAAK2gF,aAAa,IAAIr7E,KAAKlD;oBACvDq4E,aAAa96B,SAAS,GAAGlvC,KAAKnL,KAAKlD;uBAC7B;oBACNpC,KAAK8gF,SAASjxE,SAASY,MAAMnL,KAAKlD,SAASpC,KAAK2gF,aAAa;oBAC7DlG,aAAa96B,SAAS,GAAGlvC,MAAMnL,KAAKlD;;gBAErCq4E,aAAa5D,qBAAqB;gBAClC4D,aAAaoH,0BAA0B;gBACvCpH,aAAa+G;gBACbxhF,KAAK0zE,SAAS7jE,SAASC,IAAI6xE,MAAMC,MAAM;;YAGhCpB,gBAAAt/E,UAAA2/E,OAAR;gBACC,KAAK7gF,KAAKsF,KAAKK,SAAS;gBACxB3F,KAAK44E;gBACL,IAAI9lE,aAAa9S,KAAKwD,WAAW+G,KAAKuI;gBACtC,IAAIiI,OAAOjI,WAAW/H,UAAU,IAAI;gBACpC/K,KAAK0zE,SAASltC,MAAM12B,IAAI,KAAM,KAAM;gBACpCgE,UAAU4E,GAAG1Y,KAAK0zE,SAASltC,OAAOzrB;oBAAOhL,GAAG;oBAAGC,GAAG;oBAAG0W,MAAMo7D,QAAQ70C;;;YAErE,OAAAuzC","file":"plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TrendsMarksPlugin\"] = factory();\n\telse\n\t\troot[\"TrendsMarksPlugin\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TrendsMarksPlugin\"] = factory();\n\telse\n\t\troot[\"TrendsMarksPlugin\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1));\r\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_chart_1 = __webpack_require__(2);\r\n\tvar TrendsMarksWidget_1 = __webpack_require__(4);\r\n\t(function (TREND_MARK_SIDE) {\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"TOP\"] = 0] = \"TOP\";\r\n\t    TREND_MARK_SIDE[TREND_MARK_SIDE[\"BOTTOM\"] = 1] = \"BOTTOM\";\r\n\t})(exports.TREND_MARK_SIDE || (exports.TREND_MARK_SIDE = {}));\r\n\tvar TREND_MARK_SIDE = exports.TREND_MARK_SIDE;\r\n\t(function (EVENTS) {\r\n\t    EVENTS[EVENTS[\"CHANGE\"] = 0] = \"CHANGE\";\r\n\t})(exports.EVENTS || (exports.EVENTS = {}));\r\n\tvar EVENTS = exports.EVENTS;\r\n\tvar AXIS_MARK_DEFAULT_OPTIONS = {\r\n\t    trendName: '',\r\n\t    title: '',\r\n\t    description: '',\r\n\t    descriptionColor: 'rgb(40,136,75)',\r\n\t    value: 0,\r\n\t    iconColor: 'rgb(255, 102, 217)',\r\n\t    orientation: TREND_MARK_SIDE.TOP,\r\n\t    width: 65,\r\n\t    height: 80,\r\n\t    offset: 40,\r\n\t    margin: 20\r\n\t};\r\n\tvar TrendsMarksPlugin = (function (_super) {\r\n\t    __extends(TrendsMarksPlugin, _super);\r\n\t    function TrendsMarksPlugin(trendsMarksPluginOptions) {\r\n\t        _super.call(this, trendsMarksPluginOptions);\r\n\t        this.items = {};\r\n\t        this.rects = {};\r\n\t    }\r\n\t    TrendsMarksPlugin.prototype.onInitialStateApplied = function () {\r\n\t        this.bindEvents();\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onStateChanged = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getOptions = function () {\r\n\t        return _super.prototype.getOptions.call(this);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItems = function () {\r\n\t        return this.items;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getItem = function (markName) {\r\n\t        return this.items[markName];\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMark = function (options) {\r\n\t        var marksOptions = this.getOptions().items;\r\n\t        var newMarkOptions = marksOptions.concat([options]);\r\n\t        this.chartState.setState({ pluginsState: (_a = {}, _a[this.name] = { items: newMarkOptions }, _a) });\r\n\t        var _a;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onChange = function (cb) {\r\n\t        return this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        this.chartState.trendsManager.onSegmentsRebuilded(function () { return _this.updateMarksSegments(); });\r\n\t        this.chartState.screen.onZoomFrame(function () { return _this.calclulateMarksPositions(); });\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onInitialStateAppliedHandler = function () {\r\n\t        this.onMarksChangeHandler();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.onMarksChangeHandler = function () {\r\n\t        var trendsMarksOptions = this.getOptions().items;\r\n\t        var actualMarksNames = [];\r\n\t        for (var _i = 0, trendsMarksOptions_1 = trendsMarksOptions; _i < trendsMarksOptions_1.length; _i++) {\r\n\t            var options = trendsMarksOptions_1[_i];\r\n\t            var marks = this.items;\r\n\t            // set mark name\r\n\t            if (!options.name) {\r\n\t                options.name = three_chart_1.Utils.getUid().toString();\r\n\t                actualMarksNames.push(options.name);\r\n\t                if (marks[options.name])\r\n\t                    three_chart_1.Utils.error('duplicated mark name ' + options.name);\r\n\t            }\r\n\t            else if (marks[options.name]) {\r\n\t                actualMarksNames.push(options.name);\r\n\t                continue;\r\n\t            }\r\n\t            options = three_chart_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\r\n\t            var mark = new TrendMark(this.chartState, options);\r\n\t            marks[options.name] = mark;\r\n\t        }\r\n\t        // delete not relevant marks\r\n\t        for (var markName in this.items) {\r\n\t            if (actualMarksNames.indexOf(markName) != -1)\r\n\t                continue;\r\n\t            delete this.items[markName];\r\n\t        }\r\n\t        this.updateMarksSegments();\r\n\t        this.ee.emit(EVENTS[EVENTS.CHANGE]);\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.calclulateMarksPositions = function () {\r\n\t        this.rects = {};\r\n\t        for (var markName in this.items) {\r\n\t            this.createMarkRect(this.items[markName]);\r\n\t        }\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.createMarkRect = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var state = this.chartState;\r\n\t        var options = mark.options;\r\n\t        var width = options.width, height = options.height, offset = options.offset, name = options.name;\r\n\t        var left = state.getPointOnXAxis(mark.xVal) - width / 2;\r\n\t        var top = state.getPointOnYAxis(mark.yVal);\r\n\t        var isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\r\n\t        var newOffset;\r\n\t        var row = 0;\r\n\t        if (isTopSideMark) {\r\n\t            top += offset + height;\r\n\t        }\r\n\t        else {\r\n\t            top -= offset;\r\n\t        }\r\n\t        var markRect = [left, top, width, height];\r\n\t        var hasIntersection = false;\r\n\t        do {\r\n\t            for (var markName in this.rects) {\r\n\t                var rect = this.rects[markName];\r\n\t                hasIntersection = three_chart_1.Utils.rectsIntersect(rect, markRect);\r\n\t                if (!hasIntersection)\r\n\t                    continue;\r\n\t                if (isTopSideMark) {\r\n\t                    markRect[1] = rect[1] + markRect[3] + options.margin;\r\n\t                }\r\n\t                else {\r\n\t                    markRect[1] = rect[1] - rect[3] - options.margin;\r\n\t                }\r\n\t                row++;\r\n\t                break;\r\n\t            }\r\n\t        } while (hasIntersection);\r\n\t        if (isTopSideMark) {\r\n\t            newOffset = markRect[1] - markRect[3] - state.getPointOnYAxis(mark.yVal);\r\n\t        }\r\n\t        else {\r\n\t            newOffset = state.getPointOnYAxis(mark.yVal) - markRect[1];\r\n\t        }\r\n\t        mark._setOffset(newOffset);\r\n\t        mark._setRow(row);\r\n\t        this.rects[name] = markRect;\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.updateMarksSegments = function () {\r\n\t        var chartState = this.chartState;\r\n\t        var trends = chartState.trendsManager.trends;\r\n\t        for (var trendName in trends) {\r\n\t            var marks = this.getTrendMarks(trendName);\r\n\t            var marksArr = [];\r\n\t            var xVals = [];\r\n\t            for (var markName in marks) {\r\n\t                var mark = marks[markName];\r\n\t                xVals.push(mark.options.value);\r\n\t                marksArr.push(mark);\r\n\t                mark._setSegment(null);\r\n\t            }\r\n\t            marksArr.sort(function (a, b) { return a.options.value - b.options.value; });\r\n\t            var trend = chartState.getTrend(trendName);\r\n\t            var points = trend.segments.getSegmentsForXValues(xVals.sort(function (a, b) { return a - b; }));\r\n\t            for (var markInd = 0; markInd < marksArr.length; markInd++) {\r\n\t                marksArr[markInd]._setSegment(points[markInd]);\r\n\t            }\r\n\t        }\r\n\t        this.calclulateMarksPositions();\r\n\t    };\r\n\t    TrendsMarksPlugin.prototype.getTrendMarks = function (trendName) {\r\n\t        var trendMarks = [];\r\n\t        for (var markName in this.items) {\r\n\t            if (this.items[markName].options.trendName != trendName)\r\n\t                continue;\r\n\t            trendMarks.push(this.items[markName]);\r\n\t        }\r\n\t        return trendMarks;\r\n\t    };\r\n\t    TrendsMarksPlugin.NAME = 'TrendsMarks';\r\n\t    TrendsMarksPlugin.pluginWidgets = [TrendsMarksWidget_1.TrendsMarksWidget];\r\n\t    return TrendsMarksPlugin;\r\n\t}(three_chart_1.ChartPlugin));\r\n\texports.TrendsMarksPlugin = TrendsMarksPlugin;\r\n\tvar TrendMark = (function () {\r\n\t    function TrendMark(chartState, options) {\r\n\t        this.row = 0;\r\n\t        this.options = options;\r\n\t        this.chartState = chartState;\r\n\t    }\r\n\t    /**\r\n\t     * only for internal usage\r\n\t     */\r\n\t    TrendMark.prototype._setSegment = function (segment) {\r\n\t        this.segment = segment;\r\n\t        if (!segment)\r\n\t            return;\r\n\t        var trend = this.chartState.getTrend(this.options.trendName);\r\n\t        if (trend.getOptions().type == three_chart_1.TREND_TYPE.LINE) {\r\n\t            this.xVal = segment.endXVal;\r\n\t            this.yVal = segment.endYVal;\r\n\t        }\r\n\t        else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.maxYVal;\r\n\t        }\r\n\t        else {\r\n\t            this.xVal = segment.xVal;\r\n\t            this.yVal = segment.minYVal;\r\n\t        }\r\n\t    };\r\n\t    TrendMark.prototype._setOffset = function (offset) {\r\n\t        this.offset = offset;\r\n\t    };\r\n\t    TrendMark.prototype._setRow = function (row) {\r\n\t        this.row = row;\r\n\t    };\r\n\t    return TrendMark;\r\n\t}());\r\n\texports.TrendMark = TrendMark;\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(3)\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t    if (true) module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"ThreeChart\"] = factory(); else root[\"ThreeChart\"] = factory();\n\t})(this, function() {\n\t    return function(modules) {\n\t        var installedModules = {};\n\t        function __webpack_require__(moduleId) {\n\t            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t            var module = installedModules[moduleId] = {\n\t                exports: {},\n\t                id: moduleId,\n\t                loaded: false\n\t            };\n\t            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t            module.loaded = true;\n\t            return module.exports;\n\t        }\n\t        __webpack_require__.m = modules;\n\t        __webpack_require__.c = installedModules;\n\t        __webpack_require__.p = \"\";\n\t        return __webpack_require__(0);\n\t    }([ function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(1));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(2));\n\t        __export(__webpack_require__(23));\n\t        __export(__webpack_require__(22));\n\t        __export(__webpack_require__(21));\n\t        __export(__webpack_require__(14));\n\t        __export(__webpack_require__(19));\n\t        __export(__webpack_require__(20));\n\t        __export(__webpack_require__(18));\n\t        __export(__webpack_require__(16));\n\t        __export(__webpack_require__(17));\n\t        __export(__webpack_require__(35));\n\t        __export(__webpack_require__(27));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        __webpack_require__(3);\n\t        var PerspectiveCamera = THREE.PerspectiveCamera;\n\t        var State_1 = __webpack_require__(14);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var AxisWidget_1 = __webpack_require__(24);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var TrendsLoadingWidget_1 = __webpack_require__(26);\n\t        var AxisMarksWidget_1 = __webpack_require__(28);\n\t        var BorderWidget_1 = __webpack_require__(29);\n\t        var TrendsIndicatorWidget_1 = __webpack_require__(30);\n\t        var TrendsLineWidget_1 = __webpack_require__(31);\n\t        var TrendsCandleWidget_1 = __webpack_require__(32);\n\t        var TrendsBeaconWidget_1 = __webpack_require__(33);\n\t        var deps_1 = __webpack_require__(34);\n\t        exports.MAX_DATA_LENGTH = 2692e3;\n\t        var Chart = function() {\n\t            function Chart(state, $container, plugins) {\n\t                var _this = this;\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.widgets = [];\n\t                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n\t                if (!$container) {\n\t                    Utils_1.Utils.error(\"$el must be set\");\n\t                }\n\t                var style = getComputedStyle($container);\n\t                state.width = parseInt(style.width);\n\t                state.height = parseInt(style.height);\n\t                this.state = new State_1.ChartState(state, Chart.installedWidgets, plugins);\n\t                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n\t                    return _this.zoom(zoomValue, origin);\n\t                }, 200);\n\t                this.$container = $container;\n\t                this.init($container);\n\t            }\n\t            Chart.installWidget = function(Widget) {\n\t                if (!Widget.widgetName) {\n\t                    Utils_1.Utils.error(\"unnamed widget\");\n\t                }\n\t                this.installedWidgets[Widget.widgetName] = Widget;\n\t            };\n\t            Chart.prototype.init = function($container) {\n\t                var state = this.state;\n\t                var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n\t                this.scene = new THREE.Scene();\n\t                this.isStopped = !autoRender.enabled;\n\t                var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n\t                    antialias: true,\n\t                    alpha: true\n\t                });\n\t                renderer.setPixelRatio(Chart.devicePixelRatio);\n\t                renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n\t                renderer.setSize(w, h);\n\t                $container.appendChild(renderer.domElement);\n\t                this.$el = renderer.domElement;\n\t                this.$el.style.display = \"block\";\n\t                if (showStats) {\n\t                    this.stats = new Stats();\n\t                    $container.appendChild(this.stats.domElement);\n\t                }\n\t                this.setupCamera();\n\t                var widgetsClasses = this.state.widgetsClasses;\n\t                for (var widgetName in widgetsClasses) {\n\t                    var widgetOptions = this.state.data.widgets[widgetName];\n\t                    if (!widgetOptions.enabled) continue;\n\t                    var WidgetConstructor = widgetsClasses[widgetName];\n\t                    var widget = new WidgetConstructor(this.state);\n\t                    this.scene.add(widget.getObject3D());\n\t                    this.widgets.push(widget);\n\t                }\n\t                this.bindEvents();\n\t                this.renderLoop();\n\t            };\n\t            Chart.prototype.renderLoop = function() {\n\t                var _this = this;\n\t                if (this.isDestroyed) return;\n\t                this.stats && this.stats.begin();\n\t                this.render();\n\t                if (this.isStopped) return;\n\t                var fpsLimit = this.state.data.autoRender.fps;\n\t                if (fpsLimit) {\n\t                    var delay = 1e3 / fpsLimit;\n\t                    setTimeout(function() {\n\t                        return requestAnimationFrame(function() {\n\t                            return _this.renderLoop();\n\t                        });\n\t                    }, delay);\n\t                } else {\n\t                    requestAnimationFrame(function() {\n\t                        return _this.renderLoop();\n\t                    });\n\t                }\n\t                this.stats && this.stats.end();\n\t            };\n\t            Chart.prototype.render = function() {\n\t                this.renderer.render(this.scene, this.camera);\n\t            };\n\t            Chart.prototype.stop = function() {\n\t                this.isStopped = true;\n\t            };\n\t            Chart.prototype.run = function() {\n\t                this.isStopped = false;\n\t                this.renderLoop();\n\t            };\n\t            Chart.prototype.destroy = function() {\n\t                this.isDestroyed = true;\n\t                this.stop();\n\t                this.state.destroy();\n\t                this.unbindEvents();\n\t                try {\n\t                    this.renderer.forceContextLoss();\n\t                } catch (wtf) {}\n\t                this.renderer.context = null;\n\t                this.renderer.domElement = null;\n\t                this.renderer = null;\n\t            };\n\t            Chart.prototype.getState = function() {\n\t                return this.state.data;\n\t            };\n\t            Chart.prototype.getTrend = function(trendName) {\n\t                return this.state.getTrend(trendName);\n\t            };\n\t            Chart.prototype.setState = function(state) {\n\t                return this.state.setState(state);\n\t            };\n\t            Chart.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var $el = this.$el;\n\t                if (this.state.data.controls.enabled) {\n\t                    $el.addEventListener(\"mousewheel\", function(ev) {\n\t                        _this.onMouseWheel(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousemove\", function(ev) {\n\t                        _this.onMouseMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"mousedown\", function(ev) {\n\t                        return _this.onMouseDown(ev);\n\t                    });\n\t                    $el.addEventListener(\"mouseup\", function(ev) {\n\t                        return _this.onMouseUp(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchmove\", function(ev) {\n\t                        _this.onTouchMove(ev);\n\t                    });\n\t                    $el.addEventListener(\"touchend\", function(ev) {\n\t                        _this.onTouchEnd(ev);\n\t                    });\n\t                }\n\t                if (this.state.data.autoResize) {\n\t                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n\t                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n\t                    });\n\t                }\n\t                this.unsubscribers = [ this.state.onTrendsChange(function() {\n\t                    return _this.autoscroll();\n\t                }), this.state.screen.onTransformationFrame(function(options) {\n\t                    return _this.onScreenTransformHandler(options);\n\t                }), this.state.onResize(function(options) {\n\t                    return _this.onChartResize();\n\t                }) ];\n\t            };\n\t            Chart.prototype.unbindEvents = function() {\n\t                try {\n\t                    this.resizeSensor && this.resizeSensor.detach();\n\t                } catch (e) {}\n\t                this.$el.remove();\n\t                this.unsubscribers.forEach(function(unsubscribe) {\n\t                    return unsubscribe();\n\t                });\n\t            };\n\t            Chart.prototype.setupCamera = function() {\n\t                var camSettings = this.state.screen.getCameraSettings();\n\t                if (!this.camera) {\n\t                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n\t                    this.scene.add(this.camera);\n\t                } else {\n\t                    this.camera.fov = camSettings.FOV;\n\t                    this.camera.aspect = camSettings.aspect;\n\t                    this.camera.far = camSettings.far;\n\t                    this.camera.near = camSettings.near;\n\t                    this.camera.updateProjectionMatrix();\n\t                }\n\t                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n\t                this.cameraInitialPosition = this.camera.position.clone();\n\t                this.onScreenTransformHandler(this.state.screen.options);\n\t            };\n\t            Chart.prototype.onScreenTransformHandler = function(options) {\n\t                if (options.scrollX != void 0) {\n\t                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n\t                    this.camera.position.setX(scrollX_1);\n\t                }\n\t                if (options.scrollY != void 0) {\n\t                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n\t                    this.camera.position.setY(scrollY_1);\n\t                }\n\t            };\n\t            Chart.prototype.autoscroll = function() {\n\t                var state = this.state;\n\t                if (!state.data.autoScroll) return;\n\t                var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n\t                var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n\t                if (trendsMaxXDelta > 0) {\n\t                    var maxVisibleX = this.state.screen.getScreenRightVal();\n\t                    var paddingRightX = this.state.getPaddingRight();\n\t                    var currentScroll = state.data.xAxis.range.scroll;\n\t                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n\t                        return;\n\t                    }\n\t                    var scrollDelta = trendsMaxXDelta;\n\t                    this.setState({\n\t                        xAxis: {\n\t                            range: {\n\t                                scroll: currentScroll + scrollDelta\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onScrollStop = function() {};\n\t            Chart.prototype.onMouseDown = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.clientX,\n\t                        y: ev.clientY\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onMouseUp = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onMouseMove = function(ev) {\n\t                if (this.state.data.cursor.dragMode) {\n\t                    this.setState({\n\t                        cursor: {\n\t                            dragMode: true,\n\t                            x: ev.clientX,\n\t                            y: ev.clientY\n\t                        }\n\t                    });\n\t                }\n\t            };\n\t            Chart.prototype.onMouseWheel = function(ev) {\n\t                ev.stopPropagation();\n\t                ev.preventDefault();\n\t                var zoomOrigin = ev.layerX / this.state.data.width;\n\t                var zoomValue = 1 + ev.wheelDeltaY * .001;\n\t                this.zoom(zoomValue, zoomOrigin);\n\t            };\n\t            Chart.prototype.onTouchMove = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: true,\n\t                        x: ev.touches[0].clientX,\n\t                        y: ev.touches[0].clientY\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onTouchEnd = function(ev) {\n\t                this.setState({\n\t                    cursor: {\n\t                        dragMode: false\n\t                    }\n\t                });\n\t            };\n\t            Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n\t                this.setState({\n\t                    width: width,\n\t                    height: height\n\t                });\n\t            };\n\t            Chart.prototype.onChartResize = function() {\n\t                var _a = this.state.data, width = _a.width, height = _a.height;\n\t                this.renderer.setSize(width, height);\n\t                this.setupCamera();\n\t            };\n\t            Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n\t                var _this = this;\n\t                var MAX_ZOOM_VALUE = 1.5;\n\t                var MIN_ZOOM_VALUE = .7;\n\t                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n\t                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n\t                var autoScrollIsEnabled = this.state.data.autoScroll;\n\t                if (autoScrollIsEnabled) this.state.setState({\n\t                    autoScroll: false\n\t                });\n\t                this.state.zoom(zoomValue, zoomOrigin).then(function() {\n\t                    if (autoScrollIsEnabled) _this.setState({\n\t                        autoScroll: true\n\t                    });\n\t                });\n\t            };\n\t            Chart.createPreviewChart = function(userOptions, $el) {\n\t                var previewChartOptions = {\n\t                    animations: {\n\t                        enabled: false\n\t                    },\n\t                    widgets: {\n\t                        Grid: {\n\t                            enabled: false\n\t                        },\n\t                        Axis: {\n\t                            enabled: false\n\t                        },\n\t                        TrendsGradient: {\n\t                            enabled: false\n\t                        }\n\t                    }\n\t                };\n\t                var options = Utils_1.Utils.deepMerge(userOptions, previewChartOptions);\n\t                return new Chart(options, $el);\n\t            };\n\t            Chart.devicePixelRatio = window.devicePixelRatio;\n\t            Chart.installedWidgets = {};\n\t            Chart.renderers = {\n\t                CanvasRenderer: THREE.CanvasRenderer,\n\t                WebGLRenderer: THREE.WebGLRenderer\n\t            };\n\t            return Chart;\n\t        }();\n\t        exports.Chart = Chart;\n\t        Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n\t        Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n\t        Chart.installWidget(AxisWidget_1.AxisWidget);\n\t        Chart.installWidget(GridWidget_1.GridWidget);\n\t        Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\n\t        Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\n\t        Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\n\t        Chart.installWidget(AxisMarksWidget_1.AxisMarksWidget);\n\t        Chart.installWidget(BorderWidget_1.BorderWidget);\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        window.Stats = __webpack_require__(4);\n\t        window.TweenLite = __webpack_require__(5);\n\t        __webpack_require__(7);\n\t        __webpack_require__(8);\n\t        exports.isPlainObject = __webpack_require__(9);\n\t        exports.EE2 = __webpack_require__(11);\n\t        var es6_promise_1 = __webpack_require__(12);\n\t        exports.Promise = es6_promise_1.Promise;\n\t        exports.ResizeSensor = __webpack_require__(13);\n\t    }, function(module, exports) {\n\t        var Stats = function() {\n\t            function h(a) {\n\t                c.appendChild(a.dom);\n\t                return a;\n\t            }\n\t            function k(a) {\n\t                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n\t                l = a;\n\t            }\n\t            var l = 0, c = document.createElement(\"div\");\n\t            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n\t            c.addEventListener(\"click\", function(a) {\n\t                a.preventDefault();\n\t                k(++l % c.children.length);\n\t            }, !1);\n\t            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n\t            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n\t            k(0);\n\t            return {\n\t                REVISION: 16,\n\t                dom: c,\n\t                addPanel: h,\n\t                showPanel: k,\n\t                begin: function() {\n\t                    g = (performance || Date).now();\n\t                },\n\t                end: function() {\n\t                    a++;\n\t                    var c = (performance || Date).now();\n\t                    f.update(c - g, 200);\n\t                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n\t                        var d = performance.memory;\n\t                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n\t                    }\n\t                    return c;\n\t                },\n\t                update: function() {\n\t                    g = this.end();\n\t                },\n\t                domElement: c,\n\t                setMode: k\n\t            };\n\t        };\n\t        Stats.Panel = function(h, k, l) {\n\t            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n\t            q.width = r;\n\t            q.height = f;\n\t            q.style.cssText = \"width:80px;height:48px\";\n\t            var b = q.getContext(\"2d\");\n\t            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n\t            b.textBaseline = \"top\";\n\t            b.fillStyle = l;\n\t            b.fillRect(0, 0, r, f);\n\t            b.fillStyle = k;\n\t            b.fillText(h, t, u);\n\t            b.fillRect(d, m, n, p);\n\t            b.fillStyle = l;\n\t            b.globalAlpha = .9;\n\t            b.fillRect(d, m, n, p);\n\t            return {\n\t                dom: q,\n\t                update: function(f, v) {\n\t                    c = Math.min(c, f);\n\t                    g = Math.max(g, f);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = 1;\n\t                    b.fillRect(0, 0, r, m);\n\t                    b.fillStyle = k;\n\t                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n\t                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n\t                    b.fillRect(d + n - a, m, a, p);\n\t                    b.fillStyle = l;\n\t                    b.globalAlpha = .9;\n\t                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n\t                }\n\t            };\n\t        };\n\t        \"object\" === typeof module && (module.exports = Stats);\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\t        (function(global) {\n\t            /*!\n\t\t * VERSION: 1.18.5\n\t\t * DATE: 2016-05-24\n\t\t * UPDATES AND DOCS AT: http://greensock.com\n\t\t * \n\t\t * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n\t\t *\n\t\t * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n\t\t * This work is subject to the terms at http://greensock.com/standard-license or for\n\t\t * Club GreenSock members, the software agreement that was issued with your membership.\n\t\t * \n\t\t * @author: Jack Doyle, jack@greensock.com\n\t\t **/\n\t            var _gsScope = typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window;\n\t            (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {\n\t                \"use strict\";\n\t                _gsScope._gsDefine(\"TweenMax\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n\t                    var _slice = function(a) {\n\t                        var b = [], l = a.length, i;\n\t                        for (i = 0; i !== l; b.push(a[i++])) ;\n\t                        return b;\n\t                    }, _applyCycle = function(vars, targets, i) {\n\t                        var alt = vars.cycle, p, val;\n\t                        for (p in alt) {\n\t                            val = alt[p];\n\t                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n\t                        }\n\t                        delete vars.cycle;\n\t                    }, TweenMax = function(target, duration, vars) {\n\t                        TweenLite.call(this, target, duration, vars);\n\t                        this._cycle = 0;\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._dirty = true;\n\t                        this.render = TweenMax.prototype.render;\n\t                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, p = TweenMax.prototype = TweenLite.to({}, .1, {}), _blankArray = [];\n\t                    TweenMax.version = \"1.18.5\";\n\t                    p.constructor = TweenMax;\n\t                    p.kill()._gc = false;\n\t                    TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n\t                    TweenMax.getTweensOf = TweenLite.getTweensOf;\n\t                    TweenMax.lagSmoothing = TweenLite.lagSmoothing;\n\t                    TweenMax.ticker = TweenLite.ticker;\n\t                    TweenMax.render = TweenLite.render;\n\t                    p.invalidate = function() {\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._uncache(true);\n\t                        return TweenLite.prototype.invalidate.call(this);\n\t                    };\n\t                    p.updateTo = function(vars, resetDuration) {\n\t                        var curRatio = this.ratio, immediate = this.vars.immediateRender || vars.immediateRender, p;\n\t                        if (resetDuration && this._startTime < this._timeline._time) {\n\t                            this._startTime = this._timeline._time;\n\t                            this._uncache(false);\n\t                            if (this._gc) {\n\t                                this._enabled(true, false);\n\t                            } else {\n\t                                this._timeline.insert(this, this._startTime - this._delay);\n\t                            }\n\t                        }\n\t                        for (p in vars) {\n\t                            this.vars[p] = vars[p];\n\t                        }\n\t                        if (this._initted || immediate) {\n\t                            if (resetDuration) {\n\t                                this._initted = false;\n\t                                if (immediate) {\n\t                                    this.render(0, true, true);\n\t                                }\n\t                            } else {\n\t                                if (this._gc) {\n\t                                    this._enabled(true, false);\n\t                                }\n\t                                if (this._notifyPluginsOfEnabled && this._firstPT) {\n\t                                    TweenLite._onPluginEvent(\"_onDisable\", this);\n\t                                }\n\t                                if (this._time / this._duration > .998) {\n\t                                    var prevTime = this._totalTime;\n\t                                    this.render(0, true, false);\n\t                                    this._initted = false;\n\t                                    this.render(prevTime, true, false);\n\t                                } else {\n\t                                    this._initted = false;\n\t                                    this._init();\n\t                                    if (this._time > 0 || immediate) {\n\t                                        var inv = 1 / (1 - curRatio), pt = this._firstPT, endValue;\n\t                                        while (pt) {\n\t                                            endValue = pt.s + pt.c;\n\t                                            pt.c *= inv;\n\t                                            pt.s = endValue - pt.c;\n\t                                            pt = pt._next;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.render = function(time, suppressEvents, force) {\n\t                        if (!this._initted) if (this._duration === 0 && this.vars.repeat) {\n\t                            this.invalidate();\n\t                        }\n\t                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevTotalTime = this._totalTime, prevCycle = this._cycle, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n\t                        if (time >= totalDur - 1e-7) {\n\t                            this._totalTime = totalDur;\n\t                            this._cycle = this._repeat;\n\t                            if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                this._time = 0;\n\t                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                            } else {\n\t                                this._time = duration;\n\t                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t                            }\n\t                            if (!this._reversed) {\n\t                                isComplete = true;\n\t                                callback = \"onComplete\";\n\t                                force = force || this._timeline.autoRemoveChildren;\n\t                            }\n\t                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                if (this._startTime === this._timeline._duration) {\n\t                                    time = 0;\n\t                                }\n\t                                if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n\t                                    force = true;\n\t                                    if (prevRawPrevTime > _tinyNum) {\n\t                                        callback = \"onReverseComplete\";\n\t                                    }\n\t                                }\n\t                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                            }\n\t                        } else if (time < 1e-7) {\n\t                            this._totalTime = this._time = this._cycle = 0;\n\t                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                            if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n\t                                callback = \"onReverseComplete\";\n\t                                isComplete = this._reversed;\n\t                            }\n\t                            if (time < 0) {\n\t                                this._active = false;\n\t                                if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                    if (prevRawPrevTime >= 0) {\n\t                                        force = true;\n\t                                    }\n\t                                    this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                                }\n\t                            }\n\t                            if (!this._initted) {\n\t                                force = true;\n\t                            }\n\t                        } else {\n\t                            this._totalTime = this._time = time;\n\t                            if (this._repeat !== 0) {\n\t                                cycleDuration = duration + this._repeatDelay;\n\t                                this._cycle = this._totalTime / cycleDuration >> 0;\n\t                                if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t                                    this._cycle--;\n\t                                }\n\t                                this._time = this._totalTime - this._cycle * cycleDuration;\n\t                                if (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t                                    this._time = duration - this._time;\n\t                                }\n\t                                if (this._time > duration) {\n\t                                    this._time = duration;\n\t                                } else if (this._time < 0) {\n\t                                    this._time = 0;\n\t                                }\n\t                            }\n\t                            if (this._easeType) {\n\t                                r = this._time / duration;\n\t                                type = this._easeType;\n\t                                pow = this._easePower;\n\t                                if (type === 1 || type === 3 && r >= .5) {\n\t                                    r = 1 - r;\n\t                                }\n\t                                if (type === 3) {\n\t                                    r *= 2;\n\t                                }\n\t                                if (pow === 1) {\n\t                                    r *= r;\n\t                                } else if (pow === 2) {\n\t                                    r *= r * r;\n\t                                } else if (pow === 3) {\n\t                                    r *= r * r * r;\n\t                                } else if (pow === 4) {\n\t                                    r *= r * r * r * r;\n\t                                }\n\t                                if (type === 1) {\n\t                                    this.ratio = 1 - r;\n\t                                } else if (type === 2) {\n\t                                    this.ratio = r;\n\t                                } else if (this._time / duration < .5) {\n\t                                    this.ratio = r / 2;\n\t                                } else {\n\t                                    this.ratio = 1 - r / 2;\n\t                                }\n\t                            } else {\n\t                                this.ratio = this._ease.getRatio(this._time / duration);\n\t                            }\n\t                        }\n\t                        if (prevTime === this._time && !force && prevCycle === this._cycle) {\n\t                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n\t                                this._callback(\"onUpdate\");\n\t                            }\n\t                            return;\n\t                        } else if (!this._initted) {\n\t                            this._init();\n\t                            if (!this._initted || this._gc) {\n\t                                return;\n\t                            } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n\t                                this._time = prevTime;\n\t                                this._totalTime = prevTotalTime;\n\t                                this._rawPrevTime = prevRawPrevTime;\n\t                                this._cycle = prevCycle;\n\t                                TweenLiteInternals.lazyTweens.push(this);\n\t                                this._lazy = [ time, suppressEvents ];\n\t                                return;\n\t                            }\n\t                            if (this._time && !isComplete) {\n\t                                this.ratio = this._ease.getRatio(this._time / duration);\n\t                            } else if (isComplete && this._ease._calcEnd) {\n\t                                this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n\t                            }\n\t                        }\n\t                        if (this._lazy !== false) {\n\t                            this._lazy = false;\n\t                        }\n\t                        if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t                            this._active = true;\n\t                        }\n\t                        if (prevTotalTime === 0) {\n\t                            if (this._initted === 2 && time > 0) {\n\t                                this._init();\n\t                            }\n\t                            if (this._startAt) {\n\t                                if (time >= 0) {\n\t                                    this._startAt.render(time, suppressEvents, force);\n\t                                } else if (!callback) {\n\t                                    callback = \"_dummyGS\";\n\t                                }\n\t                            }\n\t                            if (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n\t                                this._callback(\"onStart\");\n\t                            }\n\t                        }\n\t                        pt = this._firstPT;\n\t                        while (pt) {\n\t                            if (pt.f) {\n\t                                pt.t[pt.p](pt.c * this.ratio + pt.s);\n\t                            } else {\n\t                                pt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t                            }\n\t                            pt = pt._next;\n\t                        }\n\t                        if (this._onUpdate) {\n\t                            if (time < 0) if (this._startAt && this._startTime) {\n\t                                this._startAt.render(time, suppressEvents, force);\n\t                            }\n\t                            if (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n\t                                this._callback(\"onUpdate\");\n\t                            }\n\t                        }\n\t                        if (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n\t                            this._callback(\"onRepeat\");\n\t                        }\n\t                        if (callback) if (!this._gc || force) {\n\t                            if (time < 0 && this._startAt && !this._onUpdate && this._startTime) {\n\t                                this._startAt.render(time, suppressEvents, force);\n\t                            }\n\t                            if (isComplete) {\n\t                                if (this._timeline.autoRemoveChildren) {\n\t                                    this._enabled(false, false);\n\t                                }\n\t                                this._active = false;\n\t                            }\n\t                            if (!suppressEvents && this.vars[callback]) {\n\t                                this._callback(callback);\n\t                            }\n\t                            if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n\t                                this._rawPrevTime = 0;\n\t                            }\n\t                        }\n\t                    };\n\t                    TweenMax.to = function(target, duration, vars) {\n\t                        return new TweenMax(target, duration, vars);\n\t                    };\n\t                    TweenMax.from = function(target, duration, vars) {\n\t                        vars.runBackwards = true;\n\t                        vars.immediateRender = vars.immediateRender != false;\n\t                        return new TweenMax(target, duration, vars);\n\t                    };\n\t                    TweenMax.fromTo = function(target, duration, fromVars, toVars) {\n\t                        toVars.startAt = fromVars;\n\t                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                        return new TweenMax(target, duration, toVars);\n\t                    };\n\t                    TweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        stagger = stagger || 0;\n\t                        var delay = 0, a = [], finalComplete = function() {\n\t                            if (vars.onComplete) {\n\t                                vars.onComplete.apply(vars.onCompleteScope || this, arguments);\n\t                            }\n\t                            onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n\t                        }, cycle = vars.cycle, fromCycle = vars.startAt && vars.startAt.cycle, l, copy, i, p;\n\t                        if (!_isArray(targets)) {\n\t                            if (typeof targets === \"string\") {\n\t                                targets = TweenLite.selector(targets) || targets;\n\t                            }\n\t                            if (_isSelector(targets)) {\n\t                                targets = _slice(targets);\n\t                            }\n\t                        }\n\t                        targets = targets || [];\n\t                        if (stagger < 0) {\n\t                            targets = _slice(targets);\n\t                            targets.reverse();\n\t                            stagger *= -1;\n\t                        }\n\t                        l = targets.length - 1;\n\t                        for (i = 0; i <= l; i++) {\n\t                            copy = {};\n\t                            for (p in vars) {\n\t                                copy[p] = vars[p];\n\t                            }\n\t                            if (cycle) {\n\t                                _applyCycle(copy, targets, i);\n\t                                if (copy.duration != null) {\n\t                                    duration = copy.duration;\n\t                                    delete copy.duration;\n\t                                }\n\t                            }\n\t                            if (fromCycle) {\n\t                                fromCycle = copy.startAt = {};\n\t                                for (p in vars.startAt) {\n\t                                    fromCycle[p] = vars.startAt[p];\n\t                                }\n\t                                _applyCycle(copy.startAt, targets, i);\n\t                            }\n\t                            copy.delay = delay + (copy.delay || 0);\n\t                            if (i === l && onCompleteAll) {\n\t                                copy.onComplete = finalComplete;\n\t                            }\n\t                            a[i] = new TweenMax(targets[i], duration, copy);\n\t                            delay += stagger;\n\t                        }\n\t                        return a;\n\t                    };\n\t                    TweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        vars.runBackwards = true;\n\t                        vars.immediateRender = vars.immediateRender != false;\n\t                        return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    TweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        toVars.startAt = fromVars;\n\t                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                        return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    TweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t                        return new TweenMax(callback, 0, {\n\t                            delay: delay,\n\t                            onComplete: callback,\n\t                            onCompleteParams: params,\n\t                            callbackScope: scope,\n\t                            onReverseComplete: callback,\n\t                            onReverseCompleteParams: params,\n\t                            immediateRender: false,\n\t                            useFrames: useFrames,\n\t                            overwrite: 0\n\t                        });\n\t                    };\n\t                    TweenMax.set = function(target, vars) {\n\t                        return new TweenMax(target, 0, vars);\n\t                    };\n\t                    TweenMax.isTweening = function(target) {\n\t                        return TweenLite.getTweensOf(target, true).length > 0;\n\t                    };\n\t                    var _getChildrenOf = function(timeline, includeTimelines) {\n\t                        var a = [], cnt = 0, tween = timeline._first;\n\t                        while (tween) {\n\t                            if (tween instanceof TweenLite) {\n\t                                a[cnt++] = tween;\n\t                            } else {\n\t                                if (includeTimelines) {\n\t                                    a[cnt++] = tween;\n\t                                }\n\t                                a = a.concat(_getChildrenOf(tween, includeTimelines));\n\t                                cnt = a.length;\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        return a;\n\t                    }, getAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n\t                        return _getChildrenOf(Animation._rootTimeline, includeTimelines).concat(_getChildrenOf(Animation._rootFramesTimeline, includeTimelines));\n\t                    };\n\t                    TweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n\t                        if (tweens == null) {\n\t                            tweens = true;\n\t                        }\n\t                        if (delayedCalls == null) {\n\t                            delayedCalls = true;\n\t                        }\n\t                        var a = getAllTweens(timelines != false), l = a.length, allTrue = tweens && delayedCalls && timelines, isDC, tween, i;\n\t                        for (i = 0; i < l; i++) {\n\t                            tween = a[i];\n\t                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n\t                                if (complete) {\n\t                                    tween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n\t                                } else {\n\t                                    tween._enabled(false, false);\n\t                                }\n\t                            }\n\t                        }\n\t                    };\n\t                    TweenMax.killChildTweensOf = function(parent, complete) {\n\t                        if (parent == null) {\n\t                            return;\n\t                        }\n\t                        var tl = TweenLiteInternals.tweenLookup, a, curParent, p, i, l;\n\t                        if (typeof parent === \"string\") {\n\t                            parent = TweenLite.selector(parent) || parent;\n\t                        }\n\t                        if (_isSelector(parent)) {\n\t                            parent = _slice(parent);\n\t                        }\n\t                        if (_isArray(parent)) {\n\t                            i = parent.length;\n\t                            while (--i > -1) {\n\t                                TweenMax.killChildTweensOf(parent[i], complete);\n\t                            }\n\t                            return;\n\t                        }\n\t                        a = [];\n\t                        for (p in tl) {\n\t                            curParent = tl[p].target.parentNode;\n\t                            while (curParent) {\n\t                                if (curParent === parent) {\n\t                                    a = a.concat(tl[p].tweens);\n\t                                }\n\t                                curParent = curParent.parentNode;\n\t                            }\n\t                        }\n\t                        l = a.length;\n\t                        for (i = 0; i < l; i++) {\n\t                            if (complete) {\n\t                                a[i].totalTime(a[i].totalDuration());\n\t                            }\n\t                            a[i]._enabled(false, false);\n\t                        }\n\t                    };\n\t                    var _changePause = function(pause, tweens, delayedCalls, timelines) {\n\t                        tweens = tweens !== false;\n\t                        delayedCalls = delayedCalls !== false;\n\t                        timelines = timelines !== false;\n\t                        var a = getAllTweens(timelines), allTrue = tweens && delayedCalls && timelines, i = a.length, isDC, tween;\n\t                        while (--i > -1) {\n\t                            tween = a[i];\n\t                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n\t                                tween.paused(pause);\n\t                            }\n\t                        }\n\t                    };\n\t                    TweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n\t                        _changePause(true, tweens, delayedCalls, timelines);\n\t                    };\n\t                    TweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n\t                        _changePause(false, tweens, delayedCalls, timelines);\n\t                    };\n\t                    TweenMax.globalTimeScale = function(value) {\n\t                        var tl = Animation._rootTimeline, t = TweenLite.ticker.time;\n\t                        if (!arguments.length) {\n\t                            return tl._timeScale;\n\t                        }\n\t                        value = value || _tinyNum;\n\t                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n\t                        tl = Animation._rootFramesTimeline;\n\t                        t = TweenLite.ticker.frame;\n\t                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n\t                        tl._timeScale = Animation._rootTimeline._timeScale = value;\n\t                        return value;\n\t                    };\n\t                    p.progress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n\t                    };\n\t                    p.totalProgress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n\t                    };\n\t                    p.time = function(value, suppressEvents) {\n\t                        if (!arguments.length) {\n\t                            return this._time;\n\t                        }\n\t                        if (this._dirty) {\n\t                            this.totalDuration();\n\t                        }\n\t                        if (value > this._duration) {\n\t                            value = this._duration;\n\t                        }\n\t                        if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n\t                        } else if (this._repeat !== 0) {\n\t                            value += this._cycle * (this._duration + this._repeatDelay);\n\t                        }\n\t                        return this.totalTime(value, suppressEvents);\n\t                    };\n\t                    p.duration = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._duration;\n\t                        }\n\t                        return Animation.prototype.duration.call(this, value);\n\t                    };\n\t                    p.totalDuration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n\t                                this._dirty = false;\n\t                            }\n\t                            return this._totalDuration;\n\t                        }\n\t                        return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));\n\t                    };\n\t                    p.repeat = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeat;\n\t                        }\n\t                        this._repeat = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.repeatDelay = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeatDelay;\n\t                        }\n\t                        this._repeatDelay = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.yoyo = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._yoyo;\n\t                        }\n\t                        this._yoyo = value;\n\t                        return this;\n\t                    };\n\t                    return TweenMax;\n\t                }, true);\n\t                _gsScope._gsDefine(\"TimelineLite\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n\t                    var TimelineLite = function(vars) {\n\t                        SimpleTimeline.call(this, vars);\n\t                        this._labels = {};\n\t                        this.autoRemoveChildren = this.vars.autoRemoveChildren === true;\n\t                        this.smoothChildTiming = this.vars.smoothChildTiming === true;\n\t                        this._sortChildren = true;\n\t                        this._onUpdate = this.vars.onUpdate;\n\t                        var v = this.vars, val, p;\n\t                        for (p in v) {\n\t                            val = v[p];\n\t                            if (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t                                v[p] = this._swapSelfInParams(val);\n\t                            }\n\t                        }\n\t                        if (_isArray(v.tweens)) {\n\t                            this.add(v.tweens, 0, v.align, v.stagger);\n\t                        }\n\t                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _internals = TimelineLite._internals = {}, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _globals = _gsScope._gsDefine.globals, _copy = function(vars) {\n\t                        var copy = {}, p;\n\t                        for (p in vars) {\n\t                            copy[p] = vars[p];\n\t                        }\n\t                        return copy;\n\t                    }, _applyCycle = function(vars, targets, i) {\n\t                        var alt = vars.cycle, p, val;\n\t                        for (p in alt) {\n\t                            val = alt[p];\n\t                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n\t                        }\n\t                        delete vars.cycle;\n\t                    }, _pauseCallback = _internals.pauseCallback = function() {}, _slice = function(a) {\n\t                        var b = [], l = a.length, i;\n\t                        for (i = 0; i !== l; b.push(a[i++])) ;\n\t                        return b;\n\t                    }, p = TimelineLite.prototype = new SimpleTimeline();\n\t                    TimelineLite.version = \"1.18.5\";\n\t                    p.constructor = TimelineLite;\n\t                    p.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n\t                    p.to = function(target, duration, vars, position) {\n\t                        var Engine = vars.repeat && _globals.TweenMax || TweenLite;\n\t                        return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t                    };\n\t                    p.from = function(target, duration, vars, position) {\n\t                        return this.add((vars.repeat && _globals.TweenMax || TweenLite).from(target, duration, vars), position);\n\t                    };\n\t                    p.fromTo = function(target, duration, fromVars, toVars, position) {\n\t                        var Engine = toVars.repeat && _globals.TweenMax || TweenLite;\n\t                        return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t                    };\n\t                    p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        var tl = new TimelineLite({\n\t                            onComplete: onCompleteAll,\n\t                            onCompleteParams: onCompleteAllParams,\n\t                            callbackScope: onCompleteAllScope,\n\t                            smoothChildTiming: this.smoothChildTiming\n\t                        }), cycle = vars.cycle, copy, i;\n\t                        if (typeof targets === \"string\") {\n\t                            targets = TweenLite.selector(targets) || targets;\n\t                        }\n\t                        targets = targets || [];\n\t                        if (_isSelector(targets)) {\n\t                            targets = _slice(targets);\n\t                        }\n\t                        stagger = stagger || 0;\n\t                        if (stagger < 0) {\n\t                            targets = _slice(targets);\n\t                            targets.reverse();\n\t                            stagger *= -1;\n\t                        }\n\t                        for (i = 0; i < targets.length; i++) {\n\t                            copy = _copy(vars);\n\t                            if (copy.startAt) {\n\t                                copy.startAt = _copy(copy.startAt);\n\t                                if (copy.startAt.cycle) {\n\t                                    _applyCycle(copy.startAt, targets, i);\n\t                                }\n\t                            }\n\t                            if (cycle) {\n\t                                _applyCycle(copy, targets, i);\n\t                                if (copy.duration != null) {\n\t                                    duration = copy.duration;\n\t                                    delete copy.duration;\n\t                                }\n\t                            }\n\t                            tl.to(targets[i], duration, copy, i * stagger);\n\t                        }\n\t                        return this.add(tl, position);\n\t                    };\n\t                    p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        vars.immediateRender = vars.immediateRender != false;\n\t                        vars.runBackwards = true;\n\t                        return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t                        toVars.startAt = fromVars;\n\t                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                        return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t                    };\n\t                    p.call = function(callback, params, scope, position) {\n\t                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n\t                    };\n\t                    p.set = function(target, vars, position) {\n\t                        position = this._parseTimeOrLabel(position, 0, true);\n\t                        if (vars.immediateRender == null) {\n\t                            vars.immediateRender = position === this._time && !this._paused;\n\t                        }\n\t                        return this.add(new TweenLite(target, 0, vars), position);\n\t                    };\n\t                    TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t                        vars = vars || {};\n\t                        if (vars.smoothChildTiming == null) {\n\t                            vars.smoothChildTiming = true;\n\t                        }\n\t                        var tl = new TimelineLite(vars), root = tl._timeline, tween, next;\n\t                        if (ignoreDelayedCalls == null) {\n\t                            ignoreDelayedCalls = true;\n\t                        }\n\t                        root._remove(tl, true);\n\t                        tl._startTime = 0;\n\t                        tl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t                        tween = root._first;\n\t                        while (tween) {\n\t                            next = tween._next;\n\t                            if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t                                tl.add(tween, tween._startTime - tween._delay);\n\t                            }\n\t                            tween = next;\n\t                        }\n\t                        root.add(tl, 0);\n\t                        return tl;\n\t                    };\n\t                    p.add = function(value, position, align, stagger) {\n\t                        var curTime, l, i, child, tl, beforeRawTime;\n\t                        if (typeof position !== \"number\") {\n\t                            position = this._parseTimeOrLabel(position, 0, true, value);\n\t                        }\n\t                        if (!(value instanceof Animation)) {\n\t                            if (value instanceof Array || value && value.push && _isArray(value)) {\n\t                                align = align || \"normal\";\n\t                                stagger = stagger || 0;\n\t                                curTime = position;\n\t                                l = value.length;\n\t                                for (i = 0; i < l; i++) {\n\t                                    if (_isArray(child = value[i])) {\n\t                                        child = new TimelineLite({\n\t                                            tweens: child\n\t                                        });\n\t                                    }\n\t                                    this.add(child, curTime);\n\t                                    if (typeof child !== \"string\" && typeof child !== \"function\") {\n\t                                        if (align === \"sequence\") {\n\t                                            curTime = child._startTime + child.totalDuration() / child._timeScale;\n\t                                        } else if (align === \"start\") {\n\t                                            child._startTime -= child.delay();\n\t                                        }\n\t                                    }\n\t                                    curTime += stagger;\n\t                                }\n\t                                return this._uncache(true);\n\t                            } else if (typeof value === \"string\") {\n\t                                return this.addLabel(value, position);\n\t                            } else if (typeof value === \"function\") {\n\t                                value = TweenLite.delayedCall(0, value);\n\t                            } else {\n\t                                throw \"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\";\n\t                            }\n\t                        }\n\t                        SimpleTimeline.prototype.add.call(this, value, position);\n\t                        if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n\t                            tl = this;\n\t                            beforeRawTime = tl.rawTime() > value._startTime;\n\t                            while (tl._timeline) {\n\t                                if (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t                                    tl.totalTime(tl._totalTime, true);\n\t                                } else if (tl._gc) {\n\t                                    tl._enabled(true, false);\n\t                                }\n\t                                tl = tl._timeline;\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.remove = function(value) {\n\t                        if (value instanceof Animation) {\n\t                            this._remove(value, false);\n\t                            var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline;\n\t                            value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale;\n\t                            return this;\n\t                        } else if (value instanceof Array || value && value.push && _isArray(value)) {\n\t                            var i = value.length;\n\t                            while (--i > -1) {\n\t                                this.remove(value[i]);\n\t                            }\n\t                            return this;\n\t                        } else if (typeof value === \"string\") {\n\t                            return this.removeLabel(value);\n\t                        }\n\t                        return this.kill(null, value);\n\t                    };\n\t                    p._remove = function(tween, skipDisable) {\n\t                        SimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t                        var last = this._last;\n\t                        if (!last) {\n\t                            this._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t                        } else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n\t                            this._time = this.duration();\n\t                            this._totalTime = this._totalDuration;\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.append = function(value, offsetOrLabel) {\n\t                        return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t                    };\n\t                    p.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t                        return this.add(value, position || 0, align, stagger);\n\t                    };\n\t                    p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t                        return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t                    };\n\t                    p.addLabel = function(label, position) {\n\t                        this._labels[label] = this._parseTimeOrLabel(position);\n\t                        return this;\n\t                    };\n\t                    p.addPause = function(position, callback, params, scope) {\n\t                        var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n\t                        t.vars.onComplete = t.vars.onReverseComplete = callback;\n\t                        t.data = \"isPause\";\n\t                        this._hasPause = true;\n\t                        return this.add(t, position);\n\t                    };\n\t                    p.removeLabel = function(label) {\n\t                        delete this._labels[label];\n\t                        return this;\n\t                    };\n\t                    p.getLabelTime = function(label) {\n\t                        return this._labels[label] != null ? this._labels[label] : -1;\n\t                    };\n\t                    p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t                        var i;\n\t                        if (ignore instanceof Animation && ignore.timeline === this) {\n\t                            this.remove(ignore);\n\t                        } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {\n\t                            i = ignore.length;\n\t                            while (--i > -1) {\n\t                                if (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t                                    this.remove(ignore[i]);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (typeof offsetOrLabel === \"string\") {\n\t                            return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === \"number\" && this._labels[offsetOrLabel] == null ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n\t                        }\n\t                        offsetOrLabel = offsetOrLabel || 0;\n\t                        if (typeof timeOrLabel === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {\n\t                            i = timeOrLabel.indexOf(\"=\");\n\t                            if (i === -1) {\n\t                                if (this._labels[timeOrLabel] == null) {\n\t                                    return appendIfAbsent ? this._labels[timeOrLabel] = this.duration() + offsetOrLabel : offsetOrLabel;\n\t                                }\n\t                                return this._labels[timeOrLabel] + offsetOrLabel;\n\t                            }\n\t                            offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + \"1\", 10) * Number(timeOrLabel.substr(i + 1));\n\t                            timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : this.duration();\n\t                        } else if (timeOrLabel == null) {\n\t                            timeOrLabel = this.duration();\n\t                        }\n\t                        return Number(timeOrLabel) + offsetOrLabel;\n\t                    };\n\t                    p.seek = function(position, suppressEvents) {\n\t                        return this.totalTime(typeof position === \"number\" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);\n\t                    };\n\t                    p.stop = function() {\n\t                        return this.paused(true);\n\t                    };\n\t                    p.gotoAndPlay = function(position, suppressEvents) {\n\t                        return this.play(position, suppressEvents);\n\t                    };\n\t                    p.gotoAndStop = function(position, suppressEvents) {\n\t                        return this.pause(position, suppressEvents);\n\t                    };\n\t                    p.render = function(time, suppressEvents, force) {\n\t                        if (this._gc) {\n\t                            this._enabled(true, false);\n\t                        }\n\t                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevStart = this._startTime, prevTimeScale = this._timeScale, prevPaused = this._paused, tween, isComplete, next, callback, internalForce, pauseTween, curTime;\n\t                        if (time >= totalDur - 1e-7) {\n\t                            this._totalTime = this._time = totalDur;\n\t                            if (!this._reversed) if (!this._hasPausedChild()) {\n\t                                isComplete = true;\n\t                                callback = \"onComplete\";\n\t                                internalForce = !!this._timeline.autoRemoveChildren;\n\t                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n\t                                    internalForce = true;\n\t                                    if (this._rawPrevTime > _tinyNum) {\n\t                                        callback = \"onReverseComplete\";\n\t                                    }\n\t                                }\n\t                            }\n\t                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                            time = totalDur + 1e-4;\n\t                        } else if (time < 1e-7) {\n\t                            this._totalTime = this._time = 0;\n\t                            if (prevTime !== 0 || this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || time < 0 && this._rawPrevTime >= 0)) {\n\t                                callback = \"onReverseComplete\";\n\t                                isComplete = this._reversed;\n\t                            }\n\t                            if (time < 0) {\n\t                                this._active = false;\n\t                                if (this._timeline.autoRemoveChildren && this._reversed) {\n\t                                    internalForce = isComplete = true;\n\t                                    callback = \"onReverseComplete\";\n\t                                } else if (this._rawPrevTime >= 0 && this._first) {\n\t                                    internalForce = true;\n\t                                }\n\t                                this._rawPrevTime = time;\n\t                            } else {\n\t                                this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                if (time === 0 && isComplete) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime === 0) {\n\t                                        if (!tween._duration) {\n\t                                            isComplete = false;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                }\n\t                                time = 0;\n\t                                if (!this._initted) {\n\t                                    internalForce = true;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t                                if (time >= prevTime) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime <= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                } else {\n\t                                    tween = this._last;\n\t                                    while (tween && tween._startTime >= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._prev;\n\t                                    }\n\t                                }\n\t                                if (pauseTween) {\n\t                                    this._time = time = pauseTween._startTime;\n\t                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n\t                                }\n\t                            }\n\t                            this._totalTime = this._time = this._rawPrevTime = time;\n\t                        }\n\t                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t                            return;\n\t                        } else if (!this._initted) {\n\t                            this._initted = true;\n\t                        }\n\t                        if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n\t                            this._active = true;\n\t                        }\n\t                        if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n\t                            this._callback(\"onStart\");\n\t                        }\n\t                        curTime = this._time;\n\t                        if (curTime >= prevTime) {\n\t                            tween = this._first;\n\t                            while (tween) {\n\t                                next = tween._next;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        } else {\n\t                            tween = this._last;\n\t                            while (tween) {\n\t                                next = tween._prev;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        pauseTween = tween._prev;\n\t                                        while (pauseTween && pauseTween.endTime() > this._time) {\n\t                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n\t                                            pauseTween = pauseTween._prev;\n\t                                        }\n\t                                        pauseTween = null;\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        }\n\t                        if (this._onUpdate) if (!suppressEvents) {\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            this._callback(\"onUpdate\");\n\t                        }\n\t                        if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n\t                            if (isComplete) {\n\t                                if (_lazyTweens.length) {\n\t                                    _lazyRender();\n\t                                }\n\t                                if (this._timeline.autoRemoveChildren) {\n\t                                    this._enabled(false, false);\n\t                                }\n\t                                this._active = false;\n\t                            }\n\t                            if (!suppressEvents && this.vars[callback]) {\n\t                                this._callback(callback);\n\t                            }\n\t                        }\n\t                    };\n\t                    p._hasPausedChild = function() {\n\t                        var tween = this._first;\n\t                        while (tween) {\n\t                            if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {\n\t                                return true;\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        return false;\n\t                    };\n\t                    p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t                        ignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t                        var a = [], tween = this._first, cnt = 0;\n\t                        while (tween) {\n\t                            if (tween._startTime < ignoreBeforeTime) {} else if (tween instanceof TweenLite) {\n\t                                if (tweens !== false) {\n\t                                    a[cnt++] = tween;\n\t                                }\n\t                            } else {\n\t                                if (timelines !== false) {\n\t                                    a[cnt++] = tween;\n\t                                }\n\t                                if (nested !== false) {\n\t                                    a = a.concat(tween.getChildren(true, tweens, timelines));\n\t                                    cnt = a.length;\n\t                                }\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        return a;\n\t                    };\n\t                    p.getTweensOf = function(target, nested) {\n\t                        var disabled = this._gc, a = [], cnt = 0, tweens, i;\n\t                        if (disabled) {\n\t                            this._enabled(true, true);\n\t                        }\n\t                        tweens = TweenLite.getTweensOf(target);\n\t                        i = tweens.length;\n\t                        while (--i > -1) {\n\t                            if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {\n\t                                a[cnt++] = tweens[i];\n\t                            }\n\t                        }\n\t                        if (disabled) {\n\t                            this._enabled(false, true);\n\t                        }\n\t                        return a;\n\t                    };\n\t                    p.recent = function() {\n\t                        return this._recent;\n\t                    };\n\t                    p._contains = function(tween) {\n\t                        var tl = tween.timeline;\n\t                        while (tl) {\n\t                            if (tl === this) {\n\t                                return true;\n\t                            }\n\t                            tl = tl.timeline;\n\t                        }\n\t                        return false;\n\t                    };\n\t                    p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t                        ignoreBeforeTime = ignoreBeforeTime || 0;\n\t                        var tween = this._first, labels = this._labels, p;\n\t                        while (tween) {\n\t                            if (tween._startTime >= ignoreBeforeTime) {\n\t                                tween._startTime += amount;\n\t                            }\n\t                            tween = tween._next;\n\t                        }\n\t                        if (adjustLabels) {\n\t                            for (p in labels) {\n\t                                if (labels[p] >= ignoreBeforeTime) {\n\t                                    labels[p] += amount;\n\t                                }\n\t                            }\n\t                        }\n\t                        return this._uncache(true);\n\t                    };\n\t                    p._kill = function(vars, target) {\n\t                        if (!vars && !target) {\n\t                            return this._enabled(false, false);\n\t                        }\n\t                        var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target), i = tweens.length, changed = false;\n\t                        while (--i > -1) {\n\t                            if (tweens[i]._kill(vars, target)) {\n\t                                changed = true;\n\t                            }\n\t                        }\n\t                        return changed;\n\t                    };\n\t                    p.clear = function(labels) {\n\t                        var tweens = this.getChildren(false, true, true), i = tweens.length;\n\t                        this._time = this._totalTime = 0;\n\t                        while (--i > -1) {\n\t                            tweens[i]._enabled(false, false);\n\t                        }\n\t                        if (labels !== false) {\n\t                            this._labels = {};\n\t                        }\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.invalidate = function() {\n\t                        var tween = this._first;\n\t                        while (tween) {\n\t                            tween.invalidate();\n\t                            tween = tween._next;\n\t                        }\n\t                        return Animation.prototype.invalidate.call(this);\n\t                    };\n\t                    p._enabled = function(enabled, ignoreTimeline) {\n\t                        if (enabled === this._gc) {\n\t                            var tween = this._first;\n\t                            while (tween) {\n\t                                tween._enabled(enabled, true);\n\t                                tween = tween._next;\n\t                            }\n\t                        }\n\t                        return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t                    };\n\t                    p.totalTime = function(time, suppressEvents, uncapped) {\n\t                        this._forcingPlayhead = true;\n\t                        var val = Animation.prototype.totalTime.apply(this, arguments);\n\t                        this._forcingPlayhead = false;\n\t                        return val;\n\t                    };\n\t                    p.duration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                this.totalDuration();\n\t                            }\n\t                            return this._duration;\n\t                        }\n\t                        if (this.duration() !== 0 && value !== 0) {\n\t                            this.timeScale(this._duration / value);\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.totalDuration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                var max = 0, tween = this._last, prevStart = 999999999999, prev, end;\n\t                                while (tween) {\n\t                                    prev = tween._prev;\n\t                                    if (tween._dirty) {\n\t                                        tween.totalDuration();\n\t                                    }\n\t                                    if (tween._startTime > prevStart && this._sortChildren && !tween._paused) {\n\t                                        this.add(tween, tween._startTime - tween._delay);\n\t                                    } else {\n\t                                        prevStart = tween._startTime;\n\t                                    }\n\t                                    if (tween._startTime < 0 && !tween._paused) {\n\t                                        max -= tween._startTime;\n\t                                        if (this._timeline.smoothChildTiming) {\n\t                                            this._startTime += tween._startTime / this._timeScale;\n\t                                        }\n\t                                        this.shiftChildren(-tween._startTime, false, -9999999999);\n\t                                        prevStart = 0;\n\t                                    }\n\t                                    end = tween._startTime + tween._totalDuration / tween._timeScale;\n\t                                    if (end > max) {\n\t                                        max = end;\n\t                                    }\n\t                                    tween = prev;\n\t                                }\n\t                                this._duration = this._totalDuration = max;\n\t                                this._dirty = false;\n\t                            }\n\t                            return this._totalDuration;\n\t                        }\n\t                        return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;\n\t                    };\n\t                    p.paused = function(value) {\n\t                        if (!value) {\n\t                            var tween = this._first, time = this._time;\n\t                            while (tween) {\n\t                                if (tween._startTime === time && tween.data === \"isPause\") {\n\t                                    tween._rawPrevTime = 0;\n\t                                }\n\t                                tween = tween._next;\n\t                            }\n\t                        }\n\t                        return Animation.prototype.paused.apply(this, arguments);\n\t                    };\n\t                    p.usesFrames = function() {\n\t                        var tl = this._timeline;\n\t                        while (tl._timeline) {\n\t                            tl = tl._timeline;\n\t                        }\n\t                        return tl === Animation._rootFramesTimeline;\n\t                    };\n\t                    p.rawTime = function() {\n\t                        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n\t                    };\n\t                    return TimelineLite;\n\t                }, true);\n\t                _gsScope._gsDefine(\"TimelineMax\", [ \"TimelineLite\", \"TweenLite\", \"easing.Ease\" ], function(TimelineLite, TweenLite, Ease) {\n\t                    var TimelineMax = function(vars) {\n\t                        TimelineLite.call(this, vars);\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._cycle = 0;\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._dirty = true;\n\t                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _easeNone = new Ease(null, null, 1, 0), p = TimelineMax.prototype = new TimelineLite();\n\t                    p.constructor = TimelineMax;\n\t                    p.kill()._gc = false;\n\t                    TimelineMax.version = \"1.18.5\";\n\t                    p.invalidate = function() {\n\t                        this._yoyo = this.vars.yoyo === true;\n\t                        this._repeat = this.vars.repeat || 0;\n\t                        this._repeatDelay = this.vars.repeatDelay || 0;\n\t                        this._uncache(true);\n\t                        return TimelineLite.prototype.invalidate.call(this);\n\t                    };\n\t                    p.addCallback = function(callback, position, params, scope) {\n\t                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n\t                    };\n\t                    p.removeCallback = function(callback, position) {\n\t                        if (callback) {\n\t                            if (position == null) {\n\t                                this._kill(null, callback);\n\t                            } else {\n\t                                var a = this.getTweensOf(callback, false), i = a.length, time = this._parseTimeOrLabel(position);\n\t                                while (--i > -1) {\n\t                                    if (a[i]._startTime === time) {\n\t                                        a[i]._enabled(false, false);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return this;\n\t                    };\n\t                    p.removePause = function(position) {\n\t                        return this.removeCallback(TimelineLite._internals.pauseCallback, position);\n\t                    };\n\t                    p.tweenTo = function(position, vars) {\n\t                        vars = vars || {};\n\t                        var copy = {\n\t                            ease: _easeNone,\n\t                            useFrames: this.usesFrames(),\n\t                            immediateRender: false\n\t                        }, duration, p, t;\n\t                        for (p in vars) {\n\t                            copy[p] = vars[p];\n\t                        }\n\t                        copy.time = this._parseTimeOrLabel(position);\n\t                        duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || .001;\n\t                        t = new TweenLite(this, duration, copy);\n\t                        copy.onStart = function() {\n\t                            t.target.paused(true);\n\t                            if (t.vars.time !== t.target.time() && duration === t.duration()) {\n\t                                t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale);\n\t                            }\n\t                            if (vars.onStart) {\n\t                                t._callback(\"onStart\");\n\t                            }\n\t                        };\n\t                        return t;\n\t                    };\n\t                    p.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t                        vars = vars || {};\n\t                        fromPosition = this._parseTimeOrLabel(fromPosition);\n\t                        vars.startAt = {\n\t                            onComplete: this.seek,\n\t                            onCompleteParams: [ fromPosition ],\n\t                            callbackScope: this\n\t                        };\n\t                        vars.immediateRender = vars.immediateRender !== false;\n\t                        var t = this.tweenTo(toPosition, vars);\n\t                        return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || .001);\n\t                    };\n\t                    p.render = function(time, suppressEvents, force) {\n\t                        if (this._gc) {\n\t                            this._enabled(true, false);\n\t                        }\n\t                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), dur = this._duration, prevTime = this._time, prevTotalTime = this._totalTime, prevStart = this._startTime, prevTimeScale = this._timeScale, prevRawPrevTime = this._rawPrevTime, prevPaused = this._paused, prevCycle = this._cycle, tween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n\t                        if (time >= totalDur - 1e-7) {\n\t                            if (!this._locked) {\n\t                                this._totalTime = totalDur;\n\t                                this._cycle = this._repeat;\n\t                            }\n\t                            if (!this._reversed) if (!this._hasPausedChild()) {\n\t                                isComplete = true;\n\t                                callback = \"onComplete\";\n\t                                internalForce = !!this._timeline.autoRemoveChildren;\n\t                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n\t                                    internalForce = true;\n\t                                    if (prevRawPrevTime > _tinyNum) {\n\t                                        callback = \"onReverseComplete\";\n\t                                    }\n\t                                }\n\t                            }\n\t                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                            if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                                this._time = time = 0;\n\t                            } else {\n\t                                this._time = dur;\n\t                                time = dur + 1e-4;\n\t                            }\n\t                        } else if (time < 1e-7) {\n\t                            if (!this._locked) {\n\t                                this._totalTime = this._cycle = 0;\n\t                            }\n\t                            this._time = 0;\n\t                            if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !this._locked) {\n\t                                callback = \"onReverseComplete\";\n\t                                isComplete = this._reversed;\n\t                            }\n\t                            if (time < 0) {\n\t                                this._active = false;\n\t                                if (this._timeline.autoRemoveChildren && this._reversed) {\n\t                                    internalForce = isComplete = true;\n\t                                    callback = \"onReverseComplete\";\n\t                                } else if (prevRawPrevTime >= 0 && this._first) {\n\t                                    internalForce = true;\n\t                                }\n\t                                this._rawPrevTime = time;\n\t                            } else {\n\t                                this._rawPrevTime = dur || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n\t                                if (time === 0 && isComplete) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime === 0) {\n\t                                        if (!tween._duration) {\n\t                                            isComplete = false;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                }\n\t                                time = 0;\n\t                                if (!this._initted) {\n\t                                    internalForce = true;\n\t                                }\n\t                            }\n\t                        } else {\n\t                            if (dur === 0 && prevRawPrevTime < 0) {\n\t                                internalForce = true;\n\t                            }\n\t                            this._time = this._rawPrevTime = time;\n\t                            if (!this._locked) {\n\t                                this._totalTime = time;\n\t                                if (this._repeat !== 0) {\n\t                                    cycleDuration = dur + this._repeatDelay;\n\t                                    this._cycle = this._totalTime / cycleDuration >> 0;\n\t                                    if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t                                        this._cycle--;\n\t                                    }\n\t                                    this._time = this._totalTime - this._cycle * cycleDuration;\n\t                                    if (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t                                        this._time = dur - this._time;\n\t                                    }\n\t                                    if (this._time > dur) {\n\t                                        this._time = dur;\n\t                                        time = dur + 1e-4;\n\t                                    } else if (this._time < 0) {\n\t                                        this._time = time = 0;\n\t                                    } else {\n\t                                        time = this._time;\n\t                                    }\n\t                                }\n\t                            }\n\t                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t                                time = this._time;\n\t                                if (time >= prevTime) {\n\t                                    tween = this._first;\n\t                                    while (tween && tween._startTime <= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._next;\n\t                                    }\n\t                                } else {\n\t                                    tween = this._last;\n\t                                    while (tween && tween._startTime >= time && !pauseTween) {\n\t                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t                                            pauseTween = tween;\n\t                                        }\n\t                                        tween = tween._prev;\n\t                                    }\n\t                                }\n\t                                if (pauseTween) {\n\t                                    this._time = time = pauseTween._startTime;\n\t                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (this._cycle !== prevCycle) if (!this._locked) {\n\t                            var backwards = this._yoyo && (prevCycle & 1) !== 0, wrap = backwards === (this._yoyo && (this._cycle & 1) !== 0), recTotalTime = this._totalTime, recCycle = this._cycle, recRawPrevTime = this._rawPrevTime, recTime = this._time;\n\t                            this._totalTime = prevCycle * dur;\n\t                            if (this._cycle < prevCycle) {\n\t                                backwards = !backwards;\n\t                            } else {\n\t                                this._totalTime += dur;\n\t                            }\n\t                            this._time = prevTime;\n\t                            this._rawPrevTime = dur === 0 ? prevRawPrevTime - 1e-4 : prevRawPrevTime;\n\t                            this._cycle = prevCycle;\n\t                            this._locked = true;\n\t                            prevTime = backwards ? 0 : dur;\n\t                            this.render(prevTime, suppressEvents, dur === 0);\n\t                            if (!suppressEvents) if (!this._gc) {\n\t                                if (this.vars.onRepeat) {\n\t                                    this._callback(\"onRepeat\");\n\t                                }\n\t                            }\n\t                            if (prevTime !== this._time) {\n\t                                return;\n\t                            }\n\t                            if (wrap) {\n\t                                prevTime = backwards ? dur + 1e-4 : -1e-4;\n\t                                this.render(prevTime, true, false);\n\t                            }\n\t                            this._locked = false;\n\t                            if (this._paused && !prevPaused) {\n\t                                return;\n\t                            }\n\t                            this._time = recTime;\n\t                            this._totalTime = recTotalTime;\n\t                            this._cycle = recCycle;\n\t                            this._rawPrevTime = recRawPrevTime;\n\t                        }\n\t                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n\t                                this._callback(\"onUpdate\");\n\t                            }\n\t                            return;\n\t                        } else if (!this._initted) {\n\t                            this._initted = true;\n\t                        }\n\t                        if (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n\t                            this._active = true;\n\t                        }\n\t                        if (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n\t                            this._callback(\"onStart\");\n\t                        }\n\t                        curTime = this._time;\n\t                        if (curTime >= prevTime) {\n\t                            tween = this._first;\n\t                            while (tween) {\n\t                                next = tween._next;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= this._time && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        } else {\n\t                            tween = this._last;\n\t                            while (tween) {\n\t                                next = tween._prev;\n\t                                if (curTime !== this._time || this._paused && !prevPaused) {\n\t                                    break;\n\t                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n\t                                    if (pauseTween === tween) {\n\t                                        pauseTween = tween._prev;\n\t                                        while (pauseTween && pauseTween.endTime() > this._time) {\n\t                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n\t                                            pauseTween = pauseTween._prev;\n\t                                        }\n\t                                        pauseTween = null;\n\t                                        this.pause();\n\t                                    }\n\t                                    if (!tween._reversed) {\n\t                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    } else {\n\t                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                                    }\n\t                                }\n\t                                tween = next;\n\t                            }\n\t                        }\n\t                        if (this._onUpdate) if (!suppressEvents) {\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            this._callback(\"onUpdate\");\n\t                        }\n\t                        if (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n\t                            if (isComplete) {\n\t                                if (_lazyTweens.length) {\n\t                                    _lazyRender();\n\t                                }\n\t                                if (this._timeline.autoRemoveChildren) {\n\t                                    this._enabled(false, false);\n\t                                }\n\t                                this._active = false;\n\t                            }\n\t                            if (!suppressEvents && this.vars[callback]) {\n\t                                this._callback(callback);\n\t                            }\n\t                        }\n\t                    };\n\t                    p.getActive = function(nested, tweens, timelines) {\n\t                        if (nested == null) {\n\t                            nested = true;\n\t                        }\n\t                        if (tweens == null) {\n\t                            tweens = true;\n\t                        }\n\t                        if (timelines == null) {\n\t                            timelines = false;\n\t                        }\n\t                        var a = [], all = this.getChildren(nested, tweens, timelines), cnt = 0, l = all.length, i, tween;\n\t                        for (i = 0; i < l; i++) {\n\t                            tween = all[i];\n\t                            if (tween.isActive()) {\n\t                                a[cnt++] = tween;\n\t                            }\n\t                        }\n\t                        return a;\n\t                    };\n\t                    p.getLabelAfter = function(time) {\n\t                        if (!time) if (time !== 0) {\n\t                            time = this._time;\n\t                        }\n\t                        var labels = this.getLabelsArray(), l = labels.length, i;\n\t                        for (i = 0; i < l; i++) {\n\t                            if (labels[i].time > time) {\n\t                                return labels[i].name;\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    p.getLabelBefore = function(time) {\n\t                        if (time == null) {\n\t                            time = this._time;\n\t                        }\n\t                        var labels = this.getLabelsArray(), i = labels.length;\n\t                        while (--i > -1) {\n\t                            if (labels[i].time < time) {\n\t                                return labels[i].name;\n\t                            }\n\t                        }\n\t                        return null;\n\t                    };\n\t                    p.getLabelsArray = function() {\n\t                        var a = [], cnt = 0, p;\n\t                        for (p in this._labels) {\n\t                            a[cnt++] = {\n\t                                time: this._labels[p],\n\t                                name: p\n\t                            };\n\t                        }\n\t                        a.sort(function(a, b) {\n\t                            return a.time - b.time;\n\t                        });\n\t                        return a;\n\t                    };\n\t                    p.progress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n\t                    };\n\t                    p.totalProgress = function(value, suppressEvents) {\n\t                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n\t                    };\n\t                    p.totalDuration = function(value) {\n\t                        if (!arguments.length) {\n\t                            if (this._dirty) {\n\t                                TimelineLite.prototype.totalDuration.call(this);\n\t                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n\t                            }\n\t                            return this._totalDuration;\n\t                        }\n\t                        return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);\n\t                    };\n\t                    p.time = function(value, suppressEvents) {\n\t                        if (!arguments.length) {\n\t                            return this._time;\n\t                        }\n\t                        if (this._dirty) {\n\t                            this.totalDuration();\n\t                        }\n\t                        if (value > this._duration) {\n\t                            value = this._duration;\n\t                        }\n\t                        if (this._yoyo && (this._cycle & 1) !== 0) {\n\t                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n\t                        } else if (this._repeat !== 0) {\n\t                            value += this._cycle * (this._duration + this._repeatDelay);\n\t                        }\n\t                        return this.totalTime(value, suppressEvents);\n\t                    };\n\t                    p.repeat = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeat;\n\t                        }\n\t                        this._repeat = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.repeatDelay = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._repeatDelay;\n\t                        }\n\t                        this._repeatDelay = value;\n\t                        return this._uncache(true);\n\t                    };\n\t                    p.yoyo = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this._yoyo;\n\t                        }\n\t                        this._yoyo = value;\n\t                        return this;\n\t                    };\n\t                    p.currentLabel = function(value) {\n\t                        if (!arguments.length) {\n\t                            return this.getLabelBefore(this._time + 1e-8);\n\t                        }\n\t                        return this.seek(value, true);\n\t                    };\n\t                    return TimelineMax;\n\t                }, true);\n\t                (function() {\n\t                    var _RAD2DEG = 180 / Math.PI, _r1 = [], _r2 = [], _r3 = [], _corProps = {}, _globals = _gsScope._gsDefine.globals, Segment = function(a, b, c, d) {\n\t                        if (c === d) {\n\t                            c = d - (d - b) / 1e6;\n\t                        }\n\t                        if (a === b) {\n\t                            b = a + (c - a) / 1e6;\n\t                        }\n\t                        this.a = a;\n\t                        this.b = b;\n\t                        this.c = c;\n\t                        this.d = d;\n\t                        this.da = d - a;\n\t                        this.ca = c - a;\n\t                        this.ba = b - a;\n\t                    }, _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\", cubicToQuadratic = function(a, b, c, d) {\n\t                        var q1 = {\n\t                            a: a\n\t                        }, q2 = {}, q3 = {}, q4 = {\n\t                            c: d\n\t                        }, mab = (a + b) / 2, mbc = (b + c) / 2, mcd = (c + d) / 2, mabc = (mab + mbc) / 2, mbcd = (mbc + mcd) / 2, m8 = (mbcd - mabc) / 8;\n\t                        q1.b = mab + (a - mab) / 4;\n\t                        q2.b = mabc + m8;\n\t                        q1.c = q2.a = (q1.b + q2.b) / 2;\n\t                        q2.c = q3.a = (mabc + mbcd) / 2;\n\t                        q3.b = mbcd - m8;\n\t                        q4.b = mcd + (d - mcd) / 4;\n\t                        q3.c = q4.a = (q3.b + q4.b) / 2;\n\t                        return [ q1, q2, q3, q4 ];\n\t                    }, _calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t                        var l = a.length - 1, ii = 0, cp1 = a[0].a, i, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t                        for (i = 0; i < l; i++) {\n\t                            seg = a[ii];\n\t                            p1 = seg.a;\n\t                            p2 = seg.d;\n\t                            p3 = a[ii + 1].d;\n\t                            if (correlate) {\n\t                                r1 = _r1[i];\n\t                                r2 = _r2[i];\n\t                                tl = (r2 + r1) * curviness * .25 / (basic ? .5 : _r3[i] || .5);\n\t                                m1 = p2 - (p2 - p1) * (basic ? curviness * .5 : r1 !== 0 ? tl / r1 : 0);\n\t                                m2 = p2 + (p3 - p2) * (basic ? curviness * .5 : r2 !== 0 ? tl / r2 : 0);\n\t                                mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + .5) / 4 || 0));\n\t                            } else {\n\t                                m1 = p2 - (p2 - p1) * curviness * .5;\n\t                                m2 = p2 + (p3 - p2) * curviness * .5;\n\t                                mm = p2 - (m1 + m2) / 2;\n\t                            }\n\t                            m1 += mm;\n\t                            m2 += mm;\n\t                            seg.c = cp2 = m1;\n\t                            if (i !== 0) {\n\t                                seg.b = cp1;\n\t                            } else {\n\t                                seg.b = cp1 = seg.a + (seg.c - seg.a) * .6;\n\t                            }\n\t                            seg.da = p2 - p1;\n\t                            seg.ca = cp2 - p1;\n\t                            seg.ba = cp1 - p1;\n\t                            if (quad) {\n\t                                qb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t                                a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t                                ii += 4;\n\t                            } else {\n\t                                ii++;\n\t                            }\n\t                            cp1 = m2;\n\t                        }\n\t                        seg = a[ii];\n\t                        seg.b = cp1;\n\t                        seg.c = cp1 + (seg.d - cp1) * .4;\n\t                        seg.da = seg.d - seg.a;\n\t                        seg.ca = seg.c - seg.a;\n\t                        seg.ba = cp1 - seg.a;\n\t                        if (quad) {\n\t                            qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t                            a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t                        }\n\t                    }, _parseAnchors = function(values, p, correlate, prepend) {\n\t                        var a = [], l, i, p1, p2, p3, tmp;\n\t                        if (prepend) {\n\t                            values = [ prepend ].concat(values);\n\t                            i = values.length;\n\t                            while (--i > -1) {\n\t                                if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t                                    values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n\t                                }\n\t                            }\n\t                        }\n\t                        l = values.length - 2;\n\t                        if (l < 0) {\n\t                            a[0] = new Segment(values[0][p], 0, 0, values[l < -1 ? 0 : 1][p]);\n\t                            return a;\n\t                        }\n\t                        for (i = 0; i < l; i++) {\n\t                            p1 = values[i][p];\n\t                            p2 = values[i + 1][p];\n\t                            a[i] = new Segment(p1, 0, 0, p2);\n\t                            if (correlate) {\n\t                                p3 = values[i + 2][p];\n\t                                _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t                                _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t                            }\n\t                        }\n\t                        a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n\t                        return a;\n\t                    }, bezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t                        var obj = {}, props = [], first = prepend || values[0], i, p, a, j, r, l, seamless, last;\n\t                        correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n\t                        if (curviness == null) {\n\t                            curviness = 1;\n\t                        }\n\t                        for (p in values[0]) {\n\t                            props.push(p);\n\t                        }\n\t                        if (values.length > 1) {\n\t                            last = values[values.length - 1];\n\t                            seamless = true;\n\t                            i = props.length;\n\t                            while (--i > -1) {\n\t                                p = props[i];\n\t                                if (Math.abs(first[p] - last[p]) > .05) {\n\t                                    seamless = false;\n\t                                    break;\n\t                                }\n\t                            }\n\t                            if (seamless) {\n\t                                values = values.concat();\n\t                                if (prepend) {\n\t                                    values.unshift(prepend);\n\t                                }\n\t                                values.push(values[1]);\n\t                                prepend = values[values.length - 3];\n\t                            }\n\t                        }\n\t                        _r1.length = _r2.length = _r3.length = 0;\n\t                        i = props.length;\n\t                        while (--i > -1) {\n\t                            p = props[i];\n\t                            _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n\t                            obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t                        }\n\t                        i = _r1.length;\n\t                        while (--i > -1) {\n\t                            _r1[i] = Math.sqrt(_r1[i]);\n\t                            _r2[i] = Math.sqrt(_r2[i]);\n\t                        }\n\t                        if (!basic) {\n\t                            i = props.length;\n\t                            while (--i > -1) {\n\t                                if (_corProps[p]) {\n\t                                    a = obj[props[i]];\n\t                                    l = a.length - 1;\n\t                                    for (j = 0; j < l; j++) {\n\t                                        r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n\t                                        _r3[j] = (_r3[j] || 0) + r * r;\n\t                                    }\n\t                                }\n\t                            }\n\t                            i = _r3.length;\n\t                            while (--i > -1) {\n\t                                _r3[i] = Math.sqrt(_r3[i]);\n\t                            }\n\t                        }\n\t                        i = props.length;\n\t                        j = quadratic ? 4 : 1;\n\t                        while (--i > -1) {\n\t                            p = props[i];\n\t                            a = obj[p];\n\t                            _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n\t                            if (seamless) {\n\t                                a.splice(0, j);\n\t                                a.splice(a.length - j, j);\n\t                            }\n\t                        }\n\t                        return obj;\n\t                    }, _parseBezierData = function(values, type, prepend) {\n\t                        type = type || \"soft\";\n\t                        var obj = {}, inc = type === \"cubic\" ? 3 : 2, soft = type === \"soft\", props = [], a, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t                        if (soft && prepend) {\n\t                            values = [ prepend ].concat(values);\n\t                        }\n\t                        if (values == null || values.length < inc + 1) {\n\t                            throw \"invalid Bezier data\";\n\t                        }\n\t                        for (p in values[0]) {\n\t                            props.push(p);\n\t                        }\n\t                        i = props.length;\n\t                        while (--i > -1) {\n\t                            p = props[i];\n\t                            obj[p] = cur = [];\n\t                            cnt = 0;\n\t                            l = values.length;\n\t                            for (j = 0; j < l; j++) {\n\t                                a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t                                if (soft) if (j > 1) if (j < l - 1) {\n\t                                    cur[cnt++] = (a + cur[cnt - 2]) / 2;\n\t                                }\n\t                                cur[cnt++] = a;\n\t                            }\n\t                            l = cnt - inc + 1;\n\t                            cnt = 0;\n\t                            for (j = 0; j < l; j += inc) {\n\t                                a = cur[j];\n\t                                b = cur[j + 1];\n\t                                c = cur[j + 2];\n\t                                d = inc === 2 ? 0 : cur[j + 3];\n\t                                cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t                            }\n\t                            cur.length = cnt;\n\t                        }\n\t                        return obj;\n\t                    }, _addCubicLengths = function(a, steps, resolution) {\n\t                        var inc = 1 / resolution, j = a.length, d, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t                        while (--j > -1) {\n\t                            bez = a[j];\n\t                            s = bez.a;\n\t                            da = bez.d - s;\n\t                            ca = bez.c - s;\n\t                            ba = bez.b - s;\n\t                            d = d1 = 0;\n\t                            for (i = 1; i <= resolution; i++) {\n\t                                p = inc * i;\n\t                                inv = 1 - p;\n\t                                d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t                                index = j * resolution + i - 1;\n\t                                steps[index] = (steps[index] || 0) + d * d;\n\t                            }\n\t                        }\n\t                    }, _parseLengthData = function(obj, resolution) {\n\t                        resolution = resolution >> 0 || 6;\n\t                        var a = [], lengths = [], d = 0, total = 0, threshold = resolution - 1, segments = [], curLS = [], p, i, l, index;\n\t                        for (p in obj) {\n\t                            _addCubicLengths(obj[p], a, resolution);\n\t                        }\n\t                        l = a.length;\n\t                        for (i = 0; i < l; i++) {\n\t                            d += Math.sqrt(a[i]);\n\t                            index = i % resolution;\n\t                            curLS[index] = d;\n\t                            if (index === threshold) {\n\t                                total += d;\n\t                                index = i / resolution >> 0;\n\t                                segments[index] = curLS;\n\t                                lengths[index] = total;\n\t                                d = 0;\n\t                                curLS = [];\n\t                            }\n\t                        }\n\t                        return {\n\t                            length: total,\n\t                            lengths: lengths,\n\t                            segments: segments\n\t                        };\n\t                    }, BezierPlugin = _gsScope._gsDefine.plugin({\n\t                        propName: \"bezier\",\n\t                        priority: -1,\n\t                        version: \"1.3.6\",\n\t                        API: 2,\n\t                        global: true,\n\t                        init: function(target, vars, tween) {\n\t                            this._target = target;\n\t                            if (vars instanceof Array) {\n\t                                vars = {\n\t                                    values: vars\n\t                                };\n\t                            }\n\t                            this._func = {};\n\t                            this._round = {};\n\t                            this._props = [];\n\t                            this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n\t                            var values = vars.values || [], first = {}, second = values[0], autoRotate = vars.autoRotate || tween.vars.orientToBezier, p, isFunc, i, j, prepend;\n\t                            this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [ [ \"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0 ] ] : null;\n\t                            for (p in second) {\n\t                                this._props.push(p);\n\t                            }\n\t                            i = this._props.length;\n\t                            while (--i > -1) {\n\t                                p = this._props[i];\n\t                                this._overwriteProps.push(p);\n\t                                isFunc = this._func[p] = typeof target[p] === \"function\";\n\t                                first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n\t                                if (!prepend) if (first[p] !== values[0][p]) {\n\t                                    prepend = first;\n\t                                }\n\t                            }\n\t                            this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t                            this._segCount = this._beziers[p].length;\n\t                            if (this._timeRes) {\n\t                                var ld = _parseLengthData(this._beziers, this._timeRes);\n\t                                this._length = ld.length;\n\t                                this._lengths = ld.lengths;\n\t                                this._segments = ld.segments;\n\t                                this._l1 = this._li = this._s1 = this._si = 0;\n\t                                this._l2 = this._lengths[0];\n\t                                this._curSeg = this._segments[0];\n\t                                this._s2 = this._curSeg[0];\n\t                                this._prec = 1 / this._curSeg.length;\n\t                            }\n\t                            if (autoRotate = this._autoRotate) {\n\t                                this._initialRotations = [];\n\t                                if (!(autoRotate[0] instanceof Array)) {\n\t                                    this._autoRotate = autoRotate = [ autoRotate ];\n\t                                }\n\t                                i = autoRotate.length;\n\t                                while (--i > -1) {\n\t                                    for (j = 0; j < 3; j++) {\n\t                                        p = autoRotate[i][j];\n\t                                        this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n\t                                    }\n\t                                    p = autoRotate[i][2];\n\t                                    this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t                                }\n\t                            }\n\t                            this._startRatio = tween.vars.runBackwards ? 1 : 0;\n\t                            return true;\n\t                        },\n\t                        set: function(v) {\n\t                            var segments = this._segCount, func = this._func, target = this._target, notStart = v !== this._startRatio, curIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n\t                            if (!this._timeRes) {\n\t                                curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n\t                                t = (v - curIndex * (1 / segments)) * segments;\n\t                            } else {\n\t                                lengths = this._lengths;\n\t                                curSeg = this._curSeg;\n\t                                v *= this._length;\n\t                                i = this._li;\n\t                                if (v > this._l2 && i < segments - 1) {\n\t                                    l = segments - 1;\n\t                                    while (i < l && (this._l2 = lengths[++i]) <= v) {}\n\t                                    this._l1 = lengths[i - 1];\n\t                                    this._li = i;\n\t                                    this._curSeg = curSeg = this._segments[i];\n\t                                    this._s2 = curSeg[this._s1 = this._si = 0];\n\t                                } else if (v < this._l1 && i > 0) {\n\t                                    while (i > 0 && (this._l1 = lengths[--i]) >= v) {}\n\t                                    if (i === 0 && v < this._l1) {\n\t                                        this._l1 = 0;\n\t                                    } else {\n\t                                        i++;\n\t                                    }\n\t                                    this._l2 = lengths[i];\n\t                                    this._li = i;\n\t                                    this._curSeg = curSeg = this._segments[i];\n\t                                    this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t                                    this._s2 = curSeg[this._si];\n\t                                }\n\t                                curIndex = i;\n\t                                v -= this._l1;\n\t                                i = this._si;\n\t                                if (v > this._s2 && i < curSeg.length - 1) {\n\t                                    l = curSeg.length - 1;\n\t                                    while (i < l && (this._s2 = curSeg[++i]) <= v) {}\n\t                                    this._s1 = curSeg[i - 1];\n\t                                    this._si = i;\n\t                                } else if (v < this._s1 && i > 0) {\n\t                                    while (i > 0 && (this._s1 = curSeg[--i]) >= v) {}\n\t                                    if (i === 0 && v < this._s1) {\n\t                                        this._s1 = 0;\n\t                                    } else {\n\t                                        i++;\n\t                                    }\n\t                                    this._s2 = curSeg[i];\n\t                                    this._si = i;\n\t                                }\n\t                                t = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n\t                            }\n\t                            inv = 1 - t;\n\t                            i = this._props.length;\n\t                            while (--i > -1) {\n\t                                p = this._props[i];\n\t                                b = this._beziers[p][curIndex];\n\t                                val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t                                if (this._round[p]) {\n\t                                    val = Math.round(val);\n\t                                }\n\t                                if (func[p]) {\n\t                                    target[p](val);\n\t                                } else {\n\t                                    target[p] = val;\n\t                                }\n\t                            }\n\t                            if (this._autoRotate) {\n\t                                var ar = this._autoRotate, b2, x1, y1, x2, y2, add, conv;\n\t                                i = ar.length;\n\t                                while (--i > -1) {\n\t                                    p = ar[i][2];\n\t                                    add = ar[i][3] || 0;\n\t                                    conv = ar[i][4] === true ? 1 : _RAD2DEG;\n\t                                    b = this._beziers[ar[i][0]];\n\t                                    b2 = this._beziers[ar[i][1]];\n\t                                    if (b && b2) {\n\t                                        b = b[curIndex];\n\t                                        b2 = b2[curIndex];\n\t                                        x1 = b.a + (b.b - b.a) * t;\n\t                                        x2 = b.b + (b.c - b.b) * t;\n\t                                        x1 += (x2 - x1) * t;\n\t                                        x2 += (b.c + (b.d - b.c) * t - x2) * t;\n\t                                        y1 = b2.a + (b2.b - b2.a) * t;\n\t                                        y2 = b2.b + (b2.c - b2.b) * t;\n\t                                        y1 += (y2 - y1) * t;\n\t                                        y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n\t                                        val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\t                                        if (func[p]) {\n\t                                            target[p](val);\n\t                                        } else {\n\t                                            target[p] = val;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }), p = BezierPlugin.prototype;\n\t                    BezierPlugin.bezierThrough = bezierThrough;\n\t                    BezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t                    BezierPlugin._autoCSS = true;\n\t                    BezierPlugin.quadraticToCubic = function(a, b, c) {\n\t                        return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t                    };\n\t                    BezierPlugin._cssRegister = function() {\n\t                        var CSSPlugin = _globals.CSSPlugin;\n\t                        if (!CSSPlugin) {\n\t                            return;\n\t                        }\n\t                        var _internals = CSSPlugin._internals, _parseToProxy = _internals._parseToProxy, _setPluginRatio = _internals._setPluginRatio, CSSPropTween = _internals.CSSPropTween;\n\t                        _internals._registerComplexSpecialProp(\"bezier\", {\n\t                            parser: function(t, e, prop, cssp, pt, plugin) {\n\t                                if (e instanceof Array) {\n\t                                    e = {\n\t                                        values: e\n\t                                    };\n\t                                }\n\t                                plugin = new BezierPlugin();\n\t                                var values = e.values, l = values.length - 1, pluginValues = [], v = {}, i, p, data;\n\t                                if (l < 0) {\n\t                                    return pt;\n\t                                }\n\t                                for (i = 0; i <= l; i++) {\n\t                                    data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n\t                                    pluginValues[i] = data.end;\n\t                                }\n\t                                for (p in e) {\n\t                                    v[p] = e[p];\n\t                                }\n\t                                v.values = pluginValues;\n\t                                pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t                                pt.data = data;\n\t                                pt.plugin = plugin;\n\t                                pt.setRatio = _setPluginRatio;\n\t                                if (v.autoRotate === 0) {\n\t                                    v.autoRotate = true;\n\t                                }\n\t                                if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t                                    i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n\t                                    v.autoRotate = data.end.left != null ? [ [ \"left\", \"top\", \"rotation\", i, false ] ] : data.end.x != null ? [ [ \"x\", \"y\", \"rotation\", i, false ] ] : false;\n\t                                }\n\t                                if (v.autoRotate) {\n\t                                    if (!cssp._transform) {\n\t                                        cssp._enableTransforms(false);\n\t                                    }\n\t                                    data.autoRotate = cssp._target._gsTransform;\n\t                                    data.proxy.rotation = data.autoRotate.rotation || 0;\n\t                                }\n\t                                plugin._onInitTween(data.proxy, v, cssp._tween);\n\t                                return pt;\n\t                            }\n\t                        });\n\t                    };\n\t                    p._roundProps = function(lookup, value) {\n\t                        var op = this._overwriteProps, i = op.length;\n\t                        while (--i > -1) {\n\t                            if (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n\t                                this._round[op[i]] = value;\n\t                            }\n\t                        }\n\t                    };\n\t                    p._kill = function(lookup) {\n\t                        var a = this._props, p, i;\n\t                        for (p in this._beziers) {\n\t                            if (p in lookup) {\n\t                                delete this._beziers[p];\n\t                                delete this._func[p];\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    if (a[i] === p) {\n\t                                        a.splice(i, 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                        return this._super._kill.call(this, lookup);\n\t                    };\n\t                })();\n\t                _gsScope._gsDefine(\"plugins.CSSPlugin\", [ \"plugins.TweenPlugin\", \"TweenLite\" ], function(TweenPlugin, TweenLite) {\n\t                    var CSSPlugin = function() {\n\t                        TweenPlugin.call(this, \"css\");\n\t                        this._overwriteProps.length = 0;\n\t                        this.setRatio = CSSPlugin.prototype.setRatio;\n\t                    }, _globals = _gsScope._gsDefine.globals, _hasPriority, _suffixMap, _cs, _overwriteProps, _specialProps = {}, p = CSSPlugin.prototype = new TweenPlugin(\"css\");\n\t                    p.constructor = CSSPlugin;\n\t                    CSSPlugin.version = \"1.18.5\";\n\t                    CSSPlugin.API = 2;\n\t                    CSSPlugin.defaultTransformPerspective = 0;\n\t                    CSSPlugin.defaultSkewType = \"compensated\";\n\t                    CSSPlugin.defaultSmoothOrigin = true;\n\t                    p = \"px\";\n\t                    CSSPlugin.suffixMap = {\n\t                        top: p,\n\t                        right: p,\n\t                        bottom: p,\n\t                        left: p,\n\t                        width: p,\n\t                        height: p,\n\t                        fontSize: p,\n\t                        padding: p,\n\t                        margin: p,\n\t                        perspective: p,\n\t                        lineHeight: \"\"\n\t                    };\n\t                    var _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g, _relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g, _valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, _NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, _suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g, _opacityExp = /opacity *= *([^)]*)/i, _opacityValExp = /opacity:([^;]*)/i, _alphaFilterExp = /alpha\\(opacity *=.+?\\)/i, _rgbhslExp = /^(rgb|hsl)/, _capsExp = /([A-Z])/g, _camelExp = /-([a-z])/gi, _urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, _camelFunc = function(s, g) {\n\t                        return g.toUpperCase();\n\t                    }, _horizExp = /(?:Left|Right|Width)/i, _ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi, _ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i, _commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, _complexExp = /[\\s,\\(]/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _forcePT = {}, _doc = document, _createElement = function(type) {\n\t                        return _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n\t                    }, _tempDiv = _createElement(\"div\"), _tempImg = _createElement(\"img\"), _internals = CSSPlugin._internals = {\n\t                        _specialProps: _specialProps\n\t                    }, _agent = navigator.userAgent, _autoRound, _reqSafariFix, _isSafari, _isFirefox, _isSafariLT6, _ieVers, _supportsOpacity = function() {\n\t                        var i = _agent.indexOf(\"Android\"), a = _createElement(\"a\");\n\t                        _isSafari = _agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i + 8, 1)) > 3);\n\t                        _isSafariLT6 = _isSafari && Number(_agent.substr(_agent.indexOf(\"Version/\") + 8, 1)) < 6;\n\t                        _isFirefox = _agent.indexOf(\"Firefox\") !== -1;\n\t                        if (/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(_agent) || /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(_agent)) {\n\t                            _ieVers = parseFloat(RegExp.$1);\n\t                        }\n\t                        if (!a) {\n\t                            return false;\n\t                        }\n\t                        a.style.cssText = \"top:1px;opacity:.55;\";\n\t                        return /^0.55/.test(a.style.opacity);\n\t                    }(), _getIEOpacity = function(v) {\n\t                        return _opacityExp.test(typeof v === \"string\" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ? parseFloat(RegExp.$1) / 100 : 1;\n\t                    }, _log = function(s) {\n\t                        if (window.console) {\n\t                            console.log(s);\n\t                        }\n\t                    }, _prefixCSS = \"\", _prefix = \"\", _checkPropPrefix = function(p, e) {\n\t                        e = e || _tempDiv;\n\t                        var s = e.style, a, i;\n\t                        if (s[p] !== undefined) {\n\t                            return p;\n\t                        }\n\t                        p = p.charAt(0).toUpperCase() + p.substr(1);\n\t                        a = [ \"O\", \"Moz\", \"ms\", \"Ms\", \"Webkit\" ];\n\t                        i = 5;\n\t                        while (--i > -1 && s[a[i] + p] === undefined) {}\n\t                        if (i >= 0) {\n\t                            _prefix = i === 3 ? \"ms\" : a[i];\n\t                            _prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n\t                            return _prefix + p;\n\t                        }\n\t                        return null;\n\t                    }, _getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {}, _getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n\t                        var rv;\n\t                        if (!_supportsOpacity) if (p === \"opacity\") {\n\t                            return _getIEOpacity(t);\n\t                        }\n\t                        if (!calc && t.style[p]) {\n\t                            rv = t.style[p];\n\t                        } else if (cs = cs || _getComputedStyle(t)) {\n\t                            rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t                        } else if (t.currentStyle) {\n\t                            rv = t.currentStyle[p];\n\t                        }\n\t                        return dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\") ? dflt : rv;\n\t                    }, _convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n\t                        if (sfx === \"px\" || !sfx) {\n\t                            return v;\n\t                        }\n\t                        if (sfx === \"auto\" || !v) {\n\t                            return 0;\n\t                        }\n\t                        var horiz = _horizExp.test(p), node = t, style = _tempDiv.style, neg = v < 0, precise = v === 1, pix, cache, time;\n\t                        if (neg) {\n\t                            v = -v;\n\t                        }\n\t                        if (precise) {\n\t                            v *= 100;\n\t                        }\n\t                        if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n\t                            pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);\n\t                        } else {\n\t                            style.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n\t                            if (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n\t                                node = t.parentNode || _doc.body;\n\t                                cache = node._gsCache;\n\t                                time = TweenLite.ticker.frame;\n\t                                if (cache && horiz && cache.time === time) {\n\t                                    return cache.width * v / 100;\n\t                                }\n\t                                style[horiz ? \"width\" : \"height\"] = v + sfx;\n\t                            } else {\n\t                                style[horiz ? \"borderLeftWidth\" : \"borderTopWidth\"] = v + sfx;\n\t                            }\n\t                            node.appendChild(_tempDiv);\n\t                            pix = parseFloat(_tempDiv[horiz ? \"offsetWidth\" : \"offsetHeight\"]);\n\t                            node.removeChild(_tempDiv);\n\t                            if (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n\t                                cache = node._gsCache = node._gsCache || {};\n\t                                cache.time = time;\n\t                                cache.width = pix / v * 100;\n\t                            }\n\t                            if (pix === 0 && !recurse) {\n\t                                pix = _convertToPixels(t, p, v, sfx, true);\n\t                            }\n\t                        }\n\t                        if (precise) {\n\t                            pix /= 100;\n\t                        }\n\t                        return neg ? -pix : pix;\n\t                    }, _calculateOffset = _internals.calculateOffset = function(t, p, cs) {\n\t                        if (_getStyle(t, \"position\", cs) !== \"absolute\") {\n\t                            return 0;\n\t                        }\n\t                        var dim = p === \"left\" ? \"Left\" : \"Top\", v = _getStyle(t, \"margin\" + dim, cs);\n\t                        return t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n\t                    }, _getAllStyles = function(t, cs) {\n\t                        var s = {}, i, tr, p;\n\t                        if (cs = cs || _getComputedStyle(t, null)) {\n\t                            if (i = cs.length) {\n\t                                while (--i > -1) {\n\t                                    p = cs[i];\n\t                                    if (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) {\n\t                                        s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (i in cs) {\n\t                                    if (i.indexOf(\"Transform\") === -1 || _transformProp === i) {\n\t                                        s[i] = cs[i];\n\t                                    }\n\t                                }\n\t                            }\n\t                        } else if (cs = t.currentStyle || t.style) {\n\t                            for (i in cs) {\n\t                                if (typeof i === \"string\" && s[i] === undefined) {\n\t                                    s[i.replace(_camelExp, _camelFunc)] = cs[i];\n\t                                }\n\t                            }\n\t                        }\n\t                        if (!_supportsOpacity) {\n\t                            s.opacity = _getIEOpacity(t);\n\t                        }\n\t                        tr = _getTransform(t, cs, false);\n\t                        s.rotation = tr.rotation;\n\t                        s.skewX = tr.skewX;\n\t                        s.scaleX = tr.scaleX;\n\t                        s.scaleY = tr.scaleY;\n\t                        s.x = tr.x;\n\t                        s.y = tr.y;\n\t                        if (_supports3D) {\n\t                            s.z = tr.z;\n\t                            s.rotationX = tr.rotationX;\n\t                            s.rotationY = tr.rotationY;\n\t                            s.scaleZ = tr.scaleZ;\n\t                        }\n\t                        if (s.filters) {\n\t                            delete s.filters;\n\t                        }\n\t                        return s;\n\t                    }, _cssDif = function(t, s1, s2, vars, forceLookup) {\n\t                        var difs = {}, style = t.style, val, p, mpt;\n\t                        for (p in s2) {\n\t                            if (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf(\"Origin\") === -1) if (typeof val === \"number\" || typeof val === \"string\") {\n\t                                difs[p] = val === \"auto\" && (p === \"left\" || p === \"top\") ? _calculateOffset(t, p) : (val === \"\" || val === \"auto\" || val === \"none\") && typeof s1[p] === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\" ? 0 : val;\n\t                                if (style[p] !== undefined) {\n\t                                    mpt = new MiniPropTween(style, p, style[p], mpt);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (vars) {\n\t                            for (p in vars) {\n\t                                if (p !== \"className\") {\n\t                                    difs[p] = vars[p];\n\t                                }\n\t                            }\n\t                        }\n\t                        return {\n\t                            difs: difs,\n\t                            firstMPT: mpt\n\t                        };\n\t                    }, _dimensions = {\n\t                        width: [ \"Left\", \"Right\" ],\n\t                        height: [ \"Top\", \"Bottom\" ]\n\t                    }, _margins = [ \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\" ], _getDimension = function(t, p, cs) {\n\t                        if ((t.nodeName + \"\").toLowerCase() === \"svg\") {\n\t                            return (cs || _getComputedStyle(t))[p] || 0;\n\t                        } else if (t.getBBox && _isSVG(t)) {\n\t                            return t.getBBox()[p] || 0;\n\t                        }\n\t                        var v = parseFloat(p === \"width\" ? t.offsetWidth : t.offsetHeight), a = _dimensions[p], i = a.length;\n\t                        cs = cs || _getComputedStyle(t, null);\n\t                        while (--i > -1) {\n\t                            v -= parseFloat(_getStyle(t, \"padding\" + a[i], cs, true)) || 0;\n\t                            v -= parseFloat(_getStyle(t, \"border\" + a[i] + \"Width\", cs, true)) || 0;\n\t                        }\n\t                        return v;\n\t                    }, _parsePosition = function(v, recObj) {\n\t                        if (v === \"contain\" || v === \"auto\" || v === \"auto auto\") {\n\t                            return v + \" \";\n\t                        }\n\t                        if (v == null || v === \"\") {\n\t                            v = \"0 0\";\n\t                        }\n\t                        var a = v.split(\" \"), x = v.indexOf(\"left\") !== -1 ? \"0%\" : v.indexOf(\"right\") !== -1 ? \"100%\" : a[0], y = v.indexOf(\"top\") !== -1 ? \"0%\" : v.indexOf(\"bottom\") !== -1 ? \"100%\" : a[1], i;\n\t                        if (a.length > 3 && !recObj) {\n\t                            a = v.split(\", \").join(\",\").split(\",\");\n\t                            v = [];\n\t                            for (i = 0; i < a.length; i++) {\n\t                                v.push(_parsePosition(a[i]));\n\t                            }\n\t                            return v.join(\",\");\n\t                        }\n\t                        if (y == null) {\n\t                            y = x === \"center\" ? \"50%\" : \"0\";\n\t                        } else if (y === \"center\") {\n\t                            y = \"50%\";\n\t                        }\n\t                        if (x === \"center\" || isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1) {\n\t                            x = \"50%\";\n\t                        }\n\t                        v = x + \" \" + y + (a.length > 2 ? \" \" + a[2] : \"\");\n\t                        if (recObj) {\n\t                            recObj.oxp = x.indexOf(\"%\") !== -1;\n\t                            recObj.oyp = y.indexOf(\"%\") !== -1;\n\t                            recObj.oxr = x.charAt(1) === \"=\";\n\t                            recObj.oyr = y.charAt(1) === \"=\";\n\t                            recObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n\t                            recObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n\t                            recObj.v = v;\n\t                        }\n\t                        return recObj || v;\n\t                    }, _parseChange = function(e, b) {\n\t                        return typeof e === \"string\" && e.charAt(1) === \"=\" ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;\n\t                    }, _parseVal = function(v, d) {\n\t                        return v == null ? d : typeof v === \"string\" && v.charAt(1) === \"=\" ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n\t                    }, _parseAngle = function(v, d, p, directionalEnd) {\n\t                        var min = 1e-6, cap, split, dif, result, isRelative;\n\t                        if (v == null) {\n\t                            result = d;\n\t                        } else if (typeof v === \"number\") {\n\t                            result = v;\n\t                        } else {\n\t                            cap = 360;\n\t                            split = v.split(\"_\");\n\t                            isRelative = v.charAt(1) === \"=\";\n\t                            dif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf(\"rad\") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n\t                            if (split.length) {\n\t                                if (directionalEnd) {\n\t                                    directionalEnd[p] = d + dif;\n\t                                }\n\t                                if (v.indexOf(\"short\") !== -1) {\n\t                                    dif = dif % cap;\n\t                                    if (dif !== dif % (cap / 2)) {\n\t                                        dif = dif < 0 ? dif + cap : dif - cap;\n\t                                    }\n\t                                }\n\t                                if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t                                    dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t                                    dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                }\n\t                            }\n\t                            result = d + dif;\n\t                        }\n\t                        if (result < min && result > -min) {\n\t                            result = 0;\n\t                        }\n\t                        return result;\n\t                    }, _colorLookup = {\n\t                        aqua: [ 0, 255, 255 ],\n\t                        lime: [ 0, 255, 0 ],\n\t                        silver: [ 192, 192, 192 ],\n\t                        black: [ 0, 0, 0 ],\n\t                        maroon: [ 128, 0, 0 ],\n\t                        teal: [ 0, 128, 128 ],\n\t                        blue: [ 0, 0, 255 ],\n\t                        navy: [ 0, 0, 128 ],\n\t                        white: [ 255, 255, 255 ],\n\t                        fuchsia: [ 255, 0, 255 ],\n\t                        olive: [ 128, 128, 0 ],\n\t                        yellow: [ 255, 255, 0 ],\n\t                        orange: [ 255, 165, 0 ],\n\t                        gray: [ 128, 128, 128 ],\n\t                        purple: [ 128, 0, 128 ],\n\t                        green: [ 0, 128, 0 ],\n\t                        red: [ 255, 0, 0 ],\n\t                        pink: [ 255, 192, 203 ],\n\t                        cyan: [ 0, 255, 255 ],\n\t                        transparent: [ 255, 255, 255, 0 ]\n\t                    }, _hue = function(h, m1, m2) {\n\t                        h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n\t                        return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + .5 | 0;\n\t                    }, _parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n\t                        var a, r, g, b, h, s, l, max, min, d, wasHSL;\n\t                        if (!v) {\n\t                            a = _colorLookup.black;\n\t                        } else if (typeof v === \"number\") {\n\t                            a = [ v >> 16, v >> 8 & 255, v & 255 ];\n\t                        } else {\n\t                            if (v.charAt(v.length - 1) === \",\") {\n\t                                v = v.substr(0, v.length - 1);\n\t                            }\n\t                            if (_colorLookup[v]) {\n\t                                a = _colorLookup[v];\n\t                            } else if (v.charAt(0) === \"#\") {\n\t                                if (v.length === 4) {\n\t                                    r = v.charAt(1);\n\t                                    g = v.charAt(2);\n\t                                    b = v.charAt(3);\n\t                                    v = \"#\" + r + r + g + g + b + b;\n\t                                }\n\t                                v = parseInt(v.substr(1), 16);\n\t                                a = [ v >> 16, v >> 8 & 255, v & 255 ];\n\t                            } else if (v.substr(0, 3) === \"hsl\") {\n\t                                a = wasHSL = v.match(_numExp);\n\t                                if (!toHSL) {\n\t                                    h = Number(a[0]) % 360 / 360;\n\t                                    s = Number(a[1]) / 100;\n\t                                    l = Number(a[2]) / 100;\n\t                                    g = l <= .5 ? l * (s + 1) : l + s - l * s;\n\t                                    r = l * 2 - g;\n\t                                    if (a.length > 3) {\n\t                                        a[3] = Number(v[3]);\n\t                                    }\n\t                                    a[0] = _hue(h + 1 / 3, r, g);\n\t                                    a[1] = _hue(h, r, g);\n\t                                    a[2] = _hue(h - 1 / 3, r, g);\n\t                                } else if (v.indexOf(\"=\") !== -1) {\n\t                                    return v.match(_relNumExp);\n\t                                }\n\t                            } else {\n\t                                a = v.match(_numExp) || _colorLookup.transparent;\n\t                            }\n\t                            a[0] = Number(a[0]);\n\t                            a[1] = Number(a[1]);\n\t                            a[2] = Number(a[2]);\n\t                            if (a.length > 3) {\n\t                                a[3] = Number(a[3]);\n\t                            }\n\t                        }\n\t                        if (toHSL && !wasHSL) {\n\t                            r = a[0] / 255;\n\t                            g = a[1] / 255;\n\t                            b = a[2] / 255;\n\t                            max = Math.max(r, g, b);\n\t                            min = Math.min(r, g, b);\n\t                            l = (max + min) / 2;\n\t                            if (max === min) {\n\t                                h = s = 0;\n\t                            } else {\n\t                                d = max - min;\n\t                                s = l > .5 ? d / (2 - max - min) : d / (max + min);\n\t                                h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n\t                                h *= 60;\n\t                            }\n\t                            a[0] = h + .5 | 0;\n\t                            a[1] = s * 100 + .5 | 0;\n\t                            a[2] = l * 100 + .5 | 0;\n\t                        }\n\t                        return a;\n\t                    }, _formatColors = function(s, toHSL) {\n\t                        var colors = s.match(_colorExp) || [], charIndex = 0, parsed = colors.length ? \"\" : s, i, color, temp;\n\t                        for (i = 0; i < colors.length; i++) {\n\t                            color = colors[i];\n\t                            temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);\n\t                            charIndex += temp.length + color.length;\n\t                            color = _parseColor(color, toHSL);\n\t                            if (color.length === 3) {\n\t                                color.push(1);\n\t                            }\n\t                            parsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n\t                        }\n\t                        return parsed + s.substr(charIndex);\n\t                    }, _colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";\n\t                    for (p in _colorLookup) {\n\t                        _colorExp += \"|\" + p + \"\\\\b\";\n\t                    }\n\t                    _colorExp = new RegExp(_colorExp + \")\", \"gi\");\n\t                    CSSPlugin.colorStringFilter = function(a) {\n\t                        var combined = a[0] + a[1], toHSL;\n\t                        if (_colorExp.test(combined)) {\n\t                            toHSL = combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1;\n\t                            a[0] = _formatColors(a[0], toHSL);\n\t                            a[1] = _formatColors(a[1], toHSL);\n\t                        }\n\t                        _colorExp.lastIndex = 0;\n\t                    };\n\t                    if (!TweenLite.defaultStringFilter) {\n\t                        TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n\t                    }\n\t                    var _getFormatter = function(dflt, clr, collapsible, multi) {\n\t                        if (dflt == null) {\n\t                            return function(v) {\n\t                                return v;\n\t                            };\n\t                        }\n\t                        var dColor = clr ? (dflt.match(_colorExp) || [ \"\" ])[0] : \"\", dVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [], pfx = dflt.substr(0, dflt.indexOf(dVals[0])), sfx = dflt.charAt(dflt.length - 1) === \")\" ? \")\" : \"\", delim = dflt.indexOf(\" \") !== -1 ? \" \" : \",\", numVals = dVals.length, dSfx = numVals > 0 ? dVals[0].replace(_numExp, \"\") : \"\", formatter;\n\t                        if (!numVals) {\n\t                            return function(v) {\n\t                                return v;\n\t                            };\n\t                        }\n\t                        if (clr) {\n\t                            formatter = function(v) {\n\t                                var color, vals, i, a;\n\t                                if (typeof v === \"number\") {\n\t                                    v += dSfx;\n\t                                } else if (multi && _commasOutsideParenExp.test(v)) {\n\t                                    a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                    for (i = 0; i < a.length; i++) {\n\t                                        a[i] = formatter(a[i]);\n\t                                    }\n\t                                    return a.join(\",\");\n\t                                }\n\t                                color = (v.match(_colorExp) || [ dColor ])[0];\n\t                                vals = v.split(color).join(\"\").match(_valuesExp) || [];\n\t                                i = vals.length;\n\t                                if (numVals > i--) {\n\t                                    while (++i < numVals) {\n\t                                        vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n\t                                    }\n\t                                }\n\t                                return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n\t                            };\n\t                            return formatter;\n\t                        }\n\t                        formatter = function(v) {\n\t                            var vals, a, i;\n\t                            if (typeof v === \"number\") {\n\t                                v += dSfx;\n\t                            } else if (multi && _commasOutsideParenExp.test(v)) {\n\t                                a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                                for (i = 0; i < a.length; i++) {\n\t                                    a[i] = formatter(a[i]);\n\t                                }\n\t                                return a.join(\",\");\n\t                            }\n\t                            vals = v.match(_valuesExp) || [];\n\t                            i = vals.length;\n\t                            if (numVals > i--) {\n\t                                while (++i < numVals) {\n\t                                    vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n\t                                }\n\t                            }\n\t                            return pfx + vals.join(delim) + sfx;\n\t                        };\n\t                        return formatter;\n\t                    }, _getEdgeParser = function(props) {\n\t                        props = props.split(\",\");\n\t                        return function(t, e, p, cssp, pt, plugin, vars) {\n\t                            var a = (e + \"\").split(\" \"), i;\n\t                            vars = {};\n\t                            for (i = 0; i < 4; i++) {\n\t                                vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];\n\t                            }\n\t                            return cssp.parse(t, vars, pt, plugin);\n\t                        };\n\t                    }, _setPluginRatio = _internals._setPluginRatio = function(v) {\n\t                        this.plugin.setRatio(v);\n\t                        var d = this.data, proxy = d.proxy, mpt = d.firstMPT, min = 1e-6, val, pt, i, str, p;\n\t                        while (mpt) {\n\t                            val = proxy[mpt.v];\n\t                            if (mpt.r) {\n\t                                val = Math.round(val);\n\t                            } else if (val < min && val > -min) {\n\t                                val = 0;\n\t                            }\n\t                            mpt.t[mpt.p] = val;\n\t                            mpt = mpt._next;\n\t                        }\n\t                        if (d.autoRotate) {\n\t                            d.autoRotate.rotation = proxy.rotation;\n\t                        }\n\t                        if (v === 1 || v === 0) {\n\t                            mpt = d.firstMPT;\n\t                            p = v === 1 ? \"e\" : \"b\";\n\t                            while (mpt) {\n\t                                pt = mpt.t;\n\t                                if (!pt.type) {\n\t                                    pt[p] = pt.s + pt.xs0;\n\t                                } else if (pt.type === 1) {\n\t                                    str = pt.xs0 + pt.s + pt.xs1;\n\t                                    for (i = 1; i < pt.l; i++) {\n\t                                        str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                    }\n\t                                    pt[p] = str;\n\t                                }\n\t                                mpt = mpt._next;\n\t                            }\n\t                        }\n\t                    }, MiniPropTween = function(t, p, v, next, r) {\n\t                        this.t = t;\n\t                        this.p = p;\n\t                        this.v = v;\n\t                        this.r = r;\n\t                        if (next) {\n\t                            next._prev = this;\n\t                            this._next = next;\n\t                        }\n\t                    }, _parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n\t                        var bpt = pt, start = {}, end = {}, transform = cssp._transform, oldForce = _forcePT, i, p, xp, mpt, firstPT;\n\t                        cssp._transform = null;\n\t                        _forcePT = vars;\n\t                        pt = firstPT = cssp.parse(t, vars, pt, plugin);\n\t                        _forcePT = oldForce;\n\t                        if (shallow) {\n\t                            cssp._transform = transform;\n\t                            if (bpt) {\n\t                                bpt._prev = null;\n\t                                if (bpt._prev) {\n\t                                    bpt._prev._next = null;\n\t                                }\n\t                            }\n\t                        }\n\t                        while (pt && pt !== bpt) {\n\t                            if (pt.type <= 1) {\n\t                                p = pt.p;\n\t                                end[p] = pt.s + pt.c;\n\t                                start[p] = pt.s;\n\t                                if (!shallow) {\n\t                                    mpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n\t                                    pt.c = 0;\n\t                                }\n\t                                if (pt.type === 1) {\n\t                                    i = pt.l;\n\t                                    while (--i > 0) {\n\t                                        xp = \"xn\" + i;\n\t                                        p = pt.p + \"_\" + xp;\n\t                                        end[p] = pt.data[xp];\n\t                                        start[p] = pt[xp];\n\t                                        if (!shallow) {\n\t                                            mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                            pt = pt._next;\n\t                        }\n\t                        return {\n\t                            proxy: start,\n\t                            end: end,\n\t                            firstMPT: mpt,\n\t                            pt: firstPT\n\t                        };\n\t                    }, CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n\t                        this.t = t;\n\t                        this.p = p;\n\t                        this.s = s;\n\t                        this.c = c;\n\t                        this.n = n || p;\n\t                        if (!(t instanceof CSSPropTween)) {\n\t                            _overwriteProps.push(this.n);\n\t                        }\n\t                        this.r = r;\n\t                        this.type = type || 0;\n\t                        if (pr) {\n\t                            this.pr = pr;\n\t                            _hasPriority = true;\n\t                        }\n\t                        this.b = b === undefined ? s : b;\n\t                        this.e = e === undefined ? s + c : e;\n\t                        if (next) {\n\t                            this._next = next;\n\t                            next._prev = this;\n\t                        }\n\t                    }, _addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) {\n\t                        var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n\t                        pt.b = start;\n\t                        pt.e = pt.xs0 = end;\n\t                        return pt;\n\t                    }, _parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n\t                        b = b || dflt || \"\";\n\t                        pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);\n\t                        e += \"\";\n\t                        if (clrs && _colorExp.test(e + b)) {\n\t                            e = [ b, e ];\n\t                            CSSPlugin.colorStringFilter(e);\n\t                            b = e[0];\n\t                            e = e[1];\n\t                        }\n\t                        var ba = b.split(\", \").join(\",\").split(\" \"), ea = e.split(\", \").join(\",\").split(\" \"), l = ba.length, autoRound = _autoRound !== false, i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n\t                        if (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n\t                            ba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t                            ea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t                            l = ba.length;\n\t                        }\n\t                        if (l !== ea.length) {\n\t                            ba = (dflt || \"\").split(\" \");\n\t                            l = ba.length;\n\t                        }\n\t                        pt.plugin = plugin;\n\t                        pt.setRatio = setRatio;\n\t                        _colorExp.lastIndex = 0;\n\t                        for (i = 0; i < l; i++) {\n\t                            bv = ba[i];\n\t                            ev = ea[i];\n\t                            bn = parseFloat(bv);\n\t                            if (bn || bn === 0) {\n\t                                pt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), autoRound && ev.indexOf(\"px\") !== -1, true);\n\t                            } else if (clrs && _colorExp.test(bv)) {\n\t                                str = ev.indexOf(\")\") + 1;\n\t                                str = \")\" + (str ? ev.substr(str) : \"\");\n\t                                useHSL = ev.indexOf(\"hsl\") !== -1 && _supportsOpacity;\n\t                                bv = _parseColor(bv, useHSL);\n\t                                ev = _parseColor(ev, useHSL);\n\t                                hasAlpha = bv.length + ev.length > 6;\n\t                                if (hasAlpha && !_supportsOpacity && ev[3] === 0) {\n\t                                    pt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n\t                                    pt.e = pt.e.split(ea[i]).join(\"transparent\");\n\t                                } else {\n\t                                    if (!_supportsOpacity) {\n\t                                        hasAlpha = false;\n\t                                    }\n\t                                    if (useHSL) {\n\t                                        pt.appendXtra(hasAlpha ? \"hsla(\" : \"hsl(\", bv[0], _parseChange(ev[0], bv[0]), \",\", false, true).appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false).appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? \"%,\" : \"%\" + str, false);\n\t                                    } else {\n\t                                        pt.appendXtra(hasAlpha ? \"rgba(\" : \"rgb(\", bv[0], ev[0] - bv[0], \",\", true, true).appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true).appendXtra(\"\", bv[2], ev[2] - bv[2], hasAlpha ? \",\" : str, true);\n\t                                    }\n\t                                    if (hasAlpha) {\n\t                                        bv = bv.length < 4 ? 1 : bv[3];\n\t                                        pt.appendXtra(\"\", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);\n\t                                    }\n\t                                }\n\t                                _colorExp.lastIndex = 0;\n\t                            } else {\n\t                                bnums = bv.match(_numExp);\n\t                                if (!bnums) {\n\t                                    pt[\"xs\" + pt.l] += pt.l || pt[\"xs\" + pt.l] ? \" \" + ev : ev;\n\t                                } else {\n\t                                    enums = ev.match(_relNumExp);\n\t                                    if (!enums || enums.length !== bnums.length) {\n\t                                        return pt;\n\t                                    }\n\t                                    ni = 0;\n\t                                    for (xi = 0; xi < bnums.length; xi++) {\n\t                                        cv = bnums[xi];\n\t                                        temp = bv.indexOf(cv, ni);\n\t                                        pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", autoRound && bv.substr(temp + cv.length, 2) === \"px\", xi === 0);\n\t                                        ni = temp + cv.length;\n\t                                    }\n\t                                    pt[\"xs\" + pt.l] += bv.substr(ni);\n\t                                }\n\t                            }\n\t                        }\n\t                        if (e.indexOf(\"=\") !== -1) if (pt.data) {\n\t                            str = pt.xs0 + pt.data.s;\n\t                            for (i = 1; i < pt.l; i++) {\n\t                                str += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n\t                            }\n\t                            pt.e = str + pt[\"xs\" + i];\n\t                        }\n\t                        if (!pt.l) {\n\t                            pt.type = -1;\n\t                            pt.xs0 = pt.e;\n\t                        }\n\t                        return pt.xfirst || pt;\n\t                    }, i = 9;\n\t                    p = CSSPropTween.prototype;\n\t                    p.l = p.pr = 0;\n\t                    while (--i > 0) {\n\t                        p[\"xn\" + i] = 0;\n\t                        p[\"xs\" + i] = \"\";\n\t                    }\n\t                    p.xs0 = \"\";\n\t                    p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n\t                    p.appendXtra = function(pfx, s, c, sfx, r, pad) {\n\t                        var pt = this, l = pt.l;\n\t                        pt[\"xs\" + l] += pad && (l || pt[\"xs\" + l]) ? \" \" + pfx : pfx || \"\";\n\t                        if (!c) if (l !== 0 && !pt.plugin) {\n\t                            pt[\"xs\" + l] += s + (sfx || \"\");\n\t                            return pt;\n\t                        }\n\t                        pt.l++;\n\t                        pt.type = pt.setRatio ? 2 : 1;\n\t                        pt[\"xs\" + pt.l] = sfx || \"\";\n\t                        if (l > 0) {\n\t                            pt.data[\"xn\" + l] = s + c;\n\t                            pt.rxp[\"xn\" + l] = r;\n\t                            pt[\"xn\" + l] = s;\n\t                            if (!pt.plugin) {\n\t                                pt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n\t                                pt.xfirst.xs0 = 0;\n\t                            }\n\t                            return pt;\n\t                        }\n\t                        pt.data = {\n\t                            s: s + c\n\t                        };\n\t                        pt.rxp = {};\n\t                        pt.s = s;\n\t                        pt.c = c;\n\t                        pt.r = r;\n\t                        return pt;\n\t                    };\n\t                    var SpecialProp = function(p, options) {\n\t                        options = options || {};\n\t                        this.p = options.prefix ? _checkPropPrefix(p) || p : p;\n\t                        _specialProps[p] = _specialProps[this.p] = this;\n\t                        this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n\t                        if (options.parser) {\n\t                            this.parse = options.parser;\n\t                        }\n\t                        this.clrs = options.color;\n\t                        this.multi = options.multi;\n\t                        this.keyword = options.keyword;\n\t                        this.dflt = options.defaultValue;\n\t                        this.pr = options.priority || 0;\n\t                    }, _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n\t                        if (typeof options !== \"object\") {\n\t                            options = {\n\t                                parser: defaults\n\t                            };\n\t                        }\n\t                        var a = p.split(\",\"), d = options.defaultValue, i, temp;\n\t                        defaults = defaults || [ d ];\n\t                        for (i = 0; i < a.length; i++) {\n\t                            options.prefix = i === 0 && options.prefix;\n\t                            options.defaultValue = defaults[i] || d;\n\t                            temp = new SpecialProp(a[i], options);\n\t                        }\n\t                    }, _registerPluginProp = function(p) {\n\t                        if (!_specialProps[p]) {\n\t                            var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n\t                            _registerComplexSpecialProp(p, {\n\t                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                    var pluginClass = _globals.com.greensock.plugins[pluginName];\n\t                                    if (!pluginClass) {\n\t                                        _log(\"Error: \" + pluginName + \" js file not loaded.\");\n\t                                        return pt;\n\t                                    }\n\t                                    pluginClass._cssRegister();\n\t                                    return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n\t                                }\n\t                            });\n\t                        }\n\t                    };\n\t                    p = SpecialProp.prototype;\n\t                    p.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n\t                        var kwd = this.keyword, i, ba, ea, l, bi, ei;\n\t                        if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n\t                            ba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                            ea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t                        } else if (kwd) {\n\t                            ba = [ b ];\n\t                            ea = [ e ];\n\t                        }\n\t                        if (ea) {\n\t                            l = ea.length > ba.length ? ea.length : ba.length;\n\t                            for (i = 0; i < l; i++) {\n\t                                b = ba[i] = ba[i] || this.dflt;\n\t                                e = ea[i] = ea[i] || this.dflt;\n\t                                if (kwd) {\n\t                                    bi = b.indexOf(kwd);\n\t                                    ei = e.indexOf(kwd);\n\t                                    if (bi !== ei) {\n\t                                        if (ei === -1) {\n\t                                            ba[i] = ba[i].split(kwd).join(\"\");\n\t                                        } else if (bi === -1) {\n\t                                            ba[i] += \" \" + kwd;\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                            b = ba.join(\", \");\n\t                            e = ea.join(\", \");\n\t                        }\n\t                        return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n\t                    };\n\t                    p.parse = function(t, e, p, cssp, pt, plugin, vars) {\n\t                        return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n\t                    };\n\t                    CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n\t                        _registerComplexSpecialProp(name, {\n\t                            parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                                var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n\t                                rv.plugin = plugin;\n\t                                rv.setRatio = onInitTween(t, e, cssp._tween, p);\n\t                                return rv;\n\t                            },\n\t                            priority: priority\n\t                        });\n\t                    };\n\t                    CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox;\n\t                    var _transformProps = \"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"), _transformProp = _checkPropPrefix(\"transform\"), _transformPropCSS = _prefixCSS + \"transform\", _transformOriginProp = _checkPropPrefix(\"transformOrigin\"), _supports3D = _checkPropPrefix(\"perspective\") !== null, Transform = _internals.Transform = function() {\n\t                        this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n\t                        this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || \"auto\";\n\t                    }, _SVGElement = window.SVGElement, _useSVGTransformAttr, _createSVG = function(type, container, attributes) {\n\t                        var element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type), reg = /([a-z])([A-Z])/g, p;\n\t                        for (p in attributes) {\n\t                            element.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t                        }\n\t                        container.appendChild(element);\n\t                        return element;\n\t                    }, _docElement = _doc.documentElement, _forceSVGTransformAttr = function() {\n\t                        var force = _ieVers || /Android/i.test(_agent) && !window.chrome, svg, rect, width;\n\t                        if (_doc.createElementNS && !force) {\n\t                            svg = _createSVG(\"svg\", _docElement);\n\t                            rect = _createSVG(\"rect\", svg, {\n\t                                width: 100,\n\t                                height: 50,\n\t                                x: 100\n\t                            });\n\t                            width = rect.getBoundingClientRect().width;\n\t                            rect.style[_transformOriginProp] = \"50% 50%\";\n\t                            rect.style[_transformProp] = \"scaleX(0.5)\";\n\t                            force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D);\n\t                            _docElement.removeChild(svg);\n\t                        }\n\t                        return force;\n\t                    }(), _parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n\t                        var tm = e._gsTransform, m = _getMatrix(e, true), v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n\t                        if (tm) {\n\t                            xOriginOld = tm.xOrigin;\n\t                            yOriginOld = tm.yOrigin;\n\t                        }\n\t                        if (!absolute || (v = absolute.split(\" \")).length < 2) {\n\t                            b = e.getBBox();\n\t                            local = _parsePosition(local).split(\" \");\n\t                            v = [ (local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y ];\n\t                        }\n\t                        decoratee.xOrigin = xOrigin = parseFloat(v[0]);\n\t                        decoratee.yOrigin = yOrigin = parseFloat(v[1]);\n\t                        if (absolute && m !== _identity2DMatrix) {\n\t                            a = m[0];\n\t                            b = m[1];\n\t                            c = m[2];\n\t                            d = m[3];\n\t                            tx = m[4];\n\t                            ty = m[5];\n\t                            determinant = a * d - b * c;\n\t                            x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n\t                            y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n\t                            xOrigin = decoratee.xOrigin = v[0] = x;\n\t                            yOrigin = decoratee.yOrigin = v[1] = y;\n\t                        }\n\t                        if (tm) {\n\t                            if (skipRecord) {\n\t                                decoratee.xOffset = tm.xOffset;\n\t                                decoratee.yOffset = tm.yOffset;\n\t                                tm = decoratee;\n\t                            }\n\t                            if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {\n\t                                x = xOrigin - xOriginOld;\n\t                                y = yOrigin - yOriginOld;\n\t                                tm.xOffset += x * m[0] + y * m[2] - x;\n\t                                tm.yOffset += x * m[1] + y * m[3] - y;\n\t                            } else {\n\t                                tm.xOffset = tm.yOffset = 0;\n\t                            }\n\t                        }\n\t                        if (!skipRecord) {\n\t                            e.setAttribute(\"data-svg-origin\", v.join(\" \"));\n\t                        }\n\t                    }, _canGetBBox = function(e) {\n\t                        try {\n\t                            return e.getBBox();\n\t                        } catch (e) {}\n\t                    }, _isSVG = function(e) {\n\t                        return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));\n\t                    }, _identity2DMatrix = [ 1, 0, 0, 1, 0, 0 ], _getMatrix = function(e, force2D) {\n\t                        var tm = e._gsTransform || new Transform(), rnd = 1e5, style = e.style, isDefault, s, m, n, dec, none;\n\t                        if (_transformProp) {\n\t                            s = _getStyle(e, _transformPropCSS, null, true);\n\t                        } else if (e.currentStyle) {\n\t                            s = e.currentStyle.filter.match(_ieGetMatrixExp);\n\t                            s = s && s.length === 4 ? [ s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0 ].join(\",\") : \"\";\n\t                        }\n\t                        isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n\t                        if (isDefault && _transformProp && ((none = _getComputedStyle(e).display === \"none\") || !e.parentNode)) {\n\t                            if (none) {\n\t                                n = style.display;\n\t                                style.display = \"block\";\n\t                            }\n\t                            if (!e.parentNode) {\n\t                                dec = 1;\n\t                                _docElement.appendChild(e);\n\t                            }\n\t                            s = _getStyle(e, _transformPropCSS, null, true);\n\t                            isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n\t                            if (n) {\n\t                                style.display = n;\n\t                            } else if (none) {\n\t                                _removeProp(style, \"display\");\n\t                            }\n\t                            if (dec) {\n\t                                _docElement.removeChild(e);\n\t                            }\n\t                        }\n\t                        if (tm.svg || e.getBBox && _isSVG(e)) {\n\t                            if (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) {\n\t                                s = style[_transformProp];\n\t                                isDefault = 0;\n\t                            }\n\t                            m = e.getAttribute(\"transform\");\n\t                            if (isDefault && m) {\n\t                                if (m.indexOf(\"matrix\") !== -1) {\n\t                                    s = m;\n\t                                    isDefault = 0;\n\t                                } else if (m.indexOf(\"translate\") !== -1) {\n\t                                    s = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n\t                                    isDefault = 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (isDefault) {\n\t                            return _identity2DMatrix;\n\t                        }\n\t                        m = (s || \"\").match(_numExp) || [];\n\t                        i = m.length;\n\t                        while (--i > -1) {\n\t                            n = Number(m[i]);\n\t                            m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -.5 : .5) | 0) / rnd + n : n;\n\t                        }\n\t                        return force2D && m.length > 6 ? [ m[0], m[1], m[4], m[5], m[12], m[13] ] : m;\n\t                    }, _getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n\t                        if (t._gsTransform && rec && !parse) {\n\t                            return t._gsTransform;\n\t                        }\n\t                        var tm = rec ? t._gsTransform || new Transform() : new Transform(), invX = tm.scaleX < 0, min = 2e-5, rnd = 1e5, zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin || 0 : 0, defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0, m, i, scaleX, scaleY, rotation, skewX;\n\t                        tm.svg = !!(t.getBBox && _isSVG(t));\n\t                        if (tm.svg) {\n\t                            _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n\t                            _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n\t                        }\n\t                        m = _getMatrix(t);\n\t                        if (m !== _identity2DMatrix) {\n\t                            if (m.length === 16) {\n\t                                var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3], a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7], a13 = m[8], a23 = m[9], a33 = m[10], a14 = m[12], a24 = m[13], a34 = m[14], a43 = m[11], angle = Math.atan2(a32, a33), t1, t2, t3, t4, cos, sin;\n\t                                if (tm.zOrigin) {\n\t                                    a34 = -tm.zOrigin;\n\t                                    a14 = a13 * a34 - m[12];\n\t                                    a24 = a23 * a34 - m[13];\n\t                                    a34 = a33 * a34 + tm.zOrigin - m[14];\n\t                                }\n\t                                tm.rotationX = angle * _RAD2DEG;\n\t                                if (angle) {\n\t                                    cos = Math.cos(-angle);\n\t                                    sin = Math.sin(-angle);\n\t                                    t1 = a12 * cos + a13 * sin;\n\t                                    t2 = a22 * cos + a23 * sin;\n\t                                    t3 = a32 * cos + a33 * sin;\n\t                                    a13 = a12 * -sin + a13 * cos;\n\t                                    a23 = a22 * -sin + a23 * cos;\n\t                                    a33 = a32 * -sin + a33 * cos;\n\t                                    a43 = a42 * -sin + a43 * cos;\n\t                                    a12 = t1;\n\t                                    a22 = t2;\n\t                                    a32 = t3;\n\t                                }\n\t                                angle = Math.atan2(-a31, a33);\n\t                                tm.rotationY = angle * _RAD2DEG;\n\t                                if (angle) {\n\t                                    cos = Math.cos(-angle);\n\t                                    sin = Math.sin(-angle);\n\t                                    t1 = a11 * cos - a13 * sin;\n\t                                    t2 = a21 * cos - a23 * sin;\n\t                                    t3 = a31 * cos - a33 * sin;\n\t                                    a23 = a21 * sin + a23 * cos;\n\t                                    a33 = a31 * sin + a33 * cos;\n\t                                    a43 = a41 * sin + a43 * cos;\n\t                                    a11 = t1;\n\t                                    a21 = t2;\n\t                                    a31 = t3;\n\t                                }\n\t                                angle = Math.atan2(a21, a11);\n\t                                tm.rotation = angle * _RAD2DEG;\n\t                                if (angle) {\n\t                                    cos = Math.cos(-angle);\n\t                                    sin = Math.sin(-angle);\n\t                                    a11 = a11 * cos + a12 * sin;\n\t                                    t2 = a21 * cos + a22 * sin;\n\t                                    a22 = a21 * -sin + a22 * cos;\n\t                                    a32 = a31 * -sin + a32 * cos;\n\t                                    a21 = t2;\n\t                                }\n\t                                if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {\n\t                                    tm.rotationX = tm.rotation = 0;\n\t                                    tm.rotationY = 180 - tm.rotationY;\n\t                                }\n\t                                tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21) * rnd + .5 | 0) / rnd;\n\t                                tm.scaleY = (Math.sqrt(a22 * a22 + a23 * a23) * rnd + .5 | 0) / rnd;\n\t                                tm.scaleZ = (Math.sqrt(a32 * a32 + a33 * a33) * rnd + .5 | 0) / rnd;\n\t                                if (tm.rotationX || tm.rotationY) {\n\t                                    tm.skewX = 0;\n\t                                } else {\n\t                                    tm.skewX = a12 || a22 ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n\t                                    if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n\t                                        if (invX) {\n\t                                            tm.scaleX *= -1;\n\t                                            tm.skewX += tm.rotation <= 0 ? 180 : -180;\n\t                                            tm.rotation += tm.rotation <= 0 ? 180 : -180;\n\t                                        } else {\n\t                                            tm.scaleY *= -1;\n\t                                            tm.skewX += tm.skewX <= 0 ? 180 : -180;\n\t                                        }\n\t                                    }\n\t                                }\n\t                                tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n\t                                tm.x = a14;\n\t                                tm.y = a24;\n\t                                tm.z = a34;\n\t                                if (tm.svg) {\n\t                                    tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n\t                                    tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n\t                                }\n\t                            } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {\n\t                                var k = m.length >= 6, a = k ? m[0] : 1, b = m[1] || 0, c = m[2] || 0, d = k ? m[3] : 1;\n\t                                tm.x = m[4] || 0;\n\t                                tm.y = m[5] || 0;\n\t                                scaleX = Math.sqrt(a * a + b * b);\n\t                                scaleY = Math.sqrt(d * d + c * c);\n\t                                rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0;\n\t                                skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n\t                                if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n\t                                    if (invX) {\n\t                                        scaleX *= -1;\n\t                                        skewX += rotation <= 0 ? 180 : -180;\n\t                                        rotation += rotation <= 0 ? 180 : -180;\n\t                                    } else {\n\t                                        scaleY *= -1;\n\t                                        skewX += skewX <= 0 ? 180 : -180;\n\t                                    }\n\t                                }\n\t                                tm.scaleX = scaleX;\n\t                                tm.scaleY = scaleY;\n\t                                tm.rotation = rotation;\n\t                                tm.skewX = skewX;\n\t                                if (_supports3D) {\n\t                                    tm.rotationX = tm.rotationY = tm.z = 0;\n\t                                    tm.perspective = defaultTransformPerspective;\n\t                                    tm.scaleZ = 1;\n\t                                }\n\t                                if (tm.svg) {\n\t                                    tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n\t                                    tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n\t                                }\n\t                            }\n\t                            tm.zOrigin = zOrigin;\n\t                            for (i in tm) {\n\t                                if (tm[i] < min) if (tm[i] > -min) {\n\t                                    tm[i] = 0;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (rec) {\n\t                            t._gsTransform = tm;\n\t                            if (tm.svg) {\n\t                                if (_useSVGTransformAttr && t.style[_transformProp]) {\n\t                                    TweenLite.delayedCall(.001, function() {\n\t                                        _removeProp(t.style, _transformProp);\n\t                                    });\n\t                                } else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n\t                                    TweenLite.delayedCall(.001, function() {\n\t                                        t.removeAttribute(\"transform\");\n\t                                    });\n\t                                }\n\t                            }\n\t                        }\n\t                        return tm;\n\t                    }, _setIETransformRatio = function(v) {\n\t                        var t = this.data, ang = -t.rotation * _DEG2RAD, skew = ang + t.skewX * _DEG2RAD, rnd = 1e5, a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd, b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd, c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd, d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd, style = this.t.style, cs = this.t.currentStyle, filters, val;\n\t                        if (!cs) {\n\t                            return;\n\t                        }\n\t                        val = b;\n\t                        b = -c;\n\t                        c = -val;\n\t                        filters = cs.filter;\n\t                        style.filter = \"\";\n\t                        var w = this.t.offsetWidth, h = this.t.offsetHeight, clip = cs.position !== \"absolute\", m = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d, ox = t.x + w * t.xPercent / 100, oy = t.y + h * t.yPercent / 100, dx, dy;\n\t                        if (t.ox != null) {\n\t                            dx = (t.oxp ? w * t.ox * .01 : t.ox) - w / 2;\n\t                            dy = (t.oyp ? h * t.oy * .01 : t.oy) - h / 2;\n\t                            ox += dx - (dx * a + dy * b);\n\t                            oy += dy - (dx * c + dy * d);\n\t                        }\n\t                        if (!clip) {\n\t                            m += \", sizingMethod='auto expand')\";\n\t                        } else {\n\t                            dx = w / 2;\n\t                            dy = h / 2;\n\t                            m += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n\t                        }\n\t                        if (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n\t                            style.filter = filters.replace(_ieSetMatrixExp, m);\n\t                        } else {\n\t                            style.filter = m + \" \" + filters;\n\t                        }\n\t                        if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n\t                            style.removeAttribute(\"filter\");\n\t                        }\n\t                        if (!clip) {\n\t                            var mult = _ieVers < 8 ? 1 : -1, marg, prop, dif;\n\t                            dx = t.ieOffsetX || 0;\n\t                            dy = t.ieOffsetY || 0;\n\t                            t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n\t                            t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n\t                            for (i = 0; i < 4; i++) {\n\t                                prop = _margins[i];\n\t                                marg = cs[prop];\n\t                                val = marg.indexOf(\"px\") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n\t                                if (val !== t[prop]) {\n\t                                    dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY;\n\t                                } else {\n\t                                    dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n\t                                }\n\t                                style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + \"px\";\n\t                            }\n\t                        }\n\t                    }, _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n\t                        var t = this.data, style = this.t.style, angle = t.rotation, rotationX = t.rotationX, rotationY = t.rotationY, sx = t.scaleX, sy = t.scaleY, sz = t.scaleZ, x = t.x, y = t.y, z = t.z, isSVG = t.svg, perspective = t.perspective, force3D = t.force3D, a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43, zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;\n\t                        if (((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {\n\t                            if (angle || t.skewX || isSVG) {\n\t                                angle *= _DEG2RAD;\n\t                                skew = t.skewX * _DEG2RAD;\n\t                                rnd = 1e5;\n\t                                a11 = Math.cos(angle) * sx;\n\t                                a21 = Math.sin(angle) * sx;\n\t                                a12 = Math.sin(angle - skew) * -sy;\n\t                                a22 = Math.cos(angle - skew) * sy;\n\t                                if (skew && t.skewType === \"simple\") {\n\t                                    t1 = Math.tan(skew);\n\t                                    t1 = Math.sqrt(1 + t1 * t1);\n\t                                    a12 *= t1;\n\t                                    a22 *= t1;\n\t                                    if (t.skewY) {\n\t                                        a11 *= t1;\n\t                                        a21 *= t1;\n\t                                    }\n\t                                }\n\t                                if (isSVG) {\n\t                                    x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t                                    y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t                                    if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {\n\t                                        min = this.t.getBBox();\n\t                                        x += t.xPercent * .01 * min.width;\n\t                                        y += t.yPercent * .01 * min.height;\n\t                                    }\n\t                                    min = 1e-6;\n\t                                    if (x < min) if (x > -min) {\n\t                                        x = 0;\n\t                                    }\n\t                                    if (y < min) if (y > -min) {\n\t                                        y = 0;\n\t                                    }\n\t                                }\n\t                                transform = (a11 * rnd | 0) / rnd + \",\" + (a21 * rnd | 0) / rnd + \",\" + (a12 * rnd | 0) / rnd + \",\" + (a22 * rnd | 0) / rnd + \",\" + x + \",\" + y + \")\";\n\t                                if (isSVG && _useSVGTransformAttr) {\n\t                                    this.t.setAttribute(\"transform\", \"matrix(\" + transform);\n\t                                } else {\n\t                                    style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n\t                                }\n\t                            } else {\n\t                                style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n\t                            }\n\t                            return;\n\t                        }\n\t                        if (_isFirefox) {\n\t                            min = 1e-4;\n\t                            if (sx < min && sx > -min) {\n\t                                sx = sz = 2e-5;\n\t                            }\n\t                            if (sy < min && sy > -min) {\n\t                                sy = sz = 2e-5;\n\t                            }\n\t                            if (perspective && !t.z && !t.rotationX && !t.rotationY) {\n\t                                perspective = 0;\n\t                            }\n\t                        }\n\t                        if (angle || t.skewX) {\n\t                            angle *= _DEG2RAD;\n\t                            cos = a11 = Math.cos(angle);\n\t                            sin = a21 = Math.sin(angle);\n\t                            if (t.skewX) {\n\t                                angle -= t.skewX * _DEG2RAD;\n\t                                cos = Math.cos(angle);\n\t                                sin = Math.sin(angle);\n\t                                if (t.skewType === \"simple\") {\n\t                                    t1 = Math.tan(t.skewX * _DEG2RAD);\n\t                                    t1 = Math.sqrt(1 + t1 * t1);\n\t                                    cos *= t1;\n\t                                    sin *= t1;\n\t                                    if (t.skewY) {\n\t                                        a11 *= t1;\n\t                                        a21 *= t1;\n\t                                    }\n\t                                }\n\t                            }\n\t                            a12 = -sin;\n\t                            a22 = cos;\n\t                        } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {\n\t                            style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z + \"px)\" + (sx !== 1 || sy !== 1 ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n\t                            return;\n\t                        } else {\n\t                            a11 = a22 = 1;\n\t                            a12 = a21 = 0;\n\t                        }\n\t                        a33 = 1;\n\t                        a13 = a23 = a31 = a32 = a41 = a42 = 0;\n\t                        a43 = perspective ? -1 / perspective : 0;\n\t                        zOrigin = t.zOrigin;\n\t                        min = 1e-6;\n\t                        comma = \",\";\n\t                        zero = \"0\";\n\t                        angle = rotationY * _DEG2RAD;\n\t                        if (angle) {\n\t                            cos = Math.cos(angle);\n\t                            sin = Math.sin(angle);\n\t                            a31 = -sin;\n\t                            a41 = a43 * -sin;\n\t                            a13 = a11 * sin;\n\t                            a23 = a21 * sin;\n\t                            a33 = cos;\n\t                            a43 *= cos;\n\t                            a11 *= cos;\n\t                            a21 *= cos;\n\t                        }\n\t                        angle = rotationX * _DEG2RAD;\n\t                        if (angle) {\n\t                            cos = Math.cos(angle);\n\t                            sin = Math.sin(angle);\n\t                            t1 = a12 * cos + a13 * sin;\n\t                            t2 = a22 * cos + a23 * sin;\n\t                            a32 = a33 * sin;\n\t                            a42 = a43 * sin;\n\t                            a13 = a12 * -sin + a13 * cos;\n\t                            a23 = a22 * -sin + a23 * cos;\n\t                            a33 = a33 * cos;\n\t                            a43 = a43 * cos;\n\t                            a12 = t1;\n\t                            a22 = t2;\n\t                        }\n\t                        if (sz !== 1) {\n\t                            a13 *= sz;\n\t                            a23 *= sz;\n\t                            a33 *= sz;\n\t                            a43 *= sz;\n\t                        }\n\t                        if (sy !== 1) {\n\t                            a12 *= sy;\n\t                            a22 *= sy;\n\t                            a32 *= sy;\n\t                            a42 *= sy;\n\t                        }\n\t                        if (sx !== 1) {\n\t                            a11 *= sx;\n\t                            a21 *= sx;\n\t                            a31 *= sx;\n\t                            a41 *= sx;\n\t                        }\n\t                        if (zOrigin || isSVG) {\n\t                            if (zOrigin) {\n\t                                x += a13 * -zOrigin;\n\t                                y += a23 * -zOrigin;\n\t                                z += a33 * -zOrigin + zOrigin;\n\t                            }\n\t                            if (isSVG) {\n\t                                x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t                                y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t                            }\n\t                            if (x < min && x > -min) {\n\t                                x = zero;\n\t                            }\n\t                            if (y < min && y > -min) {\n\t                                y = zero;\n\t                            }\n\t                            if (z < min && z > -min) {\n\t                                z = 0;\n\t                            }\n\t                        }\n\t                        transform = t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\";\n\t                        transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);\n\t                        transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);\n\t                        if (rotationX || rotationY || sz !== 1) {\n\t                            transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);\n\t                            transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;\n\t                        } else {\n\t                            transform += \",0,0,0,0,1,0,\";\n\t                        }\n\t                        transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + \")\";\n\t                        style[_transformProp] = transform;\n\t                    };\n\t                    p = Transform.prototype;\n\t                    p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n\t                    p.scaleX = p.scaleY = p.scaleZ = 1;\n\t                    _registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {\n\t                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                            if (cssp._lastParsedTransform === vars) {\n\t                                return pt;\n\t                            }\n\t                            cssp._lastParsedTransform = vars;\n\t                            var originalGSTransform = t._gsTransform, style = t.style, min = 1e-6, i = _transformProps.length, v = vars, endRotations = {}, transformOriginString = \"transformOrigin\", m1 = _getTransform(t, _cs, true, vars.parseTransform), m2, copy, orig, has3D, hasChange, dr, x, y, matrix;\n\t                            cssp._transform = m1;\n\t                            if (typeof v.transform === \"string\" && _transformProp) {\n\t                                copy = _tempDiv.style;\n\t                                copy[_transformProp] = v.transform;\n\t                                copy.display = \"block\";\n\t                                copy.position = \"absolute\";\n\t                                _doc.body.appendChild(_tempDiv);\n\t                                m2 = _getTransform(_tempDiv, null, false);\n\t                                if (m1.svg) {\n\t                                    x = m1.xOrigin;\n\t                                    y = m1.yOrigin;\n\t                                    m2.x -= m1.xOffset;\n\t                                    m2.y -= m1.yOffset;\n\t                                    if (v.transformOrigin || v.svgOrigin) {\n\t                                        orig = {};\n\t                                        _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n\t                                        x = orig.xOrigin;\n\t                                        y = orig.yOrigin;\n\t                                        m2.x -= orig.xOffset - m1.xOffset;\n\t                                        m2.y -= orig.yOffset - m1.yOffset;\n\t                                    }\n\t                                    if (x || y) {\n\t                                        matrix = _getMatrix(_tempDiv, true);\n\t                                        m2.x -= x - (x * matrix[0] + y * matrix[2]);\n\t                                        m2.y -= y - (x * matrix[1] + y * matrix[3]);\n\t                                    }\n\t                                }\n\t                                _doc.body.removeChild(_tempDiv);\n\t                                if (!m2.perspective) {\n\t                                    m2.perspective = m1.perspective;\n\t                                }\n\t                                if (v.xPercent != null) {\n\t                                    m2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n\t                                }\n\t                                if (v.yPercent != null) {\n\t                                    m2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n\t                                }\n\t                            } else if (typeof v === \"object\") {\n\t                                m2 = {\n\t                                    scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),\n\t                                    scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),\n\t                                    scaleZ: _parseVal(v.scaleZ, m1.scaleZ),\n\t                                    x: _parseVal(v.x, m1.x),\n\t                                    y: _parseVal(v.y, m1.y),\n\t                                    z: _parseVal(v.z, m1.z),\n\t                                    xPercent: _parseVal(v.xPercent, m1.xPercent),\n\t                                    yPercent: _parseVal(v.yPercent, m1.yPercent),\n\t                                    perspective: _parseVal(v.transformPerspective, m1.perspective)\n\t                                };\n\t                                dr = v.directionalRotation;\n\t                                if (dr != null) {\n\t                                    if (typeof dr === \"object\") {\n\t                                        for (copy in dr) {\n\t                                            v[copy] = dr[copy];\n\t                                        }\n\t                                    } else {\n\t                                        v.rotation = dr;\n\t                                    }\n\t                                }\n\t                                if (typeof v.x === \"string\" && v.x.indexOf(\"%\") !== -1) {\n\t                                    m2.x = 0;\n\t                                    m2.xPercent = _parseVal(v.x, m1.xPercent);\n\t                                }\n\t                                if (typeof v.y === \"string\" && v.y.indexOf(\"%\") !== -1) {\n\t                                    m2.y = 0;\n\t                                    m2.yPercent = _parseVal(v.y, m1.yPercent);\n\t                                }\n\t                                m2.rotation = _parseAngle(\"rotation\" in v ? v.rotation : \"shortRotation\" in v ? v.shortRotation + \"_short\" : \"rotationZ\" in v ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, \"rotation\", endRotations);\n\t                                if (_supports3D) {\n\t                                    m2.rotationX = _parseAngle(\"rotationX\" in v ? v.rotationX : \"shortRotationX\" in v ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n\t                                    m2.rotationY = _parseAngle(\"rotationY\" in v ? v.rotationY : \"shortRotationY\" in v ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n\t                                }\n\t                                m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY);\n\t                                if (m2.skewY = _parseAngle(v.skewY, m1.skewY)) {\n\t                                    m2.skewX += m2.skewY;\n\t                                    m2.rotation += m2.skewY;\n\t                                }\n\t                            }\n\t                            if (_supports3D && v.force3D != null) {\n\t                                m1.force3D = v.force3D;\n\t                                hasChange = true;\n\t                            }\n\t                            m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n\t                            has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;\n\t                            if (!has3D && v.scale != null) {\n\t                                m2.scaleZ = 1;\n\t                            }\n\t                            while (--i > -1) {\n\t                                p = _transformProps[i];\n\t                                orig = m2[p] - m1[p];\n\t                                if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n\t                                    hasChange = true;\n\t                                    pt = new CSSPropTween(m1, p, m1[p], orig, pt);\n\t                                    if (p in endRotations) {\n\t                                        pt.e = endRotations[p];\n\t                                    }\n\t                                    pt.xs0 = 0;\n\t                                    pt.plugin = plugin;\n\t                                    cssp._overwriteProps.push(pt.n);\n\t                                }\n\t                            }\n\t                            orig = v.transformOrigin;\n\t                            if (m1.svg && (orig || v.svgOrigin)) {\n\t                                x = m1.xOffset;\n\t                                y = m1.yOffset;\n\t                                _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n\t                                pt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString);\n\t                                pt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n\t                                if (x !== m1.xOffset || y !== m1.yOffset) {\n\t                                    pt = _addNonTweeningNumericPT(m1, \"xOffset\", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);\n\t                                    pt = _addNonTweeningNumericPT(m1, \"yOffset\", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);\n\t                                }\n\t                                orig = _useSVGTransformAttr ? null : \"0px 0px\";\n\t                            }\n\t                            if (orig || _supports3D && has3D && m1.zOrigin) {\n\t                                if (_transformProp) {\n\t                                    hasChange = true;\n\t                                    p = _transformOriginProp;\n\t                                    orig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\";\n\t                                    pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n\t                                    pt.b = style[p];\n\t                                    pt.plugin = plugin;\n\t                                    if (_supports3D) {\n\t                                        copy = m1.zOrigin;\n\t                                        orig = orig.split(\" \");\n\t                                        m1.zOrigin = (orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\") ? parseFloat(orig[2]) : copy) || 0;\n\t                                        pt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\";\n\t                                        pt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n);\n\t                                        pt.b = copy;\n\t                                        pt.xs0 = pt.e = m1.zOrigin;\n\t                                    } else {\n\t                                        pt.xs0 = pt.e = orig;\n\t                                    }\n\t                                } else {\n\t                                    _parsePosition(orig + \"\", m1);\n\t                                }\n\t                            }\n\t                            if (hasChange) {\n\t                                cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2;\n\t                            }\n\t                            return pt;\n\t                        },\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"boxShadow\", {\n\t                        defaultValue: \"0px 0px 0px 0px #999\",\n\t                        prefix: true,\n\t                        color: true,\n\t                        multi: true,\n\t                        keyword: \"inset\"\n\t                    });\n\t                    _registerComplexSpecialProp(\"borderRadius\", {\n\t                        defaultValue: \"0px\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            e = this.format(e);\n\t                            var props = [ \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\" ], style = t.style, ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n\t                            w = parseFloat(t.offsetWidth);\n\t                            h = parseFloat(t.offsetHeight);\n\t                            ea1 = e.split(\" \");\n\t                            for (i = 0; i < props.length; i++) {\n\t                                if (this.p.indexOf(\"border\")) {\n\t                                    props[i] = _checkPropPrefix(props[i]);\n\t                                }\n\t                                bs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n\t                                if (bs.indexOf(\" \") !== -1) {\n\t                                    bs2 = bs.split(\" \");\n\t                                    bs = bs2[0];\n\t                                    bs2 = bs2[1];\n\t                                }\n\t                                es = es2 = ea1[i];\n\t                                bn = parseFloat(bs);\n\t                                bsfx = bs.substr((bn + \"\").length);\n\t                                rel = es.charAt(1) === \"=\";\n\t                                if (rel) {\n\t                                    en = parseInt(es.charAt(0) + \"1\", 10);\n\t                                    es = es.substr(2);\n\t                                    en *= parseFloat(es);\n\t                                    esfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n\t                                } else {\n\t                                    en = parseFloat(es);\n\t                                    esfx = es.substr((en + \"\").length);\n\t                                }\n\t                                if (esfx === \"\") {\n\t                                    esfx = _suffixMap[p] || bsfx;\n\t                                }\n\t                                if (esfx !== bsfx) {\n\t                                    hn = _convertToPixels(t, \"borderLeft\", bn, bsfx);\n\t                                    vn = _convertToPixels(t, \"borderTop\", bn, bsfx);\n\t                                    if (esfx === \"%\") {\n\t                                        bs = hn / w * 100 + \"%\";\n\t                                        bs2 = vn / h * 100 + \"%\";\n\t                                    } else if (esfx === \"em\") {\n\t                                        em = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n\t                                        bs = hn / em + \"em\";\n\t                                        bs2 = vn / em + \"em\";\n\t                                    } else {\n\t                                        bs = hn + \"px\";\n\t                                        bs2 = vn + \"px\";\n\t                                    }\n\t                                    if (rel) {\n\t                                        es = parseFloat(bs) + en + esfx;\n\t                                        es2 = parseFloat(bs2) + en + esfx;\n\t                                    }\n\t                                }\n\t                                pt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n\t                            }\n\t                            return pt;\n\t                        },\n\t                        prefix: true,\n\t                        formatter: _getFormatter(\"0px 0px 0px 0px\", false, true)\n\t                    });\n\t                    _registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {\n\t                        defaultValue: \"0px\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n\t                        },\n\t                        prefix: true,\n\t                        formatter: _getFormatter(\"0px 0px\", false, true)\n\t                    });\n\t                    _registerComplexSpecialProp(\"backgroundPosition\", {\n\t                        defaultValue: \"0 0\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var bp = \"background-position\", cs = _cs || _getComputedStyle(t, null), bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), es = this.format(e), ba, ea, i, pct, overlap, src;\n\t                            if (bs.indexOf(\"%\") !== -1 !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n\t                                src = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n\t                                if (src && src !== \"none\") {\n\t                                    ba = bs.split(\" \");\n\t                                    ea = es.split(\" \");\n\t                                    _tempImg.setAttribute(\"src\", src);\n\t                                    i = 2;\n\t                                    while (--i > -1) {\n\t                                        bs = ba[i];\n\t                                        pct = bs.indexOf(\"%\") !== -1;\n\t                                        if (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n\t                                            overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n\t                                            ba[i] = pct ? parseFloat(bs) / 100 * overlap + \"px\" : parseFloat(bs) / overlap * 100 + \"%\";\n\t                                        }\n\t                                    }\n\t                                    bs = ba.join(\" \");\n\t                                }\n\t                            }\n\t                            return this.parseComplex(t.style, bs, es, pt, plugin);\n\t                        },\n\t                        formatter: _parsePosition\n\t                    });\n\t                    _registerComplexSpecialProp(\"backgroundSize\", {\n\t                        defaultValue: \"0 0\",\n\t                        formatter: _parsePosition\n\t                    });\n\t                    _registerComplexSpecialProp(\"perspective\", {\n\t                        defaultValue: \"0px\",\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"perspectiveOrigin\", {\n\t                        defaultValue: \"50% 50%\",\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"transformStyle\", {\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"backfaceVisibility\", {\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"userSelect\", {\n\t                        prefix: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"margin\", {\n\t                        parser: _getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")\n\t                    });\n\t                    _registerComplexSpecialProp(\"padding\", {\n\t                        parser: _getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")\n\t                    });\n\t                    _registerComplexSpecialProp(\"clip\", {\n\t                        defaultValue: \"rect(0px,0px,0px,0px)\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var b, cs, delim;\n\t                            if (_ieVers < 9) {\n\t                                cs = t.currentStyle;\n\t                                delim = _ieVers < 8 ? \" \" : \",\";\n\t                                b = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n\t                                e = this.format(e).split(\",\").join(delim);\n\t                            } else {\n\t                                b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n\t                                e = this.format(e);\n\t                            }\n\t                            return this.parseComplex(t.style, b, e, pt, plugin);\n\t                        }\n\t                    });\n\t                    _registerComplexSpecialProp(\"textShadow\", {\n\t                        defaultValue: \"0px 0px 0px #999\",\n\t                        color: true,\n\t                        multi: true\n\t                    });\n\t                    _registerComplexSpecialProp(\"autoRound,strictUnits\", {\n\t                        parser: function(t, e, p, cssp, pt) {\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    _registerComplexSpecialProp(\"border\", {\n\t                        defaultValue: \"0px solid #000\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"), end = this.format(e).split(\" \"), esfx = end[0].replace(_suffixExp, \"\");\n\t                            if (esfx !== \"px\") {\n\t                                bw = parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx) + esfx;\n\t                            }\n\t                            return this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n\t                        },\n\t                        color: true,\n\t                        formatter: function(v) {\n\t                            var a = v.split(\" \");\n\t                            return a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [ \"#000\" ])[0];\n\t                        }\n\t                    });\n\t                    _registerComplexSpecialProp(\"borderWidth\", {\n\t                        parser: _getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")\n\t                    });\n\t                    _registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var s = t.style, prop = \"cssFloat\" in s ? \"cssFloat\" : \"styleFloat\";\n\t                            return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n\t                        }\n\t                    });\n\t                    var _setIEOpacityRatio = function(v) {\n\t                        var t = this.t, filters = t.filter || _getStyle(this.data, \"filter\") || \"\", val = this.s + this.c * v | 0, skip;\n\t                        if (val === 100) {\n\t                            if (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n\t                                t.removeAttribute(\"filter\");\n\t                                skip = !_getStyle(this.data, \"filter\");\n\t                            } else {\n\t                                t.filter = filters.replace(_alphaFilterExp, \"\");\n\t                                skip = true;\n\t                            }\n\t                        }\n\t                        if (!skip) {\n\t                            if (this.xn1) {\n\t                                t.filter = filters = filters || \"alpha(opacity=\" + val + \")\";\n\t                            }\n\t                            if (filters.indexOf(\"pacity\") === -1) {\n\t                                if (val !== 0 || !this.xn1) {\n\t                                    t.filter = filters + \" alpha(opacity=\" + val + \")\";\n\t                                }\n\t                            } else {\n\t                                t.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n\t                            }\n\t                        }\n\t                    };\n\t                    _registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {\n\t                        defaultValue: \"1\",\n\t                        parser: function(t, e, p, cssp, pt, plugin) {\n\t                            var b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")), style = t.style, isAutoAlpha = p === \"autoAlpha\";\n\t                            if (typeof e === \"string\" && e.charAt(1) === \"=\") {\n\t                                e = (e.charAt(0) === \"-\" ? -1 : 1) * parseFloat(e.substr(2)) + b;\n\t                            }\n\t                            if (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) {\n\t                                b = 0;\n\t                            }\n\t                            if (_supportsOpacity) {\n\t                                pt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n\t                            } else {\n\t                                pt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n\t                                pt.xn1 = isAutoAlpha ? 1 : 0;\n\t                                style.zoom = 1;\n\t                                pt.type = 2;\n\t                                pt.b = \"alpha(opacity=\" + pt.s + \")\";\n\t                                pt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n\t                                pt.data = t;\n\t                                pt.plugin = plugin;\n\t                                pt.setRatio = _setIEOpacityRatio;\n\t                            }\n\t                            if (isAutoAlpha) {\n\t                                pt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, b !== 0 ? \"inherit\" : \"hidden\", e === 0 ? \"hidden\" : \"inherit\");\n\t                                pt.xs0 = \"inherit\";\n\t                                cssp._overwriteProps.push(pt.n);\n\t                                cssp._overwriteProps.push(p);\n\t                            }\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    var _removeProp = function(s, p) {\n\t                        if (p) {\n\t                            if (s.removeProperty) {\n\t                                if (p.substr(0, 2) === \"ms\" || p.substr(0, 6) === \"webkit\") {\n\t                                    p = \"-\" + p;\n\t                                }\n\t                                s.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t                            } else {\n\t                                s.removeAttribute(p);\n\t                            }\n\t                        }\n\t                    }, _setClassNameRatio = function(v) {\n\t                        this.t._gsClassPT = this;\n\t                        if (v === 1 || v === 0) {\n\t                            this.t.setAttribute(\"class\", v === 0 ? this.b : this.e);\n\t                            var mpt = this.data, s = this.t.style;\n\t                            while (mpt) {\n\t                                if (!mpt.v) {\n\t                                    _removeProp(s, mpt.p);\n\t                                } else {\n\t                                    s[mpt.p] = mpt.v;\n\t                                }\n\t                                mpt = mpt._next;\n\t                            }\n\t                            if (v === 1 && this.t._gsClassPT === this) {\n\t                                this.t._gsClassPT = null;\n\t                            }\n\t                        } else if (this.t.getAttribute(\"class\") !== this.e) {\n\t                            this.t.setAttribute(\"class\", this.e);\n\t                        }\n\t                    };\n\t                    _registerComplexSpecialProp(\"className\", {\n\t                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n\t                            var b = t.getAttribute(\"class\") || \"\", cssText = t.style.cssText, difData, bs, cnpt, cnptLookup, mpt;\n\t                            pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t                            pt.setRatio = _setClassNameRatio;\n\t                            pt.pr = -11;\n\t                            _hasPriority = true;\n\t                            pt.b = b;\n\t                            bs = _getAllStyles(t, _cs);\n\t                            cnpt = t._gsClassPT;\n\t                            if (cnpt) {\n\t                                cnptLookup = {};\n\t                                mpt = cnpt.data;\n\t                                while (mpt) {\n\t                                    cnptLookup[mpt.p] = 1;\n\t                                    mpt = mpt._next;\n\t                                }\n\t                                cnpt.setRatio(1);\n\t                            }\n\t                            t._gsClassPT = pt;\n\t                            pt.e = e.charAt(1) !== \"=\" ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + (e.charAt(0) === \"+\" ? \" \" + e.substr(2) : \"\");\n\t                            t.setAttribute(\"class\", pt.e);\n\t                            difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n\t                            t.setAttribute(\"class\", b);\n\t                            pt.data = difData.firstMPT;\n\t                            t.style.cssText = cssText;\n\t                            pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin);\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    var _setClearPropsRatio = function(v) {\n\t                        if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") {\n\t                            var s = this.t.style, transformParse = _specialProps.transform.parse, a, p, i, clearTransform, transform;\n\t                            if (this.e === \"all\") {\n\t                                s.cssText = \"\";\n\t                                clearTransform = true;\n\t                            } else {\n\t                                a = this.e.split(\" \").join(\"\").split(\",\");\n\t                                i = a.length;\n\t                                while (--i > -1) {\n\t                                    p = a[i];\n\t                                    if (_specialProps[p]) {\n\t                                        if (_specialProps[p].parse === transformParse) {\n\t                                            clearTransform = true;\n\t                                        } else {\n\t                                            p = p === \"transformOrigin\" ? _transformOriginProp : _specialProps[p].p;\n\t                                        }\n\t                                    }\n\t                                    _removeProp(s, p);\n\t                                }\n\t                            }\n\t                            if (clearTransform) {\n\t                                _removeProp(s, _transformProp);\n\t                                transform = this.t._gsTransform;\n\t                                if (transform) {\n\t                                    if (transform.svg) {\n\t                                        this.t.removeAttribute(\"data-svg-origin\");\n\t                                        this.t.removeAttribute(\"transform\");\n\t                                    }\n\t                                    delete this.t._gsTransform;\n\t                                }\n\t                            }\n\t                        }\n\t                    };\n\t                    _registerComplexSpecialProp(\"clearProps\", {\n\t                        parser: function(t, e, p, cssp, pt) {\n\t                            pt = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t                            pt.setRatio = _setClearPropsRatio;\n\t                            pt.e = e;\n\t                            pt.pr = -10;\n\t                            pt.data = cssp._tween;\n\t                            _hasPriority = true;\n\t                            return pt;\n\t                        }\n\t                    });\n\t                    p = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n\t                    i = p.length;\n\t                    while (i--) {\n\t                        _registerPluginProp(p[i]);\n\t                    }\n\t                    p = CSSPlugin.prototype;\n\t                    p._firstPT = p._lastParsedTransform = p._transform = null;\n\t                    p._onInitTween = function(target, vars, tween) {\n\t                        if (!target.nodeType) {\n\t                            return false;\n\t                        }\n\t                        this._target = target;\n\t                        this._tween = tween;\n\t                        this._vars = vars;\n\t                        _autoRound = vars.autoRound;\n\t                        _hasPriority = false;\n\t                        _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n\t                        _cs = _getComputedStyle(target, \"\");\n\t                        _overwriteProps = this._overwriteProps;\n\t                        var style = target.style, v, pt, pt2, first, last, next, zIndex, tpt, threeD;\n\t                        if (_reqSafariFix) if (style.zIndex === \"\") {\n\t                            v = _getStyle(target, \"zIndex\", _cs);\n\t                            if (v === \"auto\" || v === \"\") {\n\t                                this._addLazySet(style, \"zIndex\", 0);\n\t                            }\n\t                        }\n\t                        if (typeof vars === \"string\") {\n\t                            first = style.cssText;\n\t                            v = _getAllStyles(target, _cs);\n\t                            style.cssText = first + \";\" + vars;\n\t                            v = _cssDif(target, v, _getAllStyles(target)).difs;\n\t                            if (!_supportsOpacity && _opacityValExp.test(vars)) {\n\t                                v.opacity = parseFloat(RegExp.$1);\n\t                            }\n\t                            vars = v;\n\t                            style.cssText = first;\n\t                        }\n\t                        if (vars.className) {\n\t                            this._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n\t                        } else {\n\t                            this._firstPT = pt = this.parse(target, vars, null);\n\t                        }\n\t                        if (this._transformType) {\n\t                            threeD = this._transformType === 3;\n\t                            if (!_transformProp) {\n\t                                style.zoom = 1;\n\t                            } else if (_isSafari) {\n\t                                _reqSafariFix = true;\n\t                                if (style.zIndex === \"\") {\n\t                                    zIndex = _getStyle(target, \"zIndex\", _cs);\n\t                                    if (zIndex === \"auto\" || zIndex === \"\") {\n\t                                        this._addLazySet(style, \"zIndex\", 0);\n\t                                    }\n\t                                }\n\t                                if (_isSafariLT6) {\n\t                                    this._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n\t                                }\n\t                            }\n\t                            pt2 = pt;\n\t                            while (pt2 && pt2._next) {\n\t                                pt2 = pt2._next;\n\t                            }\n\t                            tpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n\t                            this._linkCSSP(tpt, null, pt2);\n\t                            tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n\t                            tpt.data = this._transform || _getTransform(target, _cs, true);\n\t                            tpt.tween = tween;\n\t                            tpt.pr = -1;\n\t                            _overwriteProps.pop();\n\t                        }\n\t                        if (_hasPriority) {\n\t                            while (pt) {\n\t                                next = pt._next;\n\t                                pt2 = first;\n\t                                while (pt2 && pt2.pr > pt.pr) {\n\t                                    pt2 = pt2._next;\n\t                                }\n\t                                if (pt._prev = pt2 ? pt2._prev : last) {\n\t                                    pt._prev._next = pt;\n\t                                } else {\n\t                                    first = pt;\n\t                                }\n\t                                if (pt._next = pt2) {\n\t                                    pt2._prev = pt;\n\t                                } else {\n\t                                    last = pt;\n\t                                }\n\t                                pt = next;\n\t                            }\n\t                            this._firstPT = first;\n\t                        }\n\t                        return true;\n\t                    };\n\t                    p.parse = function(target, vars, pt, plugin) {\n\t                        var style = target.style, p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n\t                        for (p in vars) {\n\t                            es = vars[p];\n\t                            sp = _specialProps[p];\n\t                            if (sp) {\n\t                                pt = sp.parse(target, es, p, this, pt, plugin, vars);\n\t                            } else {\n\t                                bs = _getStyle(target, p, _cs) + \"\";\n\t                                isStr = typeof es === \"string\";\n\t                                if (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || isStr && _rgbhslExp.test(es)) {\n\t                                    if (!isStr) {\n\t                                        es = _parseColor(es);\n\t                                        es = (es.length > 3 ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n\t                                    }\n\t                                    pt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n\t                                } else if (isStr && _complexExp.test(es)) {\n\t                                    pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n\t                                } else {\n\t                                    bn = parseFloat(bs);\n\t                                    bsfx = bn || bn === 0 ? bs.substr((bn + \"\").length) : \"\";\n\t                                    if (bs === \"\" || bs === \"auto\") {\n\t                                        if (p === \"width\" || p === \"height\") {\n\t                                            bn = _getDimension(target, p, _cs);\n\t                                            bsfx = \"px\";\n\t                                        } else if (p === \"left\" || p === \"top\") {\n\t                                            bn = _calculateOffset(target, p, _cs);\n\t                                            bsfx = \"px\";\n\t                                        } else {\n\t                                            bn = p !== \"opacity\" ? 0 : 1;\n\t                                            bsfx = \"\";\n\t                                        }\n\t                                    }\n\t                                    rel = isStr && es.charAt(1) === \"=\";\n\t                                    if (rel) {\n\t                                        en = parseInt(es.charAt(0) + \"1\", 10);\n\t                                        es = es.substr(2);\n\t                                        en *= parseFloat(es);\n\t                                        esfx = es.replace(_suffixExp, \"\");\n\t                                    } else {\n\t                                        en = parseFloat(es);\n\t                                        esfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n\t                                    }\n\t                                    if (esfx === \"\") {\n\t                                        esfx = p in _suffixMap ? _suffixMap[p] : bsfx;\n\t                                    }\n\t                                    es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p];\n\t                                    if (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) {\n\t                                        bn = _convertToPixels(target, p, bn, bsfx);\n\t                                        if (esfx === \"%\") {\n\t                                            bn /= _convertToPixels(target, p, 100, \"%\") / 100;\n\t                                            if (vars.strictUnits !== true) {\n\t                                                bs = bn + \"%\";\n\t                                            }\n\t                                        } else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n\t                                            bn /= _convertToPixels(target, p, 1, esfx);\n\t                                        } else if (esfx !== \"px\") {\n\t                                            en = _convertToPixels(target, p, en, esfx);\n\t                                            esfx = \"px\";\n\t                                        }\n\t                                        if (rel) if (en || en === 0) {\n\t                                            es = en + bn + esfx;\n\t                                        }\n\t                                    }\n\t                                    if (rel) {\n\t                                        en += bn;\n\t                                    }\n\t                                    if ((bn || bn === 0) && (en || en === 0)) {\n\t                                        pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === \"px\" || p === \"zIndex\"), 0, bs, es);\n\t                                        pt.xs0 = esfx;\n\t                                    } else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n\t                                        _log(\"invalid \" + p + \" tween value: \" + vars[p]);\n\t                                    } else {\n\t                                        pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n\t                                        pt.xs0 = es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1) ? bs : es;\n\t                                    }\n\t                                }\n\t                            }\n\t                            if (plugin) if (pt && !pt.plugin) {\n\t                                pt.plugin = plugin;\n\t                            }\n\t                        }\n\t                        return pt;\n\t                    };\n\t                    p.setRatio = function(v) {\n\t                        var pt = this._firstPT, min = 1e-6, val, str, i;\n\t                        if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n\t                            while (pt) {\n\t                                if (pt.type !== 2) {\n\t                                    if (pt.r && pt.type !== -1) {\n\t                                        val = Math.round(pt.s + pt.c);\n\t                                        if (!pt.type) {\n\t                                            pt.t[pt.p] = val + pt.xs0;\n\t                                        } else if (pt.type === 1) {\n\t                                            i = pt.l;\n\t                                            str = pt.xs0 + val + pt.xs1;\n\t                                            for (i = 1; i < pt.l; i++) {\n\t                                                str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                            }\n\t                                            pt.t[pt.p] = str;\n\t                                        }\n\t                                    } else {\n\t                                        pt.t[pt.p] = pt.e;\n\t                                    }\n\t                                } else {\n\t                                    pt.setRatio(v);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -1e-6) {\n\t                            while (pt) {\n\t                                val = pt.c * v + pt.s;\n\t                                if (pt.r) {\n\t                                    val = Math.round(val);\n\t                                } else if (val < min) if (val > -min) {\n\t                                    val = 0;\n\t                                }\n\t                                if (!pt.type) {\n\t                                    pt.t[pt.p] = val + pt.xs0;\n\t                                } else if (pt.type === 1) {\n\t                                    i = pt.l;\n\t                                    if (i === 2) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n\t                                    } else if (i === 3) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n\t                                    } else if (i === 4) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n\t                                    } else if (i === 5) {\n\t                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n\t                                    } else {\n\t                                        str = pt.xs0 + val + pt.xs1;\n\t                                        for (i = 1; i < pt.l; i++) {\n\t                                            str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n\t                                        }\n\t                                        pt.t[pt.p] = str;\n\t                                    }\n\t                                } else if (pt.type === -1) {\n\t                                    pt.t[pt.p] = pt.xs0;\n\t                                } else if (pt.setRatio) {\n\t                                    pt.setRatio(v);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        } else {\n\t                            while (pt) {\n\t                                if (pt.type !== 2) {\n\t                                    pt.t[pt.p] = pt.b;\n\t                                } else {\n\t                                    pt.setRatio(v);\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        }\n\t                    };\n\t                    p._enableTransforms = function(threeD) {\n\t                        this._transform = this._transform || _getTransform(this._target, _cs, true);\n\t                        this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;\n\t                    };\n\t                    var lazySet = function(v) {\n\t                        this.t[this.p] = this.e;\n\t                        this.data._linkCSSP(this, this._next, null, true);\n\t                    };\n\t                    p._addLazySet = function(t, p, v) {\n\t                        var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n\t                        pt.e = v;\n\t                        pt.setRatio = lazySet;\n\t                        pt.data = this;\n\t                    };\n\t                    p._linkCSSP = function(pt, next, prev, remove) {\n\t                        if (pt) {\n\t                            if (next) {\n\t                                next._prev = pt;\n\t                            }\n\t                            if (pt._next) {\n\t                                pt._next._prev = pt._prev;\n\t                            }\n\t                            if (pt._prev) {\n\t                                pt._prev._next = pt._next;\n\t                            } else if (this._firstPT === pt) {\n\t                                this._firstPT = pt._next;\n\t                                remove = true;\n\t                            }\n\t                            if (prev) {\n\t                                prev._next = pt;\n\t                            } else if (!remove && this._firstPT === null) {\n\t                                this._firstPT = pt;\n\t                            }\n\t                            pt._next = next;\n\t                            pt._prev = prev;\n\t                        }\n\t                        return pt;\n\t                    };\n\t                    p._kill = function(lookup) {\n\t                        var copy = lookup, pt, p, xfirst;\n\t                        if (lookup.autoAlpha || lookup.alpha) {\n\t                            copy = {};\n\t                            for (p in lookup) {\n\t                                copy[p] = lookup[p];\n\t                            }\n\t                            copy.opacity = 1;\n\t                            if (copy.autoAlpha) {\n\t                                copy.visibility = 1;\n\t                            }\n\t                        }\n\t                        if (lookup.className && (pt = this._classNamePT)) {\n\t                            xfirst = pt.xfirst;\n\t                            if (xfirst && xfirst._prev) {\n\t                                this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev);\n\t                            } else if (xfirst === this._firstPT) {\n\t                                this._firstPT = pt._next;\n\t                            }\n\t                            if (pt._next) {\n\t                                this._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n\t                            }\n\t                            this._classNamePT = null;\n\t                        }\n\t                        return TweenPlugin.prototype._kill.call(this, copy);\n\t                    };\n\t                    var _getChildStyles = function(e, props, targets) {\n\t                        var children, i, child, type;\n\t                        if (e.slice) {\n\t                            i = e.length;\n\t                            while (--i > -1) {\n\t                                _getChildStyles(e[i], props, targets);\n\t                            }\n\t                            return;\n\t                        }\n\t                        children = e.childNodes;\n\t                        i = children.length;\n\t                        while (--i > -1) {\n\t                            child = children[i];\n\t                            type = child.type;\n\t                            if (child.style) {\n\t                                props.push(_getAllStyles(child));\n\t                                if (targets) {\n\t                                    targets.push(child);\n\t                                }\n\t                            }\n\t                            if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n\t                                _getChildStyles(child, props, targets);\n\t                            }\n\t                        }\n\t                    };\n\t                    CSSPlugin.cascadeTo = function(target, duration, vars) {\n\t                        var tween = TweenLite.to(target, duration, vars), results = [ tween ], b = [], e = [], targets = [], _reservedProps = TweenLite._internals.reservedProps, i, difs, p, from;\n\t                        target = tween._targets || tween.target;\n\t                        _getChildStyles(target, b, targets);\n\t                        tween.render(duration, true, true);\n\t                        _getChildStyles(target, e);\n\t                        tween.render(0, true, true);\n\t                        tween._enabled(true);\n\t                        i = targets.length;\n\t                        while (--i > -1) {\n\t                            difs = _cssDif(targets[i], b[i], e[i]);\n\t                            if (difs.firstMPT) {\n\t                                difs = difs.difs;\n\t                                for (p in vars) {\n\t                                    if (_reservedProps[p]) {\n\t                                        difs[p] = vars[p];\n\t                                    }\n\t                                }\n\t                                from = {};\n\t                                for (p in difs) {\n\t                                    from[p] = b[i][p];\n\t                                }\n\t                                results.push(TweenLite.fromTo(targets[i], duration, from, difs));\n\t                            }\n\t                        }\n\t                        return results;\n\t                    };\n\t                    TweenPlugin.activate([ CSSPlugin ]);\n\t                    return CSSPlugin;\n\t                }, true);\n\t                (function() {\n\t                    var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n\t                        propName: \"roundProps\",\n\t                        version: \"1.5\",\n\t                        priority: -1,\n\t                        API: 2,\n\t                        init: function(target, value, tween) {\n\t                            this._tween = tween;\n\t                            return true;\n\t                        }\n\t                    }), _roundLinkedList = function(node) {\n\t                        while (node) {\n\t                            if (!node.f && !node.blob) {\n\t                                node.r = 1;\n\t                            }\n\t                            node = node._next;\n\t                        }\n\t                    }, p = RoundPropsPlugin.prototype;\n\t                    p._onInitAllProps = function() {\n\t                        var tween = this._tween, rp = tween.vars.roundProps.join ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"), i = rp.length, lookup = {}, rpt = tween._propLookup.roundProps, prop, pt, next;\n\t                        while (--i > -1) {\n\t                            lookup[rp[i]] = 1;\n\t                        }\n\t                        i = rp.length;\n\t                        while (--i > -1) {\n\t                            prop = rp[i];\n\t                            pt = tween._firstPT;\n\t                            while (pt) {\n\t                                next = pt._next;\n\t                                if (pt.pg) {\n\t                                    pt.t._roundProps(lookup, true);\n\t                                } else if (pt.n === prop) {\n\t                                    if (pt.f === 2 && pt.t) {\n\t                                        _roundLinkedList(pt.t._firstPT);\n\t                                    } else {\n\t                                        this._add(pt.t, prop, pt.s, pt.c);\n\t                                        if (next) {\n\t                                            next._prev = pt._prev;\n\t                                        }\n\t                                        if (pt._prev) {\n\t                                            pt._prev._next = next;\n\t                                        } else if (tween._firstPT === pt) {\n\t                                            tween._firstPT = next;\n\t                                        }\n\t                                        pt._next = pt._prev = null;\n\t                                        tween._propLookup[prop] = rpt;\n\t                                    }\n\t                                }\n\t                                pt = next;\n\t                            }\n\t                        }\n\t                        return false;\n\t                    };\n\t                    p._add = function(target, p, s, c) {\n\t                        this._addTween(target, p, s, s + c, p, true);\n\t                        this._overwriteProps.push(p);\n\t                    };\n\t                })();\n\t                (function() {\n\t                    _gsScope._gsDefine.plugin({\n\t                        propName: \"attr\",\n\t                        API: 2,\n\t                        version: \"0.5.0\",\n\t                        init: function(target, value, tween) {\n\t                            var p;\n\t                            if (typeof target.setAttribute !== \"function\") {\n\t                                return false;\n\t                            }\n\t                            for (p in value) {\n\t                                this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", value[p] + \"\", p, false, p);\n\t                                this._overwriteProps.push(p);\n\t                            }\n\t                            return true;\n\t                        }\n\t                    });\n\t                })();\n\t                _gsScope._gsDefine.plugin({\n\t                    propName: \"directionalRotation\",\n\t                    version: \"0.2.1\",\n\t                    API: 2,\n\t                    init: function(target, value, tween) {\n\t                        if (typeof value !== \"object\") {\n\t                            value = {\n\t                                rotation: value\n\t                            };\n\t                        }\n\t                        this.finals = {};\n\t                        var cap = value.useRadians === true ? Math.PI * 2 : 360, min = 1e-6, p, v, start, end, dif, split;\n\t                        for (p in value) {\n\t                            if (p !== \"useRadians\") {\n\t                                split = (value[p] + \"\").split(\"_\");\n\t                                v = split[0];\n\t                                start = parseFloat(typeof target[p] !== \"function\" ? target[p] : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]());\n\t                                end = this.finals[p] = typeof v === \"string\" && v.charAt(1) === \"=\" ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n\t                                dif = end - start;\n\t                                if (split.length) {\n\t                                    v = split.join(\"_\");\n\t                                    if (v.indexOf(\"short\") !== -1) {\n\t                                        dif = dif % cap;\n\t                                        if (dif !== dif % (cap / 2)) {\n\t                                            dif = dif < 0 ? dif + cap : dif - cap;\n\t                                        }\n\t                                    }\n\t                                    if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t                                        dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                    } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t                                        dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n\t                                    }\n\t                                }\n\t                                if (dif > min || dif < -min) {\n\t                                    this._addTween(target, p, start, start + dif, p);\n\t                                    this._overwriteProps.push(p);\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    },\n\t                    set: function(ratio) {\n\t                        var pt;\n\t                        if (ratio !== 1) {\n\t                            this._super.setRatio.call(this, ratio);\n\t                        } else {\n\t                            pt = this._firstPT;\n\t                            while (pt) {\n\t                                if (pt.f) {\n\t                                    pt.t[pt.p](this.finals[pt.p]);\n\t                                } else {\n\t                                    pt.t[pt.p] = this.finals[pt.p];\n\t                                }\n\t                                pt = pt._next;\n\t                            }\n\t                        }\n\t                    }\n\t                })._autoCSS = true;\n\t                _gsScope._gsDefine(\"easing.Back\", [ \"easing.Ease\" ], function(Ease) {\n\t                    var w = _gsScope.GreenSockGlobals || _gsScope, gs = w.com.greensock, _2PI = Math.PI * 2, _HALF_PI = Math.PI / 2, _class = gs._class, _create = function(n, f) {\n\t                        var C = _class(\"easing.\" + n, function() {}, true), p = C.prototype = new Ease();\n\t                        p.constructor = C;\n\t                        p.getRatio = f;\n\t                        return C;\n\t                    }, _easeReg = Ease.register || function() {}, _wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t                        var C = _class(\"easing.\" + name, {\n\t                            easeOut: new EaseOut(),\n\t                            easeIn: new EaseIn(),\n\t                            easeInOut: new EaseInOut()\n\t                        }, true);\n\t                        _easeReg(C, name);\n\t                        return C;\n\t                    }, EasePoint = function(time, value, next) {\n\t                        this.t = time;\n\t                        this.v = value;\n\t                        if (next) {\n\t                            this.next = next;\n\t                            next.prev = this;\n\t                            this.c = next.v - value;\n\t                            this.gap = next.t - time;\n\t                        }\n\t                    }, _createBack = function(n, f) {\n\t                        var C = _class(\"easing.\" + n, function(overshoot) {\n\t                            this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;\n\t                            this._p2 = this._p1 * 1.525;\n\t                        }, true), p = C.prototype = new Ease();\n\t                        p.constructor = C;\n\t                        p.getRatio = f;\n\t                        p.config = function(overshoot) {\n\t                            return new C(overshoot);\n\t                        };\n\t                        return C;\n\t                    }, Back = _wrap(\"Back\", _createBack(\"BackOut\", function(p) {\n\t                        return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;\n\t                    }), _createBack(\"BackIn\", function(p) {\n\t                        return p * p * ((this._p1 + 1) * p - this._p1);\n\t                    }), _createBack(\"BackInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? .5 * p * p * ((this._p2 + 1) * p - this._p2) : .5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t                    })), SlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t                        power = power || power === 0 ? power : .7;\n\t                        if (linearRatio == null) {\n\t                            linearRatio = .7;\n\t                        } else if (linearRatio > 1) {\n\t                            linearRatio = 1;\n\t                        }\n\t                        this._p = linearRatio !== 1 ? power : 0;\n\t                        this._p1 = (1 - linearRatio) / 2;\n\t                        this._p2 = linearRatio;\n\t                        this._p3 = this._p1 + this._p2;\n\t                        this._calcEnd = yoyoMode === true;\n\t                    }, true), p = SlowMo.prototype = new Ease(), SteppedEase, RoughEase, _createElastic;\n\t                    p.constructor = SlowMo;\n\t                    p.getRatio = function(p) {\n\t                        var r = p + (.5 - p) * this._p;\n\t                        if (p < this._p1) {\n\t                            return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;\n\t                        } else if (p > this._p3) {\n\t                            return this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p;\n\t                        }\n\t                        return this._calcEnd ? 1 : r;\n\t                    };\n\t                    SlowMo.ease = new SlowMo(.7, .7);\n\t                    p.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t                        return new SlowMo(linearRatio, power, yoyoMode);\n\t                    };\n\t                    SteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n\t                        steps = steps || 1;\n\t                        this._p1 = 1 / steps;\n\t                        this._p2 = steps + 1;\n\t                    }, true);\n\t                    p = SteppedEase.prototype = new Ease();\n\t                    p.constructor = SteppedEase;\n\t                    p.getRatio = function(p) {\n\t                        if (p < 0) {\n\t                            p = 0;\n\t                        } else if (p >= 1) {\n\t                            p = .999999999;\n\t                        }\n\t                        return (this._p2 * p >> 0) * this._p1;\n\t                    };\n\t                    p.config = SteppedEase.config = function(steps) {\n\t                        return new SteppedEase(steps);\n\t                    };\n\t                    RoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t                        vars = vars || {};\n\t                        var taper = vars.taper || \"none\", a = [], cnt = 0, points = (vars.points || 20) | 0, i = points, randomize = vars.randomize !== false, clamp = vars.clamp === true, template = vars.template instanceof Ease ? vars.template : null, strength = typeof vars.strength === \"number\" ? vars.strength * .4 : .4, x, y, bump, invX, obj, pnt;\n\t                        while (--i > -1) {\n\t                            x = randomize ? Math.random() : 1 / points * i;\n\t                            y = template ? template.getRatio(x) : x;\n\t                            if (taper === \"none\") {\n\t                                bump = strength;\n\t                            } else if (taper === \"out\") {\n\t                                invX = 1 - x;\n\t                                bump = invX * invX * strength;\n\t                            } else if (taper === \"in\") {\n\t                                bump = x * x * strength;\n\t                            } else if (x < .5) {\n\t                                invX = x * 2;\n\t                                bump = invX * invX * .5 * strength;\n\t                            } else {\n\t                                invX = (1 - x) * 2;\n\t                                bump = invX * invX * .5 * strength;\n\t                            }\n\t                            if (randomize) {\n\t                                y += Math.random() * bump - bump * .5;\n\t                            } else if (i % 2) {\n\t                                y += bump * .5;\n\t                            } else {\n\t                                y -= bump * .5;\n\t                            }\n\t                            if (clamp) {\n\t                                if (y > 1) {\n\t                                    y = 1;\n\t                                } else if (y < 0) {\n\t                                    y = 0;\n\t                                }\n\t                            }\n\t                            a[cnt++] = {\n\t                                x: x,\n\t                                y: y\n\t                            };\n\t                        }\n\t                        a.sort(function(a, b) {\n\t                            return a.x - b.x;\n\t                        });\n\t                        pnt = new EasePoint(1, 1, null);\n\t                        i = points;\n\t                        while (--i > -1) {\n\t                            obj = a[i];\n\t                            pnt = new EasePoint(obj.x, obj.y, pnt);\n\t                        }\n\t                        this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);\n\t                    }, true);\n\t                    p = RoughEase.prototype = new Ease();\n\t                    p.constructor = RoughEase;\n\t                    p.getRatio = function(p) {\n\t                        var pnt = this._prev;\n\t                        if (p > pnt.t) {\n\t                            while (pnt.next && p >= pnt.t) {\n\t                                pnt = pnt.next;\n\t                            }\n\t                            pnt = pnt.prev;\n\t                        } else {\n\t                            while (pnt.prev && p <= pnt.t) {\n\t                                pnt = pnt.prev;\n\t                            }\n\t                        }\n\t                        this._prev = pnt;\n\t                        return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;\n\t                    };\n\t                    p.config = function(vars) {\n\t                        return new RoughEase(vars);\n\t                    };\n\t                    RoughEase.ease = new RoughEase();\n\t                    _wrap(\"Bounce\", _create(\"BounceOut\", function(p) {\n\t                        if (p < 1 / 2.75) {\n\t                            return 7.5625 * p * p;\n\t                        } else if (p < 2 / 2.75) {\n\t                            return 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n\t                        } else if (p < 2.5 / 2.75) {\n\t                            return 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n\t                        }\n\t                        return 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n\t                    }), _create(\"BounceIn\", function(p) {\n\t                        if ((p = 1 - p) < 1 / 2.75) {\n\t                            return 1 - 7.5625 * p * p;\n\t                        } else if (p < 2 / 2.75) {\n\t                            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + .75);\n\t                        } else if (p < 2.5 / 2.75) {\n\t                            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + .9375);\n\t                        }\n\t                        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + .984375);\n\t                    }), _create(\"BounceInOut\", function(p) {\n\t                        var invert = p < .5;\n\t                        if (invert) {\n\t                            p = 1 - p * 2;\n\t                        } else {\n\t                            p = p * 2 - 1;\n\t                        }\n\t                        if (p < 1 / 2.75) {\n\t                            p = 7.5625 * p * p;\n\t                        } else if (p < 2 / 2.75) {\n\t                            p = 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n\t                        } else if (p < 2.5 / 2.75) {\n\t                            p = 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n\t                        } else {\n\t                            p = 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n\t                        }\n\t                        return invert ? (1 - p) * .5 : p * .5 + .5;\n\t                    }));\n\t                    _wrap(\"Circ\", _create(\"CircOut\", function(p) {\n\t                        return Math.sqrt(1 - (p = p - 1) * p);\n\t                    }), _create(\"CircIn\", function(p) {\n\t                        return -(Math.sqrt(1 - p * p) - 1);\n\t                    }), _create(\"CircInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? -.5 * (Math.sqrt(1 - p * p) - 1) : .5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t                    }));\n\t                    _createElastic = function(n, f, def) {\n\t                        var C = _class(\"easing.\" + n, function(amplitude, period) {\n\t                            this._p1 = amplitude >= 1 ? amplitude : 1;\n\t                            this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n\t                            this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t                            this._p2 = _2PI / this._p2;\n\t                        }, true), p = C.prototype = new Ease();\n\t                        p.constructor = C;\n\t                        p.getRatio = f;\n\t                        p.config = function(amplitude, period) {\n\t                            return new C(amplitude, period);\n\t                        };\n\t                        return C;\n\t                    };\n\t                    _wrap(\"Elastic\", _createElastic(\"ElasticOut\", function(p) {\n\t                        return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;\n\t                    }, .3), _createElastic(\"ElasticIn\", function(p) {\n\t                        return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));\n\t                    }, .3), _createElastic(\"ElasticInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * .5 + 1;\n\t                    }, .45));\n\t                    _wrap(\"Expo\", _create(\"ExpoOut\", function(p) {\n\t                        return 1 - Math.pow(2, -10 * p);\n\t                    }), _create(\"ExpoIn\", function(p) {\n\t                        return Math.pow(2, 10 * (p - 1)) - .001;\n\t                    }), _create(\"ExpoInOut\", function(p) {\n\t                        return (p *= 2) < 1 ? .5 * Math.pow(2, 10 * (p - 1)) : .5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t                    }));\n\t                    _wrap(\"Sine\", _create(\"SineOut\", function(p) {\n\t                        return Math.sin(p * _HALF_PI);\n\t                    }), _create(\"SineIn\", function(p) {\n\t                        return -Math.cos(p * _HALF_PI) + 1;\n\t                    }), _create(\"SineInOut\", function(p) {\n\t                        return -.5 * (Math.cos(Math.PI * p) - 1);\n\t                    }));\n\t                    _class(\"easing.EaseLookup\", {\n\t                        find: function(s) {\n\t                            return Ease.map[s];\n\t                        }\n\t                    }, true);\n\t                    _easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t                    _easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t                    _easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\t                    return Back;\n\t                }, true);\n\t            });\n\t            if (_gsScope._gsDefine) {\n\t                _gsScope._gsQueue.pop()();\n\t            }\n\t            (function(window, moduleName) {\n\t                \"use strict\";\n\t                var _exports = {}, _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n\t                if (_globals.TweenLite) {\n\t                    return;\n\t                }\n\t                var _namespace = function(ns) {\n\t                    var a = ns.split(\".\"), p = _globals, i;\n\t                    for (i = 0; i < a.length; i++) {\n\t                        p[a[i]] = p = p[a[i]] || {};\n\t                    }\n\t                    return p;\n\t                }, gs = _namespace(\"com.greensock\"), _tinyNum = 1e-10, _slice = function(a) {\n\t                    var b = [], l = a.length, i;\n\t                    for (i = 0; i !== l; b.push(a[i++])) {}\n\t                    return b;\n\t                }, _emptyFunc = function() {}, _isArray = function() {\n\t                    var toString = Object.prototype.toString, array = toString.call([]);\n\t                    return function(obj) {\n\t                        return obj != null && (obj instanceof Array || typeof obj === \"object\" && !!obj.push && toString.call(obj) === array);\n\t                    };\n\t                }(), a, i, p, _ticker, _tickerActive, _defLookup = {}, Definition = function(ns, dependencies, func, global) {\n\t                    this.sc = _defLookup[ns] ? _defLookup[ns].sc : [];\n\t                    _defLookup[ns] = this;\n\t                    this.gsClass = null;\n\t                    this.func = func;\n\t                    var _classes = [];\n\t                    this.check = function(init) {\n\t                        var i = dependencies.length, missing = i, cur, a, n, cl, hasModule;\n\t                        while (--i > -1) {\n\t                            if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t                                _classes[i] = cur.gsClass;\n\t                                missing--;\n\t                            } else if (init) {\n\t                                cur.sc.push(this);\n\t                            }\n\t                        }\n\t                        if (missing === 0 && func) {\n\t                            a = (\"com.greensock.\" + ns).split(\".\");\n\t                            n = a.pop();\n\t                            cl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\t                            if (global) {\n\t                                _globals[n] = cl;\n\t                                hasModule = typeof module !== \"undefined\" && module.exports;\n\t                                if (!hasModule && \"function\" === \"function\" && __webpack_require__(6)) {\n\t                                    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                                        return cl;\n\t                                    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t                                } else if (hasModule) {\n\t                                    if (ns === moduleName) {\n\t                                        module.exports = _exports[moduleName] = cl;\n\t                                        for (i in _exports) {\n\t                                            cl[i] = _exports[i];\n\t                                        }\n\t                                    } else if (_exports[moduleName]) {\n\t                                        _exports[moduleName][n] = cl;\n\t                                    }\n\t                                }\n\t                            }\n\t                            for (i = 0; i < this.sc.length; i++) {\n\t                                this.sc[i].check();\n\t                            }\n\t                        }\n\t                    };\n\t                    this.check(true);\n\t                }, _gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t                    return new Definition(ns, dependencies, func, global);\n\t                }, _class = gs._class = function(ns, func, global) {\n\t                    func = func || function() {};\n\t                    _gsDefine(ns, [], function() {\n\t                        return func;\n\t                    }, global);\n\t                    return func;\n\t                };\n\t                _gsDefine.globals = _globals;\n\t                var _baseParams = [ 0, 0, 1, 1 ], _blankArray = [], Ease = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t                    this._func = func;\n\t                    this._type = type || 0;\n\t                    this._power = power || 0;\n\t                    this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t                }, true), _easeMap = Ease.map = {}, _easeReg = Ease.register = function(ease, names, types, create) {\n\t                    var na = names.split(\",\"), i = na.length, ta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"), e, name, j, type;\n\t                    while (--i > -1) {\n\t                        name = na[i];\n\t                        e = create ? _class(\"easing.\" + name, null, true) : gs.easing[name] || {};\n\t                        j = ta.length;\n\t                        while (--j > -1) {\n\t                            type = ta[j];\n\t                            _easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t                        }\n\t                    }\n\t                };\n\t                p = Ease.prototype;\n\t                p._calcEnd = false;\n\t                p.getRatio = function(p) {\n\t                    if (this._func) {\n\t                        this._params[0] = p;\n\t                        return this._func.apply(null, this._params);\n\t                    }\n\t                    var t = this._type, pw = this._power, r = t === 1 ? 1 - p : t === 2 ? p : p < .5 ? p * 2 : (1 - p) * 2;\n\t                    if (pw === 1) {\n\t                        r *= r;\n\t                    } else if (pw === 2) {\n\t                        r *= r * r;\n\t                    } else if (pw === 3) {\n\t                        r *= r * r * r;\n\t                    } else if (pw === 4) {\n\t                        r *= r * r * r * r;\n\t                    }\n\t                    return t === 1 ? 1 - r : t === 2 ? r : p < .5 ? r / 2 : 1 - r / 2;\n\t                };\n\t                a = [ \"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\" ];\n\t                i = a.length;\n\t                while (--i > -1) {\n\t                    p = a[i] + \",Power\" + i;\n\t                    _easeReg(new Ease(null, null, 1, i), p, \"easeOut\", true);\n\t                    _easeReg(new Ease(null, null, 2, i), p, \"easeIn\" + (i === 0 ? \",easeNone\" : \"\"));\n\t                    _easeReg(new Ease(null, null, 3, i), p, \"easeInOut\");\n\t                }\n\t                _easeMap.linear = gs.easing.Linear.easeIn;\n\t                _easeMap.swing = gs.easing.Quad.easeInOut;\n\t                var EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t                    this._listeners = {};\n\t                    this._eventTarget = target || this;\n\t                });\n\t                p = EventDispatcher.prototype;\n\t                p.addEventListener = function(type, callback, scope, useParam, priority) {\n\t                    priority = priority || 0;\n\t                    var list = this._listeners[type], index = 0, listener, i;\n\t                    if (this === _ticker && !_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    if (list == null) {\n\t                        this._listeners[type] = list = [];\n\t                    }\n\t                    i = list.length;\n\t                    while (--i > -1) {\n\t                        listener = list[i];\n\t                        if (listener.c === callback && listener.s === scope) {\n\t                            list.splice(i, 1);\n\t                        } else if (index === 0 && listener.pr < priority) {\n\t                            index = i + 1;\n\t                        }\n\t                    }\n\t                    list.splice(index, 0, {\n\t                        c: callback,\n\t                        s: scope,\n\t                        up: useParam,\n\t                        pr: priority\n\t                    });\n\t                };\n\t                p.removeEventListener = function(type, callback) {\n\t                    var list = this._listeners[type], i;\n\t                    if (list) {\n\t                        i = list.length;\n\t                        while (--i > -1) {\n\t                            if (list[i].c === callback) {\n\t                                list.splice(i, 1);\n\t                                return;\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                p.dispatchEvent = function(type) {\n\t                    var list = this._listeners[type], i, t, listener;\n\t                    if (list) {\n\t                        i = list.length;\n\t                        t = this._eventTarget;\n\t                        while (--i > -1) {\n\t                            listener = list[i];\n\t                            if (listener) {\n\t                                if (listener.up) {\n\t                                    listener.c.call(listener.s || t, {\n\t                                        type: type,\n\t                                        target: t\n\t                                    });\n\t                                } else {\n\t                                    listener.c.call(listener.s || t);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                var _reqAnimFrame = window.requestAnimationFrame, _cancelAnimFrame = window.cancelAnimationFrame, _getTime = Date.now || function() {\n\t                    return new Date().getTime();\n\t                }, _lastUpdate = _getTime();\n\t                a = [ \"ms\", \"moz\", \"webkit\", \"o\" ];\n\t                i = a.length;\n\t                while (--i > -1 && !_reqAnimFrame) {\n\t                    _reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t                    _cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t                }\n\t                _class(\"Ticker\", function(fps, useRAF) {\n\t                    var _self = this, _startTime = _getTime(), _useRAF = useRAF !== false && _reqAnimFrame ? \"auto\" : false, _lagThreshold = 500, _adjustedLag = 33, _tickWord = \"tick\", _fps, _req, _id, _gap, _nextTime, _tick = function(manual) {\n\t                        var elapsed = _getTime() - _lastUpdate, overlap, dispatch;\n\t                        if (elapsed > _lagThreshold) {\n\t                            _startTime += elapsed - _adjustedLag;\n\t                        }\n\t                        _lastUpdate += elapsed;\n\t                        _self.time = (_lastUpdate - _startTime) / 1e3;\n\t                        overlap = _self.time - _nextTime;\n\t                        if (!_fps || overlap > 0 || manual === true) {\n\t                            _self.frame++;\n\t                            _nextTime += overlap + (overlap >= _gap ? .004 : _gap - overlap);\n\t                            dispatch = true;\n\t                        }\n\t                        if (manual !== true) {\n\t                            _id = _req(_tick);\n\t                        }\n\t                        if (dispatch) {\n\t                            _self.dispatchEvent(_tickWord);\n\t                        }\n\t                    };\n\t                    EventDispatcher.call(_self);\n\t                    _self.time = _self.frame = 0;\n\t                    _self.tick = function() {\n\t                        _tick(true);\n\t                    };\n\t                    _self.lagSmoothing = function(threshold, adjustedLag) {\n\t                        _lagThreshold = threshold || 1 / _tinyNum;\n\t                        _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t                    };\n\t                    _self.sleep = function() {\n\t                        if (_id == null) {\n\t                            return;\n\t                        }\n\t                        if (!_useRAF || !_cancelAnimFrame) {\n\t                            clearTimeout(_id);\n\t                        } else {\n\t                            _cancelAnimFrame(_id);\n\t                        }\n\t                        _req = _emptyFunc;\n\t                        _id = null;\n\t                        if (_self === _ticker) {\n\t                            _tickerActive = false;\n\t                        }\n\t                    };\n\t                    _self.wake = function(seamless) {\n\t                        if (_id !== null) {\n\t                            _self.sleep();\n\t                        } else if (seamless) {\n\t                            _startTime += -_lastUpdate + (_lastUpdate = _getTime());\n\t                        } else if (_self.frame > 10) {\n\t                            _lastUpdate = _getTime() - _lagThreshold + 5;\n\t                        }\n\t                        _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function(f) {\n\t                            return setTimeout(f, (_nextTime - _self.time) * 1e3 + 1 | 0);\n\t                        } : _reqAnimFrame;\n\t                        if (_self === _ticker) {\n\t                            _tickerActive = true;\n\t                        }\n\t                        _tick(2);\n\t                    };\n\t                    _self.fps = function(value) {\n\t                        if (!arguments.length) {\n\t                            return _fps;\n\t                        }\n\t                        _fps = value;\n\t                        _gap = 1 / (_fps || 60);\n\t                        _nextTime = this.time + _gap;\n\t                        _self.wake();\n\t                    };\n\t                    _self.useRAF = function(value) {\n\t                        if (!arguments.length) {\n\t                            return _useRAF;\n\t                        }\n\t                        _self.sleep();\n\t                        _useRAF = value;\n\t                        _self.fps(_fps);\n\t                    };\n\t                    _self.fps(fps);\n\t                    setTimeout(function() {\n\t                        if (_useRAF === \"auto\" && _self.frame < 5 && document.visibilityState !== \"hidden\") {\n\t                            _self.useRAF(false);\n\t                        }\n\t                    }, 1500);\n\t                });\n\t                p = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t                p.constructor = gs.Ticker;\n\t                var Animation = _class(\"core.Animation\", function(duration, vars) {\n\t                    this.vars = vars = vars || {};\n\t                    this._duration = this._totalDuration = duration || 0;\n\t                    this._delay = Number(vars.delay) || 0;\n\t                    this._timeScale = 1;\n\t                    this._active = vars.immediateRender === true;\n\t                    this.data = vars.data;\n\t                    this._reversed = vars.reversed === true;\n\t                    if (!_rootTimeline) {\n\t                        return;\n\t                    }\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t                    tl.add(this, tl._time);\n\t                    if (this.vars.paused) {\n\t                        this.paused(true);\n\t                    }\n\t                });\n\t                _ticker = Animation.ticker = new gs.Ticker();\n\t                p = Animation.prototype;\n\t                p._dirty = p._gc = p._initted = p._paused = false;\n\t                p._totalTime = p._time = 0;\n\t                p._rawPrevTime = -1;\n\t                p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t                p._paused = false;\n\t                var _checkTimeout = function() {\n\t                    if (_tickerActive && _getTime() - _lastUpdate > 2e3) {\n\t                        _ticker.wake();\n\t                    }\n\t                    setTimeout(_checkTimeout, 2e3);\n\t                };\n\t                _checkTimeout();\n\t                p.play = function(from, suppressEvents) {\n\t                    if (from != null) {\n\t                        this.seek(from, suppressEvents);\n\t                    }\n\t                    return this.reversed(false).paused(false);\n\t                };\n\t                p.pause = function(atTime, suppressEvents) {\n\t                    if (atTime != null) {\n\t                        this.seek(atTime, suppressEvents);\n\t                    }\n\t                    return this.paused(true);\n\t                };\n\t                p.resume = function(from, suppressEvents) {\n\t                    if (from != null) {\n\t                        this.seek(from, suppressEvents);\n\t                    }\n\t                    return this.paused(false);\n\t                };\n\t                p.seek = function(time, suppressEvents) {\n\t                    return this.totalTime(Number(time), suppressEvents !== false);\n\t                };\n\t                p.restart = function(includeDelay, suppressEvents) {\n\t                    return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);\n\t                };\n\t                p.reverse = function(from, suppressEvents) {\n\t                    if (from != null) {\n\t                        this.seek(from || this.totalDuration(), suppressEvents);\n\t                    }\n\t                    return this.reversed(true).paused(false);\n\t                };\n\t                p.render = function(time, suppressEvents, force) {};\n\t                p.invalidate = function() {\n\t                    this._time = this._totalTime = 0;\n\t                    this._initted = this._gc = false;\n\t                    this._rawPrevTime = -1;\n\t                    if (this._gc || !this.timeline) {\n\t                        this._enabled(true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p.isActive = function() {\n\t                    var tl = this._timeline, startTime = this._startTime, rawTime;\n\t                    return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale;\n\t                };\n\t                p._enabled = function(enabled, ignoreTimeline) {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    this._gc = !enabled;\n\t                    this._active = this.isActive();\n\t                    if (ignoreTimeline !== true) {\n\t                        if (enabled && !this.timeline) {\n\t                            this._timeline.add(this, this._startTime - this._delay);\n\t                        } else if (!enabled && this.timeline) {\n\t                            this._timeline._remove(this, true);\n\t                        }\n\t                    }\n\t                    return false;\n\t                };\n\t                p._kill = function(vars, target) {\n\t                    return this._enabled(false, false);\n\t                };\n\t                p.kill = function(vars, target) {\n\t                    this._kill(vars, target);\n\t                    return this;\n\t                };\n\t                p._uncache = function(includeSelf) {\n\t                    var tween = includeSelf ? this : this.timeline;\n\t                    while (tween) {\n\t                        tween._dirty = true;\n\t                        tween = tween.timeline;\n\t                    }\n\t                    return this;\n\t                };\n\t                p._swapSelfInParams = function(params) {\n\t                    var i = params.length, copy = params.concat();\n\t                    while (--i > -1) {\n\t                        if (params[i] === \"{self}\") {\n\t                            copy[i] = this;\n\t                        }\n\t                    }\n\t                    return copy;\n\t                };\n\t                p._callback = function(type) {\n\t                    var v = this.vars;\n\t                    v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n\t                };\n\t                p.eventCallback = function(type, callback, params, scope) {\n\t                    if ((type || \"\").substr(0, 2) === \"on\") {\n\t                        var v = this.vars;\n\t                        if (arguments.length === 1) {\n\t                            return v[type];\n\t                        }\n\t                        if (callback == null) {\n\t                            delete v[type];\n\t                        } else {\n\t                            v[type] = callback;\n\t                            v[type + \"Params\"] = _isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1 ? this._swapSelfInParams(params) : params;\n\t                            v[type + \"Scope\"] = scope;\n\t                        }\n\t                        if (type === \"onUpdate\") {\n\t                            this._onUpdate = callback;\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.delay = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._delay;\n\t                    }\n\t                    if (this._timeline.smoothChildTiming) {\n\t                        this.startTime(this._startTime + value - this._delay);\n\t                    }\n\t                    this._delay = value;\n\t                    return this;\n\t                };\n\t                p.duration = function(value) {\n\t                    if (!arguments.length) {\n\t                        this._dirty = false;\n\t                        return this._duration;\n\t                    }\n\t                    this._duration = this._totalDuration = value;\n\t                    this._uncache(true);\n\t                    if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t                        this.totalTime(this._totalTime * (value / this._duration), true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p.totalDuration = function(value) {\n\t                    this._dirty = false;\n\t                    return !arguments.length ? this._totalDuration : this.duration(value);\n\t                };\n\t                p.time = function(value, suppressEvents) {\n\t                    if (!arguments.length) {\n\t                        return this._time;\n\t                    }\n\t                    if (this._dirty) {\n\t                        this.totalDuration();\n\t                    }\n\t                    return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);\n\t                };\n\t                p.totalTime = function(time, suppressEvents, uncapped) {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    if (!arguments.length) {\n\t                        return this._totalTime;\n\t                    }\n\t                    if (this._timeline) {\n\t                        if (time < 0 && !uncapped) {\n\t                            time += this.totalDuration();\n\t                        }\n\t                        if (this._timeline.smoothChildTiming) {\n\t                            if (this._dirty) {\n\t                                this.totalDuration();\n\t                            }\n\t                            var totalDuration = this._totalDuration, tl = this._timeline;\n\t                            if (time > totalDuration && !uncapped) {\n\t                                time = totalDuration;\n\t                            }\n\t                            this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;\n\t                            if (!tl._dirty) {\n\t                                this._uncache(false);\n\t                            }\n\t                            if (tl._timeline) {\n\t                                while (tl._timeline) {\n\t                                    if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t                                        tl.totalTime(tl._totalTime, true);\n\t                                    }\n\t                                    tl = tl._timeline;\n\t                                }\n\t                            }\n\t                        }\n\t                        if (this._gc) {\n\t                            this._enabled(true, false);\n\t                        }\n\t                        if (this._totalTime !== time || this._duration === 0) {\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                            this.render(time, suppressEvents, false);\n\t                            if (_lazyTweens.length) {\n\t                                _lazyRender();\n\t                            }\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.progress = p.totalProgress = function(value, suppressEvents) {\n\t                    var duration = this.duration();\n\t                    return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);\n\t                };\n\t                p.startTime = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._startTime;\n\t                    }\n\t                    if (value !== this._startTime) {\n\t                        this._startTime = value;\n\t                        if (this.timeline) if (this.timeline._sortChildren) {\n\t                            this.timeline.add(this, value - this._delay);\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.endTime = function(includeRepeats) {\n\t                    return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;\n\t                };\n\t                p.timeScale = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._timeScale;\n\t                    }\n\t                    value = value || _tinyNum;\n\t                    if (this._timeline && this._timeline.smoothChildTiming) {\n\t                        var pauseTime = this._pauseTime, t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();\n\t                        this._startTime = t - (t - this._startTime) * this._timeScale / value;\n\t                    }\n\t                    this._timeScale = value;\n\t                    return this._uncache(false);\n\t                };\n\t                p.reversed = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._reversed;\n\t                    }\n\t                    if (value != this._reversed) {\n\t                        this._reversed = value;\n\t                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p.paused = function(value) {\n\t                    if (!arguments.length) {\n\t                        return this._paused;\n\t                    }\n\t                    var tl = this._timeline, raw, elapsed;\n\t                    if (value != this._paused) if (tl) {\n\t                        if (!_tickerActive && !value) {\n\t                            _ticker.wake();\n\t                        }\n\t                        raw = tl.rawTime();\n\t                        elapsed = raw - this._pauseTime;\n\t                        if (!value && tl.smoothChildTiming) {\n\t                            this._startTime += elapsed;\n\t                            this._uncache(false);\n\t                        }\n\t                        this._pauseTime = value ? raw : null;\n\t                        this._paused = value;\n\t                        this._active = this.isActive();\n\t                        if (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t                            raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n\t                            this.render(raw, raw === this._totalTime, true);\n\t                        }\n\t                    }\n\t                    if (this._gc && !value) {\n\t                        this._enabled(true, false);\n\t                    }\n\t                    return this;\n\t                };\n\t                var SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t                    Animation.call(this, 0, vars);\n\t                    this.autoRemoveChildren = this.smoothChildTiming = true;\n\t                });\n\t                p = SimpleTimeline.prototype = new Animation();\n\t                p.constructor = SimpleTimeline;\n\t                p.kill()._gc = false;\n\t                p._first = p._last = p._recent = null;\n\t                p._sortChildren = false;\n\t                p.add = p.insert = function(child, position, align, stagger) {\n\t                    var prevTween, st;\n\t                    child._startTime = Number(position || 0) + child._delay;\n\t                    if (child._paused) if (this !== child._timeline) {\n\t                        child._pauseTime = child._startTime + (this.rawTime() - child._startTime) / child._timeScale;\n\t                    }\n\t                    if (child.timeline) {\n\t                        child.timeline._remove(child, true);\n\t                    }\n\t                    child.timeline = child._timeline = this;\n\t                    if (child._gc) {\n\t                        child._enabled(true, true);\n\t                    }\n\t                    prevTween = this._last;\n\t                    if (this._sortChildren) {\n\t                        st = child._startTime;\n\t                        while (prevTween && prevTween._startTime > st) {\n\t                            prevTween = prevTween._prev;\n\t                        }\n\t                    }\n\t                    if (prevTween) {\n\t                        child._next = prevTween._next;\n\t                        prevTween._next = child;\n\t                    } else {\n\t                        child._next = this._first;\n\t                        this._first = child;\n\t                    }\n\t                    if (child._next) {\n\t                        child._next._prev = child;\n\t                    } else {\n\t                        this._last = child;\n\t                    }\n\t                    child._prev = prevTween;\n\t                    this._recent = child;\n\t                    if (this._timeline) {\n\t                        this._uncache(true);\n\t                    }\n\t                    return this;\n\t                };\n\t                p._remove = function(tween, skipDisable) {\n\t                    if (tween.timeline === this) {\n\t                        if (!skipDisable) {\n\t                            tween._enabled(false, true);\n\t                        }\n\t                        if (tween._prev) {\n\t                            tween._prev._next = tween._next;\n\t                        } else if (this._first === tween) {\n\t                            this._first = tween._next;\n\t                        }\n\t                        if (tween._next) {\n\t                            tween._next._prev = tween._prev;\n\t                        } else if (this._last === tween) {\n\t                            this._last = tween._prev;\n\t                        }\n\t                        tween._next = tween._prev = tween.timeline = null;\n\t                        if (tween === this._recent) {\n\t                            this._recent = this._last;\n\t                        }\n\t                        if (this._timeline) {\n\t                            this._uncache(true);\n\t                        }\n\t                    }\n\t                    return this;\n\t                };\n\t                p.render = function(time, suppressEvents, force) {\n\t                    var tween = this._first, next;\n\t                    this._totalTime = this._time = this._rawPrevTime = time;\n\t                    while (tween) {\n\t                        next = tween._next;\n\t                        if (tween._active || time >= tween._startTime && !tween._paused) {\n\t                            if (!tween._reversed) {\n\t                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                            } else {\n\t                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t                            }\n\t                        }\n\t                        tween = next;\n\t                    }\n\t                };\n\t                p.rawTime = function() {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    return this._totalTime;\n\t                };\n\t                var TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t                    Animation.call(this, duration, vars);\n\t                    this.render = TweenLite.prototype.render;\n\t                    if (target == null) {\n\t                        throw \"Cannot tween a null target.\";\n\t                    }\n\t                    this.target = target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n\t                    var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType), overwrite = this.vars.overwrite, i, targ, targets;\n\t                    this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === \"number\" ? overwrite >> 0 : _overwriteLookup[overwrite];\n\t                    if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== \"number\") {\n\t                        this._targets = targets = _slice(target);\n\t                        this._propLookup = [];\n\t                        this._siblings = [];\n\t                        for (i = 0; i < targets.length; i++) {\n\t                            targ = targets[i];\n\t                            if (!targ) {\n\t                                targets.splice(i--, 1);\n\t                                continue;\n\t                            } else if (typeof targ === \"string\") {\n\t                                targ = targets[i--] = TweenLite.selector(targ);\n\t                                if (typeof targ === \"string\") {\n\t                                    targets.splice(i + 1, 1);\n\t                                }\n\t                                continue;\n\t                            } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {\n\t                                targets.splice(i--, 1);\n\t                                this._targets = targets = targets.concat(_slice(targ));\n\t                                continue;\n\t                            }\n\t                            this._siblings[i] = _register(targ, this, false);\n\t                            if (overwrite === 1) if (this._siblings[i].length > 1) {\n\t                                _applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t                            }\n\t                        }\n\t                    } else {\n\t                        this._propLookup = {};\n\t                        this._siblings = _register(target, this, false);\n\t                        if (overwrite === 1) if (this._siblings.length > 1) {\n\t                            _applyOverwrite(target, this, null, 1, this._siblings);\n\t                        }\n\t                    }\n\t                    if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {\n\t                        this._time = -_tinyNum;\n\t                        this.render(Math.min(0, -this._delay));\n\t                    }\n\t                }, true), _isSelector = function(v) {\n\t                    return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType);\n\t                }, _autoCSS = function(vars, target) {\n\t                    var css = {}, p;\n\t                    for (p in vars) {\n\t                        if (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {\n\t                            css[p] = vars[p];\n\t                            delete vars[p];\n\t                        }\n\t                    }\n\t                    vars.css = css;\n\t                };\n\t                p = TweenLite.prototype = new Animation();\n\t                p.constructor = TweenLite;\n\t                p.kill()._gc = false;\n\t                p.ratio = 0;\n\t                p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t                p._notifyPluginsOfEnabled = p._lazy = false;\n\t                TweenLite.version = \"1.18.5\";\n\t                TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t                TweenLite.defaultOverwrite = \"auto\";\n\t                TweenLite.ticker = _ticker;\n\t                TweenLite.autoSleep = 120;\n\t                TweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t                    _ticker.lagSmoothing(threshold, adjustedLag);\n\t                };\n\t                TweenLite.selector = window.$ || window.jQuery || function(e) {\n\t                    var selector = window.$ || window.jQuery;\n\t                    if (selector) {\n\t                        TweenLite.selector = selector;\n\t                        return selector(e);\n\t                    }\n\t                    return typeof document === \"undefined\" ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(e.charAt(0) === \"#\" ? e.substr(1) : e);\n\t                };\n\t                var _lazyTweens = [], _lazyLookup = {}, _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi, _setRatio = function(v) {\n\t                    var pt = this._firstPT, min = 1e-6, val;\n\t                    while (pt) {\n\t                        val = !pt.blob ? pt.c * v + pt.s : v ? this.join(\"\") : this.start;\n\t                        if (pt.r) {\n\t                            val = Math.round(val);\n\t                        } else if (val < min) if (val > -min) {\n\t                            val = 0;\n\t                        }\n\t                        if (!pt.f) {\n\t                            pt.t[pt.p] = val;\n\t                        } else if (pt.fp) {\n\t                            pt.t[pt.p](pt.fp, val);\n\t                        } else {\n\t                            pt.t[pt.p](val);\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                }, _blobDif = function(start, end, filter, pt) {\n\t                    var a = [ start, end ], charIndex = 0, s = \"\", color = 0, startNums, endNums, num, i, l, nonNumbers, currentNum;\n\t                    a.start = start;\n\t                    if (filter) {\n\t                        filter(a);\n\t                        start = a[0];\n\t                        end = a[1];\n\t                    }\n\t                    a.length = 0;\n\t                    startNums = start.match(_numbersExp) || [];\n\t                    endNums = end.match(_numbersExp) || [];\n\t                    if (pt) {\n\t                        pt._next = null;\n\t                        pt.blob = 1;\n\t                        a._firstPT = pt;\n\t                    }\n\t                    l = endNums.length;\n\t                    for (i = 0; i < l; i++) {\n\t                        currentNum = endNums[i];\n\t                        nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);\n\t                        s += nonNumbers || !i ? nonNumbers : \",\";\n\t                        charIndex += nonNumbers.length;\n\t                        if (color) {\n\t                            color = (color + 1) % 5;\n\t                        } else if (nonNumbers.substr(-5) === \"rgba(\") {\n\t                            color = 1;\n\t                        }\n\t                        if (currentNum === startNums[i] || startNums.length <= i) {\n\t                            s += currentNum;\n\t                        } else {\n\t                            if (s) {\n\t                                a.push(s);\n\t                                s = \"\";\n\t                            }\n\t                            num = parseFloat(startNums[i]);\n\t                            a.push(num);\n\t                            a._firstPT = {\n\t                                _next: a._firstPT,\n\t                                t: a,\n\t                                p: a.length - 1,\n\t                                s: num,\n\t                                c: (currentNum.charAt(1) === \"=\" ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,\n\t                                f: 0,\n\t                                r: color && color < 4\n\t                            };\n\t                        }\n\t                        charIndex += currentNum.length;\n\t                    }\n\t                    s += end.substr(charIndex);\n\t                    if (s) {\n\t                        a.push(s);\n\t                    }\n\t                    a.setRatio = _setRatio;\n\t                    return a;\n\t                }, _addPropTween = function(target, prop, start, end, overwriteProp, round, funcParam, stringFilter) {\n\t                    var s = start === \"get\" ? target[prop] : start, type = typeof target[prop], isRelative = typeof end === \"string\" && end.charAt(1) === \"=\", pt = {\n\t                        t: target,\n\t                        p: prop,\n\t                        s: s,\n\t                        f: type === \"function\",\n\t                        pg: 0,\n\t                        n: overwriteProp || prop,\n\t                        r: round,\n\t                        pr: 0,\n\t                        c: isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0\n\t                    }, blob, getterName;\n\t                    if (type !== \"number\") {\n\t                        if (type === \"function\" && start === \"get\") {\n\t                            getterName = prop.indexOf(\"set\") || typeof target[\"get\" + prop.substr(3)] !== \"function\" ? prop : \"get\" + prop.substr(3);\n\t                            pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();\n\t                        }\n\t                        if (typeof s === \"string\" && (funcParam || isNaN(s))) {\n\t                            pt.fp = funcParam;\n\t                            blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);\n\t                            pt = {\n\t                                t: blob,\n\t                                p: \"setRatio\",\n\t                                s: 0,\n\t                                c: 1,\n\t                                f: 2,\n\t                                pg: 0,\n\t                                n: overwriteProp || prop,\n\t                                pr: 0\n\t                            };\n\t                        } else if (!isRelative) {\n\t                            pt.s = parseFloat(s);\n\t                            pt.c = parseFloat(end) - pt.s || 0;\n\t                        }\n\t                    }\n\t                    if (pt.c) {\n\t                        if (pt._next = this._firstPT) {\n\t                            pt._next._prev = pt;\n\t                        }\n\t                        this._firstPT = pt;\n\t                        return pt;\n\t                    }\n\t                }, _internals = TweenLite._internals = {\n\t                    isArray: _isArray,\n\t                    isSelector: _isSelector,\n\t                    lazyTweens: _lazyTweens,\n\t                    blobDif: _blobDif\n\t                }, _plugins = TweenLite._plugins = {}, _tweenLookup = _internals.tweenLookup = {}, _tweenLookupNum = 0, _reservedProps = _internals.reservedProps = {\n\t                    ease: 1,\n\t                    delay: 1,\n\t                    overwrite: 1,\n\t                    onComplete: 1,\n\t                    onCompleteParams: 1,\n\t                    onCompleteScope: 1,\n\t                    useFrames: 1,\n\t                    runBackwards: 1,\n\t                    startAt: 1,\n\t                    onUpdate: 1,\n\t                    onUpdateParams: 1,\n\t                    onUpdateScope: 1,\n\t                    onStart: 1,\n\t                    onStartParams: 1,\n\t                    onStartScope: 1,\n\t                    onReverseComplete: 1,\n\t                    onReverseCompleteParams: 1,\n\t                    onReverseCompleteScope: 1,\n\t                    onRepeat: 1,\n\t                    onRepeatParams: 1,\n\t                    onRepeatScope: 1,\n\t                    easeParams: 1,\n\t                    yoyo: 1,\n\t                    immediateRender: 1,\n\t                    repeat: 1,\n\t                    repeatDelay: 1,\n\t                    data: 1,\n\t                    paused: 1,\n\t                    reversed: 1,\n\t                    autoCSS: 1,\n\t                    lazy: 1,\n\t                    onOverwrite: 1,\n\t                    callbackScope: 1,\n\t                    stringFilter: 1,\n\t                    id: 1\n\t                }, _overwriteLookup = {\n\t                    none: 0,\n\t                    all: 1,\n\t                    auto: 2,\n\t                    concurrent: 3,\n\t                    allOnStart: 4,\n\t                    preexisting: 5,\n\t                    \"true\": 1,\n\t                    \"false\": 0\n\t                }, _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(), _rootTimeline = Animation._rootTimeline = new SimpleTimeline(), _nextGCFrame = 30, _lazyRender = _internals.lazyRender = function() {\n\t                    var i = _lazyTweens.length, tween;\n\t                    _lazyLookup = {};\n\t                    while (--i > -1) {\n\t                        tween = _lazyTweens[i];\n\t                        if (tween && tween._lazy !== false) {\n\t                            tween.render(tween._lazy[0], tween._lazy[1], true);\n\t                            tween._lazy = false;\n\t                        }\n\t                    }\n\t                    _lazyTweens.length = 0;\n\t                };\n\t                _rootTimeline._startTime = _ticker.time;\n\t                _rootFramesTimeline._startTime = _ticker.frame;\n\t                _rootTimeline._active = _rootFramesTimeline._active = true;\n\t                setTimeout(_lazyRender, 1);\n\t                Animation._updateRoot = TweenLite.render = function() {\n\t                    var i, a, p;\n\t                    if (_lazyTweens.length) {\n\t                        _lazyRender();\n\t                    }\n\t                    _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t                    _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t                    if (_lazyTweens.length) {\n\t                        _lazyRender();\n\t                    }\n\t                    if (_ticker.frame >= _nextGCFrame) {\n\t                        _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n\t                        for (p in _tweenLookup) {\n\t                            a = _tweenLookup[p].tweens;\n\t                            i = a.length;\n\t                            while (--i > -1) {\n\t                                if (a[i]._gc) {\n\t                                    a.splice(i, 1);\n\t                                }\n\t                            }\n\t                            if (a.length === 0) {\n\t                                delete _tweenLookup[p];\n\t                            }\n\t                        }\n\t                        p = _rootTimeline._first;\n\t                        if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t                            while (p && p._paused) {\n\t                                p = p._next;\n\t                            }\n\t                            if (!p) {\n\t                                _ticker.sleep();\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t                _ticker.addEventListener(\"tick\", Animation._updateRoot);\n\t                var _register = function(target, tween, scrub) {\n\t                    var id = target._gsTweenID, a, i;\n\t                    if (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + _tweenLookupNum++)]) {\n\t                        _tweenLookup[id] = {\n\t                            target: target,\n\t                            tweens: []\n\t                        };\n\t                    }\n\t                    if (tween) {\n\t                        a = _tweenLookup[id].tweens;\n\t                        a[i = a.length] = tween;\n\t                        if (scrub) {\n\t                            while (--i > -1) {\n\t                                if (a[i] === tween) {\n\t                                    a.splice(i, 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                    return _tweenLookup[id].tweens;\n\t                }, _onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n\t                    var func = overwrittenTween.vars.onOverwrite, r1, r2;\n\t                    if (func) {\n\t                        r1 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t                    }\n\t                    func = TweenLite.onOverwrite;\n\t                    if (func) {\n\t                        r2 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t                    }\n\t                    return r1 !== false && r2 !== false;\n\t                }, _applyOverwrite = function(target, tween, props, mode, siblings) {\n\t                    var i, changed, curTween, l;\n\t                    if (mode === 1 || mode >= 4) {\n\t                        l = siblings.length;\n\t                        for (i = 0; i < l; i++) {\n\t                            if ((curTween = siblings[i]) !== tween) {\n\t                                if (!curTween._gc) {\n\t                                    if (curTween._kill(null, target, tween)) {\n\t                                        changed = true;\n\t                                    }\n\t                                }\n\t                            } else if (mode === 5) {\n\t                                break;\n\t                            }\n\t                        }\n\t                        return changed;\n\t                    }\n\t                    var startTime = tween._startTime + _tinyNum, overlaps = [], oCount = 0, zeroDur = tween._duration === 0, globalStart;\n\t                    i = siblings.length;\n\t                    while (--i > -1) {\n\t                        if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {} else if (curTween._timeline !== tween._timeline) {\n\t                            globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t                            if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t                                overlaps[oCount++] = curTween;\n\t                            }\n\t                        } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 2e-10)) {\n\t                            overlaps[oCount++] = curTween;\n\t                        }\n\t                    }\n\t                    i = oCount;\n\t                    while (--i > -1) {\n\t                        curTween = overlaps[i];\n\t                        if (mode === 2) if (curTween._kill(props, target, tween)) {\n\t                            changed = true;\n\t                        }\n\t                        if (mode !== 2 || !curTween._firstPT && curTween._initted) {\n\t                            if (mode !== 2 && !_onOverwrite(curTween, tween)) {\n\t                                continue;\n\t                            }\n\t                            if (curTween._enabled(false, false)) {\n\t                                changed = true;\n\t                            }\n\t                        }\n\t                    }\n\t                    return changed;\n\t                }, _checkOverlap = function(tween, reference, zeroDur) {\n\t                    var tl = tween._timeline, ts = tl._timeScale, t = tween._startTime;\n\t                    while (tl._timeline) {\n\t                        t += tl._startTime;\n\t                        ts *= tl._timeScale;\n\t                        if (tl._paused) {\n\t                            return -100;\n\t                        }\n\t                        tl = tl._timeline;\n\t                    }\n\t                    t /= ts;\n\t                    return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;\n\t                };\n\t                p._init = function() {\n\t                    var v = this.vars, op = this._overwrittenProps, dur = this._duration, immediate = !!v.immediateRender, ease = v.ease, i, initPlugins, pt, p, startVars;\n\t                    if (v.startAt) {\n\t                        if (this._startAt) {\n\t                            this._startAt.render(-1, true);\n\t                            this._startAt.kill();\n\t                        }\n\t                        startVars = {};\n\t                        for (p in v.startAt) {\n\t                            startVars[p] = v.startAt[p];\n\t                        }\n\t                        startVars.overwrite = false;\n\t                        startVars.immediateRender = true;\n\t                        startVars.lazy = immediate && v.lazy !== false;\n\t                        startVars.startAt = startVars.delay = null;\n\t                        this._startAt = TweenLite.to(this.target, 0, startVars);\n\t                        if (immediate) {\n\t                            if (this._time > 0) {\n\t                                this._startAt = null;\n\t                            } else if (dur !== 0) {\n\t                                return;\n\t                            }\n\t                        }\n\t                    } else if (v.runBackwards && dur !== 0) {\n\t                        if (this._startAt) {\n\t                            this._startAt.render(-1, true);\n\t                            this._startAt.kill();\n\t                            this._startAt = null;\n\t                        } else {\n\t                            if (this._time !== 0) {\n\t                                immediate = false;\n\t                            }\n\t                            pt = {};\n\t                            for (p in v) {\n\t                                if (!_reservedProps[p] || p === \"autoCSS\") {\n\t                                    pt[p] = v[p];\n\t                                }\n\t                            }\n\t                            pt.overwrite = 0;\n\t                            pt.data = \"isFromStart\";\n\t                            pt.lazy = immediate && v.lazy !== false;\n\t                            pt.immediateRender = immediate;\n\t                            this._startAt = TweenLite.to(this.target, 0, pt);\n\t                            if (!immediate) {\n\t                                this._startAt._init();\n\t                                this._startAt._enabled(false);\n\t                                if (this.vars.immediateRender) {\n\t                                    this._startAt = null;\n\t                                }\n\t                            } else if (this._time === 0) {\n\t                                return;\n\t                            }\n\t                        }\n\t                    }\n\t                    this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === \"function\" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t                    if (v.easeParams instanceof Array && ease.config) {\n\t                        this._ease = ease.config.apply(ease, v.easeParams);\n\t                    }\n\t                    this._easeType = this._ease._type;\n\t                    this._easePower = this._ease._power;\n\t                    this._firstPT = null;\n\t                    if (this._targets) {\n\t                        i = this._targets.length;\n\t                        while (--i > -1) {\n\t                            if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null)) {\n\t                                initPlugins = true;\n\t                            }\n\t                        }\n\t                    } else {\n\t                        initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n\t                    }\n\t                    if (initPlugins) {\n\t                        TweenLite._onPluginEvent(\"_onInitAllProps\", this);\n\t                    }\n\t                    if (op) if (!this._firstPT) if (typeof this.target !== \"function\") {\n\t                        this._enabled(false, false);\n\t                    }\n\t                    if (v.runBackwards) {\n\t                        pt = this._firstPT;\n\t                        while (pt) {\n\t                            pt.s += pt.c;\n\t                            pt.c = -pt.c;\n\t                            pt = pt._next;\n\t                        }\n\t                    }\n\t                    this._onUpdate = v.onUpdate;\n\t                    this._initted = true;\n\t                };\n\t                p._initProps = function(target, propLookup, siblings, overwrittenProps) {\n\t                    var p, i, initPlugins, plugin, pt, v;\n\t                    if (target == null) {\n\t                        return false;\n\t                    }\n\t                    if (_lazyLookup[target._gsTweenID]) {\n\t                        _lazyRender();\n\t                    }\n\t                    if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {\n\t                        _autoCSS(this.vars, target);\n\t                    }\n\t                    for (p in this.vars) {\n\t                        v = this.vars[p];\n\t                        if (_reservedProps[p]) {\n\t                            if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t                                this.vars[p] = v = this._swapSelfInParams(v, this);\n\t                            }\n\t                        } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n\t                            this._firstPT = pt = {\n\t                                _next: this._firstPT,\n\t                                t: plugin,\n\t                                p: \"setRatio\",\n\t                                s: 0,\n\t                                c: 1,\n\t                                f: 1,\n\t                                n: p,\n\t                                pg: 1,\n\t                                pr: plugin._priority\n\t                            };\n\t                            i = plugin._overwriteProps.length;\n\t                            while (--i > -1) {\n\t                                propLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t                            }\n\t                            if (plugin._priority || plugin._onInitAllProps) {\n\t                                initPlugins = true;\n\t                            }\n\t                            if (plugin._onDisable || plugin._onEnable) {\n\t                                this._notifyPluginsOfEnabled = true;\n\t                            }\n\t                            if (pt._next) {\n\t                                pt._next._prev = pt;\n\t                            }\n\t                        } else {\n\t                            propLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter);\n\t                        }\n\t                    }\n\t                    if (overwrittenProps) if (this._kill(overwrittenProps, target)) {\n\t                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n\t                    }\n\t                    if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t                        this._kill(propLookup, target);\n\t                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n\t                    }\n\t                    if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {\n\t                        _lazyLookup[target._gsTweenID] = true;\n\t                    }\n\t                    return initPlugins;\n\t                };\n\t                p.render = function(time, suppressEvents, force) {\n\t                    var prevTime = this._time, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, rawPrevTime;\n\t                    if (time >= duration - 1e-7) {\n\t                        this._totalTime = this._time = duration;\n\t                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t                        if (!this._reversed) {\n\t                            isComplete = true;\n\t                            callback = \"onComplete\";\n\t                            force = force || this._timeline.autoRemoveChildren;\n\t                        }\n\t                        if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                            if (this._startTime === this._timeline._duration) {\n\t                                time = 0;\n\t                            }\n\t                            if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n\t                                force = true;\n\t                                if (prevRawPrevTime > _tinyNum) {\n\t                                    callback = \"onReverseComplete\";\n\t                                }\n\t                            }\n\t                            this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                        }\n\t                    } else if (time < 1e-7) {\n\t                        this._totalTime = this._time = 0;\n\t                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t                        if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n\t                            callback = \"onReverseComplete\";\n\t                            isComplete = this._reversed;\n\t                        }\n\t                        if (time < 0) {\n\t                            this._active = false;\n\t                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n\t                                if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n\t                                    force = true;\n\t                                }\n\t                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n\t                            }\n\t                        }\n\t                        if (!this._initted) {\n\t                            force = true;\n\t                        }\n\t                    } else {\n\t                        this._totalTime = this._time = time;\n\t                        if (this._easeType) {\n\t                            var r = time / duration, type = this._easeType, pow = this._easePower;\n\t                            if (type === 1 || type === 3 && r >= .5) {\n\t                                r = 1 - r;\n\t                            }\n\t                            if (type === 3) {\n\t                                r *= 2;\n\t                            }\n\t                            if (pow === 1) {\n\t                                r *= r;\n\t                            } else if (pow === 2) {\n\t                                r *= r * r;\n\t                            } else if (pow === 3) {\n\t                                r *= r * r * r;\n\t                            } else if (pow === 4) {\n\t                                r *= r * r * r * r;\n\t                            }\n\t                            if (type === 1) {\n\t                                this.ratio = 1 - r;\n\t                            } else if (type === 2) {\n\t                                this.ratio = r;\n\t                            } else if (time / duration < .5) {\n\t                                this.ratio = r / 2;\n\t                            } else {\n\t                                this.ratio = 1 - r / 2;\n\t                            }\n\t                        } else {\n\t                            this.ratio = this._ease.getRatio(time / duration);\n\t                        }\n\t                    }\n\t                    if (this._time === prevTime && !force) {\n\t                        return;\n\t                    } else if (!this._initted) {\n\t                        this._init();\n\t                        if (!this._initted || this._gc) {\n\t                            return;\n\t                        } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n\t                            this._time = this._totalTime = prevTime;\n\t                            this._rawPrevTime = prevRawPrevTime;\n\t                            _lazyTweens.push(this);\n\t                            this._lazy = [ time, suppressEvents ];\n\t                            return;\n\t                        }\n\t                        if (this._time && !isComplete) {\n\t                            this.ratio = this._ease.getRatio(this._time / duration);\n\t                        } else if (isComplete && this._ease._calcEnd) {\n\t                            this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n\t                        }\n\t                    }\n\t                    if (this._lazy !== false) {\n\t                        this._lazy = false;\n\t                    }\n\t                    if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t                        this._active = true;\n\t                    }\n\t                    if (prevTime === 0) {\n\t                        if (this._startAt) {\n\t                            if (time >= 0) {\n\t                                this._startAt.render(time, suppressEvents, force);\n\t                            } else if (!callback) {\n\t                                callback = \"_dummyGS\";\n\t                            }\n\t                        }\n\t                        if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n\t                            this._callback(\"onStart\");\n\t                        }\n\t                    }\n\t                    pt = this._firstPT;\n\t                    while (pt) {\n\t                        if (pt.f) {\n\t                            pt.t[pt.p](pt.c * this.ratio + pt.s);\n\t                        } else {\n\t                            pt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                    if (this._onUpdate) {\n\t                        if (time < 0) if (this._startAt && time !== -1e-4) {\n\t                            this._startAt.render(time, suppressEvents, force);\n\t                        }\n\t                        if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n\t                            this._callback(\"onUpdate\");\n\t                        }\n\t                    }\n\t                    if (callback) if (!this._gc || force) {\n\t                        if (time < 0 && this._startAt && !this._onUpdate && time !== -1e-4) {\n\t                            this._startAt.render(time, suppressEvents, force);\n\t                        }\n\t                        if (isComplete) {\n\t                            if (this._timeline.autoRemoveChildren) {\n\t                                this._enabled(false, false);\n\t                            }\n\t                            this._active = false;\n\t                        }\n\t                        if (!suppressEvents && this.vars[callback]) {\n\t                            this._callback(callback);\n\t                        }\n\t                        if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n\t                            this._rawPrevTime = 0;\n\t                        }\n\t                    }\n\t                };\n\t                p._kill = function(vars, target, overwritingTween) {\n\t                    if (vars === \"all\") {\n\t                        vars = null;\n\t                    }\n\t                    if (vars == null) if (target == null || target === this.target) {\n\t                        this._lazy = false;\n\t                        return this._enabled(false, false);\n\t                    }\n\t                    target = typeof target !== \"string\" ? target || this._targets || this.target : TweenLite.selector(target) || target;\n\t                    var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline, i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n\t                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n\t                        i = target.length;\n\t                        while (--i > -1) {\n\t                            if (this._kill(vars, target[i], overwritingTween)) {\n\t                                changed = true;\n\t                            }\n\t                        }\n\t                    } else {\n\t                        if (this._targets) {\n\t                            i = this._targets.length;\n\t                            while (--i > -1) {\n\t                                if (target === this._targets[i]) {\n\t                                    propLookup = this._propLookup[i] || {};\n\t                                    this._overwrittenProps = this._overwrittenProps || [];\n\t                                    overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t                                    break;\n\t                                }\n\t                            }\n\t                        } else if (target !== this.target) {\n\t                            return false;\n\t                        } else {\n\t                            propLookup = this._propLookup;\n\t                            overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t                        }\n\t                        if (propLookup) {\n\t                            killProps = vars || propLookup;\n\t                            record = vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof vars !== \"object\" || !vars._tempKill);\n\t                            if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n\t                                for (p in killProps) {\n\t                                    if (propLookup[p]) {\n\t                                        if (!killed) {\n\t                                            killed = [];\n\t                                        }\n\t                                        killed.push(p);\n\t                                    }\n\t                                }\n\t                                if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {\n\t                                    return false;\n\t                                }\n\t                            }\n\t                            for (p in killProps) {\n\t                                if (pt = propLookup[p]) {\n\t                                    if (simultaneousOverwrite) {\n\t                                        if (pt.f) {\n\t                                            pt.t[pt.p](pt.s);\n\t                                        } else {\n\t                                            pt.t[pt.p] = pt.s;\n\t                                        }\n\t                                        changed = true;\n\t                                    }\n\t                                    if (pt.pg && pt.t._kill(killProps)) {\n\t                                        changed = true;\n\t                                    }\n\t                                    if (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t                                        if (pt._prev) {\n\t                                            pt._prev._next = pt._next;\n\t                                        } else if (pt === this._firstPT) {\n\t                                            this._firstPT = pt._next;\n\t                                        }\n\t                                        if (pt._next) {\n\t                                            pt._next._prev = pt._prev;\n\t                                        }\n\t                                        pt._next = pt._prev = null;\n\t                                    }\n\t                                    delete propLookup[p];\n\t                                }\n\t                                if (record) {\n\t                                    overwrittenProps[p] = 1;\n\t                                }\n\t                            }\n\t                            if (!this._firstPT && this._initted) {\n\t                                this._enabled(false, false);\n\t                            }\n\t                        }\n\t                    }\n\t                    return changed;\n\t                };\n\t                p.invalidate = function() {\n\t                    if (this._notifyPluginsOfEnabled) {\n\t                        TweenLite._onPluginEvent(\"_onDisable\", this);\n\t                    }\n\t                    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n\t                    this._notifyPluginsOfEnabled = this._active = this._lazy = false;\n\t                    this._propLookup = this._targets ? {} : [];\n\t                    Animation.prototype.invalidate.call(this);\n\t                    if (this.vars.immediateRender) {\n\t                        this._time = -_tinyNum;\n\t                        this.render(Math.min(0, -this._delay));\n\t                    }\n\t                    return this;\n\t                };\n\t                p._enabled = function(enabled, ignoreTimeline) {\n\t                    if (!_tickerActive) {\n\t                        _ticker.wake();\n\t                    }\n\t                    if (enabled && this._gc) {\n\t                        var targets = this._targets, i;\n\t                        if (targets) {\n\t                            i = targets.length;\n\t                            while (--i > -1) {\n\t                                this._siblings[i] = _register(targets[i], this, true);\n\t                            }\n\t                        } else {\n\t                            this._siblings = _register(this.target, this, true);\n\t                        }\n\t                    }\n\t                    Animation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t                    if (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t                        return TweenLite._onPluginEvent(enabled ? \"_onEnable\" : \"_onDisable\", this);\n\t                    }\n\t                    return false;\n\t                };\n\t                TweenLite.to = function(target, duration, vars) {\n\t                    return new TweenLite(target, duration, vars);\n\t                };\n\t                TweenLite.from = function(target, duration, vars) {\n\t                    vars.runBackwards = true;\n\t                    vars.immediateRender = vars.immediateRender != false;\n\t                    return new TweenLite(target, duration, vars);\n\t                };\n\t                TweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t                    toVars.startAt = fromVars;\n\t                    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n\t                    return new TweenLite(target, duration, toVars);\n\t                };\n\t                TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t                    return new TweenLite(callback, 0, {\n\t                        delay: delay,\n\t                        onComplete: callback,\n\t                        onCompleteParams: params,\n\t                        callbackScope: scope,\n\t                        onReverseComplete: callback,\n\t                        onReverseCompleteParams: params,\n\t                        immediateRender: false,\n\t                        lazy: false,\n\t                        useFrames: useFrames,\n\t                        overwrite: 0\n\t                    });\n\t                };\n\t                TweenLite.set = function(target, vars) {\n\t                    return new TweenLite(target, 0, vars);\n\t                };\n\t                TweenLite.getTweensOf = function(target, onlyActive) {\n\t                    if (target == null) {\n\t                        return [];\n\t                    }\n\t                    target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n\t                    var i, a, j, t;\n\t                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n\t                        i = target.length;\n\t                        a = [];\n\t                        while (--i > -1) {\n\t                            a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t                        }\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            t = a[i];\n\t                            j = i;\n\t                            while (--j > -1) {\n\t                                if (t === a[j]) {\n\t                                    a.splice(i, 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else {\n\t                        a = _register(target).concat();\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            if (a[i]._gc || onlyActive && !a[i].isActive()) {\n\t                                a.splice(i, 1);\n\t                            }\n\t                        }\n\t                    }\n\t                    return a;\n\t                };\n\t                TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t                    if (typeof onlyActive === \"object\") {\n\t                        vars = onlyActive;\n\t                        onlyActive = false;\n\t                    }\n\t                    var a = TweenLite.getTweensOf(target, onlyActive), i = a.length;\n\t                    while (--i > -1) {\n\t                        a[i]._kill(vars, target);\n\t                    }\n\t                };\n\t                var TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t                    this._overwriteProps = (props || \"\").split(\",\");\n\t                    this._propName = this._overwriteProps[0];\n\t                    this._priority = priority || 0;\n\t                    this._super = TweenPlugin.prototype;\n\t                }, true);\n\t                p = TweenPlugin.prototype;\n\t                TweenPlugin.version = \"1.18.0\";\n\t                TweenPlugin.API = 2;\n\t                p._firstPT = null;\n\t                p._addTween = _addPropTween;\n\t                p.setRatio = _setRatio;\n\t                p._kill = function(lookup) {\n\t                    var a = this._overwriteProps, pt = this._firstPT, i;\n\t                    if (lookup[this._propName] != null) {\n\t                        this._overwriteProps = [];\n\t                    } else {\n\t                        i = a.length;\n\t                        while (--i > -1) {\n\t                            if (lookup[a[i]] != null) {\n\t                                a.splice(i, 1);\n\t                            }\n\t                        }\n\t                    }\n\t                    while (pt) {\n\t                        if (lookup[pt.n] != null) {\n\t                            if (pt._next) {\n\t                                pt._next._prev = pt._prev;\n\t                            }\n\t                            if (pt._prev) {\n\t                                pt._prev._next = pt._next;\n\t                                pt._prev = null;\n\t                            } else if (this._firstPT === pt) {\n\t                                this._firstPT = pt._next;\n\t                            }\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                    return false;\n\t                };\n\t                p._roundProps = function(lookup, value) {\n\t                    var pt = this._firstPT;\n\t                    while (pt) {\n\t                        if (lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + \"_\").join(\"\")]) {\n\t                            pt.r = value;\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                };\n\t                TweenLite._onPluginEvent = function(type, tween) {\n\t                    var pt = tween._firstPT, changed, pt2, first, last, next;\n\t                    if (type === \"_onInitAllProps\") {\n\t                        while (pt) {\n\t                            next = pt._next;\n\t                            pt2 = first;\n\t                            while (pt2 && pt2.pr > pt.pr) {\n\t                                pt2 = pt2._next;\n\t                            }\n\t                            if (pt._prev = pt2 ? pt2._prev : last) {\n\t                                pt._prev._next = pt;\n\t                            } else {\n\t                                first = pt;\n\t                            }\n\t                            if (pt._next = pt2) {\n\t                                pt2._prev = pt;\n\t                            } else {\n\t                                last = pt;\n\t                            }\n\t                            pt = next;\n\t                        }\n\t                        pt = tween._firstPT = first;\n\t                    }\n\t                    while (pt) {\n\t                        if (pt.pg) if (typeof pt.t[type] === \"function\") if (pt.t[type]()) {\n\t                            changed = true;\n\t                        }\n\t                        pt = pt._next;\n\t                    }\n\t                    return changed;\n\t                };\n\t                TweenPlugin.activate = function(plugins) {\n\t                    var i = plugins.length;\n\t                    while (--i > -1) {\n\t                        if (plugins[i].API === TweenPlugin.API) {\n\t                            _plugins[new plugins[i]()._propName] = plugins[i];\n\t                        }\n\t                    }\n\t                    return true;\n\t                };\n\t                _gsDefine.plugin = function(config) {\n\t                    if (!config || !config.propName || !config.init || !config.API) {\n\t                        throw \"illegal plugin definition.\";\n\t                    }\n\t                    var propName = config.propName, priority = config.priority || 0, overwriteProps = config.overwriteProps, map = {\n\t                        init: \"_onInitTween\",\n\t                        set: \"setRatio\",\n\t                        kill: \"_kill\",\n\t                        round: \"_roundProps\",\n\t                        initAll: \"_onInitAllProps\"\n\t                    }, Plugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\", function() {\n\t                        TweenPlugin.call(this, propName, priority);\n\t                        this._overwriteProps = overwriteProps || [];\n\t                    }, config.global === true), p = Plugin.prototype = new TweenPlugin(propName), prop;\n\t                    p.constructor = Plugin;\n\t                    Plugin.API = config.API;\n\t                    for (prop in map) {\n\t                        if (typeof config[prop] === \"function\") {\n\t                            p[map[prop]] = config[prop];\n\t                        }\n\t                    }\n\t                    Plugin.version = config.version;\n\t                    TweenPlugin.activate([ Plugin ]);\n\t                    return Plugin;\n\t                };\n\t                a = window._gsQueue;\n\t                if (a) {\n\t                    for (i = 0; i < a.length; i++) {\n\t                        a[i]();\n\t                    }\n\t                    for (p in _defLookup) {\n\t                        if (!_defLookup[p].func) {\n\t                            window.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n\t                        }\n\t                    }\n\t                }\n\t                _tickerActive = false;\n\t            })(typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window, \"TweenMax\");\n\t        }).call(exports, function() {\n\t            return this;\n\t        }());\n\t    }, function(module, exports) {\n\t        (function(__webpack_amd_options__) {\n\t            module.exports = __webpack_amd_options__;\n\t        }).call(exports, {});\n\t    }, function(module, exports) {\n\t        THREE.SpriteCanvasMaterial = function(parameters) {\n\t            THREE.Material.call(this);\n\t            this.type = \"SpriteCanvasMaterial\";\n\t            this.color = new THREE.Color(16777215);\n\t            this.program = function(context, color) {};\n\t            this.setValues(parameters);\n\t        };\n\t        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n\t        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n\t        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n\t            var material = new THREE.SpriteCanvasMaterial();\n\t            material.copy(this);\n\t            material.color.copy(this.color);\n\t            material.program = this.program;\n\t            return material;\n\t        };\n\t        THREE.CanvasRenderer = function(parameters) {\n\t            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n\t            parameters = parameters || {};\n\t            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n\t                alpha: parameters.alpha === true\n\t            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n\t            if (_context.setLineDash === undefined) {\n\t                _context.setLineDash = function() {};\n\t            }\n\t            this.domElement = _canvas;\n\t            this.autoClear = true;\n\t            this.sortObjects = true;\n\t            this.sortElements = true;\n\t            this.info = {\n\t                render: {\n\t                    vertices: 0,\n\t                    faces: 0\n\t                }\n\t            };\n\t            this.supportsVertexTextures = function() {};\n\t            this.setFaceCulling = function() {};\n\t            this.getContext = function() {\n\t                return _context;\n\t            };\n\t            this.getContextAttributes = function() {\n\t                return _context.getContextAttributes();\n\t            };\n\t            this.getPixelRatio = function() {\n\t                return _pixelRatio;\n\t            };\n\t            this.setPixelRatio = function(value) {\n\t                if (value !== undefined) _pixelRatio = value;\n\t            };\n\t            this.setSize = function(width, height, updateStyle) {\n\t                _canvasWidth = width * _pixelRatio;\n\t                _canvasHeight = height * _pixelRatio;\n\t                _canvas.width = _canvasWidth;\n\t                _canvas.height = _canvasHeight;\n\t                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n\t                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n\t                if (updateStyle !== false) {\n\t                    _canvas.style.width = width + \"px\";\n\t                    _canvas.style.height = height + \"px\";\n\t                }\n\t                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t                _contextGlobalAlpha = 1;\n\t                _contextGlobalCompositeOperation = 0;\n\t                _contextStrokeStyle = null;\n\t                _contextFillStyle = null;\n\t                _contextLineWidth = null;\n\t                _contextLineCap = null;\n\t                _contextLineJoin = null;\n\t                this.setViewport(0, 0, width, height);\n\t            };\n\t            this.setViewport = function(x, y, width, height) {\n\t                _viewportX = x * _pixelRatio;\n\t                _viewportY = y * _pixelRatio;\n\t                _viewportWidth = width * _pixelRatio;\n\t                _viewportHeight = height * _pixelRatio;\n\t            };\n\t            this.setScissor = function() {};\n\t            this.setScissorTest = function() {};\n\t            this.setClearColor = function(color, alpha) {\n\t                _clearColor.set(color);\n\t                _clearAlpha = alpha !== undefined ? alpha : 1;\n\t                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n\t                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n\t            };\n\t            this.setClearColorHex = function(hex, alpha) {\n\t                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n\t                this.setClearColor(hex, alpha);\n\t            };\n\t            this.getClearColor = function() {\n\t                return _clearColor;\n\t            };\n\t            this.getClearAlpha = function() {\n\t                return _clearAlpha;\n\t            };\n\t            this.getMaxAnisotropy = function() {\n\t                return 0;\n\t            };\n\t            this.clear = function() {\n\t                if (_clearBox.isEmpty() === false) {\n\t                    _clearBox.intersect(_clipBox);\n\t                    _clearBox.expandByScalar(2);\n\t                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n\t                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n\t                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n\t                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n\t                    if (_clearAlpha < 1) {\n\t                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    if (_clearAlpha > 0) {\n\t                        setBlending(THREE.NormalBlending);\n\t                        setOpacity(1);\n\t                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n\t                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n\t                    }\n\t                    _clearBox.makeEmpty();\n\t                }\n\t            };\n\t            this.clearColor = function() {};\n\t            this.clearDepth = function() {};\n\t            this.clearStencil = function() {};\n\t            this.render = function(scene, camera) {\n\t                if (camera instanceof THREE.Camera === false) {\n\t                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n\t                    return;\n\t                }\n\t                if (this.autoClear === true) this.clear();\n\t                _this.info.render.vertices = 0;\n\t                _this.info.render.faces = 0;\n\t                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n\t                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n\t                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n\t                _elements = _renderData.elements;\n\t                _lights = _renderData.lights;\n\t                _camera = camera;\n\t                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n\t                calculateLights();\n\t                for (var e = 0, el = _elements.length; e < el; e++) {\n\t                    var element = _elements[e];\n\t                    var material = element.material;\n\t                    if (material === undefined || material.opacity === 0) continue;\n\t                    _elemBox.makeEmpty();\n\t                    if (element instanceof THREE.RenderableSprite) {\n\t                        _v1 = element;\n\t                        _v1.x *= _canvasWidthHalf;\n\t                        _v1.y *= _canvasHeightHalf;\n\t                        renderSprite(_v1, element, material);\n\t                    } else if (element instanceof THREE.RenderableLine) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderLine(_v1, _v2, element, material);\n\t                        }\n\t                    } else if (element instanceof THREE.RenderableFace) {\n\t                        _v1 = element.v1;\n\t                        _v2 = element.v2;\n\t                        _v3 = element.v3;\n\t                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n\t                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n\t                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n\t                        _v1.positionScreen.x *= _canvasWidthHalf;\n\t                        _v1.positionScreen.y *= _canvasHeightHalf;\n\t                        _v2.positionScreen.x *= _canvasWidthHalf;\n\t                        _v2.positionScreen.y *= _canvasHeightHalf;\n\t                        _v3.positionScreen.x *= _canvasWidthHalf;\n\t                        _v3.positionScreen.y *= _canvasHeightHalf;\n\t                        if (material.overdraw > 0) {\n\t                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n\t                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n\t                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n\t                        }\n\t                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n\t                        if (_clipBox.intersectsBox(_elemBox) === true) {\n\t                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n\t                        }\n\t                    }\n\t                    _clearBox.union(_elemBox);\n\t                }\n\t                _context.setTransform(1, 0, 0, 1, 0, 0);\n\t            };\n\t            function calculateLights() {\n\t                _ambientLight.setRGB(0, 0, 0);\n\t                _directionalLights.setRGB(0, 0, 0);\n\t                _pointLights.setRGB(0, 0, 0);\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    var lightColor = light.color;\n\t                    if (light instanceof THREE.AmbientLight) {\n\t                        _ambientLight.add(lightColor);\n\t                    } else if (light instanceof THREE.DirectionalLight) {\n\t                        _directionalLights.add(lightColor);\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        _pointLights.add(lightColor);\n\t                    }\n\t                }\n\t            }\n\t            function calculateLight(position, normal, color) {\n\t                for (var l = 0, ll = _lights.length; l < ll; l++) {\n\t                    var light = _lights[l];\n\t                    _lightColor.copy(light.color);\n\t                    if (light instanceof THREE.DirectionalLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n\t                        var amount = normal.dot(lightPosition);\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    } else if (light instanceof THREE.PointLight) {\n\t                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n\t                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n\t                        if (amount <= 0) continue;\n\t                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n\t                        if (amount == 0) continue;\n\t                        amount *= light.intensity;\n\t                        color.add(_lightColor.multiplyScalar(amount));\n\t                    }\n\t                }\n\t            }\n\t            function renderSprite(v1, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                var scaleX = element.scale.x * _canvasWidthHalf;\n\t                var scaleY = element.scale.y * _canvasHeightHalf;\n\t                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n\t                _elemBox.min.set(v1.x - dist, v1.y - dist);\n\t                _elemBox.max.set(v1.x + dist, v1.y + dist);\n\t                if (material instanceof THREE.SpriteMaterial) {\n\t                    var texture = material.map;\n\t                    if (texture !== null) {\n\t                        var pattern = _patterns[texture.id];\n\t                        if (pattern === undefined || pattern.version !== texture.version) {\n\t                            pattern = textureToPattern(texture);\n\t                            _patterns[texture.id] = pattern;\n\t                        }\n\t                        if (pattern.canvas !== undefined) {\n\t                            setFillStyle(pattern.canvas);\n\t                            var bitmap = texture.image;\n\t                            var ox = bitmap.width * texture.offset.x;\n\t                            var oy = bitmap.height * texture.offset.y;\n\t                            var sx = bitmap.width * texture.repeat.x;\n\t                            var sy = bitmap.height * texture.repeat.y;\n\t                            var cx = scaleX / sx;\n\t                            var cy = scaleY / sy;\n\t                            _context.save();\n\t                            _context.translate(v1.x, v1.y);\n\t                            if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                            _context.translate(-scaleX / 2, -scaleY / 2);\n\t                            _context.scale(cx, cy);\n\t                            _context.translate(-ox, -oy);\n\t                            _context.fillRect(ox, oy, sx, sy);\n\t                            _context.restore();\n\t                        }\n\t                    } else {\n\t                        setFillStyle(material.color.getStyle());\n\t                        _context.save();\n\t                        _context.translate(v1.x, v1.y);\n\t                        if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                        _context.scale(scaleX, -scaleY);\n\t                        _context.fillRect(-.5, -.5, 1, 1);\n\t                        _context.restore();\n\t                    }\n\t                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setFillStyle(material.color.getStyle());\n\t                    _context.save();\n\t                    _context.translate(v1.x, v1.y);\n\t                    if (material.rotation !== 0) _context.rotate(material.rotation);\n\t                    _context.scale(scaleX, scaleY);\n\t                    material.program(_context);\n\t                    _context.restore();\n\t                }\n\t            }\n\t            function renderLine(v1, v2, element, material) {\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _context.beginPath();\n\t                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n\t                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n\t                if (material instanceof THREE.LineBasicMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    if (material.vertexColors !== THREE.VertexColors) {\n\t                        setStrokeStyle(material.color.getStyle());\n\t                    } else {\n\t                        var colorStyle1 = element.vertexColors[0].getStyle();\n\t                        var colorStyle2 = element.vertexColors[1].getStyle();\n\t                        if (colorStyle1 === colorStyle2) {\n\t                            setStrokeStyle(colorStyle1);\n\t                        } else {\n\t                            try {\n\t                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n\t                                grad.addColorStop(0, colorStyle1);\n\t                                grad.addColorStop(1, colorStyle2);\n\t                            } catch (exception) {\n\t                                grad = colorStyle1;\n\t                            }\n\t                            setStrokeStyle(grad);\n\t                        }\n\t                    }\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                } else if (material instanceof THREE.LineDashedMaterial) {\n\t                    setLineWidth(material.linewidth);\n\t                    setLineCap(material.linecap);\n\t                    setLineJoin(material.linejoin);\n\t                    setStrokeStyle(material.color.getStyle());\n\t                    setLineDash([ material.dashSize, material.gapSize ]);\n\t                    _context.stroke();\n\t                    _elemBox.expandByScalar(material.linewidth * 2);\n\t                    setLineDash([]);\n\t                }\n\t            }\n\t            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n\t                _this.info.render.vertices += 3;\n\t                _this.info.render.faces++;\n\t                setOpacity(material.opacity);\n\t                setBlending(material.blending);\n\t                _v1x = v1.positionScreen.x;\n\t                _v1y = v1.positionScreen.y;\n\t                _v2x = v2.positionScreen.x;\n\t                _v2y = v2.positionScreen.y;\n\t                _v3x = v3.positionScreen.x;\n\t                _v3y = v3.positionScreen.y;\n\t                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n\t                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n\t                    _diffuseColor.copy(material.color);\n\t                    _emissiveColor.copy(material.emissive);\n\t                    if (material.vertexColors === THREE.FaceColors) {\n\t                        _diffuseColor.multiply(element.color);\n\t                    }\n\t                    _color.copy(_ambientLight);\n\t                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n\t                    calculateLight(_centroid, element.normalModel, _color);\n\t                    _color.multiply(_diffuseColor).add(_emissiveColor);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n\t                    if (material.map !== null) {\n\t                        var mapping = material.map.mapping;\n\t                        if (mapping === THREE.UVMapping) {\n\t                            _uvs = element.uvs;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n\t                        }\n\t                    } else if (material.envMap !== null) {\n\t                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n\t                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n\t                            _uv1x = .5 * _normal.x + .5;\n\t                            _uv1y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n\t                            _uv2x = .5 * _normal.x + .5;\n\t                            _uv2y = .5 * _normal.y + .5;\n\t                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n\t                            _uv3x = .5 * _normal.x + .5;\n\t                            _uv3y = .5 * _normal.y + .5;\n\t                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n\t                        }\n\t                    } else {\n\t                        _color.copy(material.color);\n\t                        if (material.vertexColors === THREE.FaceColors) {\n\t                            _color.multiply(element.color);\n\t                        }\n\t                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                    }\n\t                } else if (material instanceof THREE.MeshNormalMaterial) {\n\t                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n\t                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                } else {\n\t                    _color.setRGB(1, 1, 1);\n\t                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n\t                }\n\t            }\n\t            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n\t                _context.beginPath();\n\t                _context.moveTo(x0, y0);\n\t                _context.lineTo(x1, y1);\n\t                _context.lineTo(x2, y2);\n\t                _context.closePath();\n\t            }\n\t            function strokePath(color, linewidth, linecap, linejoin) {\n\t                setLineWidth(linewidth);\n\t                setLineCap(linecap);\n\t                setLineJoin(linejoin);\n\t                setStrokeStyle(color.getStyle());\n\t                _context.stroke();\n\t                _elemBox.expandByScalar(linewidth * 2);\n\t            }\n\t            function fillPath(color) {\n\t                setFillStyle(color.getStyle());\n\t                _context.fill();\n\t            }\n\t            function textureToPattern(texture) {\n\t                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: texture.version\n\t                    };\n\t                }\n\t                var image = texture.image;\n\t                if (image.complete === false) {\n\t                    return {\n\t                        canvas: undefined,\n\t                        version: 0\n\t                    };\n\t                }\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = image.width;\n\t                canvas.height = image.height;\n\t                var context = canvas.getContext(\"2d\");\n\t                context.setTransform(1, 0, 0, -1, 0, image.height);\n\t                context.drawImage(image, 0, 0);\n\t                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n\t                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n\t                var repeat = \"no-repeat\";\n\t                if (repeatX === true && repeatY === true) {\n\t                    repeat = \"repeat\";\n\t                } else if (repeatX === true) {\n\t                    repeat = \"repeat-x\";\n\t                } else if (repeatY === true) {\n\t                    repeat = \"repeat-y\";\n\t                }\n\t                var pattern = _context.createPattern(canvas, repeat);\n\t                if (texture.onUpdate) texture.onUpdate(texture);\n\t                return {\n\t                    canvas: pattern,\n\t                    version: texture.version\n\t                };\n\t            }\n\t            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n\t                var pattern = _patterns[texture.id];\n\t                if (pattern === undefined || pattern.version !== texture.version) {\n\t                    pattern = textureToPattern(texture);\n\t                    _patterns[texture.id] = pattern;\n\t                }\n\t                if (pattern.canvas !== undefined) {\n\t                    setFillStyle(pattern.canvas);\n\t                } else {\n\t                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n\t                    _context.fill();\n\t                    return;\n\t                }\n\t                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n\t                u0 = (u0 + offsetX) * width;\n\t                v0 = (v0 + offsetY) * height;\n\t                u1 = (u1 + offsetX) * width;\n\t                v1 = (v1 + offsetY) * height;\n\t                u2 = (u2 + offsetX) * width;\n\t                v2 = (v2 + offsetY) * height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                if (det === 0) return;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.fill();\n\t                _context.restore();\n\t            }\n\t            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n\t                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n\t                u0 *= width;\n\t                v0 *= height;\n\t                u1 *= width;\n\t                v1 *= height;\n\t                u2 *= width;\n\t                v2 *= height;\n\t                x1 -= x0;\n\t                y1 -= y0;\n\t                x2 -= x0;\n\t                y2 -= y0;\n\t                u1 -= u0;\n\t                v1 -= v0;\n\t                u2 -= u0;\n\t                v2 -= v0;\n\t                det = u1 * v2 - u2 * v1;\n\t                idet = 1 / det;\n\t                a = (v2 * x1 - v1 * x2) * idet;\n\t                b = (v2 * y1 - v1 * y2) * idet;\n\t                c = (u1 * x2 - u2 * x1) * idet;\n\t                d = (u1 * y2 - u2 * y1) * idet;\n\t                e = x0 - a * u0 - c * v0;\n\t                f = y0 - b * u0 - d * v0;\n\t                _context.save();\n\t                _context.transform(a, b, c, d, e, f);\n\t                _context.clip();\n\t                _context.drawImage(image, 0, 0);\n\t                _context.restore();\n\t            }\n\t            function expand(v1, v2, pixels) {\n\t                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n\t                if (det === 0) return;\n\t                idet = pixels / Math.sqrt(det);\n\t                x *= idet;\n\t                y *= idet;\n\t                v2.x += x;\n\t                v2.y += y;\n\t                v1.x -= x;\n\t                v1.y -= y;\n\t            }\n\t            function setOpacity(value) {\n\t                if (_contextGlobalAlpha !== value) {\n\t                    _context.globalAlpha = value;\n\t                    _contextGlobalAlpha = value;\n\t                }\n\t            }\n\t            function setBlending(value) {\n\t                if (_contextGlobalCompositeOperation !== value) {\n\t                    if (value === THREE.NormalBlending) {\n\t                        _context.globalCompositeOperation = \"source-over\";\n\t                    } else if (value === THREE.AdditiveBlending) {\n\t                        _context.globalCompositeOperation = \"lighter\";\n\t                    } else if (value === THREE.SubtractiveBlending) {\n\t                        _context.globalCompositeOperation = \"darker\";\n\t                    }\n\t                    _contextGlobalCompositeOperation = value;\n\t                }\n\t            }\n\t            function setLineWidth(value) {\n\t                if (_contextLineWidth !== value) {\n\t                    _context.lineWidth = value;\n\t                    _contextLineWidth = value;\n\t                }\n\t            }\n\t            function setLineCap(value) {\n\t                if (_contextLineCap !== value) {\n\t                    _context.lineCap = value;\n\t                    _contextLineCap = value;\n\t                }\n\t            }\n\t            function setLineJoin(value) {\n\t                if (_contextLineJoin !== value) {\n\t                    _context.lineJoin = value;\n\t                    _contextLineJoin = value;\n\t                }\n\t            }\n\t            function setStrokeStyle(value) {\n\t                if (_contextStrokeStyle !== value) {\n\t                    _context.strokeStyle = value;\n\t                    _contextStrokeStyle = value;\n\t                }\n\t            }\n\t            function setFillStyle(value) {\n\t                if (_contextFillStyle !== value) {\n\t                    _context.fillStyle = value;\n\t                    _contextFillStyle = value;\n\t                }\n\t            }\n\t            function setLineDash(value) {\n\t                if (_contextLineDash.length !== value.length) {\n\t                    _context.setLineDash(value);\n\t                    _contextLineDash = value;\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports) {\n\t        THREE.RenderableObject = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableFace = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.v3 = new THREE.RenderableVertex();\n\t            this.normalModel = new THREE.Vector3();\n\t            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\t            this.vertexNormalsLength = 0;\n\t            this.color = new THREE.Color();\n\t            this.material = null;\n\t            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableVertex = function() {\n\t            this.position = new THREE.Vector3();\n\t            this.positionWorld = new THREE.Vector3();\n\t            this.positionScreen = new THREE.Vector4();\n\t            this.visible = true;\n\t        };\n\t        THREE.RenderableVertex.prototype.copy = function(vertex) {\n\t            this.positionWorld.copy(vertex.positionWorld);\n\t            this.positionScreen.copy(vertex.positionScreen);\n\t        };\n\t        THREE.RenderableLine = function() {\n\t            this.id = 0;\n\t            this.v1 = new THREE.RenderableVertex();\n\t            this.v2 = new THREE.RenderableVertex();\n\t            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n\t            this.material = null;\n\t            this.z = 0;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.RenderableSprite = function() {\n\t            this.id = 0;\n\t            this.object = null;\n\t            this.x = 0;\n\t            this.y = 0;\n\t            this.z = 0;\n\t            this.rotation = 0;\n\t            this.scale = new THREE.Vector2();\n\t            this.material = null;\n\t            this.renderOrder = 0;\n\t        };\n\t        THREE.Projector = function() {\n\t            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n\t                objects: [],\n\t                lights: [],\n\t                elements: []\n\t            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n\t            this.projectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n\t                vector.project(camera);\n\t            };\n\t            this.unprojectVector = function(vector, camera) {\n\t                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n\t                vector.unproject(camera);\n\t            };\n\t            this.pickingRay = function(vector, camera) {\n\t                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n\t            };\n\t            var RenderList = function() {\n\t                var normals = [];\n\t                var uvs = [];\n\t                var object = null;\n\t                var material = null;\n\t                var normalMatrix = new THREE.Matrix3();\n\t                function setObject(value) {\n\t                    object = value;\n\t                    material = object.material;\n\t                    normalMatrix.getNormalMatrix(object.matrixWorld);\n\t                    normals.length = 0;\n\t                    uvs.length = 0;\n\t                }\n\t                function projectVertex(vertex) {\n\t                    var position = vertex.position;\n\t                    var positionWorld = vertex.positionWorld;\n\t                    var positionScreen = vertex.positionScreen;\n\t                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n\t                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n\t                    var invW = 1 / positionScreen.w;\n\t                    positionScreen.x *= invW;\n\t                    positionScreen.y *= invW;\n\t                    positionScreen.z *= invW;\n\t                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n\t                }\n\t                function pushVertex(x, y, z) {\n\t                    _vertex = getNextVertexInPool();\n\t                    _vertex.position.set(x, y, z);\n\t                    projectVertex(_vertex);\n\t                }\n\t                function pushNormal(x, y, z) {\n\t                    normals.push(x, y, z);\n\t                }\n\t                function pushUv(x, y) {\n\t                    uvs.push(x, y);\n\t                }\n\t                function checkTriangleVisibility(v1, v2, v3) {\n\t                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n\t                    _points3[0] = v1.positionScreen;\n\t                    _points3[1] = v2.positionScreen;\n\t                    _points3[2] = v3.positionScreen;\n\t                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n\t                }\n\t                function checkBackfaceCulling(v1, v2, v3) {\n\t                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n\t                }\n\t                function pushLine(a, b) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    _line = getNextLineInPool();\n\t                    _line.id = object.id;\n\t                    _line.v1.copy(v1);\n\t                    _line.v2.copy(v2);\n\t                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n\t                    _line.renderOrder = object.renderOrder;\n\t                    _line.material = object.material;\n\t                    _renderData.elements.push(_line);\n\t                }\n\t                function pushTriangle(a, b, c) {\n\t                    var v1 = _vertexPool[a];\n\t                    var v2 = _vertexPool[b];\n\t                    var v3 = _vertexPool[c];\n\t                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n\t                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n\t                        _face = getNextFaceInPool();\n\t                        _face.id = object.id;\n\t                        _face.v1.copy(v1);\n\t                        _face.v2.copy(v2);\n\t                        _face.v3.copy(v3);\n\t                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                        _face.renderOrder = object.renderOrder;\n\t                        _face.normalModel.fromArray(normals, a * 3);\n\t                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n\t                        for (var i = 0; i < 3; i++) {\n\t                            var normal = _face.vertexNormalsModel[i];\n\t                            normal.fromArray(normals, arguments[i] * 3);\n\t                            normal.applyMatrix3(normalMatrix).normalize();\n\t                            var uv = _face.uvs[i];\n\t                            uv.fromArray(uvs, arguments[i] * 2);\n\t                        }\n\t                        _face.vertexNormalsLength = 3;\n\t                        _face.material = object.material;\n\t                        _renderData.elements.push(_face);\n\t                    }\n\t                }\n\t                return {\n\t                    setObject: setObject,\n\t                    projectVertex: projectVertex,\n\t                    checkTriangleVisibility: checkTriangleVisibility,\n\t                    checkBackfaceCulling: checkBackfaceCulling,\n\t                    pushVertex: pushVertex,\n\t                    pushNormal: pushNormal,\n\t                    pushUv: pushUv,\n\t                    pushLine: pushLine,\n\t                    pushTriangle: pushTriangle\n\t                };\n\t            };\n\t            var renderList = new RenderList();\n\t            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n\t                _faceCount = 0;\n\t                _lineCount = 0;\n\t                _spriteCount = 0;\n\t                _renderData.elements.length = 0;\n\t                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n\t                if (camera.parent === null) camera.updateMatrixWorld();\n\t                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n\t                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n\t                _frustum.setFromMatrix(_viewProjectionMatrix);\n\t                _objectCount = 0;\n\t                _renderData.objects.length = 0;\n\t                _renderData.lights.length = 0;\n\t                scene.traverseVisible(function(object) {\n\t                    if (object instanceof THREE.Light) {\n\t                        _renderData.lights.push(object);\n\t                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n\t                        var material = object.material;\n\t                        if (material.visible === false) return;\n\t                        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n\t                            _object = getNextObjectInPool();\n\t                            _object.id = object.id;\n\t                            _object.object = object;\n\t                            _vector3.setFromMatrixPosition(object.matrixWorld);\n\t                            _vector3.applyProjection(_viewProjectionMatrix);\n\t                            _object.z = _vector3.z;\n\t                            _object.renderOrder = object.renderOrder;\n\t                            _renderData.objects.push(_object);\n\t                        }\n\t                    }\n\t                });\n\t                if (sortObjects === true) {\n\t                    _renderData.objects.sort(painterSort);\n\t                }\n\t                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n\t                    var object = _renderData.objects[o].object;\n\t                    var geometry = object.geometry;\n\t                    renderList.setObject(object);\n\t                    _modelMatrix = object.matrixWorld;\n\t                    _vertexCount = 0;\n\t                    if (object instanceof THREE.Mesh) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            var groups = geometry.groups;\n\t                            if (attributes.position === undefined) continue;\n\t                            var positions = attributes.position.array;\n\t                            for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                            }\n\t                            if (attributes.normal !== undefined) {\n\t                                var normals = attributes.normal.array;\n\t                                for (var i = 0, l = normals.length; i < l; i += 3) {\n\t                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n\t                                }\n\t                            }\n\t                            if (attributes.uv !== undefined) {\n\t                                var uvs = attributes.uv.array;\n\t                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n\t                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n\t                                }\n\t                            }\n\t                            if (geometry.index !== null) {\n\t                                var indices = geometry.index.array;\n\t                                if (groups.length > 0) {\n\t                                    for (var o = 0; o < groups.length; o++) {\n\t                                        var group = groups[o];\n\t                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n\t                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                        }\n\t                                    }\n\t                                } else {\n\t                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n\t                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n\t                                    }\n\t                                }\n\t                            } else {\n\t                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n\t                                    renderList.pushTriangle(i, i + 1, i + 2);\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            var vertices = geometry.vertices;\n\t                            var faces = geometry.faces;\n\t                            var faceVertexUvs = geometry.faceVertexUvs[0];\n\t                            _normalMatrix.getNormalMatrix(_modelMatrix);\n\t                            var material = object.material;\n\t                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n\t                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n\t                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n\t                                var vertex = vertices[v];\n\t                                _vector3.copy(vertex);\n\t                                if (material.morphTargets === true) {\n\t                                    var morphTargets = geometry.morphTargets;\n\t                                    var morphInfluences = object.morphTargetInfluences;\n\t                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n\t                                        var influence = morphInfluences[t];\n\t                                        if (influence === 0) continue;\n\t                                        var target = morphTargets[t];\n\t                                        var targetVertex = target.vertices[v];\n\t                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n\t                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n\t                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n\t                                    }\n\t                                }\n\t                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n\t                            }\n\t                            for (var f = 0, fl = faces.length; f < fl; f++) {\n\t                                var face = faces[f];\n\t                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n\t                                if (material === undefined) continue;\n\t                                var side = material.side;\n\t                                var v1 = _vertexPool[face.a];\n\t                                var v2 = _vertexPool[face.b];\n\t                                var v3 = _vertexPool[face.c];\n\t                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n\t                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n\t                                if (side !== THREE.DoubleSide) {\n\t                                    if (side === THREE.FrontSide && visible === false) continue;\n\t                                    if (side === THREE.BackSide && visible === true) continue;\n\t                                }\n\t                                _face = getNextFaceInPool();\n\t                                _face.id = object.id;\n\t                                _face.v1.copy(v1);\n\t                                _face.v2.copy(v2);\n\t                                _face.v3.copy(v3);\n\t                                _face.normalModel.copy(face.normal);\n\t                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                    _face.normalModel.negate();\n\t                                }\n\t                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                var faceVertexNormals = face.vertexNormals;\n\t                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n\t                                    var normalModel = _face.vertexNormalsModel[n];\n\t                                    normalModel.copy(faceVertexNormals[n]);\n\t                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n\t                                        normalModel.negate();\n\t                                    }\n\t                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n\t                                }\n\t                                _face.vertexNormalsLength = faceVertexNormals.length;\n\t                                var vertexUvs = faceVertexUvs[f];\n\t                                if (vertexUvs !== undefined) {\n\t                                    for (var u = 0; u < 3; u++) {\n\t                                        _face.uvs[u].copy(vertexUvs[u]);\n\t                                    }\n\t                                }\n\t                                _face.color = face.color;\n\t                                _face.material = material;\n\t                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n\t                                _face.renderOrder = object.renderOrder;\n\t                                _renderData.elements.push(_face);\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Line) {\n\t                        if (geometry instanceof THREE.BufferGeometry) {\n\t                            var attributes = geometry.attributes;\n\t                            if (attributes.position !== undefined) {\n\t                                var positions = attributes.position.array;\n\t                                for (var i = 0, l = positions.length; i < l; i += 3) {\n\t                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n\t                                }\n\t                                if (geometry.index !== null) {\n\t                                    var indices = geometry.index.array;\n\t                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n\t                                        renderList.pushLine(indices[i], indices[i + 1]);\n\t                                    }\n\t                                } else {\n\t                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n\t                                        renderList.pushLine(i, i + 1);\n\t                                    }\n\t                                }\n\t                            }\n\t                        } else if (geometry instanceof THREE.Geometry) {\n\t                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n\t                            var vertices = object.geometry.vertices;\n\t                            if (vertices.length === 0) continue;\n\t                            v1 = getNextVertexInPool();\n\t                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n\t                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n\t                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n\t                                v1 = getNextVertexInPool();\n\t                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n\t                                if ((v + 1) % step > 0) continue;\n\t                                v2 = _vertexPool[_vertexCount - 2];\n\t                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n\t                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n\t                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n\t                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n\t                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n\t                                    _line = getNextLineInPool();\n\t                                    _line.id = object.id;\n\t                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n\t                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n\t                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n\t                                    _line.renderOrder = object.renderOrder;\n\t                                    _line.material = object.material;\n\t                                    if (object.material.vertexColors === THREE.VertexColors) {\n\t                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n\t                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n\t                                    }\n\t                                    _renderData.elements.push(_line);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (object instanceof THREE.Sprite) {\n\t                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n\t                        _vector4.applyMatrix4(_viewProjectionMatrix);\n\t                        var invW = 1 / _vector4.w;\n\t                        _vector4.z *= invW;\n\t                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n\t                            _sprite = getNextSpriteInPool();\n\t                            _sprite.id = object.id;\n\t                            _sprite.x = _vector4.x * invW;\n\t                            _sprite.y = _vector4.y * invW;\n\t                            _sprite.z = _vector4.z;\n\t                            _sprite.renderOrder = object.renderOrder;\n\t                            _sprite.object = object;\n\t                            _sprite.rotation = object.rotation;\n\t                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n\t                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n\t                            _sprite.material = object.material;\n\t                            _renderData.elements.push(_sprite);\n\t                        }\n\t                    }\n\t                }\n\t                if (sortElements === true) {\n\t                    _renderData.elements.sort(painterSort);\n\t                }\n\t                return _renderData;\n\t            };\n\t            function getNextObjectInPool() {\n\t                if (_objectCount === _objectPoolLength) {\n\t                    var object = new THREE.RenderableObject();\n\t                    _objectPool.push(object);\n\t                    _objectPoolLength++;\n\t                    _objectCount++;\n\t                    return object;\n\t                }\n\t                return _objectPool[_objectCount++];\n\t            }\n\t            function getNextVertexInPool() {\n\t                if (_vertexCount === _vertexPoolLength) {\n\t                    var vertex = new THREE.RenderableVertex();\n\t                    _vertexPool.push(vertex);\n\t                    _vertexPoolLength++;\n\t                    _vertexCount++;\n\t                    return vertex;\n\t                }\n\t                return _vertexPool[_vertexCount++];\n\t            }\n\t            function getNextFaceInPool() {\n\t                if (_faceCount === _facePoolLength) {\n\t                    var face = new THREE.RenderableFace();\n\t                    _facePool.push(face);\n\t                    _facePoolLength++;\n\t                    _faceCount++;\n\t                    return face;\n\t                }\n\t                return _facePool[_faceCount++];\n\t            }\n\t            function getNextLineInPool() {\n\t                if (_lineCount === _linePoolLength) {\n\t                    var line = new THREE.RenderableLine();\n\t                    _linePool.push(line);\n\t                    _linePoolLength++;\n\t                    _lineCount++;\n\t                    return line;\n\t                }\n\t                return _linePool[_lineCount++];\n\t            }\n\t            function getNextSpriteInPool() {\n\t                if (_spriteCount === _spritePoolLength) {\n\t                    var sprite = new THREE.RenderableSprite();\n\t                    _spritePool.push(sprite);\n\t                    _spritePoolLength++;\n\t                    _spriteCount++;\n\t                    return sprite;\n\t                }\n\t                return _spritePool[_spriteCount++];\n\t            }\n\t            function painterSort(a, b) {\n\t                if (a.renderOrder !== b.renderOrder) {\n\t                    return a.renderOrder - b.renderOrder;\n\t                } else if (a.z !== b.z) {\n\t                    return b.z - a.z;\n\t                } else if (a.id !== b.id) {\n\t                    return a.id - b.id;\n\t                } else {\n\t                    return 0;\n\t                }\n\t            }\n\t            function clipLine(s1, s2) {\n\t                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n\t                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n\t                    return true;\n\t                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n\t                    return false;\n\t                } else {\n\t                    if (bc1near < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n\t                    } else if (bc2near < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n\t                    }\n\t                    if (bc1far < 0) {\n\t                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n\t                    } else if (bc2far < 0) {\n\t                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n\t                    }\n\t                    if (alpha2 < alpha1) {\n\t                        return false;\n\t                    } else {\n\t                        s1.lerp(s2, alpha1);\n\t                        s2.lerp(s1, 1 - alpha2);\n\t                        return true;\n\t                    }\n\t                }\n\t            }\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        /*!\n\t\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        var isObject = __webpack_require__(10);\n\t        function isObjectObject(o) {\n\t            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n\t        }\n\t        module.exports = function isPlainObject(o) {\n\t            var ctor, prot;\n\t            if (isObjectObject(o) === false) return false;\n\t            ctor = o.constructor;\n\t            if (typeof ctor !== \"function\") return false;\n\t            prot = ctor.prototype;\n\t            if (isObjectObject(prot) === false) return false;\n\t            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n\t                return false;\n\t            }\n\t            return true;\n\t        };\n\t    }, function(module, exports) {\n\t        /*!\n\t\t * isobject <https://github.com/jonschlinkert/isobject>\n\t\t *\n\t\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t\t * Licensed under the MIT License.\n\t\t */\n\t        \"use strict\";\n\t        module.exports = function isObject(val) {\n\t            return val != null && typeof val === \"object\" && !Array.isArray(val);\n\t        };\n\t    }, function(module, exports, __webpack_require__) {\n\t        var __WEBPACK_AMD_DEFINE_RESULT__;\n\t        !function(undefined) {\n\t            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n\t                return Object.prototype.toString.call(obj) === \"[object Array]\";\n\t            };\n\t            var defaultMaxListeners = 10;\n\t            function init() {\n\t                this._events = {};\n\t                if (this._conf) {\n\t                    configure.call(this, this._conf);\n\t                }\n\t            }\n\t            function configure(conf) {\n\t                if (conf) {\n\t                    this._conf = conf;\n\t                    conf.delimiter && (this.delimiter = conf.delimiter);\n\t                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n\t                    conf.wildcard && (this.wildcard = conf.wildcard);\n\t                    conf.newListener && (this.newListener = conf.newListener);\n\t                    if (this.wildcard) {\n\t                        this.listenerTree = {};\n\t                    }\n\t                }\n\t            }\n\t            function EventEmitter(conf) {\n\t                this._events = {};\n\t                this.newListener = false;\n\t                configure.call(this, conf);\n\t            }\n\t            function searchListenerTree(handlers, type, tree, i) {\n\t                if (!tree) {\n\t                    return [];\n\t                }\n\t                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n\t                if (i === typeLength && tree._listeners) {\n\t                    if (typeof tree._listeners === \"function\") {\n\t                        handlers && handlers.push(tree._listeners);\n\t                        return [ tree ];\n\t                    } else {\n\t                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n\t                            handlers && handlers.push(tree._listeners[leaf]);\n\t                        }\n\t                        return [ tree ];\n\t                    }\n\t                }\n\t                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n\t                    if (currentType === \"*\") {\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    } else if (currentType === \"**\") {\n\t                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n\t                        if (endReached && tree._listeners) {\n\t                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n\t                        }\n\t                        for (branch in tree) {\n\t                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n\t                                if (branch === \"*\" || branch === \"**\") {\n\t                                    if (tree[branch]._listeners && !endReached) {\n\t                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n\t                                    }\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                } else if (branch === nextType) {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n\t                                } else {\n\t                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n\t                                }\n\t                            }\n\t                        }\n\t                        return listeners;\n\t                    }\n\t                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n\t                }\n\t                xTree = tree[\"*\"];\n\t                if (xTree) {\n\t                    searchListenerTree(handlers, type, xTree, i + 1);\n\t                }\n\t                xxTree = tree[\"**\"];\n\t                if (xxTree) {\n\t                    if (i < typeLength) {\n\t                        if (xxTree._listeners) {\n\t                            searchListenerTree(handlers, type, xxTree, typeLength);\n\t                        }\n\t                        for (branch in xxTree) {\n\t                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n\t                                if (branch === nextType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n\t                                } else if (branch === currentType) {\n\t                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n\t                                } else {\n\t                                    isolatedBranch = {};\n\t                                    isolatedBranch[branch] = xxTree[branch];\n\t                                    searchListenerTree(handlers, type, {\n\t                                        \"**\": isolatedBranch\n\t                                    }, i + 1);\n\t                                }\n\t                            }\n\t                        }\n\t                    } else if (xxTree._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree, typeLength);\n\t                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n\t                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n\t                    }\n\t                }\n\t                return listeners;\n\t            }\n\t            function growListenerTree(type, listener) {\n\t                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                for (var i = 0, len = type.length; i + 1 < len; i++) {\n\t                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n\t                        return;\n\t                    }\n\t                }\n\t                var tree = this.listenerTree;\n\t                var name = type.shift();\n\t                while (name) {\n\t                    if (!tree[name]) {\n\t                        tree[name] = {};\n\t                    }\n\t                    tree = tree[name];\n\t                    if (type.length === 0) {\n\t                        if (!tree._listeners) {\n\t                            tree._listeners = listener;\n\t                        } else if (typeof tree._listeners === \"function\") {\n\t                            tree._listeners = [ tree._listeners, listener ];\n\t                        } else if (isArray(tree._listeners)) {\n\t                            tree._listeners.push(listener);\n\t                            if (!tree._listeners.warned) {\n\t                                var m = defaultMaxListeners;\n\t                                if (typeof this._events.maxListeners !== \"undefined\") {\n\t                                    m = this._events.maxListeners;\n\t                                }\n\t                                if (m > 0 && tree._listeners.length > m) {\n\t                                    tree._listeners.warned = true;\n\t                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n\t                                    console.trace();\n\t                                }\n\t                            }\n\t                        }\n\t                        return true;\n\t                    }\n\t                    name = type.shift();\n\t                }\n\t                return true;\n\t            }\n\t            EventEmitter.prototype.delimiter = \".\";\n\t            EventEmitter.prototype.setMaxListeners = function(n) {\n\t                this._events || init.call(this);\n\t                this._events.maxListeners = n;\n\t                if (!this._conf) this._conf = {};\n\t                this._conf.maxListeners = n;\n\t            };\n\t            EventEmitter.prototype.event = \"\";\n\t            EventEmitter.prototype.once = function(event, fn) {\n\t                this.many(event, 1, fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.many = function(event, ttl, fn) {\n\t                var self = this;\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"many only accepts instances of Function\");\n\t                }\n\t                function listener() {\n\t                    if (--ttl === 0) {\n\t                        self.off(event, listener);\n\t                    }\n\t                    fn.apply(this, arguments);\n\t                }\n\t                listener._origin = fn;\n\t                this.on(event, listener);\n\t                return self;\n\t            };\n\t            EventEmitter.prototype.emit = function() {\n\t                this._events || init.call(this);\n\t                var type = arguments[0];\n\t                if (type === \"newListener\" && !this.newListener) {\n\t                    if (!this._events.newListener) {\n\t                        return false;\n\t                    }\n\t                }\n\t                if (this._all) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    for (i = 0, l = this._all.length; i < l; i++) {\n\t                        this.event = type;\n\t                        this._all[i].apply(this, args);\n\t                    }\n\t                }\n\t                if (type === \"error\") {\n\t                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n\t                        if (arguments[1] instanceof Error) {\n\t                            throw arguments[1];\n\t                        } else {\n\t                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                var handler;\n\t                if (this.wildcard) {\n\t                    handler = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n\t                } else {\n\t                    handler = this._events[type];\n\t                }\n\t                if (typeof handler === \"function\") {\n\t                    this.event = type;\n\t                    if (arguments.length === 1) {\n\t                        handler.call(this);\n\t                    } else if (arguments.length > 1) switch (arguments.length) {\n\t                      case 2:\n\t                        handler.call(this, arguments[1]);\n\t                        break;\n\t\n\t                      case 3:\n\t                        handler.call(this, arguments[1], arguments[2]);\n\t                        break;\n\t\n\t                      default:\n\t                        var l = arguments.length;\n\t                        var args = new Array(l - 1);\n\t                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                        handler.apply(this, args);\n\t                    }\n\t                    return true;\n\t                } else if (handler) {\n\t                    var l = arguments.length;\n\t                    var args = new Array(l - 1);\n\t                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n\t                    var listeners = handler.slice();\n\t                    for (var i = 0, l = listeners.length; i < l; i++) {\n\t                        this.event = type;\n\t                        listeners[i].apply(this, args);\n\t                    }\n\t                    return listeners.length > 0 || !!this._all;\n\t                } else {\n\t                    return !!this._all;\n\t                }\n\t            };\n\t            EventEmitter.prototype.on = function(type, listener) {\n\t                if (typeof type === \"function\") {\n\t                    this.onAny(type);\n\t                    return this;\n\t                }\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"on only accepts instances of Function\");\n\t                }\n\t                this._events || init.call(this);\n\t                this.emit(\"newListener\", type, listener);\n\t                if (this.wildcard) {\n\t                    growListenerTree.call(this, type, listener);\n\t                    return this;\n\t                }\n\t                if (!this._events[type]) {\n\t                    this._events[type] = listener;\n\t                } else if (typeof this._events[type] === \"function\") {\n\t                    this._events[type] = [ this._events[type], listener ];\n\t                } else if (isArray(this._events[type])) {\n\t                    this._events[type].push(listener);\n\t                    if (!this._events[type].warned) {\n\t                        var m = defaultMaxListeners;\n\t                        if (typeof this._events.maxListeners !== \"undefined\") {\n\t                            m = this._events.maxListeners;\n\t                        }\n\t                        if (m > 0 && this._events[type].length > m) {\n\t                            this._events[type].warned = true;\n\t                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n\t                            console.trace();\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.onAny = function(fn) {\n\t                if (typeof fn !== \"function\") {\n\t                    throw new Error(\"onAny only accepts instances of Function\");\n\t                }\n\t                if (!this._all) {\n\t                    this._all = [];\n\t                }\n\t                this._all.push(fn);\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\t            EventEmitter.prototype.off = function(type, listener) {\n\t                if (typeof listener !== \"function\") {\n\t                    throw new Error(\"removeListener only takes instances of Function\");\n\t                }\n\t                var handlers, leafs = [];\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    handlers = this._events[type];\n\t                    leafs.push({\n\t                        _listeners: handlers\n\t                    });\n\t                }\n\t                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                    var leaf = leafs[iLeaf];\n\t                    handlers = leaf._listeners;\n\t                    if (isArray(handlers)) {\n\t                        var position = -1;\n\t                        for (var i = 0, length = handlers.length; i < length; i++) {\n\t                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n\t                                position = i;\n\t                                break;\n\t                            }\n\t                        }\n\t                        if (position < 0) {\n\t                            continue;\n\t                        }\n\t                        if (this.wildcard) {\n\t                            leaf._listeners.splice(position, 1);\n\t                        } else {\n\t                            this._events[type].splice(position, 1);\n\t                        }\n\t                        if (handlers.length === 0) {\n\t                            if (this.wildcard) {\n\t                                delete leaf._listeners;\n\t                            } else {\n\t                                delete this._events[type];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n\t                        if (this.wildcard) {\n\t                            delete leaf._listeners;\n\t                        } else {\n\t                            delete this._events[type];\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.offAny = function(fn) {\n\t                var i = 0, l = 0, fns;\n\t                if (fn && this._all && this._all.length > 0) {\n\t                    fns = this._all;\n\t                    for (i = 0, l = fns.length; i < l; i++) {\n\t                        if (fn === fns[i]) {\n\t                            fns.splice(i, 1);\n\t                            return this;\n\t                        }\n\t                    }\n\t                } else {\n\t                    this._all = [];\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\t            EventEmitter.prototype.removeAllListeners = function(type) {\n\t                if (arguments.length === 0) {\n\t                    !this._events || init.call(this);\n\t                    return this;\n\t                }\n\t                if (this.wildcard) {\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n\t                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n\t                        var leaf = leafs[iLeaf];\n\t                        leaf._listeners = null;\n\t                    }\n\t                } else {\n\t                    if (!this._events[type]) return this;\n\t                    this._events[type] = null;\n\t                }\n\t                return this;\n\t            };\n\t            EventEmitter.prototype.listeners = function(type) {\n\t                if (this.wildcard) {\n\t                    var handlers = [];\n\t                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n\t                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n\t                    return handlers;\n\t                }\n\t                this._events || init.call(this);\n\t                if (!this._events[type]) this._events[type] = [];\n\t                if (!isArray(this._events[type])) {\n\t                    this._events[type] = [ this._events[type] ];\n\t                }\n\t                return this._events[type];\n\t            };\n\t            EventEmitter.prototype.listenersAny = function() {\n\t                if (this._all) {\n\t                    return this._all;\n\t                } else {\n\t                    return [];\n\t                }\n\t            };\n\t            if (true) {\n\t                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t                    return EventEmitter;\n\t                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t            } else if (typeof exports === \"object\") {\n\t                exports.EventEmitter2 = EventEmitter;\n\t            } else {\n\t                window.EventEmitter2 = EventEmitter;\n\t            }\n\t        }();\n\t    }, function(module, exports) {\n\t        module.exports = {\n\t            Promise: window[\"Promise\"]\n\t        };\n\t    }, function(module, exports) {\n\t        (function() {\n\t            var ResizeSensor = function(element, callback) {\n\t                function EventQueue() {\n\t                    this.q = [];\n\t                    this.add = function(ev) {\n\t                        this.q.push(ev);\n\t                    };\n\t                    var i, j;\n\t                    this.call = function() {\n\t                        for (i = 0, j = this.q.length; i < j; i++) {\n\t                            this.q[i].call();\n\t                        }\n\t                    };\n\t                }\n\t                function getComputedStyle(element, prop) {\n\t                    if (element.currentStyle) {\n\t                        return element.currentStyle[prop];\n\t                    } else if (window.getComputedStyle) {\n\t                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n\t                    } else {\n\t                        return element.style[prop];\n\t                    }\n\t                }\n\t                function attachResizeEvent(element, resized) {\n\t                    if (!element.resizedAttached) {\n\t                        element.resizedAttached = new EventQueue();\n\t                        element.resizedAttached.add(resized);\n\t                    } else if (element.resizedAttached) {\n\t                        element.resizedAttached.add(resized);\n\t                        return;\n\t                    }\n\t                    element.resizeSensor = document.createElement(\"div\");\n\t                    element.resizeSensor.className = \"resize-sensor\";\n\t                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n\t                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n\t                    element.resizeSensor.style.cssText = style;\n\t                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n\t                    element.appendChild(element.resizeSensor);\n\t                    if (!{\n\t                        fixed: 1,\n\t                        absolute: 1\n\t                    }[getComputedStyle(element, \"position\")]) {\n\t                        element.style.position = \"relative\";\n\t                    }\n\t                    var expand = element.resizeSensor.childNodes[0];\n\t                    var expandChild = expand.childNodes[0];\n\t                    var shrink = element.resizeSensor.childNodes[1];\n\t                    var shrinkChild = shrink.childNodes[0];\n\t                    var lastWidth, lastHeight;\n\t                    var reset = function() {\n\t                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n\t                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n\t                        expand.scrollLeft = expand.scrollWidth;\n\t                        expand.scrollTop = expand.scrollHeight;\n\t                        shrink.scrollLeft = shrink.scrollWidth;\n\t                        shrink.scrollTop = shrink.scrollHeight;\n\t                        lastWidth = element.offsetWidth;\n\t                        lastHeight = element.offsetHeight;\n\t                    };\n\t                    reset();\n\t                    var changed = function() {\n\t                        if (element.resizedAttached) {\n\t                            element.resizedAttached.call();\n\t                        }\n\t                    };\n\t                    var addEvent = function(el, name, cb) {\n\t                        if (el.attachEvent) {\n\t                            el.attachEvent(\"on\" + name, cb);\n\t                        } else {\n\t                            el.addEventListener(name, cb);\n\t                        }\n\t                    };\n\t                    var onScroll = function() {\n\t                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n\t                            changed();\n\t                        }\n\t                        reset();\n\t                    };\n\t                    addEvent(expand, \"scroll\", onScroll);\n\t                    addEvent(shrink, \"scroll\", onScroll);\n\t                }\n\t                var elementType = Object.prototype.toString.call(element);\n\t                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n\t                if (isCollectionTyped) {\n\t                    var i = 0, j = element.length;\n\t                    for (;i < j; i++) {\n\t                        attachResizeEvent(element[i], callback);\n\t                    }\n\t                } else {\n\t                    attachResizeEvent(element, callback);\n\t                }\n\t                this.detach = function() {\n\t                    if (isCollectionTyped) {\n\t                        var i = 0, j = element.length;\n\t                        for (;i < j; i++) {\n\t                            ResizeSensor.detach(element[i]);\n\t                        }\n\t                    } else {\n\t                        ResizeSensor.detach(element);\n\t                    }\n\t                };\n\t            };\n\t            ResizeSensor.detach = function(element) {\n\t                if (element.resizeSensor) {\n\t                    element.removeChild(element.resizeSensor);\n\t                    delete element.resizeSensor;\n\t                    delete element.resizedAttached;\n\t                }\n\t            };\n\t            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n\t                module.exports = ResizeSensor;\n\t            } else {\n\t                window.ResizeSensor = ResizeSensor;\n\t            }\n\t        })();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Widget_1 = __webpack_require__(17);\n\t        var TrendsManager_1 = __webpack_require__(18);\n\t        var Screen_1 = __webpack_require__(21);\n\t        var AxisMarks_1 = __webpack_require__(22);\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var deps_1 = __webpack_require__(3);\n\t        var CHART_STATE_EVENTS = {\n\t            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n\t            READY: \"ready\",\n\t            DESTROY: \"destroy\",\n\t            CHANGE: \"change\",\n\t            TREND_CHANGE: \"trendChange\",\n\t            TRENDS_CHANGE: \"trendsChange\",\n\t            ZOOM: \"zoom\",\n\t            RESIZE: \"resize\",\n\t            SCROLL: \"scroll\",\n\t            SCROLL_STOP: \"scrollStop\",\n\t            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n\t        };\n\t        var ChartState = function() {\n\t            function ChartState(initialState, widgetsClasses, plugins) {\n\t                if (widgetsClasses === void 0) {\n\t                    widgetsClasses = {};\n\t                }\n\t                if (plugins === void 0) {\n\t                    plugins = [];\n\t                }\n\t                this.data = {\n\t                    prevState: {},\n\t                    $el: null,\n\t                    zoom: 0,\n\t                    xAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n\t                            from: 0,\n\t                            to: 0,\n\t                            scroll: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 0,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 0,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        gridMinSize: 100,\n\t                        autoScroll: true,\n\t                        marks: []\n\t                    },\n\t                    yAxis: {\n\t                        range: {\n\t                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n\t                            from: 0,\n\t                            to: 0,\n\t                            zoom: 1,\n\t                            padding: {\n\t                                start: 5,\n\t                                end: 5\n\t                            },\n\t                            margin: {\n\t                                start: 5,\n\t                                end: 5\n\t                            }\n\t                        },\n\t                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n\t                        gridMinSize: 50,\n\t                        marks: []\n\t                    },\n\t                    animations: {\n\t                        enabled: true,\n\t                        trendChangeSpeed: .5,\n\t                        trendChangeEase: void 0,\n\t                        zoomSpeed: .25,\n\t                        zoomEase: Linear.easeNone,\n\t                        scrollSpeed: .5,\n\t                        scrollEase: Linear.easeNone,\n\t                        autoScrollSpeed: 1,\n\t                        autoScrollEase: Linear.easeNone\n\t                    },\n\t                    autoRender: {\n\t                        enabled: true,\n\t                        fps: 0\n\t                    },\n\t                    autoResize: true,\n\t                    renderer: \"WebGLRenderer\",\n\t                    autoScroll: true,\n\t                    controls: {\n\t                        enabled: true\n\t                    },\n\t                    cursor: {\n\t                        dragMode: false,\n\t                        x: 0,\n\t                        y: 0\n\t                    },\n\t                    backgroundColor: 0,\n\t                    backgroundOpacity: 1,\n\t                    showStats: false,\n\t                    pluginsState: {},\n\t                    eventEmitterMaxListeners: 20\n\t                };\n\t                this.widgetsClasses = {};\n\t                this.plugins = {};\n\t                this.isReady = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n\t                this.widgetsClasses = widgetsClasses;\n\t                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n\t                initialState.trends = this.trendsManager.calculatedOptions;\n\t                initialState = this.installPlugins(plugins, initialState);\n\t                this.setState(initialState);\n\t                this.setState({\n\t                    computedData: this.getComputedData()\n\t                });\n\t                this.savePrevState();\n\t                this.screen = new Screen_1.Screen(this);\n\t                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n\t                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n\t                this.initListeners();\n\t                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n\t                this.isReady = true;\n\t                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n\t            }\n\t            ChartState.prototype.destroy = function() {\n\t                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n\t                this.ee.removeAllListeners();\n\t                this.data = {};\n\t            };\n\t            ChartState.prototype.onDestroy = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n\t            };\n\t            ChartState.prototype.onInitialStateApplied = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n\t            };\n\t            ChartState.prototype.onReady = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n\t            };\n\t            ChartState.prototype.onChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onTrendChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onTrendsChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n\t            };\n\t            ChartState.prototype.onScrollStop = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n\t            };\n\t            ChartState.prototype.onScroll = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n\t            };\n\t            ChartState.prototype.onZoom = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n\t            };\n\t            ChartState.prototype.onResize = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n\t            };\n\t            ChartState.prototype.onPluginsStateChange = function(cb) {\n\t                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n\t            };\n\t            ChartState.prototype.getTrend = function(trendName) {\n\t                return this.trendsManager.getTrend(trendName);\n\t            };\n\t            ChartState.prototype.setState = function(newState, eventData, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var stateData = this.data;\n\t                var changedProps = {};\n\t                for (var key in newState) {\n\t                    if (stateData[key] !== newState[key]) {\n\t                        changedProps[key] = newState[key];\n\t                    }\n\t                }\n\t                this.savePrevState(changedProps);\n\t                var trendsData = {};\n\t                if (newState.trends) for (var trendName in newState.trends) {\n\t                    var trendOptions = newState.trends[trendName];\n\t                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n\t                    delete trendOptions.data;\n\t                }\n\t                var newStateContainsData = Object.keys(trendsData).length > 0;\n\t                this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n\t                if (newStateContainsData) for (var trendName in trendsData) {\n\t                    this.data.trends[trendName].data = trendsData[trendName];\n\t                }\n\t                if (silent) return;\n\t                var recalculateResult = this.recalculateState(changedProps);\n\t                changedProps = recalculateResult.changedProps;\n\t                this.emitChangedStateEvents(changedProps, eventData);\n\t            };\n\t            ChartState.prototype.recalculateState = function(changedProps) {\n\t                var data = this.data;\n\t                var patch = {};\n\t                var actualData = Utils_1.Utils.deepMerge({}, data);\n\t                if (changedProps.widgets || !data.widgets) {\n\t                    patch.widgets = {};\n\t                    var widgetsOptions = data.widgets || {};\n\t                    for (var widgetName in this.widgetsClasses) {\n\t                        var WidgetClass = this.widgetsClasses[widgetName];\n\t                        var userOptions = widgetsOptions[widgetName] || {};\n\t                        var defaultOptions = WidgetClass.getDefaultOptions() || Widget_1.ChartWidget.getDefaultOptions();\n\t                        patch.widgets[widgetName] = Utils_1.Utils.deepMerge(defaultOptions, userOptions);\n\t                    }\n\t                }\n\t                var cursorOptions = changedProps.cursor;\n\t                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n\t                if (isMouseDrag) {\n\t                    var oldX = data.prevState.cursor.x;\n\t                    var currentX = cursorOptions.x;\n\t                    var currentScroll = data.xAxis.range.scroll;\n\t                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n\t                    patch.xAxis = {\n\t                        range: {\n\t                            scroll: currentScroll + deltaXVal\n\t                        }\n\t                    };\n\t                    actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                        xAxis: patch.xAxis\n\t                    });\n\t                }\n\t                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n\t                var scrollXChanged = false;\n\t                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateXAxis) {\n\t                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n\t                    if (xAxisPatch) {\n\t                        scrollXChanged = true;\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            xAxis: xAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n\t                if (needToRecalculateYAxis) {\n\t                    var yAxisPatch = this.recalculateYAxis(actualData);\n\t                    if (yAxisPatch) {\n\t                        patch = Utils_1.Utils.deepMerge(patch, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                        actualData = Utils_1.Utils.deepMerge(actualData, {\n\t                            yAxis: yAxisPatch\n\t                        });\n\t                    }\n\t                }\n\t                this.savePrevState(patch);\n\t                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n\t                patch.computedData = this.getComputedData(allChangedProps);\n\t                this.savePrevState(patch);\n\t                this.data = Utils_1.Utils.deepMerge(this.data, patch);\n\t                return {\n\t                    changedProps: allChangedProps,\n\t                    patch: patch\n\t                };\n\t            };\n\t            ChartState.prototype.getComputedData = function(changedProps) {\n\t                var computeAll = !changedProps;\n\t                var computedData = {};\n\t                if (computeAll || changedProps.trends && this.trendsManager) {\n\t                    computedData.trends = {\n\t                        maxXVal: this.trendsManager.getEndXVal(),\n\t                        minXVal: this.trendsManager.getStartXVal()\n\t                    };\n\t                }\n\t                return computedData;\n\t            };\n\t            ChartState.prototype.savePrevState = function(changedProps) {\n\t                if (!changedProps) changedProps = this.data;\n\t                var prevState = this.data.prevState;\n\t                Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n\t            };\n\t            ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n\t                var prevState = this.data.prevState;\n\t                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n\t                for (var key in changedProps) {\n\t                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n\t                }\n\t                if (!this.isReady) return;\n\t                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n\t                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n\t                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n\t                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n\t                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n\t                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n\t                var resizeEventNeeded = changedProps.width || changedProps.height;\n\t                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n\t                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n\t                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n\t            };\n\t            ChartState.prototype.installPlugins = function(plugins, initialState) {\n\t                var _this = this;\n\t                initialState.pluginsState = {};\n\t                plugins.forEach(function(plugin) {\n\t                    var PluginClass = plugin.constructor;\n\t                    var pluginName = PluginClass.NAME;\n\t                    PluginClass.pluginWidgets.forEach(function(PluginWidget) {\n\t                        return _this.widgetsClasses[PluginWidget.widgetName] = PluginWidget;\n\t                    });\n\t                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n\t                    _this.plugins[pluginName] = plugin;\n\t                    plugin.setupChartState(_this);\n\t                });\n\t                return initialState;\n\t            };\n\t            ChartState.prototype.getPlugin = function(pluginName) {\n\t                return this.plugins[pluginName];\n\t            };\n\t            ChartState.prototype.initListeners = function() {\n\t                var _this = this;\n\t                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n\t                    _this.handleTrendsChange(changedTrends, newData);\n\t                });\n\t            };\n\t            ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n\t                for (var trendName in changedTrends) {\n\t                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n\t                }\n\t            };\n\t            ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n\t                var axisRange = actualData.xAxis.range;\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var isInitialize = axisRange.zeroVal == void 0;\n\t                var zeroVal, scaleFactor;\n\t                var zoom = axisRange.zoom;\n\t                if (axisRange.isMirrorMode) {\n\t                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n\t                }\n\t                if (isInitialize) {\n\t                    zeroVal = axisRange.from;\n\t                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                } else {\n\t                    zeroVal = axisRange.zeroVal;\n\t                    scaleFactor = axisRange.scaleFactor;\n\t                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n\t                        if (changedProps.xAxis.range.zoom) {\n\t                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n\t                        }\n\t                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n\t                        patch.range.scroll = axisRange.from - zeroVal;\n\t                        patch.range.zoom = currentScaleFactor / scaleFactor;\n\t                        return patch;\n\t                    }\n\t                }\n\t                do {\n\t                    var from = zeroVal + axisRange.scroll;\n\t                    var to = from + actualData.width / (scaleFactor * zoom);\n\t                    var rangeLength = to - from;\n\t                    var needToRecalculateZoom = false;\n\t                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n\t                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n\t                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n\t                    if (needToRecalculateZoom) {\n\t                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n\t                        var zoom = zoom * fixScale;\n\t                        patch.range.zoom = zoom;\n\t                    }\n\t                } while (needToRecalculateZoom);\n\t                patch.range.from = from;\n\t                patch.range.to = to;\n\t                return patch;\n\t            };\n\t            ChartState.prototype.recalculateYAxis = function(actualData) {\n\t                var patch = {\n\t                    range: {}\n\t                };\n\t                var yAxisRange = actualData.yAxis.range;\n\t                var isInitialize = yAxisRange.scaleFactor == void 0;\n\t                var trends = this.trendsManager;\n\t                var trendsEndXVal = trends.getEndXVal();\n\t                var trendsStartXVal = trends.getStartXVal();\n\t                var xRange = actualData.xAxis.range;\n\t                var xFrom = xRange.from, xTo = xRange.to;\n\t                var xRangeLength = xTo - xFrom;\n\t                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n\t                if (xTo > trendsEndXVal) {\n\t                    xTo = trendsEndXVal;\n\t                    xFrom = xTo - xRangeLength;\n\t                } else if (xFrom < trendsStartXVal) {\n\t                    xFrom = trendsStartXVal;\n\t                    xTo = xFrom + xRangeLength;\n\t                }\n\t                var maxY = trends.getMaxYVal(xFrom, xTo);\n\t                var minY = trends.getMinYVal(xFrom, xTo);\n\t                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n\t                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n\t                    if (trendLastY > maxY) maxY = trendLastY;\n\t                    if (trendLastY < minY) minY = trendLastY;\n\t                }\n\t                if (yAxisRange.isMirrorMode) {\n\t                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n\t                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n\t                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n\t                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n\t                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n\t                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n\t                }\n\t                var margin = yAxisRange.margin;\n\t                var padding = {\n\t                    start: yAxisRange.padding.start + margin.start,\n\t                    end: yAxisRange.padding.end + margin.end\n\t                };\n\t                if (padding.end + padding.start >= actualData.height) {\n\t                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n\t                }\n\t                var rangeLength = maxY - minY;\n\t                var paddingTopInPercents = padding.end / actualData.height;\n\t                var paddingBottomInPercents = padding.start / actualData.height;\n\t                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n\t                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n\t                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n\t                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n\t                if (isInitialize) {\n\t                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n\t                    scaleFactor = actualData.height / (toVal - fromVal);\n\t                    patch = {\n\t                        range: {\n\t                            zeroVal: zeroVal,\n\t                            scaleFactor: scaleFactor\n\t                        }\n\t                    };\n\t                    needToZoom = true;\n\t                } else {\n\t                    scaleFactor = yAxisRange.scaleFactor;\n\t                    zeroVal = yAxisRange.zeroVal;\n\t                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n\t                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n\t                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n\t                }\n\t                if (!needToZoom) return null;\n\t                scroll = fromVal - zeroVal;\n\t                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n\t                var currentAxisRange = this.data.yAxis.range;\n\t                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n\t                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n\t                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n\t                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n\t                return patch;\n\t            };\n\t            ChartState.prototype.zoom = function(zoomValue, origin) {\n\t                var _this = this;\n\t                if (origin === void 0) {\n\t                    origin = .5;\n\t                }\n\t                var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n\t                var newZoom = zoom * zoomValue;\n\t                var currentRange = this.data.width / (scaleFactor * zoom);\n\t                var nextRange = this.data.width / (scaleFactor * newZoom);\n\t                var newScroll = scroll + (currentRange - nextRange) * origin;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            zoom: newZoom,\n\t                            scroll: newScroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            ChartState.prototype.zoomToRange = function(range, origin) {\n\t                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n\t                var currentRange = this.data.width / (scaleFactor * zoom);\n\t                return this.zoom(currentRange / range, origin);\n\t            };\n\t            ChartState.prototype.scrollToEnd = function() {\n\t                var _this = this;\n\t                var state = this.data;\n\t                var endXVal = this.trendsManager.getEndXVal();\n\t                var range = state.xAxis.range;\n\t                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n\t                this.setState({\n\t                    xAxis: {\n\t                        range: {\n\t                            scroll: scroll\n\t                        }\n\t                    }\n\t                });\n\t                return new deps_1.Promise(function(resolve) {\n\t                    var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n\t                    setTimeout(resolve, animationTime * 1e3);\n\t                });\n\t            };\n\t            ChartState.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            ChartState.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            ChartState.prototype.getValueOnXAxis = function(x) {\n\t                return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            ChartState.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n\t            };\n\t            ChartState.prototype.getValueByScreenX = function(x) {\n\t                var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByXAxis(x);\n\t            };\n\t            ChartState.prototype.getValueByScreenY = function(y) {\n\t                var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n\t                return zeroVal + scroll + this.pxToValueByYAxis(y);\n\t            };\n\t            ChartState.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            ChartState.prototype.getScreenYByValue = function(yVal) {\n\t                var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n\t            };\n\t            ChartState.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            ChartState.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            ChartState.prototype.getScreenLeftVal = function() {\n\t                return this.getValueByScreenX(0);\n\t            };\n\t            ChartState.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.data.width);\n\t            };\n\t            ChartState.prototype.getPaddingRight = function() {\n\t                return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n\t            };\n\t            return ChartState;\n\t        }();\n\t        exports.ChartState = ChartState;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(3);\n\t        var EventEmitter = function() {\n\t            function EventEmitter() {\n\t                this.ee = new deps_1.EE2();\n\t            }\n\t            EventEmitter.prototype.emit = function(eventName) {\n\t                var args = [];\n\t                for (var _i = 1; _i < arguments.length; _i++) {\n\t                    args[_i - 1] = arguments[_i];\n\t                }\n\t                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n\t                var _a;\n\t            };\n\t            EventEmitter.prototype.on = function(eventName, callback) {\n\t                return this.ee.on(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.off = function(eventName, callback) {\n\t                return this.ee.off(eventName, callback);\n\t            };\n\t            EventEmitter.prototype.subscribe = function(eventName, callback) {\n\t                var _this = this;\n\t                this.on(eventName, callback);\n\t                return function() {\n\t                    return _this.off(eventName, callback);\n\t                };\n\t            };\n\t            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n\t                this.ee.setMaxListeners(listenersCount);\n\t            };\n\t            EventEmitter.prototype.removeAllListeners = function(eventName) {\n\t                this.ee.removeAllListeners(eventName);\n\t            };\n\t            return EventEmitter;\n\t        }();\n\t        exports.EventEmitter = EventEmitter;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var deps_1 = __webpack_require__(3);\n\t        function deepmerge(target, src, mergeArrays) {\n\t            if (mergeArrays === void 0) {\n\t                mergeArrays = true;\n\t            }\n\t            var array = Array.isArray(src);\n\t            var dst = array && [] || {};\n\t            if (array) {\n\t                target = target || [];\n\t                if (mergeArrays) {\n\t                    dst = dst.concat(target);\n\t                }\n\t                src.forEach(function(e, i) {\n\t                    if (typeof dst[i] === \"undefined\") {\n\t                        dst[i] = e;\n\t                    } else if (typeof e === \"object\") {\n\t                        dst[i] = deepmerge(target[i], e, mergeArrays);\n\t                    } else {\n\t                        if (target.indexOf(e) === -1) {\n\t                            dst.push(e);\n\t                        }\n\t                    }\n\t                });\n\t            } else {\n\t                if (target && typeof target === \"object\") {\n\t                    Object.keys(target).forEach(function(key) {\n\t                        dst[key] = target[key];\n\t                    });\n\t                }\n\t                Object.keys(src).forEach(function(key) {\n\t                    if (typeof src[key] !== \"object\" || !src[key]) {\n\t                        dst[key] = src[key];\n\t                    } else {\n\t                        if (!target[key]) {\n\t                            dst[key] = src[key];\n\t                        } else {\n\t                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t            return dst;\n\t        }\n\t        var Utils = function() {\n\t            function Utils() {}\n\t            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n\t                return deepmerge(obj1, obj2, mergeArrays);\n\t            };\n\t            Utils.deepCopy = function(obj) {\n\t                return JSON.parse(JSON.stringify(obj));\n\t            };\n\t            Utils.toFixed = function(num, digitsCount) {\n\t                var maxDigits = 15;\n\t                var result = \"\";\n\t                var intVal = Math.floor(num);\n\t                var intStr = intVal.toString();\n\t                var lengthDiff = digitsCount - intStr.length;\n\t                if (lengthDiff > 0) {\n\t                    result = \"0\".repeat(lengthDiff) + intStr;\n\t                } else {\n\t                    result = intStr;\n\t                }\n\t                var afterPointDigitsCount = maxDigits - intStr.length;\n\t                var afterPointStr = num.toString().split(\".\")[1];\n\t                if (afterPointStr) {\n\t                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n\t                }\n\t                return result;\n\t            };\n\t            Utils.bindEvent = function() {};\n\t            Utils.createTexture = function(width, height, fn) {\n\t                var canvas = document.createElement(\"canvas\");\n\t                canvas.width = width;\n\t                canvas.height = height;\n\t                var ctx = canvas.getContext(\"2d\");\n\t                fn(ctx);\n\t                var texture = new THREE.Texture(canvas);\n\t                texture.needsUpdate = true;\n\t                return texture;\n\t            };\n\t            Utils.createPixelPerfectTexture = function(width, height, fn) {\n\t                var texture = this.createTexture(width, height, fn);\n\t                texture.minFilter = THREE.NearestFilter;\n\t                return texture;\n\t            };\n\t            Utils.error = function(msg) {\n\t                console.error(\"Chart error: \" + msg);\n\t                throw \"Chart: \" + msg;\n\t            };\n\t            Utils.warn = function(msg) {\n\t                console.warn(\"Chart warning: \" + msg);\n\t            };\n\t            Utils.getUid = function() {\n\t                return this.currentId++;\n\t            };\n\t            Utils.getDistance = function(num1, num2) {\n\t                return Math.max(num1, num2) - Math.min(num1, num2);\n\t            };\n\t            Utils.binarySearchClosestInd = function(arr, num, key) {\n\t                var mid;\n\t                var lo = 0;\n\t                var hi = arr.length - 1;\n\t                while (hi - lo > 1) {\n\t                    mid = Math.floor((lo + hi) / 2);\n\t                    if (arr[mid][key] < num) {\n\t                        lo = mid;\n\t                    } else {\n\t                        hi = mid;\n\t                    }\n\t                }\n\t                if (num - arr[lo][key] <= arr[hi][key] - num) {\n\t                    return lo;\n\t                }\n\t                return hi;\n\t            };\n\t            Utils.binarySearchClosest = function(arr, num, key) {\n\t                var ind = this.binarySearchClosestInd(arr, num, key);\n\t                return arr[ind];\n\t            };\n\t            Utils.rectsIntersect = function(r1, r2) {\n\t                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n\t                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n\t                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n\t                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n\t            };\n\t            /**!\r\n\t\t     * @preserve $.parseColor\r\n\t\t     * Copyright 2011 THEtheChad Elliott\r\n\t\t     * Released under the MIT and GPL licenses.\r\n\t\t     */\n\t            Utils.parseColor = function(color) {\n\t                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n\t                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by $.parseColor\");\n\t                isNaN(cache[3]) && (cache[3] = 1);\n\t                return cache;\n\t            };\n\t            Utils.getHexColor = function(str) {\n\t                var rgb = this.parseColor(str);\n\t                return (rgb[0] << 8 * 2) + (rgb[1] << 8) + rgb[2];\n\t            };\n\t            Utils.throttle = function(func, ms) {\n\t                var isThrottled = false, savedArgs, savedThis;\n\t                function wrapper() {\n\t                    if (isThrottled) {\n\t                        savedArgs = arguments;\n\t                        savedThis = this;\n\t                        return;\n\t                    }\n\t                    func.apply(this, arguments);\n\t                    isThrottled = true;\n\t                    setTimeout(function() {\n\t                        isThrottled = false;\n\t                        if (savedArgs) {\n\t                            wrapper.apply(savedThis, savedArgs);\n\t                            savedArgs = savedThis = null;\n\t                        }\n\t                    }, ms);\n\t                }\n\t                return wrapper;\n\t            };\n\t            Utils.msToTimeString = function(timestamp) {\n\t                var h = Math.floor(timestamp / 36e4);\n\t                var m = Math.floor(timestamp / 6e4);\n\t                var s = Math.floor(timestamp / 1e3);\n\t                return h + \":\" + m + \":\" + s;\n\t            };\n\t            Utils.getRandomItem = function(arr) {\n\t                var ind = Math.floor(Math.random() * arr.length);\n\t                return arr[ind];\n\t            };\n\t            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n\t                if (excludeProps === void 0) {\n\t                    excludeProps = [];\n\t                }\n\t                for (var key in props) {\n\t                    if (excludeProps.indexOf(key) !== -1) continue;\n\t                    if (srcObject[key] == void 0) continue;\n\t                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n\t                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n\t                    } else {\n\t                        dstObject[key] = this.deepCopy(srcObject[key]);\n\t                    }\n\t                }\n\t            };\n\t            Utils.currentId = 1;\n\t            return Utils;\n\t        }();\n\t        exports.Utils = Utils;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        var ChartWidget = function() {\n\t            function ChartWidget(chartState) {\n\t                this.unsubscribers = [];\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            ChartWidget.prototype.bindEvents = function() {};\n\t            ChartWidget.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartWidget.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartWidget.getDefaultOptions = function() {\n\t                return {\n\t                    enabled: true\n\t                };\n\t            };\n\t            ChartWidget.widgetName = \"\";\n\t            return ChartWidget;\n\t        }();\n\t        exports.ChartWidget = ChartWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Trend_1 = __webpack_require__(19);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var EVENTS = {\n\t            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n\t        };\n\t        var TrendsManager = function() {\n\t            function TrendsManager(state, initialState) {\n\t                this.trends = {};\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.chartState = state;\n\t                var trendsCalculatedOptions = {};\n\t                for (var trendName in initialState.trends) {\n\t                    var trend = this.createTrend(state, trendName, initialState);\n\t                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n\t                }\n\t                this.calculatedOptions = trendsCalculatedOptions;\n\t                this.bindEvents();\n\t            }\n\t            TrendsManager.prototype.getTrend = function(trendName) {\n\t                return this.trends[trendName];\n\t            };\n\t            TrendsManager.prototype.getEnabledTrends = function() {\n\t                var enabledTrends = [];\n\t                var allTrends = this.trends;\n\t                for (var trendName in allTrends) {\n\t                    var trend = allTrends[trendName];\n\t                    trend.getOptions().enabled && enabledTrends.push(trend);\n\t                }\n\t                return enabledTrends;\n\t            };\n\t            TrendsManager.prototype.getStartXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                return trends[0].getData()[0].xVal;\n\t            };\n\t            TrendsManager.prototype.getEndXVal = function() {\n\t                var trends = this.getEnabledTrends();\n\t                var firstTrendData = trends[0].getData();\n\t                return firstTrendData[firstTrendData.length - 1].xVal;\n\t            };\n\t            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n\t                var trends = this.getEnabledTrends();\n\t                var compareFn;\n\t                var result;\n\t                if (extremumIsMax) {\n\t                    result = -Infinity;\n\t                    compareFn = Math.max;\n\t                } else {\n\t                    result = Infinity;\n\t                    compareFn = Math.min;\n\t                }\n\t                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n\t                    var trend = trends_1[_i];\n\t                    var trendData = trend.getData(fromX, toX);\n\t                    var trendYValues = trendData.map(function(dataItem) {\n\t                        return dataItem.yVal;\n\t                    });\n\t                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n\t                }\n\t                if (result == Infinity || result == -Infinity) result = NaN;\n\t                return result;\n\t            };\n\t            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(true, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n\t                return this.getExtremumYVal(false, fromX, toX);\n\t            };\n\t            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n\t                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n\t            };\n\t            TrendsManager.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateAppliedHandler();\n\t                });\n\t            };\n\t            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n\t                var _this = this;\n\t                var _loop_1 = function(trendName) {\n\t                    this_1.trends[trendName].segments.onRebuild(function() {\n\t                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n\t                    });\n\t                };\n\t                var this_1 = this;\n\t                for (var trendName in this.trends) {\n\t                    _loop_1(trendName);\n\t                }\n\t            };\n\t            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n\t                var trend = new Trend_1.Trend(state, trendName, initialState);\n\t                this.trends[trendName] = trend;\n\t                return trend;\n\t            };\n\t            return TrendsManager;\n\t        }();\n\t        exports.TrendsManager = TrendsManager;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var TrendSegments_1 = __webpack_require__(20);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var deps_1 = __webpack_require__(3);\n\t        var EVENTS = {\n\t            CHANGE: \"Change\",\n\t            PREPEND_REQUEST: \"prependRequest\"\n\t        };\n\t        (function(TREND_TYPE) {\n\t            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n\t            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n\t        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n\t        var TREND_TYPE = exports.TREND_TYPE;\n\t        var DEFAULT_OPTIONS = {\n\t            enabled: true,\n\t            type: TREND_TYPE.LINE,\n\t            data: [],\n\t            maxSegmentLength: 1e3,\n\t            lineWidth: 2,\n\t            lineColor: 16777215,\n\t            hasGradient: true,\n\t            hasBeacon: false,\n\t            settingsForTypes: {\n\t                CANDLE: {\n\t                    minSegmentLengthInPx: 20,\n\t                    maxSegmentLengthInPx: 40\n\t                },\n\t                LINE: {\n\t                    minSegmentLengthInPx: 2,\n\t                    maxSegmentLengthInPx: 10\n\t                }\n\t            }\n\t        };\n\t        var Trend = function() {\n\t            function Trend(chartState, trendName, initialState) {\n\t                this.minXVal = Infinity;\n\t                this.minYVal = Infinity;\n\t                this.maxXVal = -Infinity;\n\t                this.maxYVal = -Infinity;\n\t                var options = initialState.trends[trendName];\n\t                this.name = trendName;\n\t                this.chartState = chartState;\n\t                this.calculatedOptions = Utils_1.Utils.deepMerge(DEFAULT_OPTIONS, options);\n\t                this.calculatedOptions.name = trendName;\n\t                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n\t                this.calculatedOptions.dataset = [];\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvents();\n\t            }\n\t            Trend.prototype.onInitialStateApplied = function() {\n\t                this.segments = new TrendSegments_1.TrendSegments(this.chartState, this);\n\t            };\n\t            Trend.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var chartState = this.chartState;\n\t                chartState.onInitialStateApplied(function() {\n\t                    return _this.onInitialStateApplied();\n\t                });\n\t                chartState.onScrollStop(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onZoom(function() {\n\t                    return _this.checkForPrependRequest();\n\t                });\n\t                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n\t                });\n\t                chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            Trend.prototype.getCalculatedOptions = function() {\n\t                return this.calculatedOptions;\n\t            };\n\t            Trend.prototype.appendData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData());\n\t                var updatedTrendData = options.data.concat(newData);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.prependData = function(rawData) {\n\t                var options = this.getOptions();\n\t                var newData = Trend.prepareData(rawData, this.getData(), true);\n\t                var updatedTrendData = newData.concat(options.data);\n\t                this.changeData(updatedTrendData, newData);\n\t            };\n\t            Trend.prototype.changeData = function(allData, newData) {\n\t                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n\t                    var item = newData_1[_i];\n\t                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n\t                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n\t                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n\t                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n\t                }\n\t                var options = this.getOptions();\n\t                var statePatch = {\n\t                    trends: (_a = {}, _a[options.name] = {\n\t                        data: allData\n\t                    }, _a)\n\t                };\n\t                this.chartState.setState(statePatch, newData);\n\t                var _a;\n\t            };\n\t            Trend.prototype.getData = function(fromX, toX) {\n\t                var data = this.getOptions().data;\n\t                if (fromX == void 0 && toX == void 0) return data;\n\t                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n\t                toX = toX !== void 0 ? toX : data[data.length].xVal;\n\t                var filteredData = [];\n\t                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n\t                    var item = data_1[_i];\n\t                    if (item.xVal < fromX) continue;\n\t                    if (item.xVal > toX) break;\n\t                    filteredData.push(item);\n\t                }\n\t                return filteredData;\n\t            };\n\t            Trend.prototype.getFirstItem = function() {\n\t                return this.getOptions().data[0];\n\t            };\n\t            Trend.prototype.getLastItem = function() {\n\t                var data = this.getOptions().data;\n\t                return data[data.length - 1];\n\t            };\n\t            Trend.prototype.getOptions = function() {\n\t                return this.chartState.data.trends[this.name];\n\t            };\n\t            Trend.prototype.setOptions = function(options) {\n\t                this.chartState.setState({\n\t                    trends: (_a = {}, _a[this.name] = options, _a)\n\t                });\n\t                var _a;\n\t            };\n\t            Trend.prototype.onPrependRequest = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(EVENTS.CHANGE, cb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, cb);\n\t                };\n\t            };\n\t            Trend.prototype.onDataChange = function(cb) {\n\t                var _this = this;\n\t                var onChangeCb = function(changedOptions, newData) {\n\t                    if (newData) cb(newData);\n\t                };\n\t                this.ee.on(EVENTS.CHANGE, onChangeCb);\n\t                return function() {\n\t                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n\t                };\n\t            };\n\t            Trend.prototype.checkForPrependRequest = function() {\n\t                var _this = this;\n\t                if (this.prependRequest) return;\n\t                var chartState = this.chartState;\n\t                var minXVal = chartState.data.computedData.trends.minXVal;\n\t                var minScreenX = chartState.getScreenXByValue(minXVal);\n\t                var needToRequest = minScreenX > 0;\n\t                var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                var requestedDataLength = to - from;\n\t                if (!needToRequest) return;\n\t                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n\t                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n\t                });\n\t                this.prependRequest.then(function(newData) {\n\t                    _this.prependData(newData);\n\t                    _this.prependRequest = null;\n\t                }, function() {\n\t                    _this.prependRequest = null;\n\t                });\n\t            };\n\t            Trend.prepareData = function(newData, currentData, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var data = [];\n\t                if (typeof newData[0] == \"number\") {\n\t                    currentData = currentData || [];\n\t                    var initialItem = void 0;\n\t                    var xVal = void 0;\n\t                    if (isPrepend) {\n\t                        initialItem = currentData[0];\n\t                        xVal = initialItem.xVal - newData.length;\n\t                    } else {\n\t                        initialItem = currentData[currentData.length - 1];\n\t                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n\t                    }\n\t                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n\t                        var yVal = _a[_i];\n\t                        data.push({\n\t                            xVal: xVal,\n\t                            yVal: yVal,\n\t                            id: Utils_1.Utils.getUid()\n\t                        });\n\t                        xVal++;\n\t                    }\n\t                } else {\n\t                    data = newData;\n\t                }\n\t                return data;\n\t            };\n\t            return Trend;\n\t        }();\n\t        exports.Trend = Trend;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var Vector3 = THREE.Vector3;\n\t        var Trend_1 = __webpack_require__(19);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var MAX_ANIMATED_SEGMENTS = 100;\n\t        var EVENTS = {\n\t            REBUILD: \"rebuild\",\n\t            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n\t            ANIMATION_FRAME: \"animationFrame\"\n\t        };\n\t        var TrendSegments = function() {\n\t            function TrendSegments(chartState, trend) {\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.animatedSegmentsIds = [];\n\t                this.segmentsLength = 0;\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForPrepend = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.trend = trend;\n\t                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n\t                this.tryToRebuildSegments();\n\t                this.bindEvents();\n\t            }\n\t            TrendSegments.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.trend.onChange(function(changedOptions, newData) {\n\t                    return _this.onTrendChangeHandler(changedOptions, newData);\n\t                });\n\t                this.chartState.onZoom(function() {\n\t                    return _this.onZoomHandler();\n\t                });\n\t                this.chartState.onScroll(function() {\n\t                    return _this.recalculateDisplayedRange();\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            TrendSegments.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.appendAnimation && this.appendAnimation.kill();\n\t                this.prependAnimation && this.prependAnimation.kill();\n\t            };\n\t            TrendSegments.prototype.onZoomHandler = function() {\n\t                var segmentsRebuilded = this.tryToRebuildSegments();\n\t                if (!segmentsRebuilded) {\n\t                    this.recalculateDisplayedRange();\n\t                }\n\t            };\n\t            TrendSegments.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n\t                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n\t                if (needToRebuildSegments) {\n\t                    this.tryToRebuildSegments(true);\n\t                    return;\n\t                }\n\t                if (!newData) return;\n\t                var data = this.trend.getData();\n\t                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                isAppend ? this.appendData(newData) : this.prependData(newData);\n\t                this.recalculateDisplayedRange();\n\t            };\n\t            TrendSegments.prototype.getEndSegment = function() {\n\t                return this.segmentsById[this.endSegmentId];\n\t            };\n\t            TrendSegments.prototype.getStartSegment = function() {\n\t                return this.segmentsById[this.startSegmentId];\n\t            };\n\t            TrendSegments.prototype.tryToRebuildSegments = function(force) {\n\t                if (force === void 0) {\n\t                    force = false;\n\t                }\n\t                var options = this.trend.getOptions();\n\t                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n\t                var trendTypesSettings = options.settingsForTypes;\n\t                var trendTypeSettings = trendTypesSettings[trendTypeName];\n\t                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n\t                var needToRebuild = this.segments.length === 0 || force;\n\t                var segmentLength = this.maxSegmentLength;\n\t                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n\t                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n\t                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n\t                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n\t                    needToRebuild = true;\n\t                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n\t                }\n\t                if (!needToRebuild) return false;\n\t                this.maxSegmentLength = segmentLength;\n\t                this.segmentsById = {};\n\t                this.segments = [];\n\t                this.nextEmptyId = 0;\n\t                this.startSegmentId = 0;\n\t                this.endSegmentId = 0;\n\t                this.segmentsLength = 0;\n\t                this.stopAllAnimations();\n\t                this.appendData(null, true);\n\t                this.recalculateDisplayedRange(true);\n\t                this.ee.emit(EVENTS.REBUILD);\n\t            };\n\t            TrendSegments.prototype.stopAllAnimations = function() {\n\t                this.animatedSegmentsIds = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                this.animatedSegmentsForAppend = [];\n\t                if (this.prependAnimation) this.prependAnimation.kill();\n\t                if (this.appendAnimation) this.appendAnimation.kill();\n\t            };\n\t            TrendSegments.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n\t                if (segmentsAreRebuilded === void 0) {\n\t                    segmentsAreRebuilded = false;\n\t                }\n\t                var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n\t                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n\t                var displayedRange = to - from;\n\t                this.firstDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, from - displayedRange, \"startXVal\");\n\t                this.lastDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, to + displayedRange, \"endXVal\");\n\t                if (segmentsAreRebuilded) return;\n\t                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n\t                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n\t            };\n\t            TrendSegments.prototype.getSegmentsForXValues = function(values) {\n\t                var valueInd = 0;\n\t                var value = values[valueInd];\n\t                var lastValueInd = values.length - 1;\n\t                var results = [];\n\t                var segment = this.getStartSegment();\n\t                if (!segment.hasValue) return [];\n\t                while (segment) {\n\t                    while (value < segment.startXVal) {\n\t                        results.push(void 0);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    while (value > segment.endXVal) {\n\t                        segment = segment.getNext();\n\t                        if (!segment) break;\n\t                    }\n\t                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n\t                    if (valueInPoint) {\n\t                        results.push(segment);\n\t                        value = values[++valueInd];\n\t                    }\n\t                    if (valueInd > lastValueInd) break;\n\t                }\n\t                return results;\n\t            };\n\t            TrendSegments.prototype.onAnimationFrame = function(cb) {\n\t                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n\t            };\n\t            TrendSegments.prototype.onRebuild = function(cb) {\n\t                return this.ee.subscribe(EVENTS.REBUILD, cb);\n\t            };\n\t            TrendSegments.prototype.onDisplayedRangeChanged = function(cb) {\n\t                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n\t            };\n\t            TrendSegments.prototype.allocateNextSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var prevSegment = this.segmentsById[this.endSegmentId];\n\t                if (prevSegment && prevSegment.hasValue) {\n\t                    prevSegment.nextId = id;\n\t                    segment.prevId = prevSegment.id;\n\t                }\n\t                this.endSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.push(segment);\n\t                return segment;\n\t            };\n\t            TrendSegments.prototype.allocatePrevSegment = function() {\n\t                var id = this.nextEmptyId++;\n\t                var segment = new TrendSegment(this, id);\n\t                var nextSegment = this.segmentsById[this.startSegmentId];\n\t                if (nextSegment && nextSegment.hasValue) {\n\t                    nextSegment.prevId = id;\n\t                    segment.nextId = nextSegment.id;\n\t                }\n\t                this.startSegmentId = id;\n\t                this.segmentsLength++;\n\t                this.segmentsById[id] = segment;\n\t                this.segments.unshift(segment);\n\t                return segment;\n\t            };\n\t            TrendSegments.prototype.appendData = function(newData, needRebuildSegments) {\n\t                if (needRebuildSegments === void 0) {\n\t                    needRebuildSegments = false;\n\t                }\n\t                var trendData = this.trend.getData();\n\t                if (needRebuildSegments) {\n\t                    newData = trendData;\n\t                    this.animatedSegmentsForAppend = [];\n\t                }\n\t                var startItemInd = trendData.length - newData.length;\n\t                var segment = this.getEndSegment() || this.allocateNextSegment();\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                var itemInd = 0;\n\t                while (itemInd < newData.length) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.appendItem(item);\n\t                    var isLastItem = itemInd == newData.length - 1;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd++;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForAppend.length > 0) {\n\t                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n\t                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForAppend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocateNextSegment();\n\t                    var prevItem = trendData[startItemInd + itemInd - 1];\n\t                    segment.appendItem(prevItem);\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (needRebuildSegments) {\n\t                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n\t                        var segmentId = _a[_i];\n\t                        var segment_1 = this.segmentsById[segmentId];\n\t                        segment_1.currentAnimationState = segment_1.createAnimationState();\n\t                    }\n\t                    this.animatedSegmentsForAppend = [];\n\t                    return;\n\t                }\n\t                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time);\n\t            };\n\t            TrendSegments.prototype.prependData = function(newData) {\n\t                var trendData = this.trend.getData();\n\t                var segment = this.getStartSegment() || this.segmentsById[0];\n\t                var initialSegment = segment.hasValue ? segment : null;\n\t                var itemInd = newData.length - 1;\n\t                var initialAnimationState = segment.createAnimationState();\n\t                while (itemInd >= 0) {\n\t                    var item = newData[itemInd];\n\t                    var itemIsInserted = segment.prependItem(item);\n\t                    var isLastItem = itemInd == 0;\n\t                    if (itemIsInserted) {\n\t                        if (!isLastItem) itemInd--;\n\t                    } else {\n\t                        if (!segment.isCompleted) segment.complete();\n\t                    }\n\t                    if (isLastItem && itemIsInserted) {\n\t                        segment.recalculateItems();\n\t                    }\n\t                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n\t                    if (segmentIsReadyForAnimate) {\n\t                        var id = segment.id;\n\t                        if (!initialSegment) initialSegment = segment;\n\t                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n\t                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n\t                        if (this.animatedSegmentsForPrepend.length > 0) {\n\t                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n\t                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n\t                        }\n\t                        segment.targetAnimationState = segment.createAnimationState();\n\t                        this.animatedSegmentsForPrepend.push(id);\n\t                    }\n\t                    if (isLastItem && itemIsInserted) break;\n\t                    if (!segment.isCompleted) continue;\n\t                    segment = this.allocatePrevSegment();\n\t                    var nextItem = trendData[itemInd + 1];\n\t                    segment.prependItem(nextItem);\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n\t                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n\t                this.animate(time, true);\n\t            };\n\t            TrendSegments.prototype.animate = function(time, isPrepend) {\n\t                var _this = this;\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n\t                if (animation && animation.isActive() || time == 0) {\n\t                    if (animation) animation.kill();\n\t                    this.onAnimationFrameHandler(1, isPrepend);\n\t                    animatedSegmentsIds.length = 0;\n\t                    return;\n\t                }\n\t                var animationsOptions = this.chartState.data.animations;\n\t                var ease = animationsOptions.trendChangeEase;\n\t                var objectToAnimate = {\n\t                    animationValue: 0\n\t                };\n\t                animation = TweenLite.to(objectToAnimate, time, {\n\t                    animationValue: 1,\n\t                    ease: ease\n\t                });\n\t                animation.eventCallback(\"onUpdate\", function() {\n\t                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animatedSegmentsIds.length = 0;\n\t                    _this.appendAnimation = null;\n\t                });\n\t                if (isPrepend) {\n\t                    this.prependAnimation = animation;\n\t                } else {\n\t                    this.appendAnimation = animation;\n\t                }\n\t            };\n\t            TrendSegments.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n\t                if (isPrepend === void 0) {\n\t                    isPrepend = false;\n\t                }\n\t                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n\t                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n\t                    var segmentId = animatedSegmentsIds_1[_i];\n\t                    var segment = this.segmentsById[segmentId];\n\t                    for (var key in segment.targetAnimationState) {\n\t                        var targetValue = segment.targetAnimationState[key];\n\t                        var initialValue = segment.initialAnimationState[key];\n\t                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n\t                        segment.currentAnimationState[key] = currentValue;\n\t                    }\n\t                }\n\t                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n\t                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n\t            };\n\t            return TrendSegments;\n\t        }();\n\t        exports.TrendSegments = TrendSegments;\n\t        var TrendSegment = function() {\n\t            function TrendSegment(trendPoints, id) {\n\t                this.isCompleted = false;\n\t                this.items = [];\n\t                this.initialAnimationState = {};\n\t                this.targetAnimationState = {};\n\t                this.currentAnimationState = {};\n\t                this.trendSegments = trendPoints;\n\t                this.id = id;\n\t                this.maxLength = trendPoints.maxSegmentLength;\n\t            }\n\t            TrendSegment.prototype.createAnimationState = function() {\n\t                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n\t                return {\n\t                    xVal: xVal,\n\t                    yVal: yVal,\n\t                    startXVal: startXVal,\n\t                    startYVal: startYVal,\n\t                    endXVal: endXVal,\n\t                    endYVal: endYVal,\n\t                    maxYVal: maxYVal,\n\t                    minYVal: minYVal,\n\t                    maxLength: maxLength\n\t                };\n\t            };\n\t            TrendSegment.prototype.appendItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.push(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var startXVal = items[0].xVal;\n\t                if (item.xVal - startXVal > this.maxLength) return false;\n\t                items.push(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.prependItem = function(item) {\n\t                if (this.isCompleted) return false;\n\t                var items = this.items;\n\t                if (items.length < 2) {\n\t                    this.items.unshift(item);\n\t                    this.hasValue = true;\n\t                    return true;\n\t                }\n\t                var endXVal = items[items.length - 1].xVal;\n\t                if (endXVal - item.xVal > this.maxLength) return false;\n\t                items.unshift(item);\n\t                return true;\n\t            };\n\t            TrendSegment.prototype.complete = function() {\n\t                this.isCompleted = true;\n\t                this.recalculateItems();\n\t                this.items = [];\n\t            };\n\t            TrendSegment.prototype.recalculateItems = function() {\n\t                var items = this.items;\n\t                var itemsLength = items.length;\n\t                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n\t                var endItem = items[itemsLength - 1];\n\t                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n\t                var startXVal, startYVal;\n\t                var startItem = items[0];\n\t                startXVal = startItem.xVal;\n\t                startYVal = startItem.yVal;\n\t                var minX = Math.min(startXVal, endXVal);\n\t                var maxX = Math.max(startXVal, endXVal);\n\t                var middleXVal = minX + (maxX - minX) / 2;\n\t                var minY = Math.min(startYVal, endYVal);\n\t                var maxY = Math.max(startYVal, endYVal);\n\t                var middleYVal = minY + (maxY - minY) / 2;\n\t                var yVals = items.map(function(item) {\n\t                    return item.yVal;\n\t                });\n\t                this.startXVal = startXVal;\n\t                this.startYVal = startYVal;\n\t                this.endXVal = endXVal;\n\t                this.endYVal = endYVal;\n\t                this.xVal = middleXVal;\n\t                this.yVal = middleYVal;\n\t                this.maxYVal = Math.max.apply(Math, yVals);\n\t                this.minYVal = Math.min.apply(Math, yVals);\n\t                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n\t            };\n\t            TrendSegment.prototype.getNext = function() {\n\t                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n\t                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n\t            };\n\t            TrendSegment.prototype.getPrev = function() {\n\t                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n\t                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n\t            };\n\t            TrendSegment.prototype.getFrameVal = function() {\n\t                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n\t                return new Vector3(xVal, yVal, 0);\n\t            };\n\t            TrendSegment.prototype.getFramePoint = function() {\n\t                var frameVal = this.getFrameVal();\n\t                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n\t            };\n\t            return TrendSegment;\n\t        }();\n\t        exports.TrendSegment = TrendSegment;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Vector3 = THREE.Vector3;\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var Screen = function() {\n\t            function Screen(chartState) {\n\t                this.options = {\n\t                    scrollXVal: 0,\n\t                    scrollX: 0,\n\t                    scrollYVal: 0,\n\t                    scrollY: 0,\n\t                    zoomX: 1,\n\t                    zoomY: 1\n\t                };\n\t                this.currentScrollX = {\n\t                    x: 0\n\t                };\n\t                this.currentScrollY = {\n\t                    y: 0\n\t                };\n\t                this.currentZoomX = {\n\t                    val: 1\n\t                };\n\t                this.currentZoomY = {\n\t                    val: 1\n\t                };\n\t                this.chartState = chartState;\n\t                var _a = chartState.data, w = _a.width, h = _a.height;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.transform({\n\t                    scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n\t                    zoomY: 1\n\t                });\n\t                this.bindEvents();\n\t            }\n\t            Screen.prototype.getCameraSettings = function() {\n\t                var _a = this.chartState.data, w = _a.width, h = _a.height;\n\t                var FOV = 75;\n\t                var vFOV = FOV * (Math.PI / 180);\n\t                return {\n\t                    FOV: FOV,\n\t                    aspect: w / h,\n\t                    near: .1,\n\t                    far: 5e3,\n\t                    z: h / (2 * Math.tan(vFOV / 2)),\n\t                    x: w / 2,\n\t                    y: h / 2\n\t                };\n\t            };\n\t            Screen.prototype.onZoomFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"zoomFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onScrollFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"scrollFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.onTransformationFrame = function(cb) {\n\t                var _this = this;\n\t                var eventName = \"transformationFrame\";\n\t                this.ee.on(eventName, cb);\n\t                return function() {\n\t                    _this.ee.off(eventName, cb);\n\t                };\n\t            };\n\t            Screen.prototype.cameraIsMoving = function() {\n\t                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n\t            };\n\t            Screen.prototype.transform = function(options, silent) {\n\t                if (silent === void 0) {\n\t                    silent = false;\n\t                }\n\t                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n\t                if (scrollX != void 0) this.options.scrollX = scrollX;\n\t                if (scrollY != void 0) this.options.scrollY = scrollY;\n\t                if (zoomX != void 0) this.options.zoomX = zoomX;\n\t                if (zoomY != void 0) this.options.zoomY = zoomY;\n\t                if (scrollX != void 0 || zoomX) {\n\t                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n\t                    this.options.scrollXVal = options.scrollXVal;\n\t                }\n\t                if (scrollY != void 0 || zoomY) {\n\t                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n\t                    this.options.scrollYVal = options.scrollYVal;\n\t                }\n\t                if (silent) return;\n\t                this.ee.emit(\"transformationFrame\", options);\n\t                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n\t                    this.ee.emit(\"scrollFrame\", options);\n\t                }\n\t                if (options.zoomX != void 0 || options.zoomY != void 0) {\n\t                    this.ee.emit(\"zoomFrame\", options);\n\t                }\n\t            };\n\t            Screen.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onChange(function(changedProps) {\n\t                    if (changedProps.xAxis && changedProps.xAxis.range) {\n\t                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n\t                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n\t                    }\n\t                    if (changedProps.yAxis && changedProps.yAxis.range) {\n\t                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n\t                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n\t                    }\n\t                });\n\t                state.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                });\n\t            };\n\t            Screen.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t                this.scrollXAnimation && this.scrollXAnimation.kill();\n\t                this.scrollYAnimation && this.scrollYAnimation.kill();\n\t                this.zoomXAnimation && this.zoomXAnimation.kill();\n\t                this.zoomYAnimation && this.zoomYAnimation.kill();\n\t            };\n\t            Screen.prototype.onScrollXHandler = function(changedProps) {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var isDragMode = state.data.cursor.dragMode;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled && !isDragMode;\n\t                var zoomXChanged = changedProps.xAxis.range.zoom;\n\t                var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n\t                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n\t                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n\t                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n\t                var range = state.data.xAxis.range;\n\t                var targetX = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollX.x = this.options.scrollX;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollX: _this.currentScrollX.x\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n\t                        x: targetX,\n\t                        ease: ease\n\t                    });\n\t                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollX.x = targetX;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onScrollYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n\t                var range = state.data.yAxis.range;\n\t                var targetY = range.scroll * range.scaleFactor * range.zoom;\n\t                this.currentScrollY.y = this.options.scrollY;\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        scrollY: _this.currentScrollY.y\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n\t                        y: targetY,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentScrollY.y = targetY;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomXHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.data.xAxis.range.zoom;\n\t                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomX: _this.currentZoomX.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomX.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.onZoomYHandler = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                var animations = state.data.animations;\n\t                var canAnimate = animations.enabled;\n\t                var time = animations.zoomSpeed;\n\t                var targetZoom = state.data.yAxis.range.zoom;\n\t                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n\t                var cb = function() {\n\t                    _this.transform({\n\t                        zoomY: _this.currentZoomY.val\n\t                    });\n\t                };\n\t                if (canAnimate) {\n\t                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n\t                        val: targetZoom,\n\t                        ease: animations.zoomEase\n\t                    });\n\t                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.currentZoomY.val = targetZoom;\n\t                    cb();\n\t                }\n\t            };\n\t            Screen.prototype.getPointOnXAxis = function(xVal) {\n\t                var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomX;\n\t                return (xVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnYAxis = function(yVal) {\n\t                var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n\t                var zoom = this.options.zoomY;\n\t                return (yVal - zeroVal) * scaleFactor * zoom;\n\t            };\n\t            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n\t                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n\t            };\n\t            Screen.prototype.getValueOnXAxis = function(x) {\n\t                return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.valueToPxByXAxis = function(xVal) {\n\t                return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n\t            };\n\t            Screen.prototype.valueToPxByYAxis = function(yVal) {\n\t                return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n\t            };\n\t            Screen.prototype.pxToValueByXAxis = function(xVal) {\n\t                return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n\t            };\n\t            Screen.prototype.pxToValueByYAxis = function(yVal) {\n\t                return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n\t            };\n\t            Screen.prototype.getValueByScreenX = function(x) {\n\t                return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n\t            };\n\t            Screen.prototype.getValueByScreenY = function(y) {\n\t                return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n\t            };\n\t            Screen.prototype.getScreenXByValue = function(xVal) {\n\t                var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n\t                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n\t            };\n\t            Screen.prototype.getScreenXByPoint = function(xVal) {\n\t                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n\t            };\n\t            Screen.prototype.getPointByScreenX = function(screenX) {\n\t                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n\t            };\n\t            Screen.prototype.getPointByScreenY = function(screenY) {\n\t                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n\t            };\n\t            Screen.prototype.getTop = function() {\n\t                return this.getPointByScreenY(this.chartState.data.height);\n\t            };\n\t            Screen.prototype.getBottom = function() {\n\t                return this.getPointByScreenY(0);\n\t            };\n\t            Screen.prototype.getLeft = function() {\n\t                return this.getPointByScreenX(0);\n\t            };\n\t            Screen.prototype.getScreenRightVal = function() {\n\t                return this.getValueByScreenX(this.chartState.data.width);\n\t            };\n\t            Screen.prototype.getTopVal = function() {\n\t                return this.getValueByScreenY(this.chartState.data.height);\n\t            };\n\t            Screen.prototype.getBottomVal = function() {\n\t                return this.getValueByScreenY(0);\n\t            };\n\t            Screen.prototype.getCenterYVal = function() {\n\t                return this.getValueByScreenY(this.chartState.data.height / 2);\n\t            };\n\t            return Screen;\n\t        }();\n\t        exports.Screen = Screen;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        var AXIS_MARK_DEFAULT_OPTIONS = {\n\t            type: \"simple\",\n\t            lineWidth: 1,\n\t            value: 0,\n\t            showValue: false,\n\t            stickToEdges: false,\n\t            lineColor: \"#FFFFFF\",\n\t            title: \"\"\n\t        };\n\t        var AxisMarks = function() {\n\t            function AxisMarks(chartState, axisType) {\n\t                this.items = {};\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.axisType = axisType;\n\t                var marks = this.items;\n\t                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n\t                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n\t                    var options = axisMarksOptions_1[_i];\n\t                    var axisMark = void 0;\n\t                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\t                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n\t                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n\t                    if (options.type == \"timeleft\") {\n\t                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n\t                    } else {\n\t                        axisMark = new AxisMark(chartState, axisType, options);\n\t                    }\n\t                    marks[options.name] = axisMark;\n\t                }\n\t                this.bindEvents();\n\t            }\n\t            AxisMarks.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, newData);\n\t                });\n\t                this.chartState.onDestroy(function() {\n\t                    return _this.ee.removeAllListeners();\n\t                });\n\t            };\n\t            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n\t                if (!newData) return;\n\t                var startVal = newData[0].xVal;\n\t                var endVal = newData[newData.length - 1].xVal;\n\t                var marks = this.items;\n\t                for (var markName in marks) {\n\t                    var mark = marks[markName];\n\t                    var markVal = mark.options.value;\n\t                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n\t                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n\t                }\n\t            };\n\t            AxisMarks.prototype.getItems = function() {\n\t                return this.items;\n\t            };\n\t            AxisMarks.prototype.getItem = function(markName) {\n\t                return this.items[markName];\n\t            };\n\t            return AxisMarks;\n\t        }();\n\t        exports.AxisMarks = AxisMarks;\n\t        var AxisMark = function() {\n\t            function AxisMark(chartState, axisType, options) {\n\t                this.renderOnTrendsChange = false;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.options = options;\n\t                this.axisType = axisType;\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            AxisMark.prototype.bindEvents = function() {};\n\t            AxisMark.prototype.setOptions = function(newOptions) {\n\t                var value = this.options.value;\n\t                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n\t                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisMark.prototype.getDisplayedVal = function() {\n\t                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n\t                return String(displayedValue !== void 0 ? displayedValue : value);\n\t            };\n\t            AxisMark.prototype.onMarkCrossed = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"markCrossed\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"markCrossed\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"valueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"valueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n\t                var _this = this;\n\t                this.ee.on(\"onDisplayedValueChange\", cb);\n\t                return function() {\n\t                    _this.ee.off(\"onDisplayedValueChange\", cb);\n\t                };\n\t            };\n\t            AxisMark.typeName = \"simple\";\n\t            return AxisMark;\n\t        }();\n\t        exports.AxisMark = AxisMark;\n\t        var AxisTimeleftMark = function(_super) {\n\t            __extends(AxisTimeleftMark, _super);\n\t            function AxisTimeleftMark() {\n\t                _super.apply(this, arguments);\n\t                this.renderOnTrendsChange = true;\n\t            }\n\t            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n\t                var markVal = this.options.value;\n\t                var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n\t                var time = markVal - maxXVal;\n\t                if (time < 0) time = 0;\n\t                return Utils_1.Utils.msToTimeString(time);\n\t            };\n\t            AxisTimeleftMark.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.chartState.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t            };\n\t            AxisTimeleftMark.prototype.onTrendsChange = function() {\n\t                this.ee.emit(\"onDisplayedValueChange\");\n\t            };\n\t            AxisTimeleftMark.typeName = \"timeleft\";\n\t            return AxisTimeleftMark;\n\t        }(AxisMark);\n\t        exports.AxisTimeleftMark = AxisTimeleftMark;\n\t    }, function(module, exports) {\n\t        \"use strict\";\n\t        (function(AXIS_RANGE_TYPE) {\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n\t            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n\t        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n\t        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n\t        (function(AXIS_TYPE) {\n\t            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n\t            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n\t        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n\t        var AXIS_TYPE = exports.AXIS_TYPE;\n\t        (function(AXIS_DATA_TYPE) {\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n\t            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n\t        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n\t        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Mesh = THREE.Mesh;\n\t        var Object3D = THREE.Object3D;\n\t        var Widget_1 = __webpack_require__(17);\n\t        var GridWidget_1 = __webpack_require__(25);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var AxisWidget = function(_super) {\n\t            __extends(AxisWidget, _super);\n\t            function AxisWidget(state) {\n\t                var _this = this;\n\t                _super.call(this, state);\n\t                this.isDestroyed = false;\n\t                this.object3D = new Object3D();\n\t                this.axisXObject = new Object3D();\n\t                this.axisYObject = new Object3D();\n\t                this.object3D.add(this.axisXObject);\n\t                this.object3D.add(this.axisYObject);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }, 1e3);\n\t                this.onScrollChange(state.screen.options.scrollX, state.screen.options.scrollY);\n\t            }\n\t            AxisWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n\t                    _this.onScrollChange(options.scrollX, options.scrollY);\n\t                }), state.screen.onZoomFrame(function(options) {\n\t                    _this.onZoomFrame(options);\n\t                }), state.onDestroy(function() {\n\t                    return _this.onDestroy();\n\t                }), state.onResize(function() {\n\t                    return _this.onResize();\n\t                }));\n\t            };\n\t            AxisWidget.prototype.onDestroy = function() {\n\t                this.isDestroyed = true;\n\t                this.unbindEvents();\n\t            };\n\t            AxisWidget.prototype.onScrollChange = function(x, y) {\n\t                if (y != void 0) {\n\t                    this.axisYObject.position.y = y;\n\t                    this.axisXObject.position.y = y;\n\t                }\n\t                if (x != void 0) {\n\t                    this.axisYObject.position.x = x;\n\t                    this.updateAxisXRequest();\n\t                }\n\t            };\n\t            AxisWidget.prototype.onResize = function() {\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n\t                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n\t            };\n\t            AxisWidget.prototype.setupAxis = function(orientation) {\n\t                var _this = this;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var canvasWidth = 0, canvasHeight = 0;\n\t                if (isXAxis) {\n\t                    this.axisXObject.traverse(function(obj) {\n\t                        return _this.axisXObject.remove(obj);\n\t                    });\n\t                    canvasWidth = visibleWidth * 3;\n\t                    canvasHeight = 50;\n\t                } else {\n\t                    this.axisYObject.traverse(function(obj) {\n\t                        return _this.axisYObject.remove(obj);\n\t                    });\n\t                    canvasWidth = 50;\n\t                    canvasHeight = visibleHeight * 3;\n\t                }\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                    ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n\t                if (isXAxis) {\n\t                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisXObject.add(axisMesh);\n\t                } else {\n\t                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n\t                    this.axisYObject.add(axisMesh);\n\t                }\n\t                this.updateAxis(orientation);\n\t            };\n\t            AxisWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisWidget.prototype.updateAxis = function(orientation) {\n\t                if (this.isDestroyed) return;\n\t                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n\t                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n\t                var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n\t                var axisOptions;\n\t                var axisMesh;\n\t                var axisGridParams;\n\t                if (isXAxis) {\n\t                    axisMesh = this.axisXObject.children[0];\n\t                    axisOptions = this.chartState.data.xAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n\t                } else {\n\t                    axisMesh = this.axisYObject.children[0];\n\t                    axisOptions = this.chartState.data.yAxis;\n\t                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n\t                }\n\t                var geometry = axisMesh.geometry;\n\t                var canvasWidth = geometry.parameters.width;\n\t                var canvasHeight = geometry.parameters.height;\n\t                var texture = axisMesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n\t                if (isXAxis) {\n\t                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n\t                }\n\t                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n\t                var startVal = axisGridParams.start - edgeOffset;\n\t                var endVal = axisGridParams.end + edgeOffset;\n\t                ctx.beginPath();\n\t                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n\t                    var displayedValue = \"\";\n\t                    if (isXAxis) {\n\t                        var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n\t                        ctx.textAlign = \"center\";\n\t                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n\t                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n\t                        } else {\n\t                            displayedValue = Number(val.toFixed(14)).toString();\n\t                        }\n\t                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n\t                    } else {\n\t                        var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n\t                        ctx.textAlign = \"right\";\n\t                        displayedValue = Number(val.toFixed(14)).toString();\n\t                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t                ctx.stroke();\n\t                ctx.closePath();\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisWidget.prototype.onZoomFrame = function(options) {\n\t                if (options.zoomX) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n\t                }\n\t                if (options.zoomY) {\n\t                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n\t                }\n\t            };\n\t            AxisWidget.getDateStr = function(timestamp, gridParams) {\n\t                var sec = 1e3;\n\t                var min = sec * 60;\n\t                var hour = min * 60;\n\t                var day = hour * 60;\n\t                var step = gridParams.step;\n\t                var d = new Date(timestamp);\n\t                var tf = function(num) {\n\t                    return Utils_1.Utils.toFixed(num, 2);\n\t                };\n\t                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n\t            };\n\t            AxisWidget.widgetName = \"Axis\";\n\t            return AxisWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisWidget = AxisWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Vector3 = THREE.Vector3;\n\t        var Widget_1 = __webpack_require__(17);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var GridWidget = function(_super) {\n\t            __extends(GridWidget, _super);\n\t            function GridWidget(chartState) {\n\t                _super.call(this, chartState);\n\t                this.isDestroyed = false;\n\t                var _a = chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                this.gridSizeH = Math.floor(width / xAxis.gridMinSize) * 3;\n\t                this.gridSizeV = Math.floor(height / yAxis.gridMinSize) * 3;\n\t                this.initGrid();\n\t                this.updateGrid();\n\t            }\n\t            GridWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n\t                    return _this.updateGrid();\n\t                }, 1e3);\n\t                this.bindEvent(this.chartState.onScroll(function() {\n\t                    return updateGridThrottled();\n\t                }), this.chartState.screen.onZoomFrame(function(options) {\n\t                    updateGridThrottled();\n\t                    _this.onZoomFrame(options);\n\t                }), this.chartState.onDestroy(function() {\n\t                    _this.isDestroyed = true;\n\t                    _this.unbindEvents();\n\t                }), this.chartState.onResize(function() {\n\t                    _this.updateGrid();\n\t                }));\n\t            };\n\t            GridWidget.prototype.initGrid = function() {\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    opacity: .1,\n\t                    transparent: true\n\t                });\n\t                var xLinesCount = this.gridSizeH;\n\t                var yLinesCount = this.gridSizeV;\n\t                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t                this.lineSegments.position.setZ(-1);\n\t                this.lineSegments.frustumCulled = false;\n\t            };\n\t            GridWidget.prototype.updateGrid = function() {\n\t                if (this.isDestroyed) return;\n\t                var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n\t                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n\t                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n\t                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n\t                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n\t                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n\t                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n\t                var startXVal = axisXGrid.start + gridScrollXVal;\n\t                var startYVal = axisYGrid.start + gridScrollYVal;\n\t                var geometry = this.lineSegments.geometry;\n\t                var vertices = geometry.vertices;\n\t                var lineInd = 0;\n\t                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n\t                    var value = startXVal + i * axisXGrid.step;\n\t                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n\t                    var value = startYVal + i * axisYGrid.step;\n\t                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n\t                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n\t                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n\t                    lineInd++;\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n\t            };\n\t            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chartState;\n\t                var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n\t                var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n\t                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n\t                var chartState = this.chartState;\n\t                var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n\t                var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n\t                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n\t            };\n\t            GridWidget.prototype.onZoomFrame = function(options) {\n\t                var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n\t                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n\t                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n\t            };\n\t            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n\t                var axisRange = axisOptions.range;\n\t                var from = axisRange.from;\n\t                var to = axisRange.to;\n\t                var axisLength = to - from;\n\t                var gridStep = 0;\n\t                var gridStepInPixels = 0;\n\t                var minGridStepInPixels = axisOptions.gridMinSize;\n\t                var axisLengthStr = String(axisLength);\n\t                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n\t                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n\t                var gridStepFound = false;\n\t                var digitPos = 0;\n\t                while (!gridStepFound) {\n\t                    var power = intPartLength - digitPos - 1;\n\t                    var multiplier = Math.pow(10, power) || 1;\n\t                    var dividers = [ 1, 2, 5 ];\n\t                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n\t                        var nextGridStep = multiplier / dividers[dividerInd];\n\t                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n\t                        if (nextGridStepInPixels >= minGridStepInPixels) {\n\t                            gridStep = nextGridStep;\n\t                            gridStepInPixels = nextGridStepInPixels;\n\t                        } else {\n\t                            gridStepFound = true;\n\t                            if (gridStep === 0) {\n\t                                gridStep = nextGridStep;\n\t                                gridStepInPixels = nextGridStepInPixels;\n\t                            }\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!gridStepFound) digitPos++;\n\t                }\n\t                var gridStart = Math.floor(from / gridStep) * gridStep;\n\t                var gridEnd = Math.floor(to / gridStep) * gridStep;\n\t                return {\n\t                    start: gridStart,\n\t                    end: gridEnd,\n\t                    step: gridStep,\n\t                    stepInPx: gridStepInPixels,\n\t                    length: gridEnd - gridStart,\n\t                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n\t                };\n\t            };\n\t            GridWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            GridWidget.widgetName = \"Grid\";\n\t            return GridWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.GridWidget = GridWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Trend_1 = __webpack_require__(19);\n\t        var TrendsLoadingWidget = function(_super) {\n\t            __extends(TrendsLoadingWidget, _super);\n\t            function TrendsLoadingWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLoading;\n\t            };\n\t            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n\t            return TrendsLoadingWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n\t        var TrendLoading = function(_super) {\n\t            __extends(TrendLoading, _super);\n\t            function TrendLoading(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.isActive = false;\n\t                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendLoading.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                this.deactivate();\n\t            }\n\t            TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n\t                return trendOptions.enabled && chartState.data.animations.enabled;\n\t            };\n\t            TrendLoading.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendLoading.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.onPrependRequest(function() {\n\t                    return _this.activate();\n\t                }));\n\t            };\n\t            TrendLoading.prototype.prependData = function() {\n\t                this.deactivate();\n\t            };\n\t            TrendLoading.prototype.activate = function() {\n\t                var mesh = this.mesh;\n\t                mesh.material.opacity = 1;\n\t                mesh.rotation.z = 0;\n\t                var animation = TweenLite.to(this.mesh.rotation, .5, {\n\t                    z: Math.PI * 2\n\t                });\n\t                animation.eventCallback(\"onComplete\", function() {\n\t                    animation.restart();\n\t                });\n\t                this.animation = animation;\n\t                this.isActive = true;\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.deactivate = function() {\n\t                this.animation && this.animation.kill();\n\t                this.mesh.material.opacity = 0;\n\t                this.isActive = false;\n\t            };\n\t            TrendLoading.createTexture = function() {\n\t                var h = 64, w = 64;\n\t                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                    ctx.lineWidth = 5;\n\t                    var center = h / 2;\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n\t                    ctx.stroke();\n\t                    ctx.beginPath();\n\t                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n\t                    ctx.stroke();\n\t                });\n\t            };\n\t            TrendLoading.prototype.onZoomFrame = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendLoading.prototype.updatePosition = function() {\n\t                if (!this.isActive) return;\n\t                var trend = this.trend;\n\t                var segment = trend.segments.getStartSegment();\n\t                var x, y;\n\t                if (trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n\t                    x = segment.currentAnimationState.startXVal;\n\t                    y = segment.currentAnimationState.startYVal;\n\t                } else {\n\t                    x = segment.currentAnimationState.xVal - segment.maxLength;\n\t                    y = segment.currentAnimationState.yVal;\n\t                }\n\t                var pointVector = this.chartState.screen.getPointOnChart(x, y);\n\t                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n\t            };\n\t            return TrendLoading;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLoading = TrendLoading;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(17);\n\t        var Object3D = THREE.Object3D;\n\t        var TrendsWidget = function(_super) {\n\t            __extends(TrendsWidget, _super);\n\t            function TrendsWidget(state) {\n\t                _super.call(this, state);\n\t                this.widgets = {};\n\t                this.object3D = new Object3D();\n\t                this.onTrendsChange();\n\t            }\n\t            TrendsWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                var state = this.chartState;\n\t                state.onTrendsChange(function() {\n\t                    return _this.onTrendsChange();\n\t                });\n\t                state.onTrendChange(function(trendName, changedOptions, newData) {\n\t                    _this.onTrendChange(trendName, changedOptions, newData);\n\t                });\n\t            };\n\t            TrendsWidget.prototype.onTrendsChange = function() {\n\t                var trendsOptions = this.chartState.data.trends;\n\t                var TrendWidgetClass = this.getTrendWidgetClass();\n\t                for (var trendName in trendsOptions) {\n\t                    var trendOptions = trendsOptions[trendName];\n\t                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n\t                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n\t                        this.createTrendWidget(trendName);\n\t                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n\t                        this.destroyTrendWidget(trendName);\n\t                    }\n\t                }\n\t            };\n\t            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n\t                var widget = this.widgets[trendName];\n\t                if (!widget) return;\n\t                widget.onTrendChange(changedOptions);\n\t                if (newData) {\n\t                    var data = this.chartState.getTrend(trendName).getData();\n\t                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n\t                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n\t                }\n\t            };\n\t            TrendsWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n\t                var WidgetConstructor = this.getTrendWidgetClass();\n\t                var widget = new WidgetConstructor(this.chartState, trendName);\n\t                this.widgets[trendName] = widget;\n\t                var widgetObject = widget.getObject3D();\n\t                widgetObject.name = trendName;\n\t                this.object3D.add(widget.getObject3D());\n\t            };\n\t            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n\t                this.widgets[trendName].onDestroy();\n\t                delete this.widgets[trendName];\n\t                var widgetObject = this.object3D.getObjectByName(trendName);\n\t                this.object3D.remove(widgetObject);\n\t            };\n\t            return TrendsWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.TrendsWidget = TrendsWidget;\n\t        var TrendWidget = function() {\n\t            function TrendWidget(chartState, trendName) {\n\t                this.chartState = chartState;\n\t                this.trendName = trendName;\n\t                this.unsubscribers = [];\n\t                this.trend = chartState.trendsManager.getTrend(trendName);\n\t                this.chartState = chartState;\n\t                this.bindEvents();\n\t            }\n\t            TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n\t                return trendOptions.enabled;\n\t            };\n\t            TrendWidget.prototype.appendData = function(newData) {};\n\t            TrendWidget.prototype.prependData = function(newData) {};\n\t            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n\t            TrendWidget.prototype.onDestroy = function() {\n\t                for (var _i = 0, _a = this.unsubscribers; _i < _a.length; _i++) {\n\t                    var unsubscriber = _a[_i];\n\t                    unsubscriber();\n\t                }\n\t            };\n\t            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n\t            TrendWidget.prototype.onZoomFrame = function(options) {};\n\t            TrendWidget.prototype.onTransformationFrame = function(options) {};\n\t            TrendWidget.prototype.onZoom = function() {};\n\t            TrendWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.trend.segments.onAnimationFrame(function(trendPoints) {\n\t                    return _this.onSegmentsAnimate(trendPoints);\n\t                }));\n\t                this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n\t                    return _this.onTransformationFrame(options);\n\t                }));\n\t                this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n\t                    return _this.onZoomFrame(options);\n\t                }));\n\t                this.bindEvent(this.chartState.onZoom(function() {\n\t                    return _this.onZoom();\n\t                }));\n\t            };\n\t            TrendWidget.prototype.bindEvent = function(unsubscriber) {\n\t                this.unsubscribers.push(unsubscriber);\n\t            };\n\t            return TrendWidget;\n\t        }();\n\t        exports.TrendWidget = TrendWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(17);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Line = THREE.Line;\n\t        var Mesh = THREE.Mesh;\n\t        var interfaces_1 = __webpack_require__(23);\n\t        var AxisMarksWidget = function(_super) {\n\t            __extends(AxisMarksWidget, _super);\n\t            function AxisMarksWidget(chartState) {\n\t                _super.call(this, chartState);\n\t                this.axisMarksWidgets = [];\n\t                this.object3D = new Object3D();\n\t                var xAxisMarks = chartState.xAxisMarks, yAxisMarks = chartState.yAxisMarks;\n\t                var items = xAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t                items = yAxisMarks.getItems();\n\t                for (var markName in items) {\n\t                    this.createAxisMark(items[markName]);\n\t                }\n\t            }\n\t            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n\t                var axisMarkWidget = new AxisMarkWidget(this.chartState, axisMark);\n\t                this.axisMarksWidgets.push(axisMarkWidget);\n\t                this.object3D.add(axisMarkWidget.getObject3D());\n\t            };\n\t            AxisMarksWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.bindEvent(this.chartState.screen.onTransformationFrame(function() {\n\t                    return _this.updateMarksPositions();\n\t                }), this.chartState.onResize(function() {\n\t                    return _this.updateMarksPositions();\n\t                }));\n\t            };\n\t            AxisMarksWidget.prototype.updateMarksPositions = function() {\n\t                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n\t                    var widget = _a[_i];\n\t                    widget.updatePosition();\n\t                }\n\t            };\n\t            AxisMarksWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarksWidget.widgetName = \"AxisMarks\";\n\t            return AxisMarksWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.AxisMarksWidget = AxisMarksWidget;\n\t        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n\t            var axisMark = axisMarkWidget.axisMark;\n\t            ctx.fillStyle = axisMark.options.lineColor;\n\t            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n\t            var xCoord = 15;\n\t            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n\t                ctx.textAlign = \"end\";\n\t                xCoord = axisMarkWidget.indicatorWidth;\n\t            }\n\t            ctx.fillText(axisMark.options.title, xCoord, 20);\n\t            if (!axisMark.options.showValue) return;\n\t            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n\t            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n\t        };\n\t        var INDICATOR_POS_Z = .1;\n\t        var AxisMarkWidget = function() {\n\t            function AxisMarkWidget(chartState, axisMark) {\n\t                this.indicatorWidth = 128;\n\t                this.indicatorHeight = 64;\n\t                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n\t                this.chartState = chartState;\n\t                this.axisMark = axisMark;\n\t                this.axisType = axisMark.axisType;\n\t                this.frameValue = axisMark.options.value;\n\t                this.object3D = new Object3D();\n\t                this.object3D.position.setZ(-.1);\n\t                this.line = this.createLine();\n\t                this.object3D.add(this.line);\n\t                this.indicator = this.createIndicator();\n\t                this.object3D.add(this.indicator);\n\t                this.renderIndicator();\n\t                this.updatePosition();\n\t                this.bindEvents();\n\t            }\n\t            AxisMarkWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            AxisMarkWidget.prototype.createLine = function() {\n\t                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n\t                var lineGeometry = new Geometry();\n\t                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n\t                return new Line(lineGeometry, new LineBasicMaterial({\n\t                    color: Utils_1.Utils.getHexColor(lineColor),\n\t                    linewidth: lineWidth\n\t                }));\n\t            };\n\t            AxisMarkWidget.prototype.createIndicator = function() {\n\t                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"10px Arial\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n\t            };\n\t            AxisMarkWidget.prototype.renderIndicator = function() {\n\t                var texture = this.indicator.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n\t                texture.needsUpdate = true;\n\t            };\n\t            AxisMarkWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                this.axisMark.onDisplayedValueChange(function() {\n\t                    return _this.renderIndicator();\n\t                });\n\t                this.axisMark.onValueChange(function() {\n\t                    return _this.onValueChangeHandler();\n\t                });\n\t            };\n\t            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n\t                var _this = this;\n\t                if (this.moveAnimation) this.moveAnimation.kill();\n\t                var animations = this.chartState.data.animations;\n\t                var targetValue = this.axisMark.options.value;\n\t                var cb = function() {\n\t                    _this.updatePosition();\n\t                };\n\t                if (animations.enabled) {\n\t                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n\t                        frameValue: targetValue,\n\t                        ease: animations.trendChangeEase\n\t                    });\n\t                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n\t                } else {\n\t                    this.frameValue = targetValue;\n\t                    cb();\n\t                }\n\t            };\n\t            AxisMarkWidget.prototype.updatePosition = function() {\n\t                var chartState = this.chartState;\n\t                var screen = chartState.screen;\n\t                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n\t                var lineGeometry = this.line.geometry;\n\t                var hasStickMode = this.axisMark.options.stickToEdges;\n\t                var _a = this.chartState.data, width = _a.width, height = _a.height;\n\t                if (isXAxis) {\n\t                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n\t                    this.object3D.position.y = screen.getBottom();\n\t                    lineGeometry.vertices[1].setY(height);\n\t                    this.indicator.position.set(this.indicatorWidth / 2, chartState.data.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n\t                } else {\n\t                    var val = this.frameValue;\n\t                    var bottomVal = screen.getBottomVal();\n\t                    var topVal = screen.getTopVal();\n\t                    var needToStickOnTop = hasStickMode && val > topVal;\n\t                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n\t                    var centerYVal = screen.getCenterYVal();\n\t                    this.object3D.position.x = screen.getLeft();\n\t                    if (needToStickOnTop) {\n\t                        this.object3D.position.y = screen.getTop();\n\t                    } else if (needToStickOnBottom) {\n\t                        this.object3D.position.y = screen.getBottom();\n\t                    } else {\n\t                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n\t                    }\n\t                    lineGeometry.vertices[1].setX(width);\n\t                    var indicatorPosY = val > centerYVal ? -35 : 10;\n\t                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n\t                }\n\t                lineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            AxisMarkWidget.typeName = \"simple\";\n\t            return AxisMarkWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Widget_1 = __webpack_require__(17);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Vector3 = THREE.Vector3;\n\t        var BorderWidget = function(_super) {\n\t            __extends(BorderWidget, _super);\n\t            function BorderWidget(chartState) {\n\t                _super.call(this, chartState);\n\t                var _a = chartState.data, width = _a.width, height = _a.height;\n\t                var geometry = new THREE.Geometry();\n\t                var material = new THREE.LineBasicMaterial({\n\t                    linewidth: 1,\n\t                    opacity: 0,\n\t                    transparent: true\n\t                });\n\t                geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, height, 0), new Vector3(0, height, 0), new Vector3(width, height, 0), new Vector3(width, height, 0), new Vector3(width, 0, 0), new Vector3(width, 0, 0), new Vector3(0, 0, 0), new Vector3(width / 2, height, 0), new Vector3(width / 2, 0, 0));\n\t                this.lineSegments = new LineSegments(geometry, material);\n\t            }\n\t            BorderWidget.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            BorderWidget.widgetName = \"Border\";\n\t            return BorderWidget;\n\t        }(Widget_1.ChartWidget);\n\t        exports.BorderWidget = BorderWidget;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Mesh = THREE.Mesh;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Color = THREE.Color;\n\t        var CANVAS_WIDTH = 128;\n\t        var CANVAS_HEIGHT = 64;\n\t        var OFFSET_X = 15;\n\t        var TrendsIndicatorWidget = function(_super) {\n\t            __extends(TrendsIndicatorWidget, _super);\n\t            function TrendsIndicatorWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendIndicator;\n\t            };\n\t            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n\t            return TrendsIndicatorWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n\t        var TrendIndicator = function(_super) {\n\t            __extends(TrendIndicator, _super);\n\t            function TrendIndicator(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.initObject();\n\t                this.onTrendChange();\n\t            }\n\t            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasIndicator;\n\t            };\n\t            TrendIndicator.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendIndicator.prototype.onTrendChange = function() {\n\t                var trendData = this.trend.getData();\n\t                var lastItem = trendData[trendData.length - 1];\n\t                var texture = this.mesh.material.map;\n\t                var ctx = texture.image.getContext(\"2d\");\n\t                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n\t                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n\t                texture.needsUpdate = true;\n\t            };\n\t            TrendIndicator.prototype.initObject = function() {\n\t                var color = new Color(this.trend.getOptions().lineColor);\n\t                var texture = Utils_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.font = \"15px Arial\";\n\t                    ctx.fillStyle = color.getStyle();\n\t                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n\t                });\n\t                var material = new THREE.MeshBasicMaterial({\n\t                    map: texture,\n\t                    side: THREE.FrontSide\n\t                });\n\t                material.transparent = true;\n\t                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n\t            };\n\t            TrendIndicator.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n\t                this.segment = segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendIndicator.prototype.updatePosition = function() {\n\t                var state = this.chartState;\n\t                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n\t                var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n\t                var screenWidth = state.data.width;\n\t                var x = endPointVector.x + OFFSET_X;\n\t                var y = endPointVector.y;\n\t                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n\t                if (indicatorIsOutOfScreen) {\n\t                    if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n\t                    if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n\t                    y -= 25;\n\t                }\n\t                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n\t            };\n\t            return TrendIndicator;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendIndicator = TrendIndicator;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Geometry = THREE.Geometry;\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Vector3 = THREE.Vector3;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var LineSegments = THREE.LineSegments;\n\t        var Trend_1 = __webpack_require__(19);\n\t        var Utils_1 = __webpack_require__(16);\n\t        var MAX_DISPLAYED_SEGMENTS = 2e3;\n\t        var TrendsLineWidget = function(_super) {\n\t            __extends(TrendsLineWidget, _super);\n\t            function TrendsLineWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendLine;\n\t            };\n\t            TrendsLineWidget.widgetName = \"TrendsLine\";\n\t            return TrendsLineWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsLineWidget = TrendsLineWidget;\n\t        var TrendLine = function(_super) {\n\t            __extends(TrendLine, _super);\n\t            function TrendLine(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeSegmentsInds = [];\n\t                this.displayedSegments = {};\n\t                var options = this.trend.getOptions();\n\t                this.material = new LineBasicMaterial({\n\t                    color: options.lineColor,\n\t                    linewidth: options.lineWidth\n\t                });\n\t                this.initLine();\n\t            }\n\t            TrendLine.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendLine.prototype.getObject3D = function() {\n\t                return this.lineSegments;\n\t            };\n\t            TrendLine.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segments.onRebuild(function() {\n\t                    _this.destroySegments();\n\t                    _this.setupSegments();\n\t                }));\n\t                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n\t                    _this.setupSegments();\n\t                }));\n\t            };\n\t            TrendLine.prototype.initLine = function() {\n\t                var geometry = new Geometry();\n\t                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.lineSegments = new LineSegments(geometry, this.material);\n\t                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.lineSegments.frustumCulled = false;\n\t                for (var i = 0; i < MAX_DISPLAYED_SEGMENTS; i++) {\n\t                    geometry.vertices.push(new Vector3(), new Vector3());\n\t                    this.freeSegmentsInds.push(i);\n\t                }\n\t                this.vertices = geometry.vertices;\n\t                this.setupSegments();\n\t            };\n\t            TrendLine.prototype.setupSegments = function() {\n\t                var geometry = this.lineSegments.geometry;\n\t                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.displayedSegments) {\n\t                    var lineSegment = this.displayedSegments[segmentId];\n\t                    var segment_1 = this.trend.segments.segments[lineSegment.segmentId];\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupSegment(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                if (!lineSegment) {\n\t                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n\t                    var ind = this.freeSegmentsInds.pop();\n\t                    lineSegment = this.displayedSegments[segmentId] = {\n\t                        segmentId: segmentId,\n\t                        ind: ind\n\t                    };\n\t                }\n\t                var segmentInd = lineSegment.ind;\n\t                var lineStartVertex = this.vertices[segmentInd * 2];\n\t                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n\t                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n\t                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n\t            };\n\t            TrendLine.prototype.destroySegments = function() {\n\t                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n\t            };\n\t            TrendLine.prototype.destroySegment = function(segmentId) {\n\t                var lineSegment = this.displayedSegments[segmentId];\n\t                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n\t                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n\t                lineStartVertex.set(0, 0, 0);\n\t                lineEndVertex.set(0, 0, 0);\n\t                delete this.displayedSegments[segmentId];\n\t                this.freeSegmentsInds.push(lineSegment.ind);\n\t            };\n\t            TrendLine.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.lineSegments.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                var geometry = this.lineSegments.geometry;\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.displayedSegments[segmentId]) continue;\n\t                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n\t                }\n\t                geometry.verticesNeedUpdate = true;\n\t            };\n\t            TrendLine.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            TrendLine.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendLine;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendLine = TrendLine;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Object3D = THREE.Object3D;\n\t        var Geometry = THREE.Geometry;\n\t        var Vector3 = THREE.Vector3;\n\t        var Mesh = THREE.Mesh;\n\t        var Line = THREE.Line;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var PlaneGeometry = THREE.PlaneGeometry;\n\t        var Trend_1 = __webpack_require__(19);\n\t        var LineBasicMaterial = THREE.LineBasicMaterial;\n\t        var Utils_1 = __webpack_require__(16);\n\t        var RISE_COLOR = 2927680;\n\t        var FALL_COLOR = 15619379;\n\t        var MARGIN_PERCENT = .3;\n\t        var MAX_CANDLES = 100;\n\t        var TrendsCandlesWidget = function(_super) {\n\t            __extends(TrendsCandlesWidget, _super);\n\t            function TrendsCandlesWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendCandlesWidget;\n\t            };\n\t            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n\t            return TrendsCandlesWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n\t        var TrendCandlesWidget = function(_super) {\n\t            __extends(TrendCandlesWidget, _super);\n\t            function TrendCandlesWidget(chartState, trendName) {\n\t                _super.call(this, chartState, trendName);\n\t                this.freeCandlesInds = [];\n\t                this.candlesPool = [];\n\t                this.candles = {};\n\t                this.initObject();\n\t            }\n\t            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n\t            };\n\t            TrendCandlesWidget.prototype.getObject3D = function() {\n\t                return this.object3D;\n\t            };\n\t            TrendCandlesWidget.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.trend.segments.onRebuild(function() {\n\t                    _this.destroyCandles();\n\t                    _this.setupCandles();\n\t                }));\n\t                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n\t                    _this.setupCandles();\n\t                }));\n\t            };\n\t            TrendCandlesWidget.prototype.initObject = function() {\n\t                var stateData = this.chartState.data;\n\t                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n\t                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n\t                this.scaleXFactor = scaleXFactor;\n\t                this.scaleYFactor = scaleYFactor;\n\t                this.object3D = new Object3D();\n\t                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n\t                this.object3D.frustumCulled = false;\n\t                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n\t                this.setupCandles();\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandles = function() {\n\t                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n\t                for (var segmentId in this.candles) {\n\t                    var segment_1 = this.candles[segmentId].segment;\n\t                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n\t                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n\t                }\n\t                var segment = firstDisplayedSegment;\n\t                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n\t                    this.setupCandle(segment.id, segment.currentAnimationState);\n\t                    segment = segment.getNext();\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandles = function() {\n\t                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n\t            };\n\t            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n\t                var candle = this.candles[segmentId];\n\t                this.object3D.remove(candle.getObject3D());\n\t                delete this.candles[segmentId];\n\t            };\n\t            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n\t                var currentScale = this.object3D.scale;\n\t                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n\t                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n\t            };\n\t            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n\t                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n\t                    var segmentId = _a[_i];\n\t                    if (!this.candles[segmentId]) continue;\n\t                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n\t                    this.setupCandle(segmentId, segmentState);\n\t                }\n\t            };\n\t            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n\t                var candleInd = candleId % MAX_CANDLES;\n\t                var candle = this.candlesPool[candleInd];\n\t                if (!candle) {\n\t                    candle = this.candlesPool[candleInd] = new CandleWidget();\n\t                }\n\t                if (!this.candles[candleId]) {\n\t                    this.candles[candleId] = candle;\n\t                    this.object3D.add(candle.getObject3D());\n\t                }\n\t                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n\t                candle.setSegment(segmentState);\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n\t                return xVal - this.chartState.data.xAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n\t                return yVal - this.chartState.data.yAxis.range.zeroVal;\n\t            };\n\t            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n\t                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n\t            };\n\t            return TrendCandlesWidget;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendCandlesWidget = TrendCandlesWidget;\n\t        var CandleWidget = function() {\n\t            function CandleWidget() {\n\t                this.initObject();\n\t            }\n\t            CandleWidget.prototype.getObject3D = function() {\n\t                return this.rect;\n\t            };\n\t            CandleWidget.prototype.setSegment = function(segment) {\n\t                this.segment = segment;\n\t                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n\t                var geometry = this.rect.geometry;\n\t                var material = this.rect.material;\n\t                var width = segment.endXVal - segment.startXVal;\n\t                width -= width * MARGIN_PERCENT;\n\t                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n\t                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n\t                leftTop.set(-width / 2, height / 2, 0);\n\t                rightTop.set(width / 2, height / 2, 0);\n\t                leftBottom.set(-width / 2, -height / 2, 0);\n\t                rightBottom.set(width / 2, -height / 2, 0);\n\t                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n\t                    leftBottom.setY(leftBottom.y + 1);\n\t                    rightBottom.setY(rightBottom.y + 1);\n\t                }\n\t                material.color.set(color);\n\t                geometry.verticesNeedUpdate = true;\n\t                var vLineGeometry = this.vLine.geometry;\n\t                var vLineMaterial = this.vLine.material;\n\t                var lineTop = segment.maxYVal - segment.yVal;\n\t                var lineBottom = segment.minYVal - segment.yVal;\n\t                vLineGeometry.vertices[0].set(0, lineTop, 0);\n\t                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n\t                vLineMaterial.color.set(color);\n\t                vLineGeometry.verticesNeedUpdate = true;\n\t                var hLineGeometry = this.hLine.geometry;\n\t                var hLineMaterial = this.hLine.material;\n\t                var lineLeft = -width / 2;\n\t                var lineRight = width / 2;\n\t                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n\t                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n\t                hLineMaterial.color.set(color);\n\t                hLineGeometry.verticesNeedUpdate = true;\n\t            };\n\t            CandleWidget.prototype.initObject = function() {\n\t                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n\t                var vLineGeometry = new Geometry();\n\t                var hLineGeometry = new Geometry();\n\t                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n\t                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n\t                    linewidth: 1\n\t                }));\n\t                this.rect.add(this.vLine);\n\t                this.rect.add(this.hLine);\n\t            };\n\t            return CandleWidget;\n\t        }();\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var __extends = this && this.__extends || function(d, b) {\n\t            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t            function __() {\n\t                this.constructor = d;\n\t            }\n\t            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t        };\n\t        var Utils_1 = __webpack_require__(16);\n\t        var Mesh = THREE.Mesh;\n\t        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n\t        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n\t        var TrendsWidget_1 = __webpack_require__(27);\n\t        var Trend_1 = __webpack_require__(19);\n\t        var TrendsBeaconWidget = function(_super) {\n\t            __extends(TrendsBeaconWidget, _super);\n\t            function TrendsBeaconWidget() {\n\t                _super.apply(this, arguments);\n\t            }\n\t            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n\t                return TrendBeacon;\n\t            };\n\t            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n\t            return TrendsBeaconWidget;\n\t        }(TrendsWidget_1.TrendsWidget);\n\t        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n\t        var TrendBeacon = function(_super) {\n\t            __extends(TrendBeacon, _super);\n\t            function TrendBeacon(state, trendName) {\n\t                _super.call(this, state, trendName);\n\t                this.initObject();\n\t                if (state.data.animations.enabled) {\n\t                    this.animate();\n\t                }\n\t                this.updatePosition();\n\t            }\n\t            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n\t                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n\t            };\n\t            TrendBeacon.prototype.getObject3D = function() {\n\t                return this.mesh;\n\t            };\n\t            TrendBeacon.prototype.onTrendChange = function() {\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.bindEvents = function() {\n\t                var _this = this;\n\t                _super.prototype.bindEvents.call(this);\n\t                this.bindEvent(this.chartState.onScroll(function() {\n\t                    return _this.updatePosition();\n\t                }));\n\t                this.bindEvent(this.chartState.onChange(function(changedProps) {\n\t                    return _this.onStateChange(changedProps);\n\t                }));\n\t                this.bindEvent(this.chartState.onDestroy(function() {\n\t                    return _this.stopAnimation();\n\t                }));\n\t            };\n\t            TrendBeacon.prototype.initObject = function() {\n\t                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture(),\n\t                    transparent: true\n\t                }));\n\t                light.scale.set(.2, .2, 1);\n\t                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n\t                    map: TrendBeacon.createTexture()\n\t                })));\n\t                this.segment = this.trend.segments.getEndSegment();\n\t            };\n\t            TrendBeacon.prototype.animate = function() {\n\t                var _this = this;\n\t                this.animated = true;\n\t                var object = this.mesh;\n\t                var animationObject = {\n\t                    scale: object.scale.x,\n\t                    opacity: object.material.opacity\n\t                };\n\t                this.mesh.scale.set(.1, .1, 1);\n\t                setTimeout(function() {\n\t                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n\t                        scale: 1,\n\t                        opacity: 0\n\t                    });\n\t                    animation.eventCallback(\"onUpdate\", function() {\n\t                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n\t                        object.material.opacity = animationObject.opacity;\n\t                    }).eventCallback(\"onComplete\", function() {\n\t                        _this.animation && animation.restart();\n\t                    });\n\t                }, 500);\n\t            };\n\t            TrendBeacon.prototype.stopAnimation = function() {\n\t                this.animated = false;\n\t                this.animation && this.animation.kill();\n\t                this.animation = null;\n\t            };\n\t            TrendBeacon.createTexture = function() {\n\t                var h = 32, w = 32;\n\t                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n\t                    ctx.beginPath();\n\t                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n\t                    ctx.fillStyle = \"white\";\n\t                    ctx.fill();\n\t                });\n\t            };\n\t            TrendBeacon.prototype.onTransformationFrame = function() {\n\t                this.segment = this.trend.segments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n\t                this.segment = trendsSegments.getEndSegment();\n\t                this.updatePosition();\n\t            };\n\t            TrendBeacon.prototype.onStateChange = function(changedProps) {\n\t                if (!changedProps.animations) return;\n\t                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n\t                if (changedProps.animations.enabled) {\n\t                    this.animate();\n\t                } else {\n\t                    this.stopAnimation();\n\t                }\n\t            };\n\t            TrendBeacon.prototype.updatePosition = function() {\n\t                var state = this.chartState;\n\t                var xVal, yVal;\n\t                var currentAnimationState = this.segment.currentAnimationState;\n\t                if (this.trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n\t                    xVal = currentAnimationState.endXVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                } else {\n\t                    xVal = currentAnimationState.xVal;\n\t                    yVal = currentAnimationState.endYVal;\n\t                }\n\t                var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n\t                var screenWidth = state.data.width;\n\t                var x = endPointVector.x;\n\t                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n\t                if (screenX < 0) x = state.screen.getPointByScreenX(0);\n\t                if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n\t                this.mesh.position.set(x, endPointVector.y, .1);\n\t            };\n\t            return TrendBeacon;\n\t        }(TrendsWidget_1.TrendWidget);\n\t        exports.TrendBeacon = TrendBeacon;\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        function __export(m) {\n\t            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t        }\n\t        __export(__webpack_require__(3));\n\t    }, function(module, exports, __webpack_require__) {\n\t        \"use strict\";\n\t        var Utils_1 = __webpack_require__(16);\n\t        var EventEmmiter_1 = __webpack_require__(15);\n\t        exports.DEFAULT_CONFIG = {\n\t            installPluginWidgets: true\n\t        };\n\t        var ChartPlugin = function() {\n\t            function ChartPlugin(options, config) {\n\t                if (config === void 0) {\n\t                    config = {};\n\t                }\n\t                this.unsubscribers = [];\n\t                this.initialState = options;\n\t                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n\t                this.name = this.constructor.NAME;\n\t                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n\t            }\n\t            ChartPlugin.prototype.setupChartState = function(chartState) {\n\t                var _this = this;\n\t                this.chartState = chartState;\n\t                this.ee = new EventEmmiter_1.EventEmitter();\n\t                this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n\t                    return _this.onInitialStateAppliedHandler(initialState);\n\t                }), this.chartState.onReady(function() {\n\t                    return _this.onChartReadyHandler();\n\t                }), this.chartState.onDestroy(function() {\n\t                    return _this.onDestroyHandler();\n\t                }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n\t                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n\t                }));\n\t            };\n\t            ChartPlugin.prototype.getOptions = function() {\n\t                return this.chartState.data.pluginsState[this.name];\n\t            };\n\t            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n\t            ChartPlugin.prototype.onChartReadyHandler = function() {};\n\t            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n\t            ChartPlugin.prototype.onDestroyHandler = function() {\n\t                this.ee.removeAllListeners();\n\t            };\n\t            ChartPlugin.prototype.bindEvent = function() {\n\t                var args = [];\n\t                for (var _i = 0; _i < arguments.length; _i++) {\n\t                    args[_i - 0] = arguments[_i];\n\t                }\n\t                var unsubscribers = [];\n\t                if (!Array.isArray(args[0])) {\n\t                    unsubscribers.push(args[0]);\n\t                } else {\n\t                    unsubscribers.push.apply(unsubscribers, args);\n\t                }\n\t                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n\t                var _a;\n\t            };\n\t            ChartPlugin.prototype.unbindEvents = function() {\n\t                this.unsubscribers.forEach(function(unsubscriber) {\n\t                    return unsubscriber();\n\t                });\n\t                this.unsubscribers.length = 0;\n\t            };\n\t            ChartPlugin.NAME = \"\";\n\t            ChartPlugin.pluginWidgets = [];\n\t            return ChartPlugin;\n\t        }();\n\t        exports.ChartPlugin = ChartPlugin;\n\t    } ]);\n\t});\n\t\n\t\n\t//# sourceMappingURL=ThreeChart.js.map\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __extends = (this && this.__extends) || function (d, b) {\r\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n\t    function __() { this.constructor = d; }\r\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n\t};\r\n\tvar three_chart_1 = __webpack_require__(2);\r\n\tvar Geometry = THREE.Geometry;\r\n\tvar Mesh = THREE.Mesh;\r\n\tvar Object3D = THREE.Object3D;\r\n\tvar TrendsMarksPlugin_1 = __webpack_require__(1);\r\n\tvar MAX_MARKS_IN_ROW = 3;\r\n\t/**\r\n\t * widget for drawing trends marks for all trends\r\n\t */\r\n\tvar TrendsMarksWidget = (function (_super) {\r\n\t    __extends(TrendsMarksWidget, _super);\r\n\t    function TrendsMarksWidget() {\r\n\t        _super.apply(this, arguments);\r\n\t    }\r\n\t    TrendsMarksWidget.prototype.getTrendWidgetClass = function () {\r\n\t        return TrendMarksWidget;\r\n\t    };\r\n\t    TrendsMarksWidget.widgetName = \"TrendsMarks\";\r\n\t    return TrendsMarksWidget;\r\n\t}(three_chart_1.TrendsWidget));\r\n\texports.TrendsMarksWidget = TrendsMarksWidget;\r\n\t/**\r\n\t * widget for drawing trend marks for one trend\r\n\t */\r\n\tvar TrendMarksWidget = (function (_super) {\r\n\t    __extends(TrendMarksWidget, _super);\r\n\t    function TrendMarksWidget(chartState, trendName) {\r\n\t        _super.call(this, chartState, trendName);\r\n\t        this.marksWidgets = {};\r\n\t        this.object3D = new Object3D();\r\n\t        this.onMarksChange();\r\n\t    }\r\n\t    TrendMarksWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarksWidget.prototype.bindEvents = function () {\r\n\t        var _this = this;\r\n\t        _super.prototype.bindEvents.call(this);\r\n\t        this.getTrendsMarksPlugin().onChange(function () { return _this.onMarksChange(); });\r\n\t    };\r\n\t    TrendMarksWidget.prototype.getTrendsMarksPlugin = function () {\r\n\t        return this.chartState.getPlugin(TrendsMarksPlugin_1.TrendsMarksPlugin.NAME);\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onMarksChange = function () {\r\n\t        var marksItems = this.getTrendsMarksPlugin().getItems();\r\n\t        var widgets = this.marksWidgets;\r\n\t        var actualMarksNames = [];\r\n\t        for (var markName in marksItems) {\r\n\t            actualMarksNames.push(markName);\r\n\t            if (!widgets[markName])\r\n\t                this.createMarkWidget(marksItems[markName]);\r\n\t        }\r\n\t        for (var markName in this.marksWidgets) {\r\n\t            if (actualMarksNames.indexOf(markName) !== -1)\r\n\t                continue;\r\n\t            this.destroyMarkWidget(markName);\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.createMarkWidget = function (mark) {\r\n\t        if (!mark.segment)\r\n\t            return;\r\n\t        var markWidget = new TrendMarkWidget(this.chartState, mark);\r\n\t        this.marksWidgets[mark.options.name] = markWidget;\r\n\t        this.object3D.add(markWidget.getObject3D());\r\n\t    };\r\n\t    TrendMarksWidget.prototype.destroyMarkWidget = function (markName) {\r\n\t        this.object3D.remove(this.marksWidgets[markName].getObject3D());\r\n\t        delete this.marksWidgets[markName];\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onZoomFrame = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onZoomFrameHandler();\r\n\t        }\r\n\t    };\r\n\t    TrendMarksWidget.prototype.onSegmentsAnimate = function () {\r\n\t        var widgets = this.marksWidgets;\r\n\t        for (var markName in widgets) {\r\n\t            widgets[markName].onSegmentsAnimate();\r\n\t        }\r\n\t    };\r\n\t    return TrendMarksWidget;\r\n\t}(three_chart_1.TrendWidget));\r\n\texports.TrendMarksWidget = TrendMarksWidget;\r\n\t/**\r\n\t * widget for drawing one trend mark\r\n\t */\r\n\tvar TrendMarkWidget = (function () {\r\n\t    function TrendMarkWidget(chartState, trendMark) {\r\n\t        this.markHeight = 74;\r\n\t        this.markWidth = 150;\r\n\t        this.position = { lineHeight: 30, x: 0, y: 0 };\r\n\t        this.chartState = chartState;\r\n\t        this.mark = trendMark;\r\n\t        this.initObject();\r\n\t        this.show();\r\n\t    }\r\n\t    TrendMarkWidget.prototype.initObject = function () {\r\n\t        this.object3D = new Object3D();\r\n\t        this.markMesh = this.createMarkMesh();\r\n\t        this.line = this.createMarkLine();\r\n\t        this.object3D.add(this.markMesh);\r\n\t        this.object3D.add(this.line);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.createMarkMesh = function () {\r\n\t        var _a = this, markHeight = _a.markHeight, markWidth = _a.markWidth;\r\n\t        var mark = this.mark.options;\r\n\t        var isTopSide = mark.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP;\r\n\t        var texture = three_chart_1.Utils.createPixelPerfectTexture(markWidth, markHeight, function (ctx) {\r\n\t            var circleOffset = isTopSide ? 30 : 0;\r\n\t            var circleR = 22;\r\n\t            var circleX = markWidth / 2;\r\n\t            var circleY = circleOffset + circleR;\r\n\t            var textOffset = isTopSide ? 10 : circleR * 2 + 15;\r\n\t            // title and description\r\n\t            ctx.beginPath();\r\n\t            ctx.textAlign = 'center';\r\n\t            ctx.font = \"11px Arial\";\r\n\t            ctx.fillStyle = 'rgba(255,255,255, 0.6)';\r\n\t            ctx.fillText(mark.title, circleX, textOffset);\r\n\t            ctx.fillStyle = mark.descriptionColor;\r\n\t            ctx.fillText(mark.description, circleX, textOffset + 12);\r\n\t            // icon circle\r\n\t            ctx.beginPath();\r\n\t            ctx.fillStyle = mark.iconColor;\r\n\t            ctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\r\n\t            ctx.fill();\r\n\t            // icon text\r\n\t            ctx.font = \"19px Arial\";\r\n\t            ctx.fillStyle = 'rgb(255, 255, 255)';\r\n\t            ctx.fillText(mark.icon, circleX, circleY + 7);\r\n\t        });\r\n\t        var material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.FrontSide });\r\n\t        material.transparent = true;\r\n\t        var mesh = new Mesh(new THREE.PlaneGeometry(markWidth, markHeight), material);\r\n\t        var offset = this.mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP ? this.mark.offset : -this.mark.offset;\r\n\t        // mesh.position.setY(markHeight / 2 + offset);\r\n\t        return mesh;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.createMarkLine = function () {\r\n\t        var lineGeometry = new Geometry();\r\n\t        lineGeometry.vertices.push(new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, this.mark.offset, 0));\r\n\t        lineGeometry.computeLineDistances();\r\n\t        var lineMaterial = new THREE.LineDashedMaterial({ dashSize: 1, gapSize: 4, transparent: true, opacity: 0.6 });\r\n\t        var line = new THREE.Line(lineGeometry, lineMaterial);\r\n\t        line.position.setZ(-0.1);\r\n\t        return line;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.getObject3D = function () {\r\n\t        return this.object3D;\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onSegmentsAnimate = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.onZoomFrameHandler = function () {\r\n\t        this.updatePosition();\r\n\t    };\r\n\t    TrendMarkWidget.prototype.updatePosition = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        var mark = this.mark;\r\n\t        var meshMaterial = this.markMesh.material;\r\n\t        var lineMaterial = this.line.material;\r\n\t        if (mark.row >= MAX_MARKS_IN_ROW - 1) {\r\n\t            meshMaterial.opacity = 0;\r\n\t            lineMaterial.opacity = 0;\r\n\t        }\r\n\t        else {\r\n\t            meshMaterial.opacity = 1;\r\n\t            lineMaterial.opacity = 1;\r\n\t        }\r\n\t        var screen = this.chartState.screen;\r\n\t        var posX = screen.getPointOnXAxis(mark.xVal);\r\n\t        var posY = screen.getPointOnYAxis(mark.yVal);\r\n\t        var lineGeometry = this.line.geometry;\r\n\t        if (mark.options.orientation == TrendsMarksPlugin_1.TREND_MARK_SIDE.TOP) {\r\n\t            this.markMesh.position.setY(this.markHeight / 2 + mark.offset);\r\n\t            lineGeometry.vertices[1].setY(mark.offset);\r\n\t        }\r\n\t        else {\r\n\t            this.markMesh.position.setY(-mark.offset - this.markHeight / 2);\r\n\t            lineGeometry.vertices[1].setY(-mark.offset);\r\n\t        }\r\n\t        lineGeometry.verticesNeedUpdate = true;\r\n\t        lineGeometry.lineDistancesNeedUpdate = true;\r\n\t        lineGeometry.computeLineDistances();\r\n\t        this.object3D.position.set(posX, posY, 0);\r\n\t    };\r\n\t    TrendMarkWidget.prototype.show = function () {\r\n\t        if (!this.mark.segment)\r\n\t            return;\r\n\t        this.updatePosition();\r\n\t        var animations = this.chartState.data.animations;\r\n\t        var time = animations.enabled ? 1 : 0;\r\n\t        this.object3D.scale.set(0.01, 0.01, 1);\r\n\t        TweenLite.to(this.object3D.scale, time, { x: 1, y: 1, ease: Elastic.easeOut });\r\n\t    };\r\n\t    return TrendMarkWidget;\r\n\t}());\r\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0c485c696d4c3d6592cb\n **/","export * from './TrendsMarksPlugin';\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/index.ts\n **/","\nimport Vector3 = THREE.Vector3;\nimport { ChartPlugin, ChartWidget, TrendSegment, TREND_TYPE, Utils, ChartState } from 'three-chart';\nimport { TrendsMarksWidget } from './TrendsMarksWidget';\n\nexport enum TREND_MARK_SIDE {TOP, BOTTOM}\nexport enum EVENTS {CHANGE}\nexport type TTrendsMarksPluginOptions = {items: ITrendMarkOptions[]};\n\nexport interface ITrendMarkOptions {\n\ttrendName: string,\n\tvalue: number,\n\tname?: string,\n\ttitle?: string\n\tdescription?: string,\n\tdescriptionColor?: string,\n\ticon?: string,\n\ticonColor?: string,\n\torientation?: TREND_MARK_SIDE,\n\twidth?: number,\n\theight?: number,\n\t/**\n\t * min distance between trend and mark\n\t */\n\toffset?: number,\n\t/**\n\t * space between marks\n\t */\n\tmargin?: number\n}\n\nconst AXIS_MARK_DEFAULT_OPTIONS: ITrendMarkOptions = {\n\ttrendName: '',\n\ttitle: '',\n\tdescription: '',\n\tdescriptionColor: 'rgb(40,136,75)',\n\tvalue: 0,\n\ticonColor: 'rgb(255, 102, 217)',\n\torientation: TREND_MARK_SIDE.TOP,\n\twidth: 65,\n\theight: 80,\n\toffset: 40,\n\tmargin: 20\n};\n\n\nexport class TrendsMarksPlugin extends ChartPlugin {\n\tstatic NAME = 'TrendsMarks';\n\tstatic pluginWidgets = [TrendsMarksWidget] as typeof ChartWidget[];\n\n\tprivate items: {[name: string]: TrendMark} = {};\n\tprivate rects: {[name: string]: number[]} = {};\n\n\tconstructor(trendsMarksPluginOptions: TTrendsMarksPluginOptions) {\n\t\tsuper(trendsMarksPluginOptions);\n\t}\n\n\tprotected onInitialStateApplied() {\n\t\tthis.bindEvents();\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tprotected onStateChanged() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\n\tgetOptions(): TTrendsMarksPluginOptions {\n\t\treturn super.getOptions() as TTrendsMarksPluginOptions;\n\t}\n\n\tgetItems() {\n\t\treturn this.items;\n\t}\n\n\tgetItem(markName: string) {\n\t\treturn this.items[markName];\n\t}\n\n\tcreateMark(options: ITrendMarkOptions) {\n\t\tvar marksOptions = this.getOptions().items;\n\t\tvar newMarkOptions = marksOptions.concat([options]);\n\t\tthis.chartState.setState({pluginsState: {[this.name]: {items: newMarkOptions}}});\n\t}\n\n\tonChange(cb: () => any) {\n\t\treturn this.ee.subscribe(EVENTS[EVENTS.CHANGE], cb);\n\t}\n\n\tprotected bindEvents() {\n\t\tthis.chartState.trendsManager.onSegmentsRebuilded(() => this.updateMarksSegments());\n\t\tthis.chartState.screen.onZoomFrame(() => this.calclulateMarksPositions());\n\t}\n\n\tprotected onInitialStateAppliedHandler() {\n\t\tthis.onMarksChangeHandler();\n\t}\n\n\tprivate onMarksChangeHandler() {\n\t\tvar trendsMarksOptions = this.getOptions().items;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let options of trendsMarksOptions) {\n\t\t\tvar marks = this.items;\n\n\t\t\t// set mark name\n\t\t\tif (!options.name) {\n\t\t\t\toptions.name = Utils.getUid().toString();\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tif (marks[options.name]) Utils.error('duplicated mark name ' + options.name);\n\t\t\t} else if (marks[options.name]) {\n\t\t\t\tactualMarksNames.push(options.name);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\toptions = Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n\n\t\t\tlet mark = new TrendMark(this.chartState, options);\n\t\t\tmarks[options.name] = mark;\n\t\t}\n\n\t\t// delete not relevant marks\n\t\tfor (let markName in this.items) {\n\t\t\tif (actualMarksNames.indexOf(markName) != -1) continue;\n\t\t\tdelete this.items[markName];\n\t\t}\n\t\tthis.updateMarksSegments();\n\t\tthis.ee.emit(EVENTS[EVENTS.CHANGE]);\n\t}\n\n\n\tprivate calclulateMarksPositions() {\n\t\tthis.rects = {};\n\t\tfor (let markName in this.items) {\n\t\t\tthis.createMarkRect(this.items[markName]);\n\t\t}\n\t}\n\n\tprivate createMarkRect(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\n\t\tlet state = this.chartState;\n\t\tlet options = mark.options;\n\t\tlet {width, height, offset, name} = options;\n\t\tlet left = state.getPointOnXAxis(mark.xVal) - width / 2;\n\t\tlet top = state.getPointOnYAxis(mark.yVal);\n\t\tlet isTopSideMark = options.orientation == TREND_MARK_SIDE.TOP;\n\t\tlet newOffset: number;\n\t\tlet row = 0;\n\n\t\tif (isTopSideMark) {\n\t\t\ttop += offset + height;\n\t\t} else {\n\t\t\ttop -= offset;\n\t\t}\n\n\t\tlet markRect = [left, top, width, height];\n\t\tlet hasIntersection = false;\n\t\tdo {\n\t\t\tfor (let markName in this.rects) {\n\t\t\t\tlet rect = this.rects[markName];\n\t\t\t\thasIntersection = Utils.rectsIntersect(rect, markRect);\n\t\t\t\tif (!hasIntersection) continue;\n\t\t\t\tif (isTopSideMark) {\n\t\t\t\t\tmarkRect[1] = rect[1] + markRect[3] + options.margin;\n\t\t\t\t} else {\n\t\t\t\t\tmarkRect[1] = rect[1] - rect[3] - options.margin;\n\t\t\t\t}\n\t\t\t\trow++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (hasIntersection);\n\n\t\tif (isTopSideMark) {\n\t\t\tnewOffset = markRect[1] - markRect[3] - state.getPointOnYAxis(mark.yVal);\n\t\t} else {\n\t\t\tnewOffset = state.getPointOnYAxis(mark.yVal) - markRect[1];\n\t\t}\n\n\t\tmark._setOffset(newOffset);\n\t\tmark._setRow(row);\n\t\tthis.rects[name] = markRect;\n\t}\n\n\tprivate updateMarksSegments() {\n\t\tlet chartState = this.chartState;\n\t\tlet trends = chartState.trendsManager.trends;\n\t\tfor (let trendName in trends) {\n\t\t\tvar marks = this.getTrendMarks(trendName);\n\t\t\tvar marksArr: TrendMark[] = [];\n\t\t\tvar xVals: number[] = [];\n\t\t\tfor (let markName in marks) {\n\t\t\t\tlet mark = marks[markName];\n\t\t\t\txVals.push(mark.options.value);\n\t\t\t\tmarksArr.push(mark);\n\t\t\t\tmark._setSegment(null);\n\t\t\t}\n\t\t\tmarksArr.sort((a, b) => a.options.value - b.options.value);\n\t\t\tlet trend = chartState.getTrend(trendName);\n\t\t\tlet points = trend.segments.getSegmentsForXValues(xVals.sort((a, b) => a - b));\n\t\t\tfor (let markInd = 0; markInd < marksArr.length; markInd++) {\n\t\t\t\tmarksArr[markInd]._setSegment(points[markInd]);\n\t\t\t}\n\t\t}\n\t\tthis.calclulateMarksPositions();\n\t}\n\n\tprivate getTrendMarks(trendName: string): TrendMark[] {\n\t\tlet trendMarks: TrendMark[] = [];\n\t\tfor (let markName in this.items) {\n\t\t\tif (this.items[markName].options.trendName != trendName) continue;\n\t\t\ttrendMarks.push(this.items[markName]);\n\t\t}\n\t\treturn trendMarks;\n\t}\n\n}\n\nexport class TrendMark {\n\toptions: ITrendMarkOptions;\n\tsegment: TrendSegment;\n\txVal: number;\n\tyVal: number;\n\toffset: number;\n\trow = 0;\n\tprotected chartState: ChartState;\n\n\tconstructor(chartState: ChartState, options: ITrendMarkOptions) {\n\t\tthis.options = options;\n\t\tthis.chartState = chartState;\n\t}\n\n\n\t/**\n\t * only for internal usage\n\t */\n\t_setSegment(segment: TrendSegment) {\n\t\tthis.segment = segment;\n\t\tif (!segment) return;\n\n\t\tlet trend = this.chartState.getTrend(this.options.trendName)\n\n\t\tif (trend.getOptions().type == TREND_TYPE.LINE) {\n\t\t\tthis.xVal = segment.endXVal;\n\t\t\tthis.yVal = segment.endYVal;\n\t\t} else if (this.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.maxYVal;\n\t\t} else {\n\t\t\tthis.xVal = segment.xVal;\n\t\t\tthis.yVal = segment.minYVal;\n\t\t}\n\t}\n\n\t_setOffset(offset: number) {\n\t\tthis.offset = offset;\n\t}\n\n\t_setRow(row: number) {\n\t\tthis.row = row;\n\t}\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksPlugin.ts\n **/","module.exports = require(\"./ThreeChart\")\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-chart/build/index.js\n ** module id = 2\n ** module chunks = 0\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n    if (typeof exports === \"object\" && typeof module === \"object\") module.exports = factory(); else if (typeof define === \"function\" && define.amd) define([], factory); else if (typeof exports === \"object\") exports[\"ThreeChart\"] = factory(); else root[\"ThreeChart\"] = factory();\n})(this, function() {\n    return function(modules) {\n        var installedModules = {};\n        function __webpack_require__(moduleId) {\n            if (installedModules[moduleId]) return installedModules[moduleId].exports;\n            var module = installedModules[moduleId] = {\n                exports: {},\n                id: moduleId,\n                loaded: false\n            };\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n            module.loaded = true;\n            return module.exports;\n        }\n        __webpack_require__.m = modules;\n        __webpack_require__.c = installedModules;\n        __webpack_require__.p = \"\";\n        return __webpack_require__(0);\n    }([ function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(1));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(2));\n        __export(__webpack_require__(23));\n        __export(__webpack_require__(22));\n        __export(__webpack_require__(21));\n        __export(__webpack_require__(14));\n        __export(__webpack_require__(19));\n        __export(__webpack_require__(20));\n        __export(__webpack_require__(18));\n        __export(__webpack_require__(16));\n        __export(__webpack_require__(17));\n        __export(__webpack_require__(35));\n        __export(__webpack_require__(27));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        __webpack_require__(3);\n        var PerspectiveCamera = THREE.PerspectiveCamera;\n        var State_1 = __webpack_require__(14);\n        var Utils_1 = __webpack_require__(16);\n        var AxisWidget_1 = __webpack_require__(24);\n        var GridWidget_1 = __webpack_require__(25);\n        var TrendsLoadingWidget_1 = __webpack_require__(26);\n        var AxisMarksWidget_1 = __webpack_require__(28);\n        var BorderWidget_1 = __webpack_require__(29);\n        var TrendsIndicatorWidget_1 = __webpack_require__(30);\n        var TrendsLineWidget_1 = __webpack_require__(31);\n        var TrendsCandleWidget_1 = __webpack_require__(32);\n        var TrendsBeaconWidget_1 = __webpack_require__(33);\n        var deps_1 = __webpack_require__(34);\n        exports.MAX_DATA_LENGTH = 2692e3;\n        var Chart = function() {\n            function Chart(state, $container, plugins) {\n                var _this = this;\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.widgets = [];\n                if (!THREE || !THREE.REVISION) Utils_1.Utils.error(\"three.js not found\");\n                if (!$container) {\n                    Utils_1.Utils.error(\"$el must be set\");\n                }\n                var style = getComputedStyle($container);\n                state.width = parseInt(style.width);\n                state.height = parseInt(style.height);\n                this.state = new State_1.ChartState(state, Chart.installedWidgets, plugins);\n                this.zoomThrottled = Utils_1.Utils.throttle(function(zoomValue, origin) {\n                    return _this.zoom(zoomValue, origin);\n                }, 200);\n                this.$container = $container;\n                this.init($container);\n            }\n            Chart.installWidget = function(Widget) {\n                if (!Widget.widgetName) {\n                    Utils_1.Utils.error(\"unnamed widget\");\n                }\n                this.installedWidgets[Widget.widgetName] = Widget;\n            };\n            Chart.prototype.init = function($container) {\n                var state = this.state;\n                var _a = state.data, w = _a.width, h = _a.height, showStats = _a.showStats, autoRender = _a.autoRender;\n                this.scene = new THREE.Scene();\n                this.isStopped = !autoRender.enabled;\n                var renderer = this.renderer = new Chart.renderers[this.state.data.renderer]({\n                    antialias: true,\n                    alpha: true\n                });\n                renderer.setPixelRatio(Chart.devicePixelRatio);\n                renderer.setClearColor(state.data.backgroundColor, state.data.backgroundOpacity);\n                renderer.setSize(w, h);\n                $container.appendChild(renderer.domElement);\n                this.$el = renderer.domElement;\n                this.$el.style.display = \"block\";\n                if (showStats) {\n                    this.stats = new Stats();\n                    $container.appendChild(this.stats.domElement);\n                }\n                this.setupCamera();\n                var widgetsClasses = this.state.widgetsClasses;\n                for (var widgetName in widgetsClasses) {\n                    var widgetOptions = this.state.data.widgets[widgetName];\n                    if (!widgetOptions.enabled) continue;\n                    var WidgetConstructor = widgetsClasses[widgetName];\n                    var widget = new WidgetConstructor(this.state);\n                    this.scene.add(widget.getObject3D());\n                    this.widgets.push(widget);\n                }\n                this.bindEvents();\n                this.renderLoop();\n            };\n            Chart.prototype.renderLoop = function() {\n                var _this = this;\n                if (this.isDestroyed) return;\n                this.stats && this.stats.begin();\n                this.render();\n                if (this.isStopped) return;\n                var fpsLimit = this.state.data.autoRender.fps;\n                if (fpsLimit) {\n                    var delay = 1e3 / fpsLimit;\n                    setTimeout(function() {\n                        return requestAnimationFrame(function() {\n                            return _this.renderLoop();\n                        });\n                    }, delay);\n                } else {\n                    requestAnimationFrame(function() {\n                        return _this.renderLoop();\n                    });\n                }\n                this.stats && this.stats.end();\n            };\n            Chart.prototype.render = function() {\n                this.renderer.render(this.scene, this.camera);\n            };\n            Chart.prototype.stop = function() {\n                this.isStopped = true;\n            };\n            Chart.prototype.run = function() {\n                this.isStopped = false;\n                this.renderLoop();\n            };\n            Chart.prototype.destroy = function() {\n                this.isDestroyed = true;\n                this.stop();\n                this.state.destroy();\n                this.unbindEvents();\n                try {\n                    this.renderer.forceContextLoss();\n                } catch (wtf) {}\n                this.renderer.context = null;\n                this.renderer.domElement = null;\n                this.renderer = null;\n            };\n            Chart.prototype.getState = function() {\n                return this.state.data;\n            };\n            Chart.prototype.getTrend = function(trendName) {\n                return this.state.getTrend(trendName);\n            };\n            Chart.prototype.setState = function(state) {\n                return this.state.setState(state);\n            };\n            Chart.prototype.bindEvents = function() {\n                var _this = this;\n                var $el = this.$el;\n                if (this.state.data.controls.enabled) {\n                    $el.addEventListener(\"mousewheel\", function(ev) {\n                        _this.onMouseWheel(ev);\n                    });\n                    $el.addEventListener(\"mousemove\", function(ev) {\n                        _this.onMouseMove(ev);\n                    });\n                    $el.addEventListener(\"mousedown\", function(ev) {\n                        return _this.onMouseDown(ev);\n                    });\n                    $el.addEventListener(\"mouseup\", function(ev) {\n                        return _this.onMouseUp(ev);\n                    });\n                    $el.addEventListener(\"touchmove\", function(ev) {\n                        _this.onTouchMove(ev);\n                    });\n                    $el.addEventListener(\"touchend\", function(ev) {\n                        _this.onTouchEnd(ev);\n                    });\n                }\n                if (this.state.data.autoResize) {\n                    this.resizeSensor = new deps_1.ResizeSensor(this.$container, function() {\n                        _this.onChartContainerResizeHandler(_this.$container.clientWidth, _this.$container.clientHeight);\n                    });\n                }\n                this.unsubscribers = [ this.state.onTrendsChange(function() {\n                    return _this.autoscroll();\n                }), this.state.screen.onTransformationFrame(function(options) {\n                    return _this.onScreenTransformHandler(options);\n                }), this.state.onResize(function(options) {\n                    return _this.onChartResize();\n                }) ];\n            };\n            Chart.prototype.unbindEvents = function() {\n                try {\n                    this.resizeSensor && this.resizeSensor.detach();\n                } catch (e) {}\n                this.$el.remove();\n                this.unsubscribers.forEach(function(unsubscribe) {\n                    return unsubscribe();\n                });\n            };\n            Chart.prototype.setupCamera = function() {\n                var camSettings = this.state.screen.getCameraSettings();\n                if (!this.camera) {\n                    this.camera = new PerspectiveCamera(camSettings.FOV, camSettings.aspect, camSettings.near, camSettings.far);\n                    this.scene.add(this.camera);\n                } else {\n                    this.camera.fov = camSettings.FOV;\n                    this.camera.aspect = camSettings.aspect;\n                    this.camera.far = camSettings.far;\n                    this.camera.near = camSettings.near;\n                    this.camera.updateProjectionMatrix();\n                }\n                this.camera.position.set(camSettings.x, camSettings.y, camSettings.z);\n                this.cameraInitialPosition = this.camera.position.clone();\n                this.onScreenTransformHandler(this.state.screen.options);\n            };\n            Chart.prototype.onScreenTransformHandler = function(options) {\n                if (options.scrollX != void 0) {\n                    var scrollX_1 = this.cameraInitialPosition.x + options.scrollX;\n                    this.camera.position.setX(scrollX_1);\n                }\n                if (options.scrollY != void 0) {\n                    var scrollY_1 = this.cameraInitialPosition.y + options.scrollY;\n                    this.camera.position.setY(scrollY_1);\n                }\n            };\n            Chart.prototype.autoscroll = function() {\n                var state = this.state;\n                if (!state.data.autoScroll) return;\n                var oldTrendsMaxX = state.data.prevState.computedData.trends.maxXVal;\n                var trendsMaxXDelta = state.data.computedData.trends.maxXVal - oldTrendsMaxX;\n                if (trendsMaxXDelta > 0) {\n                    var maxVisibleX = this.state.screen.getScreenRightVal();\n                    var paddingRightX = this.state.getPaddingRight();\n                    var currentScroll = state.data.xAxis.range.scroll;\n                    if (oldTrendsMaxX < paddingRightX || oldTrendsMaxX > maxVisibleX) {\n                        return;\n                    }\n                    var scrollDelta = trendsMaxXDelta;\n                    this.setState({\n                        xAxis: {\n                            range: {\n                                scroll: currentScroll + scrollDelta\n                            }\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onScrollStop = function() {};\n            Chart.prototype.onMouseDown = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                });\n            };\n            Chart.prototype.onMouseUp = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            Chart.prototype.onMouseMove = function(ev) {\n                if (this.state.data.cursor.dragMode) {\n                    this.setState({\n                        cursor: {\n                            dragMode: true,\n                            x: ev.clientX,\n                            y: ev.clientY\n                        }\n                    });\n                }\n            };\n            Chart.prototype.onMouseWheel = function(ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                var zoomOrigin = ev.layerX / this.state.data.width;\n                var zoomValue = 1 + ev.wheelDeltaY * .001;\n                this.zoom(zoomValue, zoomOrigin);\n            };\n            Chart.prototype.onTouchMove = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: true,\n                        x: ev.touches[0].clientX,\n                        y: ev.touches[0].clientY\n                    }\n                });\n            };\n            Chart.prototype.onTouchEnd = function(ev) {\n                this.setState({\n                    cursor: {\n                        dragMode: false\n                    }\n                });\n            };\n            Chart.prototype.onChartContainerResizeHandler = function(width, height) {\n                this.setState({\n                    width: width,\n                    height: height\n                });\n            };\n            Chart.prototype.onChartResize = function() {\n                var _a = this.state.data, width = _a.width, height = _a.height;\n                this.renderer.setSize(width, height);\n                this.setupCamera();\n            };\n            Chart.prototype.zoom = function(zoomValue, zoomOrigin) {\n                var _this = this;\n                var MAX_ZOOM_VALUE = 1.5;\n                var MIN_ZOOM_VALUE = .7;\n                zoomValue = Math.min(zoomValue, MAX_ZOOM_VALUE);\n                zoomValue = Math.max(zoomValue, MIN_ZOOM_VALUE);\n                var autoScrollIsEnabled = this.state.data.autoScroll;\n                if (autoScrollIsEnabled) this.state.setState({\n                    autoScroll: false\n                });\n                this.state.zoom(zoomValue, zoomOrigin).then(function() {\n                    if (autoScrollIsEnabled) _this.setState({\n                        autoScroll: true\n                    });\n                });\n            };\n            Chart.createPreviewChart = function(userOptions, $el) {\n                var previewChartOptions = {\n                    animations: {\n                        enabled: false\n                    },\n                    widgets: {\n                        Grid: {\n                            enabled: false\n                        },\n                        Axis: {\n                            enabled: false\n                        },\n                        TrendsGradient: {\n                            enabled: false\n                        }\n                    }\n                };\n                var options = Utils_1.Utils.deepMerge(userOptions, previewChartOptions);\n                return new Chart(options, $el);\n            };\n            Chart.devicePixelRatio = window.devicePixelRatio;\n            Chart.installedWidgets = {};\n            Chart.renderers = {\n                CanvasRenderer: THREE.CanvasRenderer,\n                WebGLRenderer: THREE.WebGLRenderer\n            };\n            return Chart;\n        }();\n        exports.Chart = Chart;\n        Chart.installWidget(TrendsLineWidget_1.TrendsLineWidget);\n        Chart.installWidget(TrendsCandleWidget_1.TrendsCandlesWidget);\n        Chart.installWidget(AxisWidget_1.AxisWidget);\n        Chart.installWidget(GridWidget_1.GridWidget);\n        Chart.installWidget(TrendsBeaconWidget_1.TrendsBeaconWidget);\n        Chart.installWidget(TrendsIndicatorWidget_1.TrendsIndicatorWidget);\n        Chart.installWidget(TrendsLoadingWidget_1.TrendsLoadingWidget);\n        Chart.installWidget(AxisMarksWidget_1.AxisMarksWidget);\n        Chart.installWidget(BorderWidget_1.BorderWidget);\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        window.Stats = __webpack_require__(4);\n        window.TweenLite = __webpack_require__(5);\n        __webpack_require__(7);\n        __webpack_require__(8);\n        exports.isPlainObject = __webpack_require__(9);\n        exports.EE2 = __webpack_require__(11);\n        var es6_promise_1 = __webpack_require__(12);\n        exports.Promise = es6_promise_1.Promise;\n        exports.ResizeSensor = __webpack_require__(13);\n    }, function(module, exports) {\n        var Stats = function() {\n            function h(a) {\n                c.appendChild(a.dom);\n                return a;\n            }\n            function k(a) {\n                for (var d = 0; d < c.children.length; d++) c.children[d].style.display = d === a ? \"block\" : \"none\";\n                l = a;\n            }\n            var l = 0, c = document.createElement(\"div\");\n            c.style.cssText = \"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";\n            c.addEventListener(\"click\", function(a) {\n                a.preventDefault();\n                k(++l % c.children.length);\n            }, !1);\n            var g = (performance || Date).now(), e = g, a = 0, r = h(new Stats.Panel(\"FPS\", \"#0ff\", \"#002\")), f = h(new Stats.Panel(\"MS\", \"#0f0\", \"#020\"));\n            if (self.performance && self.performance.memory) var t = h(new Stats.Panel(\"MB\", \"#f08\", \"#201\"));\n            k(0);\n            return {\n                REVISION: 16,\n                dom: c,\n                addPanel: h,\n                showPanel: k,\n                begin: function() {\n                    g = (performance || Date).now();\n                },\n                end: function() {\n                    a++;\n                    var c = (performance || Date).now();\n                    f.update(c - g, 200);\n                    if (c > e + 1e3 && (r.update(1e3 * a / (c - e), 100), e = c, a = 0, t)) {\n                        var d = performance.memory;\n                        t.update(d.usedJSHeapSize / 1048576, d.jsHeapSizeLimit / 1048576);\n                    }\n                    return c;\n                },\n                update: function() {\n                    g = this.end();\n                },\n                domElement: c,\n                setMode: k\n            };\n        };\n        Stats.Panel = function(h, k, l) {\n            var c = Infinity, g = 0, e = Math.round, a = e(window.devicePixelRatio || 1), r = 80 * a, f = 48 * a, t = 3 * a, u = 2 * a, d = 3 * a, m = 15 * a, n = 74 * a, p = 30 * a, q = document.createElement(\"canvas\");\n            q.width = r;\n            q.height = f;\n            q.style.cssText = \"width:80px;height:48px\";\n            var b = q.getContext(\"2d\");\n            b.font = \"bold \" + 9 * a + \"px Helvetica,Arial,sans-serif\";\n            b.textBaseline = \"top\";\n            b.fillStyle = l;\n            b.fillRect(0, 0, r, f);\n            b.fillStyle = k;\n            b.fillText(h, t, u);\n            b.fillRect(d, m, n, p);\n            b.fillStyle = l;\n            b.globalAlpha = .9;\n            b.fillRect(d, m, n, p);\n            return {\n                dom: q,\n                update: function(f, v) {\n                    c = Math.min(c, f);\n                    g = Math.max(g, f);\n                    b.fillStyle = l;\n                    b.globalAlpha = 1;\n                    b.fillRect(0, 0, r, m);\n                    b.fillStyle = k;\n                    b.fillText(e(f) + \" \" + h + \" (\" + e(c) + \"-\" + e(g) + \")\", t, u);\n                    b.drawImage(q, d + a, m, n - a, p, d, m, n - a, p);\n                    b.fillRect(d + n - a, m, a, p);\n                    b.fillStyle = l;\n                    b.globalAlpha = .9;\n                    b.fillRect(d + n - a, m, a, e((1 - f / v) * p));\n                }\n            };\n        };\n        \"object\" === typeof module && (module.exports = Stats);\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n        (function(global) {\n            /*!\n\t * VERSION: 1.18.5\n\t * DATE: 2016-05-24\n\t * UPDATES AND DOCS AT: http://greensock.com\n\t * \n\t * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n\t *\n\t * @license Copyright (c) 2008-2016, GreenSock. All rights reserved.\n\t * This work is subject to the terms at http://greensock.com/standard-license or for\n\t * Club GreenSock members, the software agreement that was issued with your membership.\n\t * \n\t * @author: Jack Doyle, jack@greensock.com\n\t **/\n            var _gsScope = typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window;\n            (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {\n                \"use strict\";\n                _gsScope._gsDefine(\"TweenMax\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n                    var _slice = function(a) {\n                        var b = [], l = a.length, i;\n                        for (i = 0; i !== l; b.push(a[i++])) ;\n                        return b;\n                    }, _applyCycle = function(vars, targets, i) {\n                        var alt = vars.cycle, p, val;\n                        for (p in alt) {\n                            val = alt[p];\n                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n                        }\n                        delete vars.cycle;\n                    }, TweenMax = function(target, duration, vars) {\n                        TweenLite.call(this, target, duration, vars);\n                        this._cycle = 0;\n                        this._yoyo = this.vars.yoyo === true;\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._dirty = true;\n                        this.render = TweenMax.prototype.render;\n                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, p = TweenMax.prototype = TweenLite.to({}, .1, {}), _blankArray = [];\n                    TweenMax.version = \"1.18.5\";\n                    p.constructor = TweenMax;\n                    p.kill()._gc = false;\n                    TweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n                    TweenMax.getTweensOf = TweenLite.getTweensOf;\n                    TweenMax.lagSmoothing = TweenLite.lagSmoothing;\n                    TweenMax.ticker = TweenLite.ticker;\n                    TweenMax.render = TweenLite.render;\n                    p.invalidate = function() {\n                        this._yoyo = this.vars.yoyo === true;\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._uncache(true);\n                        return TweenLite.prototype.invalidate.call(this);\n                    };\n                    p.updateTo = function(vars, resetDuration) {\n                        var curRatio = this.ratio, immediate = this.vars.immediateRender || vars.immediateRender, p;\n                        if (resetDuration && this._startTime < this._timeline._time) {\n                            this._startTime = this._timeline._time;\n                            this._uncache(false);\n                            if (this._gc) {\n                                this._enabled(true, false);\n                            } else {\n                                this._timeline.insert(this, this._startTime - this._delay);\n                            }\n                        }\n                        for (p in vars) {\n                            this.vars[p] = vars[p];\n                        }\n                        if (this._initted || immediate) {\n                            if (resetDuration) {\n                                this._initted = false;\n                                if (immediate) {\n                                    this.render(0, true, true);\n                                }\n                            } else {\n                                if (this._gc) {\n                                    this._enabled(true, false);\n                                }\n                                if (this._notifyPluginsOfEnabled && this._firstPT) {\n                                    TweenLite._onPluginEvent(\"_onDisable\", this);\n                                }\n                                if (this._time / this._duration > .998) {\n                                    var prevTime = this._totalTime;\n                                    this.render(0, true, false);\n                                    this._initted = false;\n                                    this.render(prevTime, true, false);\n                                } else {\n                                    this._initted = false;\n                                    this._init();\n                                    if (this._time > 0 || immediate) {\n                                        var inv = 1 / (1 - curRatio), pt = this._firstPT, endValue;\n                                        while (pt) {\n                                            endValue = pt.s + pt.c;\n                                            pt.c *= inv;\n                                            pt.s = endValue - pt.c;\n                                            pt = pt._next;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                        return this;\n                    };\n                    p.render = function(time, suppressEvents, force) {\n                        if (!this._initted) if (this._duration === 0 && this.vars.repeat) {\n                            this.invalidate();\n                        }\n                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevTotalTime = this._totalTime, prevCycle = this._cycle, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n                        if (time >= totalDur - 1e-7) {\n                            this._totalTime = totalDur;\n                            this._cycle = this._repeat;\n                            if (this._yoyo && (this._cycle & 1) !== 0) {\n                                this._time = 0;\n                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                            } else {\n                                this._time = duration;\n                                this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n                            }\n                            if (!this._reversed) {\n                                isComplete = true;\n                                callback = \"onComplete\";\n                                force = force || this._timeline.autoRemoveChildren;\n                            }\n                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                if (this._startTime === this._timeline._duration) {\n                                    time = 0;\n                                }\n                                if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n                                    force = true;\n                                    if (prevRawPrevTime > _tinyNum) {\n                                        callback = \"onReverseComplete\";\n                                    }\n                                }\n                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                            }\n                        } else if (time < 1e-7) {\n                            this._totalTime = this._time = this._cycle = 0;\n                            this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                            if (prevTotalTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n                                callback = \"onReverseComplete\";\n                                isComplete = this._reversed;\n                            }\n                            if (time < 0) {\n                                this._active = false;\n                                if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                    if (prevRawPrevTime >= 0) {\n                                        force = true;\n                                    }\n                                    this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                                }\n                            }\n                            if (!this._initted) {\n                                force = true;\n                            }\n                        } else {\n                            this._totalTime = this._time = time;\n                            if (this._repeat !== 0) {\n                                cycleDuration = duration + this._repeatDelay;\n                                this._cycle = this._totalTime / cycleDuration >> 0;\n                                if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n                                    this._cycle--;\n                                }\n                                this._time = this._totalTime - this._cycle * cycleDuration;\n                                if (this._yoyo) if ((this._cycle & 1) !== 0) {\n                                    this._time = duration - this._time;\n                                }\n                                if (this._time > duration) {\n                                    this._time = duration;\n                                } else if (this._time < 0) {\n                                    this._time = 0;\n                                }\n                            }\n                            if (this._easeType) {\n                                r = this._time / duration;\n                                type = this._easeType;\n                                pow = this._easePower;\n                                if (type === 1 || type === 3 && r >= .5) {\n                                    r = 1 - r;\n                                }\n                                if (type === 3) {\n                                    r *= 2;\n                                }\n                                if (pow === 1) {\n                                    r *= r;\n                                } else if (pow === 2) {\n                                    r *= r * r;\n                                } else if (pow === 3) {\n                                    r *= r * r * r;\n                                } else if (pow === 4) {\n                                    r *= r * r * r * r;\n                                }\n                                if (type === 1) {\n                                    this.ratio = 1 - r;\n                                } else if (type === 2) {\n                                    this.ratio = r;\n                                } else if (this._time / duration < .5) {\n                                    this.ratio = r / 2;\n                                } else {\n                                    this.ratio = 1 - r / 2;\n                                }\n                            } else {\n                                this.ratio = this._ease.getRatio(this._time / duration);\n                            }\n                        }\n                        if (prevTime === this._time && !force && prevCycle === this._cycle) {\n                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n                                this._callback(\"onUpdate\");\n                            }\n                            return;\n                        } else if (!this._initted) {\n                            this._init();\n                            if (!this._initted || this._gc) {\n                                return;\n                            } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n                                this._time = prevTime;\n                                this._totalTime = prevTotalTime;\n                                this._rawPrevTime = prevRawPrevTime;\n                                this._cycle = prevCycle;\n                                TweenLiteInternals.lazyTweens.push(this);\n                                this._lazy = [ time, suppressEvents ];\n                                return;\n                            }\n                            if (this._time && !isComplete) {\n                                this.ratio = this._ease.getRatio(this._time / duration);\n                            } else if (isComplete && this._ease._calcEnd) {\n                                this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n                            }\n                        }\n                        if (this._lazy !== false) {\n                            this._lazy = false;\n                        }\n                        if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n                            this._active = true;\n                        }\n                        if (prevTotalTime === 0) {\n                            if (this._initted === 2 && time > 0) {\n                                this._init();\n                            }\n                            if (this._startAt) {\n                                if (time >= 0) {\n                                    this._startAt.render(time, suppressEvents, force);\n                                } else if (!callback) {\n                                    callback = \"_dummyGS\";\n                                }\n                            }\n                            if (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n                                this._callback(\"onStart\");\n                            }\n                        }\n                        pt = this._firstPT;\n                        while (pt) {\n                            if (pt.f) {\n                                pt.t[pt.p](pt.c * this.ratio + pt.s);\n                            } else {\n                                pt.t[pt.p] = pt.c * this.ratio + pt.s;\n                            }\n                            pt = pt._next;\n                        }\n                        if (this._onUpdate) {\n                            if (time < 0) if (this._startAt && this._startTime) {\n                                this._startAt.render(time, suppressEvents, force);\n                            }\n                            if (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n                                this._callback(\"onUpdate\");\n                            }\n                        }\n                        if (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n                            this._callback(\"onRepeat\");\n                        }\n                        if (callback) if (!this._gc || force) {\n                            if (time < 0 && this._startAt && !this._onUpdate && this._startTime) {\n                                this._startAt.render(time, suppressEvents, force);\n                            }\n                            if (isComplete) {\n                                if (this._timeline.autoRemoveChildren) {\n                                    this._enabled(false, false);\n                                }\n                                this._active = false;\n                            }\n                            if (!suppressEvents && this.vars[callback]) {\n                                this._callback(callback);\n                            }\n                            if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n                                this._rawPrevTime = 0;\n                            }\n                        }\n                    };\n                    TweenMax.to = function(target, duration, vars) {\n                        return new TweenMax(target, duration, vars);\n                    };\n                    TweenMax.from = function(target, duration, vars) {\n                        vars.runBackwards = true;\n                        vars.immediateRender = vars.immediateRender != false;\n                        return new TweenMax(target, duration, vars);\n                    };\n                    TweenMax.fromTo = function(target, duration, fromVars, toVars) {\n                        toVars.startAt = fromVars;\n                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                        return new TweenMax(target, duration, toVars);\n                    };\n                    TweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        stagger = stagger || 0;\n                        var delay = 0, a = [], finalComplete = function() {\n                            if (vars.onComplete) {\n                                vars.onComplete.apply(vars.onCompleteScope || this, arguments);\n                            }\n                            onCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n                        }, cycle = vars.cycle, fromCycle = vars.startAt && vars.startAt.cycle, l, copy, i, p;\n                        if (!_isArray(targets)) {\n                            if (typeof targets === \"string\") {\n                                targets = TweenLite.selector(targets) || targets;\n                            }\n                            if (_isSelector(targets)) {\n                                targets = _slice(targets);\n                            }\n                        }\n                        targets = targets || [];\n                        if (stagger < 0) {\n                            targets = _slice(targets);\n                            targets.reverse();\n                            stagger *= -1;\n                        }\n                        l = targets.length - 1;\n                        for (i = 0; i <= l; i++) {\n                            copy = {};\n                            for (p in vars) {\n                                copy[p] = vars[p];\n                            }\n                            if (cycle) {\n                                _applyCycle(copy, targets, i);\n                                if (copy.duration != null) {\n                                    duration = copy.duration;\n                                    delete copy.duration;\n                                }\n                            }\n                            if (fromCycle) {\n                                fromCycle = copy.startAt = {};\n                                for (p in vars.startAt) {\n                                    fromCycle[p] = vars.startAt[p];\n                                }\n                                _applyCycle(copy.startAt, targets, i);\n                            }\n                            copy.delay = delay + (copy.delay || 0);\n                            if (i === l && onCompleteAll) {\n                                copy.onComplete = finalComplete;\n                            }\n                            a[i] = new TweenMax(targets[i], duration, copy);\n                            delay += stagger;\n                        }\n                        return a;\n                    };\n                    TweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        vars.runBackwards = true;\n                        vars.immediateRender = vars.immediateRender != false;\n                        return TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    TweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        toVars.startAt = fromVars;\n                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                        return TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    TweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n                        return new TweenMax(callback, 0, {\n                            delay: delay,\n                            onComplete: callback,\n                            onCompleteParams: params,\n                            callbackScope: scope,\n                            onReverseComplete: callback,\n                            onReverseCompleteParams: params,\n                            immediateRender: false,\n                            useFrames: useFrames,\n                            overwrite: 0\n                        });\n                    };\n                    TweenMax.set = function(target, vars) {\n                        return new TweenMax(target, 0, vars);\n                    };\n                    TweenMax.isTweening = function(target) {\n                        return TweenLite.getTweensOf(target, true).length > 0;\n                    };\n                    var _getChildrenOf = function(timeline, includeTimelines) {\n                        var a = [], cnt = 0, tween = timeline._first;\n                        while (tween) {\n                            if (tween instanceof TweenLite) {\n                                a[cnt++] = tween;\n                            } else {\n                                if (includeTimelines) {\n                                    a[cnt++] = tween;\n                                }\n                                a = a.concat(_getChildrenOf(tween, includeTimelines));\n                                cnt = a.length;\n                            }\n                            tween = tween._next;\n                        }\n                        return a;\n                    }, getAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n                        return _getChildrenOf(Animation._rootTimeline, includeTimelines).concat(_getChildrenOf(Animation._rootFramesTimeline, includeTimelines));\n                    };\n                    TweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n                        if (tweens == null) {\n                            tweens = true;\n                        }\n                        if (delayedCalls == null) {\n                            delayedCalls = true;\n                        }\n                        var a = getAllTweens(timelines != false), l = a.length, allTrue = tweens && delayedCalls && timelines, isDC, tween, i;\n                        for (i = 0; i < l; i++) {\n                            tween = a[i];\n                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n                                if (complete) {\n                                    tween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n                                } else {\n                                    tween._enabled(false, false);\n                                }\n                            }\n                        }\n                    };\n                    TweenMax.killChildTweensOf = function(parent, complete) {\n                        if (parent == null) {\n                            return;\n                        }\n                        var tl = TweenLiteInternals.tweenLookup, a, curParent, p, i, l;\n                        if (typeof parent === \"string\") {\n                            parent = TweenLite.selector(parent) || parent;\n                        }\n                        if (_isSelector(parent)) {\n                            parent = _slice(parent);\n                        }\n                        if (_isArray(parent)) {\n                            i = parent.length;\n                            while (--i > -1) {\n                                TweenMax.killChildTweensOf(parent[i], complete);\n                            }\n                            return;\n                        }\n                        a = [];\n                        for (p in tl) {\n                            curParent = tl[p].target.parentNode;\n                            while (curParent) {\n                                if (curParent === parent) {\n                                    a = a.concat(tl[p].tweens);\n                                }\n                                curParent = curParent.parentNode;\n                            }\n                        }\n                        l = a.length;\n                        for (i = 0; i < l; i++) {\n                            if (complete) {\n                                a[i].totalTime(a[i].totalDuration());\n                            }\n                            a[i]._enabled(false, false);\n                        }\n                    };\n                    var _changePause = function(pause, tweens, delayedCalls, timelines) {\n                        tweens = tweens !== false;\n                        delayedCalls = delayedCalls !== false;\n                        timelines = timelines !== false;\n                        var a = getAllTweens(timelines), allTrue = tweens && delayedCalls && timelines, i = a.length, isDC, tween;\n                        while (--i > -1) {\n                            tween = a[i];\n                            if (allTrue || tween instanceof SimpleTimeline || (isDC = tween.target === tween.vars.onComplete) && delayedCalls || tweens && !isDC) {\n                                tween.paused(pause);\n                            }\n                        }\n                    };\n                    TweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n                        _changePause(true, tweens, delayedCalls, timelines);\n                    };\n                    TweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n                        _changePause(false, tweens, delayedCalls, timelines);\n                    };\n                    TweenMax.globalTimeScale = function(value) {\n                        var tl = Animation._rootTimeline, t = TweenLite.ticker.time;\n                        if (!arguments.length) {\n                            return tl._timeScale;\n                        }\n                        value = value || _tinyNum;\n                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n                        tl = Animation._rootFramesTimeline;\n                        t = TweenLite.ticker.frame;\n                        tl._startTime = t - (t - tl._startTime) * tl._timeScale / value;\n                        tl._timeScale = Animation._rootTimeline._timeScale = value;\n                        return value;\n                    };\n                    p.progress = function(value, suppressEvents) {\n                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n                    };\n                    p.totalProgress = function(value, suppressEvents) {\n                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n                    };\n                    p.time = function(value, suppressEvents) {\n                        if (!arguments.length) {\n                            return this._time;\n                        }\n                        if (this._dirty) {\n                            this.totalDuration();\n                        }\n                        if (value > this._duration) {\n                            value = this._duration;\n                        }\n                        if (this._yoyo && (this._cycle & 1) !== 0) {\n                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n                        } else if (this._repeat !== 0) {\n                            value += this._cycle * (this._duration + this._repeatDelay);\n                        }\n                        return this.totalTime(value, suppressEvents);\n                    };\n                    p.duration = function(value) {\n                        if (!arguments.length) {\n                            return this._duration;\n                        }\n                        return Animation.prototype.duration.call(this, value);\n                    };\n                    p.totalDuration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n                                this._dirty = false;\n                            }\n                            return this._totalDuration;\n                        }\n                        return this._repeat === -1 ? this : this.duration((value - this._repeat * this._repeatDelay) / (this._repeat + 1));\n                    };\n                    p.repeat = function(value) {\n                        if (!arguments.length) {\n                            return this._repeat;\n                        }\n                        this._repeat = value;\n                        return this._uncache(true);\n                    };\n                    p.repeatDelay = function(value) {\n                        if (!arguments.length) {\n                            return this._repeatDelay;\n                        }\n                        this._repeatDelay = value;\n                        return this._uncache(true);\n                    };\n                    p.yoyo = function(value) {\n                        if (!arguments.length) {\n                            return this._yoyo;\n                        }\n                        this._yoyo = value;\n                        return this;\n                    };\n                    return TweenMax;\n                }, true);\n                _gsScope._gsDefine(\"TimelineLite\", [ \"core.Animation\", \"core.SimpleTimeline\", \"TweenLite\" ], function(Animation, SimpleTimeline, TweenLite) {\n                    var TimelineLite = function(vars) {\n                        SimpleTimeline.call(this, vars);\n                        this._labels = {};\n                        this.autoRemoveChildren = this.vars.autoRemoveChildren === true;\n                        this.smoothChildTiming = this.vars.smoothChildTiming === true;\n                        this._sortChildren = true;\n                        this._onUpdate = this.vars.onUpdate;\n                        var v = this.vars, val, p;\n                        for (p in v) {\n                            val = v[p];\n                            if (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n                                v[p] = this._swapSelfInParams(val);\n                            }\n                        }\n                        if (_isArray(v.tweens)) {\n                            this.add(v.tweens, 0, v.align, v.stagger);\n                        }\n                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _internals = TimelineLite._internals = {}, _isSelector = TweenLiteInternals.isSelector, _isArray = TweenLiteInternals.isArray, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _globals = _gsScope._gsDefine.globals, _copy = function(vars) {\n                        var copy = {}, p;\n                        for (p in vars) {\n                            copy[p] = vars[p];\n                        }\n                        return copy;\n                    }, _applyCycle = function(vars, targets, i) {\n                        var alt = vars.cycle, p, val;\n                        for (p in alt) {\n                            val = alt[p];\n                            vars[p] = typeof val === \"function\" ? val.call(targets[i], i) : val[i % val.length];\n                        }\n                        delete vars.cycle;\n                    }, _pauseCallback = _internals.pauseCallback = function() {}, _slice = function(a) {\n                        var b = [], l = a.length, i;\n                        for (i = 0; i !== l; b.push(a[i++])) ;\n                        return b;\n                    }, p = TimelineLite.prototype = new SimpleTimeline();\n                    TimelineLite.version = \"1.18.5\";\n                    p.constructor = TimelineLite;\n                    p.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n                    p.to = function(target, duration, vars, position) {\n                        var Engine = vars.repeat && _globals.TweenMax || TweenLite;\n                        return duration ? this.add(new Engine(target, duration, vars), position) : this.set(target, vars, position);\n                    };\n                    p.from = function(target, duration, vars, position) {\n                        return this.add((vars.repeat && _globals.TweenMax || TweenLite).from(target, duration, vars), position);\n                    };\n                    p.fromTo = function(target, duration, fromVars, toVars, position) {\n                        var Engine = toVars.repeat && _globals.TweenMax || TweenLite;\n                        return duration ? this.add(Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n                    };\n                    p.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        var tl = new TimelineLite({\n                            onComplete: onCompleteAll,\n                            onCompleteParams: onCompleteAllParams,\n                            callbackScope: onCompleteAllScope,\n                            smoothChildTiming: this.smoothChildTiming\n                        }), cycle = vars.cycle, copy, i;\n                        if (typeof targets === \"string\") {\n                            targets = TweenLite.selector(targets) || targets;\n                        }\n                        targets = targets || [];\n                        if (_isSelector(targets)) {\n                            targets = _slice(targets);\n                        }\n                        stagger = stagger || 0;\n                        if (stagger < 0) {\n                            targets = _slice(targets);\n                            targets.reverse();\n                            stagger *= -1;\n                        }\n                        for (i = 0; i < targets.length; i++) {\n                            copy = _copy(vars);\n                            if (copy.startAt) {\n                                copy.startAt = _copy(copy.startAt);\n                                if (copy.startAt.cycle) {\n                                    _applyCycle(copy.startAt, targets, i);\n                                }\n                            }\n                            if (cycle) {\n                                _applyCycle(copy, targets, i);\n                                if (copy.duration != null) {\n                                    duration = copy.duration;\n                                    delete copy.duration;\n                                }\n                            }\n                            tl.to(targets[i], duration, copy, i * stagger);\n                        }\n                        return this.add(tl, position);\n                    };\n                    p.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        vars.immediateRender = vars.immediateRender != false;\n                        vars.runBackwards = true;\n                        return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    p.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n                        toVars.startAt = fromVars;\n                        toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                        return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n                    };\n                    p.call = function(callback, params, scope, position) {\n                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n                    };\n                    p.set = function(target, vars, position) {\n                        position = this._parseTimeOrLabel(position, 0, true);\n                        if (vars.immediateRender == null) {\n                            vars.immediateRender = position === this._time && !this._paused;\n                        }\n                        return this.add(new TweenLite(target, 0, vars), position);\n                    };\n                    TimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n                        vars = vars || {};\n                        if (vars.smoothChildTiming == null) {\n                            vars.smoothChildTiming = true;\n                        }\n                        var tl = new TimelineLite(vars), root = tl._timeline, tween, next;\n                        if (ignoreDelayedCalls == null) {\n                            ignoreDelayedCalls = true;\n                        }\n                        root._remove(tl, true);\n                        tl._startTime = 0;\n                        tl._rawPrevTime = tl._time = tl._totalTime = root._time;\n                        tween = root._first;\n                        while (tween) {\n                            next = tween._next;\n                            if (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n                                tl.add(tween, tween._startTime - tween._delay);\n                            }\n                            tween = next;\n                        }\n                        root.add(tl, 0);\n                        return tl;\n                    };\n                    p.add = function(value, position, align, stagger) {\n                        var curTime, l, i, child, tl, beforeRawTime;\n                        if (typeof position !== \"number\") {\n                            position = this._parseTimeOrLabel(position, 0, true, value);\n                        }\n                        if (!(value instanceof Animation)) {\n                            if (value instanceof Array || value && value.push && _isArray(value)) {\n                                align = align || \"normal\";\n                                stagger = stagger || 0;\n                                curTime = position;\n                                l = value.length;\n                                for (i = 0; i < l; i++) {\n                                    if (_isArray(child = value[i])) {\n                                        child = new TimelineLite({\n                                            tweens: child\n                                        });\n                                    }\n                                    this.add(child, curTime);\n                                    if (typeof child !== \"string\" && typeof child !== \"function\") {\n                                        if (align === \"sequence\") {\n                                            curTime = child._startTime + child.totalDuration() / child._timeScale;\n                                        } else if (align === \"start\") {\n                                            child._startTime -= child.delay();\n                                        }\n                                    }\n                                    curTime += stagger;\n                                }\n                                return this._uncache(true);\n                            } else if (typeof value === \"string\") {\n                                return this.addLabel(value, position);\n                            } else if (typeof value === \"function\") {\n                                value = TweenLite.delayedCall(0, value);\n                            } else {\n                                throw \"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\";\n                            }\n                        }\n                        SimpleTimeline.prototype.add.call(this, value, position);\n                        if (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n                            tl = this;\n                            beforeRawTime = tl.rawTime() > value._startTime;\n                            while (tl._timeline) {\n                                if (beforeRawTime && tl._timeline.smoothChildTiming) {\n                                    tl.totalTime(tl._totalTime, true);\n                                } else if (tl._gc) {\n                                    tl._enabled(true, false);\n                                }\n                                tl = tl._timeline;\n                            }\n                        }\n                        return this;\n                    };\n                    p.remove = function(value) {\n                        if (value instanceof Animation) {\n                            this._remove(value, false);\n                            var tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline;\n                            value._startTime = (value._paused ? value._pauseTime : tl._time) - (!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale;\n                            return this;\n                        } else if (value instanceof Array || value && value.push && _isArray(value)) {\n                            var i = value.length;\n                            while (--i > -1) {\n                                this.remove(value[i]);\n                            }\n                            return this;\n                        } else if (typeof value === \"string\") {\n                            return this.removeLabel(value);\n                        }\n                        return this.kill(null, value);\n                    };\n                    p._remove = function(tween, skipDisable) {\n                        SimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n                        var last = this._last;\n                        if (!last) {\n                            this._time = this._totalTime = this._duration = this._totalDuration = 0;\n                        } else if (this._time > last._startTime + last._totalDuration / last._timeScale) {\n                            this._time = this.duration();\n                            this._totalTime = this._totalDuration;\n                        }\n                        return this;\n                    };\n                    p.append = function(value, offsetOrLabel) {\n                        return this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n                    };\n                    p.insert = p.insertMultiple = function(value, position, align, stagger) {\n                        return this.add(value, position || 0, align, stagger);\n                    };\n                    p.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n                        return this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n                    };\n                    p.addLabel = function(label, position) {\n                        this._labels[label] = this._parseTimeOrLabel(position);\n                        return this;\n                    };\n                    p.addPause = function(position, callback, params, scope) {\n                        var t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n                        t.vars.onComplete = t.vars.onReverseComplete = callback;\n                        t.data = \"isPause\";\n                        this._hasPause = true;\n                        return this.add(t, position);\n                    };\n                    p.removeLabel = function(label) {\n                        delete this._labels[label];\n                        return this;\n                    };\n                    p.getLabelTime = function(label) {\n                        return this._labels[label] != null ? this._labels[label] : -1;\n                    };\n                    p._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n                        var i;\n                        if (ignore instanceof Animation && ignore.timeline === this) {\n                            this.remove(ignore);\n                        } else if (ignore && (ignore instanceof Array || ignore.push && _isArray(ignore))) {\n                            i = ignore.length;\n                            while (--i > -1) {\n                                if (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n                                    this.remove(ignore[i]);\n                                }\n                            }\n                        }\n                        if (typeof offsetOrLabel === \"string\") {\n                            return this._parseTimeOrLabel(offsetOrLabel, appendIfAbsent && typeof timeOrLabel === \"number\" && this._labels[offsetOrLabel] == null ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n                        }\n                        offsetOrLabel = offsetOrLabel || 0;\n                        if (typeof timeOrLabel === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) {\n                            i = timeOrLabel.indexOf(\"=\");\n                            if (i === -1) {\n                                if (this._labels[timeOrLabel] == null) {\n                                    return appendIfAbsent ? this._labels[timeOrLabel] = this.duration() + offsetOrLabel : offsetOrLabel;\n                                }\n                                return this._labels[timeOrLabel] + offsetOrLabel;\n                            }\n                            offsetOrLabel = parseInt(timeOrLabel.charAt(i - 1) + \"1\", 10) * Number(timeOrLabel.substr(i + 1));\n                            timeOrLabel = i > 1 ? this._parseTimeOrLabel(timeOrLabel.substr(0, i - 1), 0, appendIfAbsent) : this.duration();\n                        } else if (timeOrLabel == null) {\n                            timeOrLabel = this.duration();\n                        }\n                        return Number(timeOrLabel) + offsetOrLabel;\n                    };\n                    p.seek = function(position, suppressEvents) {\n                        return this.totalTime(typeof position === \"number\" ? position : this._parseTimeOrLabel(position), suppressEvents !== false);\n                    };\n                    p.stop = function() {\n                        return this.paused(true);\n                    };\n                    p.gotoAndPlay = function(position, suppressEvents) {\n                        return this.play(position, suppressEvents);\n                    };\n                    p.gotoAndStop = function(position, suppressEvents) {\n                        return this.pause(position, suppressEvents);\n                    };\n                    p.render = function(time, suppressEvents, force) {\n                        if (this._gc) {\n                            this._enabled(true, false);\n                        }\n                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), prevTime = this._time, prevStart = this._startTime, prevTimeScale = this._timeScale, prevPaused = this._paused, tween, isComplete, next, callback, internalForce, pauseTween, curTime;\n                        if (time >= totalDur - 1e-7) {\n                            this._totalTime = this._time = totalDur;\n                            if (!this._reversed) if (!this._hasPausedChild()) {\n                                isComplete = true;\n                                callback = \"onComplete\";\n                                internalForce = !!this._timeline.autoRemoveChildren;\n                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n                                    internalForce = true;\n                                    if (this._rawPrevTime > _tinyNum) {\n                                        callback = \"onReverseComplete\";\n                                    }\n                                }\n                            }\n                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                            time = totalDur + 1e-4;\n                        } else if (time < 1e-7) {\n                            this._totalTime = this._time = 0;\n                            if (prevTime !== 0 || this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || time < 0 && this._rawPrevTime >= 0)) {\n                                callback = \"onReverseComplete\";\n                                isComplete = this._reversed;\n                            }\n                            if (time < 0) {\n                                this._active = false;\n                                if (this._timeline.autoRemoveChildren && this._reversed) {\n                                    internalForce = isComplete = true;\n                                    callback = \"onReverseComplete\";\n                                } else if (this._rawPrevTime >= 0 && this._first) {\n                                    internalForce = true;\n                                }\n                                this._rawPrevTime = time;\n                            } else {\n                                this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                if (time === 0 && isComplete) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime === 0) {\n                                        if (!tween._duration) {\n                                            isComplete = false;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                }\n                                time = 0;\n                                if (!this._initted) {\n                                    internalForce = true;\n                                }\n                            }\n                        } else {\n                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n                                if (time >= prevTime) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime <= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                } else {\n                                    tween = this._last;\n                                    while (tween && tween._startTime >= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._prev;\n                                    }\n                                }\n                                if (pauseTween) {\n                                    this._time = time = pauseTween._startTime;\n                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n                                }\n                            }\n                            this._totalTime = this._time = this._rawPrevTime = time;\n                        }\n                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n                            return;\n                        } else if (!this._initted) {\n                            this._initted = true;\n                        }\n                        if (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n                            this._active = true;\n                        }\n                        if (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n                            this._callback(\"onStart\");\n                        }\n                        curTime = this._time;\n                        if (curTime >= prevTime) {\n                            tween = this._first;\n                            while (tween) {\n                                next = tween._next;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= curTime && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        } else {\n                            tween = this._last;\n                            while (tween) {\n                                next = tween._prev;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        pauseTween = tween._prev;\n                                        while (pauseTween && pauseTween.endTime() > this._time) {\n                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n                                            pauseTween = pauseTween._prev;\n                                        }\n                                        pauseTween = null;\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        }\n                        if (this._onUpdate) if (!suppressEvents) {\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            this._callback(\"onUpdate\");\n                        }\n                        if (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n                            if (isComplete) {\n                                if (_lazyTweens.length) {\n                                    _lazyRender();\n                                }\n                                if (this._timeline.autoRemoveChildren) {\n                                    this._enabled(false, false);\n                                }\n                                this._active = false;\n                            }\n                            if (!suppressEvents && this.vars[callback]) {\n                                this._callback(callback);\n                            }\n                        }\n                    };\n                    p._hasPausedChild = function() {\n                        var tween = this._first;\n                        while (tween) {\n                            if (tween._paused || tween instanceof TimelineLite && tween._hasPausedChild()) {\n                                return true;\n                            }\n                            tween = tween._next;\n                        }\n                        return false;\n                    };\n                    p.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n                        ignoreBeforeTime = ignoreBeforeTime || -9999999999;\n                        var a = [], tween = this._first, cnt = 0;\n                        while (tween) {\n                            if (tween._startTime < ignoreBeforeTime) {} else if (tween instanceof TweenLite) {\n                                if (tweens !== false) {\n                                    a[cnt++] = tween;\n                                }\n                            } else {\n                                if (timelines !== false) {\n                                    a[cnt++] = tween;\n                                }\n                                if (nested !== false) {\n                                    a = a.concat(tween.getChildren(true, tweens, timelines));\n                                    cnt = a.length;\n                                }\n                            }\n                            tween = tween._next;\n                        }\n                        return a;\n                    };\n                    p.getTweensOf = function(target, nested) {\n                        var disabled = this._gc, a = [], cnt = 0, tweens, i;\n                        if (disabled) {\n                            this._enabled(true, true);\n                        }\n                        tweens = TweenLite.getTweensOf(target);\n                        i = tweens.length;\n                        while (--i > -1) {\n                            if (tweens[i].timeline === this || nested && this._contains(tweens[i])) {\n                                a[cnt++] = tweens[i];\n                            }\n                        }\n                        if (disabled) {\n                            this._enabled(false, true);\n                        }\n                        return a;\n                    };\n                    p.recent = function() {\n                        return this._recent;\n                    };\n                    p._contains = function(tween) {\n                        var tl = tween.timeline;\n                        while (tl) {\n                            if (tl === this) {\n                                return true;\n                            }\n                            tl = tl.timeline;\n                        }\n                        return false;\n                    };\n                    p.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n                        ignoreBeforeTime = ignoreBeforeTime || 0;\n                        var tween = this._first, labels = this._labels, p;\n                        while (tween) {\n                            if (tween._startTime >= ignoreBeforeTime) {\n                                tween._startTime += amount;\n                            }\n                            tween = tween._next;\n                        }\n                        if (adjustLabels) {\n                            for (p in labels) {\n                                if (labels[p] >= ignoreBeforeTime) {\n                                    labels[p] += amount;\n                                }\n                            }\n                        }\n                        return this._uncache(true);\n                    };\n                    p._kill = function(vars, target) {\n                        if (!vars && !target) {\n                            return this._enabled(false, false);\n                        }\n                        var tweens = !target ? this.getChildren(true, true, false) : this.getTweensOf(target), i = tweens.length, changed = false;\n                        while (--i > -1) {\n                            if (tweens[i]._kill(vars, target)) {\n                                changed = true;\n                            }\n                        }\n                        return changed;\n                    };\n                    p.clear = function(labels) {\n                        var tweens = this.getChildren(false, true, true), i = tweens.length;\n                        this._time = this._totalTime = 0;\n                        while (--i > -1) {\n                            tweens[i]._enabled(false, false);\n                        }\n                        if (labels !== false) {\n                            this._labels = {};\n                        }\n                        return this._uncache(true);\n                    };\n                    p.invalidate = function() {\n                        var tween = this._first;\n                        while (tween) {\n                            tween.invalidate();\n                            tween = tween._next;\n                        }\n                        return Animation.prototype.invalidate.call(this);\n                    };\n                    p._enabled = function(enabled, ignoreTimeline) {\n                        if (enabled === this._gc) {\n                            var tween = this._first;\n                            while (tween) {\n                                tween._enabled(enabled, true);\n                                tween = tween._next;\n                            }\n                        }\n                        return SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n                    };\n                    p.totalTime = function(time, suppressEvents, uncapped) {\n                        this._forcingPlayhead = true;\n                        var val = Animation.prototype.totalTime.apply(this, arguments);\n                        this._forcingPlayhead = false;\n                        return val;\n                    };\n                    p.duration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                this.totalDuration();\n                            }\n                            return this._duration;\n                        }\n                        if (this.duration() !== 0 && value !== 0) {\n                            this.timeScale(this._duration / value);\n                        }\n                        return this;\n                    };\n                    p.totalDuration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                var max = 0, tween = this._last, prevStart = 999999999999, prev, end;\n                                while (tween) {\n                                    prev = tween._prev;\n                                    if (tween._dirty) {\n                                        tween.totalDuration();\n                                    }\n                                    if (tween._startTime > prevStart && this._sortChildren && !tween._paused) {\n                                        this.add(tween, tween._startTime - tween._delay);\n                                    } else {\n                                        prevStart = tween._startTime;\n                                    }\n                                    if (tween._startTime < 0 && !tween._paused) {\n                                        max -= tween._startTime;\n                                        if (this._timeline.smoothChildTiming) {\n                                            this._startTime += tween._startTime / this._timeScale;\n                                        }\n                                        this.shiftChildren(-tween._startTime, false, -9999999999);\n                                        prevStart = 0;\n                                    }\n                                    end = tween._startTime + tween._totalDuration / tween._timeScale;\n                                    if (end > max) {\n                                        max = end;\n                                    }\n                                    tween = prev;\n                                }\n                                this._duration = this._totalDuration = max;\n                                this._dirty = false;\n                            }\n                            return this._totalDuration;\n                        }\n                        return value && this.totalDuration() ? this.timeScale(this._totalDuration / value) : this;\n                    };\n                    p.paused = function(value) {\n                        if (!value) {\n                            var tween = this._first, time = this._time;\n                            while (tween) {\n                                if (tween._startTime === time && tween.data === \"isPause\") {\n                                    tween._rawPrevTime = 0;\n                                }\n                                tween = tween._next;\n                            }\n                        }\n                        return Animation.prototype.paused.apply(this, arguments);\n                    };\n                    p.usesFrames = function() {\n                        var tl = this._timeline;\n                        while (tl._timeline) {\n                            tl = tl._timeline;\n                        }\n                        return tl === Animation._rootFramesTimeline;\n                    };\n                    p.rawTime = function() {\n                        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;\n                    };\n                    return TimelineLite;\n                }, true);\n                _gsScope._gsDefine(\"TimelineMax\", [ \"TimelineLite\", \"TweenLite\", \"easing.Ease\" ], function(TimelineLite, TweenLite, Ease) {\n                    var TimelineMax = function(vars) {\n                        TimelineLite.call(this, vars);\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._cycle = 0;\n                        this._yoyo = this.vars.yoyo === true;\n                        this._dirty = true;\n                    }, _tinyNum = 1e-10, TweenLiteInternals = TweenLite._internals, _lazyTweens = TweenLiteInternals.lazyTweens, _lazyRender = TweenLiteInternals.lazyRender, _easeNone = new Ease(null, null, 1, 0), p = TimelineMax.prototype = new TimelineLite();\n                    p.constructor = TimelineMax;\n                    p.kill()._gc = false;\n                    TimelineMax.version = \"1.18.5\";\n                    p.invalidate = function() {\n                        this._yoyo = this.vars.yoyo === true;\n                        this._repeat = this.vars.repeat || 0;\n                        this._repeatDelay = this.vars.repeatDelay || 0;\n                        this._uncache(true);\n                        return TimelineLite.prototype.invalidate.call(this);\n                    };\n                    p.addCallback = function(callback, position, params, scope) {\n                        return this.add(TweenLite.delayedCall(0, callback, params, scope), position);\n                    };\n                    p.removeCallback = function(callback, position) {\n                        if (callback) {\n                            if (position == null) {\n                                this._kill(null, callback);\n                            } else {\n                                var a = this.getTweensOf(callback, false), i = a.length, time = this._parseTimeOrLabel(position);\n                                while (--i > -1) {\n                                    if (a[i]._startTime === time) {\n                                        a[i]._enabled(false, false);\n                                    }\n                                }\n                            }\n                        }\n                        return this;\n                    };\n                    p.removePause = function(position) {\n                        return this.removeCallback(TimelineLite._internals.pauseCallback, position);\n                    };\n                    p.tweenTo = function(position, vars) {\n                        vars = vars || {};\n                        var copy = {\n                            ease: _easeNone,\n                            useFrames: this.usesFrames(),\n                            immediateRender: false\n                        }, duration, p, t;\n                        for (p in vars) {\n                            copy[p] = vars[p];\n                        }\n                        copy.time = this._parseTimeOrLabel(position);\n                        duration = Math.abs(Number(copy.time) - this._time) / this._timeScale || .001;\n                        t = new TweenLite(this, duration, copy);\n                        copy.onStart = function() {\n                            t.target.paused(true);\n                            if (t.vars.time !== t.target.time() && duration === t.duration()) {\n                                t.duration(Math.abs(t.vars.time - t.target.time()) / t.target._timeScale);\n                            }\n                            if (vars.onStart) {\n                                t._callback(\"onStart\");\n                            }\n                        };\n                        return t;\n                    };\n                    p.tweenFromTo = function(fromPosition, toPosition, vars) {\n                        vars = vars || {};\n                        fromPosition = this._parseTimeOrLabel(fromPosition);\n                        vars.startAt = {\n                            onComplete: this.seek,\n                            onCompleteParams: [ fromPosition ],\n                            callbackScope: this\n                        };\n                        vars.immediateRender = vars.immediateRender !== false;\n                        var t = this.tweenTo(toPosition, vars);\n                        return t.duration(Math.abs(t.vars.time - fromPosition) / this._timeScale || .001);\n                    };\n                    p.render = function(time, suppressEvents, force) {\n                        if (this._gc) {\n                            this._enabled(true, false);\n                        }\n                        var totalDur = !this._dirty ? this._totalDuration : this.totalDuration(), dur = this._duration, prevTime = this._time, prevTotalTime = this._totalTime, prevStart = this._startTime, prevTimeScale = this._timeScale, prevRawPrevTime = this._rawPrevTime, prevPaused = this._paused, prevCycle = this._cycle, tween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n                        if (time >= totalDur - 1e-7) {\n                            if (!this._locked) {\n                                this._totalTime = totalDur;\n                                this._cycle = this._repeat;\n                            }\n                            if (!this._reversed) if (!this._hasPausedChild()) {\n                                isComplete = true;\n                                callback = \"onComplete\";\n                                internalForce = !!this._timeline.autoRemoveChildren;\n                                if (this._duration === 0) if (time <= 0 && time >= -1e-7 || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n                                    internalForce = true;\n                                    if (prevRawPrevTime > _tinyNum) {\n                                        callback = \"onReverseComplete\";\n                                    }\n                                }\n                            }\n                            this._rawPrevTime = this._duration || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                            if (this._yoyo && (this._cycle & 1) !== 0) {\n                                this._time = time = 0;\n                            } else {\n                                this._time = dur;\n                                time = dur + 1e-4;\n                            }\n                        } else if (time < 1e-7) {\n                            if (!this._locked) {\n                                this._totalTime = this._cycle = 0;\n                            }\n                            this._time = 0;\n                            if (prevTime !== 0 || dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || time < 0 && prevRawPrevTime >= 0) && !this._locked) {\n                                callback = \"onReverseComplete\";\n                                isComplete = this._reversed;\n                            }\n                            if (time < 0) {\n                                this._active = false;\n                                if (this._timeline.autoRemoveChildren && this._reversed) {\n                                    internalForce = isComplete = true;\n                                    callback = \"onReverseComplete\";\n                                } else if (prevRawPrevTime >= 0 && this._first) {\n                                    internalForce = true;\n                                }\n                                this._rawPrevTime = time;\n                            } else {\n                                this._rawPrevTime = dur || !suppressEvents || time || this._rawPrevTime === time ? time : _tinyNum;\n                                if (time === 0 && isComplete) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime === 0) {\n                                        if (!tween._duration) {\n                                            isComplete = false;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                }\n                                time = 0;\n                                if (!this._initted) {\n                                    internalForce = true;\n                                }\n                            }\n                        } else {\n                            if (dur === 0 && prevRawPrevTime < 0) {\n                                internalForce = true;\n                            }\n                            this._time = this._rawPrevTime = time;\n                            if (!this._locked) {\n                                this._totalTime = time;\n                                if (this._repeat !== 0) {\n                                    cycleDuration = dur + this._repeatDelay;\n                                    this._cycle = this._totalTime / cycleDuration >> 0;\n                                    if (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n                                        this._cycle--;\n                                    }\n                                    this._time = this._totalTime - this._cycle * cycleDuration;\n                                    if (this._yoyo) if ((this._cycle & 1) !== 0) {\n                                        this._time = dur - this._time;\n                                    }\n                                    if (this._time > dur) {\n                                        this._time = dur;\n                                        time = dur + 1e-4;\n                                    } else if (this._time < 0) {\n                                        this._time = time = 0;\n                                    } else {\n                                        time = this._time;\n                                    }\n                                }\n                            }\n                            if (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n                                time = this._time;\n                                if (time >= prevTime) {\n                                    tween = this._first;\n                                    while (tween && tween._startTime <= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._next;\n                                    }\n                                } else {\n                                    tween = this._last;\n                                    while (tween && tween._startTime >= time && !pauseTween) {\n                                        if (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n                                            pauseTween = tween;\n                                        }\n                                        tween = tween._prev;\n                                    }\n                                }\n                                if (pauseTween) {\n                                    this._time = time = pauseTween._startTime;\n                                    this._totalTime = time + this._cycle * (this._totalDuration + this._repeatDelay);\n                                }\n                            }\n                        }\n                        if (this._cycle !== prevCycle) if (!this._locked) {\n                            var backwards = this._yoyo && (prevCycle & 1) !== 0, wrap = backwards === (this._yoyo && (this._cycle & 1) !== 0), recTotalTime = this._totalTime, recCycle = this._cycle, recRawPrevTime = this._rawPrevTime, recTime = this._time;\n                            this._totalTime = prevCycle * dur;\n                            if (this._cycle < prevCycle) {\n                                backwards = !backwards;\n                            } else {\n                                this._totalTime += dur;\n                            }\n                            this._time = prevTime;\n                            this._rawPrevTime = dur === 0 ? prevRawPrevTime - 1e-4 : prevRawPrevTime;\n                            this._cycle = prevCycle;\n                            this._locked = true;\n                            prevTime = backwards ? 0 : dur;\n                            this.render(prevTime, suppressEvents, dur === 0);\n                            if (!suppressEvents) if (!this._gc) {\n                                if (this.vars.onRepeat) {\n                                    this._callback(\"onRepeat\");\n                                }\n                            }\n                            if (prevTime !== this._time) {\n                                return;\n                            }\n                            if (wrap) {\n                                prevTime = backwards ? dur + 1e-4 : -1e-4;\n                                this.render(prevTime, true, false);\n                            }\n                            this._locked = false;\n                            if (this._paused && !prevPaused) {\n                                return;\n                            }\n                            this._time = recTime;\n                            this._totalTime = recTotalTime;\n                            this._cycle = recCycle;\n                            this._rawPrevTime = recRawPrevTime;\n                        }\n                        if ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n                            if (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) {\n                                this._callback(\"onUpdate\");\n                            }\n                            return;\n                        } else if (!this._initted) {\n                            this._initted = true;\n                        }\n                        if (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n                            this._active = true;\n                        }\n                        if (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n                            this._callback(\"onStart\");\n                        }\n                        curTime = this._time;\n                        if (curTime >= prevTime) {\n                            tween = this._first;\n                            while (tween) {\n                                next = tween._next;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= this._time && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        } else {\n                            tween = this._last;\n                            while (tween) {\n                                next = tween._prev;\n                                if (curTime !== this._time || this._paused && !prevPaused) {\n                                    break;\n                                } else if (tween._active || tween._startTime <= prevTime && !tween._paused && !tween._gc) {\n                                    if (pauseTween === tween) {\n                                        pauseTween = tween._prev;\n                                        while (pauseTween && pauseTween.endTime() > this._time) {\n                                            pauseTween.render(pauseTween._reversed ? pauseTween.totalDuration() - (time - pauseTween._startTime) * pauseTween._timeScale : (time - pauseTween._startTime) * pauseTween._timeScale, suppressEvents, force);\n                                            pauseTween = pauseTween._prev;\n                                        }\n                                        pauseTween = null;\n                                        this.pause();\n                                    }\n                                    if (!tween._reversed) {\n                                        tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    } else {\n                                        tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                                    }\n                                }\n                                tween = next;\n                            }\n                        }\n                        if (this._onUpdate) if (!suppressEvents) {\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            this._callback(\"onUpdate\");\n                        }\n                        if (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) {\n                            if (isComplete) {\n                                if (_lazyTweens.length) {\n                                    _lazyRender();\n                                }\n                                if (this._timeline.autoRemoveChildren) {\n                                    this._enabled(false, false);\n                                }\n                                this._active = false;\n                            }\n                            if (!suppressEvents && this.vars[callback]) {\n                                this._callback(callback);\n                            }\n                        }\n                    };\n                    p.getActive = function(nested, tweens, timelines) {\n                        if (nested == null) {\n                            nested = true;\n                        }\n                        if (tweens == null) {\n                            tweens = true;\n                        }\n                        if (timelines == null) {\n                            timelines = false;\n                        }\n                        var a = [], all = this.getChildren(nested, tweens, timelines), cnt = 0, l = all.length, i, tween;\n                        for (i = 0; i < l; i++) {\n                            tween = all[i];\n                            if (tween.isActive()) {\n                                a[cnt++] = tween;\n                            }\n                        }\n                        return a;\n                    };\n                    p.getLabelAfter = function(time) {\n                        if (!time) if (time !== 0) {\n                            time = this._time;\n                        }\n                        var labels = this.getLabelsArray(), l = labels.length, i;\n                        for (i = 0; i < l; i++) {\n                            if (labels[i].time > time) {\n                                return labels[i].name;\n                            }\n                        }\n                        return null;\n                    };\n                    p.getLabelBefore = function(time) {\n                        if (time == null) {\n                            time = this._time;\n                        }\n                        var labels = this.getLabelsArray(), i = labels.length;\n                        while (--i > -1) {\n                            if (labels[i].time < time) {\n                                return labels[i].name;\n                            }\n                        }\n                        return null;\n                    };\n                    p.getLabelsArray = function() {\n                        var a = [], cnt = 0, p;\n                        for (p in this._labels) {\n                            a[cnt++] = {\n                                time: this._labels[p],\n                                name: p\n                            };\n                        }\n                        a.sort(function(a, b) {\n                            return a.time - b.time;\n                        });\n                        return a;\n                    };\n                    p.progress = function(value, suppressEvents) {\n                        return !arguments.length ? this._time / this.duration() : this.totalTime(this.duration() * (this._yoyo && (this._cycle & 1) !== 0 ? 1 - value : value) + this._cycle * (this._duration + this._repeatDelay), suppressEvents);\n                    };\n                    p.totalProgress = function(value, suppressEvents) {\n                        return !arguments.length ? this._totalTime / this.totalDuration() : this.totalTime(this.totalDuration() * value, suppressEvents);\n                    };\n                    p.totalDuration = function(value) {\n                        if (!arguments.length) {\n                            if (this._dirty) {\n                                TimelineLite.prototype.totalDuration.call(this);\n                                this._totalDuration = this._repeat === -1 ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat;\n                            }\n                            return this._totalDuration;\n                        }\n                        return this._repeat === -1 || !value ? this : this.timeScale(this.totalDuration() / value);\n                    };\n                    p.time = function(value, suppressEvents) {\n                        if (!arguments.length) {\n                            return this._time;\n                        }\n                        if (this._dirty) {\n                            this.totalDuration();\n                        }\n                        if (value > this._duration) {\n                            value = this._duration;\n                        }\n                        if (this._yoyo && (this._cycle & 1) !== 0) {\n                            value = this._duration - value + this._cycle * (this._duration + this._repeatDelay);\n                        } else if (this._repeat !== 0) {\n                            value += this._cycle * (this._duration + this._repeatDelay);\n                        }\n                        return this.totalTime(value, suppressEvents);\n                    };\n                    p.repeat = function(value) {\n                        if (!arguments.length) {\n                            return this._repeat;\n                        }\n                        this._repeat = value;\n                        return this._uncache(true);\n                    };\n                    p.repeatDelay = function(value) {\n                        if (!arguments.length) {\n                            return this._repeatDelay;\n                        }\n                        this._repeatDelay = value;\n                        return this._uncache(true);\n                    };\n                    p.yoyo = function(value) {\n                        if (!arguments.length) {\n                            return this._yoyo;\n                        }\n                        this._yoyo = value;\n                        return this;\n                    };\n                    p.currentLabel = function(value) {\n                        if (!arguments.length) {\n                            return this.getLabelBefore(this._time + 1e-8);\n                        }\n                        return this.seek(value, true);\n                    };\n                    return TimelineMax;\n                }, true);\n                (function() {\n                    var _RAD2DEG = 180 / Math.PI, _r1 = [], _r2 = [], _r3 = [], _corProps = {}, _globals = _gsScope._gsDefine.globals, Segment = function(a, b, c, d) {\n                        if (c === d) {\n                            c = d - (d - b) / 1e6;\n                        }\n                        if (a === b) {\n                            b = a + (c - a) / 1e6;\n                        }\n                        this.a = a;\n                        this.b = b;\n                        this.c = c;\n                        this.d = d;\n                        this.da = d - a;\n                        this.ca = c - a;\n                        this.ba = b - a;\n                    }, _correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\", cubicToQuadratic = function(a, b, c, d) {\n                        var q1 = {\n                            a: a\n                        }, q2 = {}, q3 = {}, q4 = {\n                            c: d\n                        }, mab = (a + b) / 2, mbc = (b + c) / 2, mcd = (c + d) / 2, mabc = (mab + mbc) / 2, mbcd = (mbc + mcd) / 2, m8 = (mbcd - mabc) / 8;\n                        q1.b = mab + (a - mab) / 4;\n                        q2.b = mabc + m8;\n                        q1.c = q2.a = (q1.b + q2.b) / 2;\n                        q2.c = q3.a = (mabc + mbcd) / 2;\n                        q3.b = mbcd - m8;\n                        q4.b = mcd + (d - mcd) / 4;\n                        q3.c = q4.a = (q3.b + q4.b) / 2;\n                        return [ q1, q2, q3, q4 ];\n                    }, _calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n                        var l = a.length - 1, ii = 0, cp1 = a[0].a, i, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n                        for (i = 0; i < l; i++) {\n                            seg = a[ii];\n                            p1 = seg.a;\n                            p2 = seg.d;\n                            p3 = a[ii + 1].d;\n                            if (correlate) {\n                                r1 = _r1[i];\n                                r2 = _r2[i];\n                                tl = (r2 + r1) * curviness * .25 / (basic ? .5 : _r3[i] || .5);\n                                m1 = p2 - (p2 - p1) * (basic ? curviness * .5 : r1 !== 0 ? tl / r1 : 0);\n                                m2 = p2 + (p3 - p2) * (basic ? curviness * .5 : r2 !== 0 ? tl / r2 : 0);\n                                mm = p2 - (m1 + ((m2 - m1) * (r1 * 3 / (r1 + r2) + .5) / 4 || 0));\n                            } else {\n                                m1 = p2 - (p2 - p1) * curviness * .5;\n                                m2 = p2 + (p3 - p2) * curviness * .5;\n                                mm = p2 - (m1 + m2) / 2;\n                            }\n                            m1 += mm;\n                            m2 += mm;\n                            seg.c = cp2 = m1;\n                            if (i !== 0) {\n                                seg.b = cp1;\n                            } else {\n                                seg.b = cp1 = seg.a + (seg.c - seg.a) * .6;\n                            }\n                            seg.da = p2 - p1;\n                            seg.ca = cp2 - p1;\n                            seg.ba = cp1 - p1;\n                            if (quad) {\n                                qb = cubicToQuadratic(p1, cp1, cp2, p2);\n                                a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n                                ii += 4;\n                            } else {\n                                ii++;\n                            }\n                            cp1 = m2;\n                        }\n                        seg = a[ii];\n                        seg.b = cp1;\n                        seg.c = cp1 + (seg.d - cp1) * .4;\n                        seg.da = seg.d - seg.a;\n                        seg.ca = seg.c - seg.a;\n                        seg.ba = cp1 - seg.a;\n                        if (quad) {\n                            qb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n                            a.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n                        }\n                    }, _parseAnchors = function(values, p, correlate, prepend) {\n                        var a = [], l, i, p1, p2, p3, tmp;\n                        if (prepend) {\n                            values = [ prepend ].concat(values);\n                            i = values.length;\n                            while (--i > -1) {\n                                if (typeof (tmp = values[i][p]) === \"string\") if (tmp.charAt(1) === \"=\") {\n                                    values[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2));\n                                }\n                            }\n                        }\n                        l = values.length - 2;\n                        if (l < 0) {\n                            a[0] = new Segment(values[0][p], 0, 0, values[l < -1 ? 0 : 1][p]);\n                            return a;\n                        }\n                        for (i = 0; i < l; i++) {\n                            p1 = values[i][p];\n                            p2 = values[i + 1][p];\n                            a[i] = new Segment(p1, 0, 0, p2);\n                            if (correlate) {\n                                p3 = values[i + 2][p];\n                                _r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n                                _r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n                            }\n                        }\n                        a[i] = new Segment(values[i][p], 0, 0, values[i + 1][p]);\n                        return a;\n                    }, bezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n                        var obj = {}, props = [], first = prepend || values[0], i, p, a, j, r, l, seamless, last;\n                        correlate = typeof correlate === \"string\" ? \",\" + correlate + \",\" : _correlate;\n                        if (curviness == null) {\n                            curviness = 1;\n                        }\n                        for (p in values[0]) {\n                            props.push(p);\n                        }\n                        if (values.length > 1) {\n                            last = values[values.length - 1];\n                            seamless = true;\n                            i = props.length;\n                            while (--i > -1) {\n                                p = props[i];\n                                if (Math.abs(first[p] - last[p]) > .05) {\n                                    seamless = false;\n                                    break;\n                                }\n                            }\n                            if (seamless) {\n                                values = values.concat();\n                                if (prepend) {\n                                    values.unshift(prepend);\n                                }\n                                values.push(values[1]);\n                                prepend = values[values.length - 3];\n                            }\n                        }\n                        _r1.length = _r2.length = _r3.length = 0;\n                        i = props.length;\n                        while (--i > -1) {\n                            p = props[i];\n                            _corProps[p] = correlate.indexOf(\",\" + p + \",\") !== -1;\n                            obj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n                        }\n                        i = _r1.length;\n                        while (--i > -1) {\n                            _r1[i] = Math.sqrt(_r1[i]);\n                            _r2[i] = Math.sqrt(_r2[i]);\n                        }\n                        if (!basic) {\n                            i = props.length;\n                            while (--i > -1) {\n                                if (_corProps[p]) {\n                                    a = obj[props[i]];\n                                    l = a.length - 1;\n                                    for (j = 0; j < l; j++) {\n                                        r = a[j + 1].da / _r2[j] + a[j].da / _r1[j] || 0;\n                                        _r3[j] = (_r3[j] || 0) + r * r;\n                                    }\n                                }\n                            }\n                            i = _r3.length;\n                            while (--i > -1) {\n                                _r3[i] = Math.sqrt(_r3[i]);\n                            }\n                        }\n                        i = props.length;\n                        j = quadratic ? 4 : 1;\n                        while (--i > -1) {\n                            p = props[i];\n                            a = obj[p];\n                            _calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]);\n                            if (seamless) {\n                                a.splice(0, j);\n                                a.splice(a.length - j, j);\n                            }\n                        }\n                        return obj;\n                    }, _parseBezierData = function(values, type, prepend) {\n                        type = type || \"soft\";\n                        var obj = {}, inc = type === \"cubic\" ? 3 : 2, soft = type === \"soft\", props = [], a, b, c, d, cur, i, j, l, p, cnt, tmp;\n                        if (soft && prepend) {\n                            values = [ prepend ].concat(values);\n                        }\n                        if (values == null || values.length < inc + 1) {\n                            throw \"invalid Bezier data\";\n                        }\n                        for (p in values[0]) {\n                            props.push(p);\n                        }\n                        i = props.length;\n                        while (--i > -1) {\n                            p = props[i];\n                            obj[p] = cur = [];\n                            cnt = 0;\n                            l = values.length;\n                            for (j = 0; j < l; j++) {\n                                a = prepend == null ? values[j][p] : typeof (tmp = values[j][p]) === \"string\" && tmp.charAt(1) === \"=\" ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n                                if (soft) if (j > 1) if (j < l - 1) {\n                                    cur[cnt++] = (a + cur[cnt - 2]) / 2;\n                                }\n                                cur[cnt++] = a;\n                            }\n                            l = cnt - inc + 1;\n                            cnt = 0;\n                            for (j = 0; j < l; j += inc) {\n                                a = cur[j];\n                                b = cur[j + 1];\n                                c = cur[j + 2];\n                                d = inc === 2 ? 0 : cur[j + 3];\n                                cur[cnt++] = tmp = inc === 3 ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n                            }\n                            cur.length = cnt;\n                        }\n                        return obj;\n                    }, _addCubicLengths = function(a, steps, resolution) {\n                        var inc = 1 / resolution, j = a.length, d, d1, s, da, ca, ba, p, i, inv, bez, index;\n                        while (--j > -1) {\n                            bez = a[j];\n                            s = bez.a;\n                            da = bez.d - s;\n                            ca = bez.c - s;\n                            ba = bez.b - s;\n                            d = d1 = 0;\n                            for (i = 1; i <= resolution; i++) {\n                                p = inc * i;\n                                inv = 1 - p;\n                                d = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n                                index = j * resolution + i - 1;\n                                steps[index] = (steps[index] || 0) + d * d;\n                            }\n                        }\n                    }, _parseLengthData = function(obj, resolution) {\n                        resolution = resolution >> 0 || 6;\n                        var a = [], lengths = [], d = 0, total = 0, threshold = resolution - 1, segments = [], curLS = [], p, i, l, index;\n                        for (p in obj) {\n                            _addCubicLengths(obj[p], a, resolution);\n                        }\n                        l = a.length;\n                        for (i = 0; i < l; i++) {\n                            d += Math.sqrt(a[i]);\n                            index = i % resolution;\n                            curLS[index] = d;\n                            if (index === threshold) {\n                                total += d;\n                                index = i / resolution >> 0;\n                                segments[index] = curLS;\n                                lengths[index] = total;\n                                d = 0;\n                                curLS = [];\n                            }\n                        }\n                        return {\n                            length: total,\n                            lengths: lengths,\n                            segments: segments\n                        };\n                    }, BezierPlugin = _gsScope._gsDefine.plugin({\n                        propName: \"bezier\",\n                        priority: -1,\n                        version: \"1.3.6\",\n                        API: 2,\n                        global: true,\n                        init: function(target, vars, tween) {\n                            this._target = target;\n                            if (vars instanceof Array) {\n                                vars = {\n                                    values: vars\n                                };\n                            }\n                            this._func = {};\n                            this._round = {};\n                            this._props = [];\n                            this._timeRes = vars.timeResolution == null ? 6 : parseInt(vars.timeResolution, 10);\n                            var values = vars.values || [], first = {}, second = values[0], autoRotate = vars.autoRotate || tween.vars.orientToBezier, p, isFunc, i, j, prepend;\n                            this._autoRotate = autoRotate ? autoRotate instanceof Array ? autoRotate : [ [ \"x\", \"y\", \"rotation\", autoRotate === true ? 0 : Number(autoRotate) || 0 ] ] : null;\n                            for (p in second) {\n                                this._props.push(p);\n                            }\n                            i = this._props.length;\n                            while (--i > -1) {\n                                p = this._props[i];\n                                this._overwriteProps.push(p);\n                                isFunc = this._func[p] = typeof target[p] === \"function\";\n                                first[p] = !isFunc ? parseFloat(target[p]) : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]();\n                                if (!prepend) if (first[p] !== values[0][p]) {\n                                    prepend = first;\n                                }\n                            }\n                            this._beziers = vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\" ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, vars.type === \"thruBasic\", vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n                            this._segCount = this._beziers[p].length;\n                            if (this._timeRes) {\n                                var ld = _parseLengthData(this._beziers, this._timeRes);\n                                this._length = ld.length;\n                                this._lengths = ld.lengths;\n                                this._segments = ld.segments;\n                                this._l1 = this._li = this._s1 = this._si = 0;\n                                this._l2 = this._lengths[0];\n                                this._curSeg = this._segments[0];\n                                this._s2 = this._curSeg[0];\n                                this._prec = 1 / this._curSeg.length;\n                            }\n                            if (autoRotate = this._autoRotate) {\n                                this._initialRotations = [];\n                                if (!(autoRotate[0] instanceof Array)) {\n                                    this._autoRotate = autoRotate = [ autoRotate ];\n                                }\n                                i = autoRotate.length;\n                                while (--i > -1) {\n                                    for (j = 0; j < 3; j++) {\n                                        p = autoRotate[i][j];\n                                        this._func[p] = typeof target[p] === \"function\" ? target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)] : false;\n                                    }\n                                    p = autoRotate[i][2];\n                                    this._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n                                }\n                            }\n                            this._startRatio = tween.vars.runBackwards ? 1 : 0;\n                            return true;\n                        },\n                        set: function(v) {\n                            var segments = this._segCount, func = this._func, target = this._target, notStart = v !== this._startRatio, curIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n                            if (!this._timeRes) {\n                                curIndex = v < 0 ? 0 : v >= 1 ? segments - 1 : segments * v >> 0;\n                                t = (v - curIndex * (1 / segments)) * segments;\n                            } else {\n                                lengths = this._lengths;\n                                curSeg = this._curSeg;\n                                v *= this._length;\n                                i = this._li;\n                                if (v > this._l2 && i < segments - 1) {\n                                    l = segments - 1;\n                                    while (i < l && (this._l2 = lengths[++i]) <= v) {}\n                                    this._l1 = lengths[i - 1];\n                                    this._li = i;\n                                    this._curSeg = curSeg = this._segments[i];\n                                    this._s2 = curSeg[this._s1 = this._si = 0];\n                                } else if (v < this._l1 && i > 0) {\n                                    while (i > 0 && (this._l1 = lengths[--i]) >= v) {}\n                                    if (i === 0 && v < this._l1) {\n                                        this._l1 = 0;\n                                    } else {\n                                        i++;\n                                    }\n                                    this._l2 = lengths[i];\n                                    this._li = i;\n                                    this._curSeg = curSeg = this._segments[i];\n                                    this._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n                                    this._s2 = curSeg[this._si];\n                                }\n                                curIndex = i;\n                                v -= this._l1;\n                                i = this._si;\n                                if (v > this._s2 && i < curSeg.length - 1) {\n                                    l = curSeg.length - 1;\n                                    while (i < l && (this._s2 = curSeg[++i]) <= v) {}\n                                    this._s1 = curSeg[i - 1];\n                                    this._si = i;\n                                } else if (v < this._s1 && i > 0) {\n                                    while (i > 0 && (this._s1 = curSeg[--i]) >= v) {}\n                                    if (i === 0 && v < this._s1) {\n                                        this._s1 = 0;\n                                    } else {\n                                        i++;\n                                    }\n                                    this._s2 = curSeg[i];\n                                    this._si = i;\n                                }\n                                t = (i + (v - this._s1) / (this._s2 - this._s1)) * this._prec || 0;\n                            }\n                            inv = 1 - t;\n                            i = this._props.length;\n                            while (--i > -1) {\n                                p = this._props[i];\n                                b = this._beziers[p][curIndex];\n                                val = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n                                if (this._round[p]) {\n                                    val = Math.round(val);\n                                }\n                                if (func[p]) {\n                                    target[p](val);\n                                } else {\n                                    target[p] = val;\n                                }\n                            }\n                            if (this._autoRotate) {\n                                var ar = this._autoRotate, b2, x1, y1, x2, y2, add, conv;\n                                i = ar.length;\n                                while (--i > -1) {\n                                    p = ar[i][2];\n                                    add = ar[i][3] || 0;\n                                    conv = ar[i][4] === true ? 1 : _RAD2DEG;\n                                    b = this._beziers[ar[i][0]];\n                                    b2 = this._beziers[ar[i][1]];\n                                    if (b && b2) {\n                                        b = b[curIndex];\n                                        b2 = b2[curIndex];\n                                        x1 = b.a + (b.b - b.a) * t;\n                                        x2 = b.b + (b.c - b.b) * t;\n                                        x1 += (x2 - x1) * t;\n                                        x2 += (b.c + (b.d - b.c) * t - x2) * t;\n                                        y1 = b2.a + (b2.b - b2.a) * t;\n                                        y2 = b2.b + (b2.c - b2.b) * t;\n                                        y1 += (y2 - y1) * t;\n                                        y2 += (b2.c + (b2.d - b2.c) * t - y2) * t;\n                                        val = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n                                        if (func[p]) {\n                                            target[p](val);\n                                        } else {\n                                            target[p] = val;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }), p = BezierPlugin.prototype;\n                    BezierPlugin.bezierThrough = bezierThrough;\n                    BezierPlugin.cubicToQuadratic = cubicToQuadratic;\n                    BezierPlugin._autoCSS = true;\n                    BezierPlugin.quadraticToCubic = function(a, b, c) {\n                        return new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n                    };\n                    BezierPlugin._cssRegister = function() {\n                        var CSSPlugin = _globals.CSSPlugin;\n                        if (!CSSPlugin) {\n                            return;\n                        }\n                        var _internals = CSSPlugin._internals, _parseToProxy = _internals._parseToProxy, _setPluginRatio = _internals._setPluginRatio, CSSPropTween = _internals.CSSPropTween;\n                        _internals._registerComplexSpecialProp(\"bezier\", {\n                            parser: function(t, e, prop, cssp, pt, plugin) {\n                                if (e instanceof Array) {\n                                    e = {\n                                        values: e\n                                    };\n                                }\n                                plugin = new BezierPlugin();\n                                var values = e.values, l = values.length - 1, pluginValues = [], v = {}, i, p, data;\n                                if (l < 0) {\n                                    return pt;\n                                }\n                                for (i = 0; i <= l; i++) {\n                                    data = _parseToProxy(t, values[i], cssp, pt, plugin, l !== i);\n                                    pluginValues[i] = data.end;\n                                }\n                                for (p in e) {\n                                    v[p] = e[p];\n                                }\n                                v.values = pluginValues;\n                                pt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n                                pt.data = data;\n                                pt.plugin = plugin;\n                                pt.setRatio = _setPluginRatio;\n                                if (v.autoRotate === 0) {\n                                    v.autoRotate = true;\n                                }\n                                if (v.autoRotate && !(v.autoRotate instanceof Array)) {\n                                    i = v.autoRotate === true ? 0 : Number(v.autoRotate);\n                                    v.autoRotate = data.end.left != null ? [ [ \"left\", \"top\", \"rotation\", i, false ] ] : data.end.x != null ? [ [ \"x\", \"y\", \"rotation\", i, false ] ] : false;\n                                }\n                                if (v.autoRotate) {\n                                    if (!cssp._transform) {\n                                        cssp._enableTransforms(false);\n                                    }\n                                    data.autoRotate = cssp._target._gsTransform;\n                                    data.proxy.rotation = data.autoRotate.rotation || 0;\n                                }\n                                plugin._onInitTween(data.proxy, v, cssp._tween);\n                                return pt;\n                            }\n                        });\n                    };\n                    p._roundProps = function(lookup, value) {\n                        var op = this._overwriteProps, i = op.length;\n                        while (--i > -1) {\n                            if (lookup[op[i]] || lookup.bezier || lookup.bezierThrough) {\n                                this._round[op[i]] = value;\n                            }\n                        }\n                    };\n                    p._kill = function(lookup) {\n                        var a = this._props, p, i;\n                        for (p in this._beziers) {\n                            if (p in lookup) {\n                                delete this._beziers[p];\n                                delete this._func[p];\n                                i = a.length;\n                                while (--i > -1) {\n                                    if (a[i] === p) {\n                                        a.splice(i, 1);\n                                    }\n                                }\n                            }\n                        }\n                        return this._super._kill.call(this, lookup);\n                    };\n                })();\n                _gsScope._gsDefine(\"plugins.CSSPlugin\", [ \"plugins.TweenPlugin\", \"TweenLite\" ], function(TweenPlugin, TweenLite) {\n                    var CSSPlugin = function() {\n                        TweenPlugin.call(this, \"css\");\n                        this._overwriteProps.length = 0;\n                        this.setRatio = CSSPlugin.prototype.setRatio;\n                    }, _globals = _gsScope._gsDefine.globals, _hasPriority, _suffixMap, _cs, _overwriteProps, _specialProps = {}, p = CSSPlugin.prototype = new TweenPlugin(\"css\");\n                    p.constructor = CSSPlugin;\n                    CSSPlugin.version = \"1.18.5\";\n                    CSSPlugin.API = 2;\n                    CSSPlugin.defaultTransformPerspective = 0;\n                    CSSPlugin.defaultSkewType = \"compensated\";\n                    CSSPlugin.defaultSmoothOrigin = true;\n                    p = \"px\";\n                    CSSPlugin.suffixMap = {\n                        top: p,\n                        right: p,\n                        bottom: p,\n                        left: p,\n                        width: p,\n                        height: p,\n                        fontSize: p,\n                        padding: p,\n                        margin: p,\n                        perspective: p,\n                        lineHeight: \"\"\n                    };\n                    var _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g, _relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g, _valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, _NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, _suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g, _opacityExp = /opacity *= *([^)]*)/i, _opacityValExp = /opacity:([^;]*)/i, _alphaFilterExp = /alpha\\(opacity *=.+?\\)/i, _rgbhslExp = /^(rgb|hsl)/, _capsExp = /([A-Z])/g, _camelExp = /-([a-z])/gi, _urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, _camelFunc = function(s, g) {\n                        return g.toUpperCase();\n                    }, _horizExp = /(?:Left|Right|Width)/i, _ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi, _ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i, _commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, _complexExp = /[\\s,\\(]/i, _DEG2RAD = Math.PI / 180, _RAD2DEG = 180 / Math.PI, _forcePT = {}, _doc = document, _createElement = function(type) {\n                        return _doc.createElementNS ? _doc.createElementNS(\"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n                    }, _tempDiv = _createElement(\"div\"), _tempImg = _createElement(\"img\"), _internals = CSSPlugin._internals = {\n                        _specialProps: _specialProps\n                    }, _agent = navigator.userAgent, _autoRound, _reqSafariFix, _isSafari, _isFirefox, _isSafariLT6, _ieVers, _supportsOpacity = function() {\n                        var i = _agent.indexOf(\"Android\"), a = _createElement(\"a\");\n                        _isSafari = _agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || Number(_agent.substr(i + 8, 1)) > 3);\n                        _isSafariLT6 = _isSafari && Number(_agent.substr(_agent.indexOf(\"Version/\") + 8, 1)) < 6;\n                        _isFirefox = _agent.indexOf(\"Firefox\") !== -1;\n                        if (/MSIE ([0-9]{1,}[\\.0-9]{0,})/.exec(_agent) || /Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/.exec(_agent)) {\n                            _ieVers = parseFloat(RegExp.$1);\n                        }\n                        if (!a) {\n                            return false;\n                        }\n                        a.style.cssText = \"top:1px;opacity:.55;\";\n                        return /^0.55/.test(a.style.opacity);\n                    }(), _getIEOpacity = function(v) {\n                        return _opacityExp.test(typeof v === \"string\" ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ? parseFloat(RegExp.$1) / 100 : 1;\n                    }, _log = function(s) {\n                        if (window.console) {\n                            console.log(s);\n                        }\n                    }, _prefixCSS = \"\", _prefix = \"\", _checkPropPrefix = function(p, e) {\n                        e = e || _tempDiv;\n                        var s = e.style, a, i;\n                        if (s[p] !== undefined) {\n                            return p;\n                        }\n                        p = p.charAt(0).toUpperCase() + p.substr(1);\n                        a = [ \"O\", \"Moz\", \"ms\", \"Ms\", \"Webkit\" ];\n                        i = 5;\n                        while (--i > -1 && s[a[i] + p] === undefined) {}\n                        if (i >= 0) {\n                            _prefix = i === 3 ? \"ms\" : a[i];\n                            _prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n                            return _prefix + p;\n                        }\n                        return null;\n                    }, _getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {}, _getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n                        var rv;\n                        if (!_supportsOpacity) if (p === \"opacity\") {\n                            return _getIEOpacity(t);\n                        }\n                        if (!calc && t.style[p]) {\n                            rv = t.style[p];\n                        } else if (cs = cs || _getComputedStyle(t)) {\n                            rv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n                        } else if (t.currentStyle) {\n                            rv = t.currentStyle[p];\n                        }\n                        return dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\") ? dflt : rv;\n                    }, _convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n                        if (sfx === \"px\" || !sfx) {\n                            return v;\n                        }\n                        if (sfx === \"auto\" || !v) {\n                            return 0;\n                        }\n                        var horiz = _horizExp.test(p), node = t, style = _tempDiv.style, neg = v < 0, precise = v === 1, pix, cache, time;\n                        if (neg) {\n                            v = -v;\n                        }\n                        if (precise) {\n                            v *= 100;\n                        }\n                        if (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n                            pix = v / 100 * (horiz ? t.clientWidth : t.clientHeight);\n                        } else {\n                            style.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n                            if (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n                                node = t.parentNode || _doc.body;\n                                cache = node._gsCache;\n                                time = TweenLite.ticker.frame;\n                                if (cache && horiz && cache.time === time) {\n                                    return cache.width * v / 100;\n                                }\n                                style[horiz ? \"width\" : \"height\"] = v + sfx;\n                            } else {\n                                style[horiz ? \"borderLeftWidth\" : \"borderTopWidth\"] = v + sfx;\n                            }\n                            node.appendChild(_tempDiv);\n                            pix = parseFloat(_tempDiv[horiz ? \"offsetWidth\" : \"offsetHeight\"]);\n                            node.removeChild(_tempDiv);\n                            if (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n                                cache = node._gsCache = node._gsCache || {};\n                                cache.time = time;\n                                cache.width = pix / v * 100;\n                            }\n                            if (pix === 0 && !recurse) {\n                                pix = _convertToPixels(t, p, v, sfx, true);\n                            }\n                        }\n                        if (precise) {\n                            pix /= 100;\n                        }\n                        return neg ? -pix : pix;\n                    }, _calculateOffset = _internals.calculateOffset = function(t, p, cs) {\n                        if (_getStyle(t, \"position\", cs) !== \"absolute\") {\n                            return 0;\n                        }\n                        var dim = p === \"left\" ? \"Left\" : \"Top\", v = _getStyle(t, \"margin\" + dim, cs);\n                        return t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n                    }, _getAllStyles = function(t, cs) {\n                        var s = {}, i, tr, p;\n                        if (cs = cs || _getComputedStyle(t, null)) {\n                            if (i = cs.length) {\n                                while (--i > -1) {\n                                    p = cs[i];\n                                    if (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) {\n                                        s[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n                                    }\n                                }\n                            } else {\n                                for (i in cs) {\n                                    if (i.indexOf(\"Transform\") === -1 || _transformProp === i) {\n                                        s[i] = cs[i];\n                                    }\n                                }\n                            }\n                        } else if (cs = t.currentStyle || t.style) {\n                            for (i in cs) {\n                                if (typeof i === \"string\" && s[i] === undefined) {\n                                    s[i.replace(_camelExp, _camelFunc)] = cs[i];\n                                }\n                            }\n                        }\n                        if (!_supportsOpacity) {\n                            s.opacity = _getIEOpacity(t);\n                        }\n                        tr = _getTransform(t, cs, false);\n                        s.rotation = tr.rotation;\n                        s.skewX = tr.skewX;\n                        s.scaleX = tr.scaleX;\n                        s.scaleY = tr.scaleY;\n                        s.x = tr.x;\n                        s.y = tr.y;\n                        if (_supports3D) {\n                            s.z = tr.z;\n                            s.rotationX = tr.rotationX;\n                            s.rotationY = tr.rotationY;\n                            s.scaleZ = tr.scaleZ;\n                        }\n                        if (s.filters) {\n                            delete s.filters;\n                        }\n                        return s;\n                    }, _cssDif = function(t, s1, s2, vars, forceLookup) {\n                        var difs = {}, style = t.style, val, p, mpt;\n                        for (p in s2) {\n                            if (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || forceLookup && forceLookup[p]) if (p.indexOf(\"Origin\") === -1) if (typeof val === \"number\" || typeof val === \"string\") {\n                                difs[p] = val === \"auto\" && (p === \"left\" || p === \"top\") ? _calculateOffset(t, p) : (val === \"\" || val === \"auto\" || val === \"none\") && typeof s1[p] === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\" ? 0 : val;\n                                if (style[p] !== undefined) {\n                                    mpt = new MiniPropTween(style, p, style[p], mpt);\n                                }\n                            }\n                        }\n                        if (vars) {\n                            for (p in vars) {\n                                if (p !== \"className\") {\n                                    difs[p] = vars[p];\n                                }\n                            }\n                        }\n                        return {\n                            difs: difs,\n                            firstMPT: mpt\n                        };\n                    }, _dimensions = {\n                        width: [ \"Left\", \"Right\" ],\n                        height: [ \"Top\", \"Bottom\" ]\n                    }, _margins = [ \"marginLeft\", \"marginRight\", \"marginTop\", \"marginBottom\" ], _getDimension = function(t, p, cs) {\n                        if ((t.nodeName + \"\").toLowerCase() === \"svg\") {\n                            return (cs || _getComputedStyle(t))[p] || 0;\n                        } else if (t.getBBox && _isSVG(t)) {\n                            return t.getBBox()[p] || 0;\n                        }\n                        var v = parseFloat(p === \"width\" ? t.offsetWidth : t.offsetHeight), a = _dimensions[p], i = a.length;\n                        cs = cs || _getComputedStyle(t, null);\n                        while (--i > -1) {\n                            v -= parseFloat(_getStyle(t, \"padding\" + a[i], cs, true)) || 0;\n                            v -= parseFloat(_getStyle(t, \"border\" + a[i] + \"Width\", cs, true)) || 0;\n                        }\n                        return v;\n                    }, _parsePosition = function(v, recObj) {\n                        if (v === \"contain\" || v === \"auto\" || v === \"auto auto\") {\n                            return v + \" \";\n                        }\n                        if (v == null || v === \"\") {\n                            v = \"0 0\";\n                        }\n                        var a = v.split(\" \"), x = v.indexOf(\"left\") !== -1 ? \"0%\" : v.indexOf(\"right\") !== -1 ? \"100%\" : a[0], y = v.indexOf(\"top\") !== -1 ? \"0%\" : v.indexOf(\"bottom\") !== -1 ? \"100%\" : a[1], i;\n                        if (a.length > 3 && !recObj) {\n                            a = v.split(\", \").join(\",\").split(\",\");\n                            v = [];\n                            for (i = 0; i < a.length; i++) {\n                                v.push(_parsePosition(a[i]));\n                            }\n                            return v.join(\",\");\n                        }\n                        if (y == null) {\n                            y = x === \"center\" ? \"50%\" : \"0\";\n                        } else if (y === \"center\") {\n                            y = \"50%\";\n                        }\n                        if (x === \"center\" || isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1) {\n                            x = \"50%\";\n                        }\n                        v = x + \" \" + y + (a.length > 2 ? \" \" + a[2] : \"\");\n                        if (recObj) {\n                            recObj.oxp = x.indexOf(\"%\") !== -1;\n                            recObj.oyp = y.indexOf(\"%\") !== -1;\n                            recObj.oxr = x.charAt(1) === \"=\";\n                            recObj.oyr = y.charAt(1) === \"=\";\n                            recObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n                            recObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n                            recObj.v = v;\n                        }\n                        return recObj || v;\n                    }, _parseChange = function(e, b) {\n                        return typeof e === \"string\" && e.charAt(1) === \"=\" ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : parseFloat(e) - parseFloat(b) || 0;\n                    }, _parseVal = function(v, d) {\n                        return v == null ? d : typeof v === \"string\" && v.charAt(1) === \"=\" ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n                    }, _parseAngle = function(v, d, p, directionalEnd) {\n                        var min = 1e-6, cap, split, dif, result, isRelative;\n                        if (v == null) {\n                            result = d;\n                        } else if (typeof v === \"number\") {\n                            result = v;\n                        } else {\n                            cap = 360;\n                            split = v.split(\"_\");\n                            isRelative = v.charAt(1) === \"=\";\n                            dif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * (v.indexOf(\"rad\") === -1 ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n                            if (split.length) {\n                                if (directionalEnd) {\n                                    directionalEnd[p] = d + dif;\n                                }\n                                if (v.indexOf(\"short\") !== -1) {\n                                    dif = dif % cap;\n                                    if (dif !== dif % (cap / 2)) {\n                                        dif = dif < 0 ? dif + cap : dif - cap;\n                                    }\n                                }\n                                if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n                                    dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n                                    dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                }\n                            }\n                            result = d + dif;\n                        }\n                        if (result < min && result > -min) {\n                            result = 0;\n                        }\n                        return result;\n                    }, _colorLookup = {\n                        aqua: [ 0, 255, 255 ],\n                        lime: [ 0, 255, 0 ],\n                        silver: [ 192, 192, 192 ],\n                        black: [ 0, 0, 0 ],\n                        maroon: [ 128, 0, 0 ],\n                        teal: [ 0, 128, 128 ],\n                        blue: [ 0, 0, 255 ],\n                        navy: [ 0, 0, 128 ],\n                        white: [ 255, 255, 255 ],\n                        fuchsia: [ 255, 0, 255 ],\n                        olive: [ 128, 128, 0 ],\n                        yellow: [ 255, 255, 0 ],\n                        orange: [ 255, 165, 0 ],\n                        gray: [ 128, 128, 128 ],\n                        purple: [ 128, 0, 128 ],\n                        green: [ 0, 128, 0 ],\n                        red: [ 255, 0, 0 ],\n                        pink: [ 255, 192, 203 ],\n                        cyan: [ 0, 255, 255 ],\n                        transparent: [ 255, 255, 255, 0 ]\n                    }, _hue = function(h, m1, m2) {\n                        h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n                        return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255 + .5 | 0;\n                    }, _parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n                        var a, r, g, b, h, s, l, max, min, d, wasHSL;\n                        if (!v) {\n                            a = _colorLookup.black;\n                        } else if (typeof v === \"number\") {\n                            a = [ v >> 16, v >> 8 & 255, v & 255 ];\n                        } else {\n                            if (v.charAt(v.length - 1) === \",\") {\n                                v = v.substr(0, v.length - 1);\n                            }\n                            if (_colorLookup[v]) {\n                                a = _colorLookup[v];\n                            } else if (v.charAt(0) === \"#\") {\n                                if (v.length === 4) {\n                                    r = v.charAt(1);\n                                    g = v.charAt(2);\n                                    b = v.charAt(3);\n                                    v = \"#\" + r + r + g + g + b + b;\n                                }\n                                v = parseInt(v.substr(1), 16);\n                                a = [ v >> 16, v >> 8 & 255, v & 255 ];\n                            } else if (v.substr(0, 3) === \"hsl\") {\n                                a = wasHSL = v.match(_numExp);\n                                if (!toHSL) {\n                                    h = Number(a[0]) % 360 / 360;\n                                    s = Number(a[1]) / 100;\n                                    l = Number(a[2]) / 100;\n                                    g = l <= .5 ? l * (s + 1) : l + s - l * s;\n                                    r = l * 2 - g;\n                                    if (a.length > 3) {\n                                        a[3] = Number(v[3]);\n                                    }\n                                    a[0] = _hue(h + 1 / 3, r, g);\n                                    a[1] = _hue(h, r, g);\n                                    a[2] = _hue(h - 1 / 3, r, g);\n                                } else if (v.indexOf(\"=\") !== -1) {\n                                    return v.match(_relNumExp);\n                                }\n                            } else {\n                                a = v.match(_numExp) || _colorLookup.transparent;\n                            }\n                            a[0] = Number(a[0]);\n                            a[1] = Number(a[1]);\n                            a[2] = Number(a[2]);\n                            if (a.length > 3) {\n                                a[3] = Number(a[3]);\n                            }\n                        }\n                        if (toHSL && !wasHSL) {\n                            r = a[0] / 255;\n                            g = a[1] / 255;\n                            b = a[2] / 255;\n                            max = Math.max(r, g, b);\n                            min = Math.min(r, g, b);\n                            l = (max + min) / 2;\n                            if (max === min) {\n                                h = s = 0;\n                            } else {\n                                d = max - min;\n                                s = l > .5 ? d / (2 - max - min) : d / (max + min);\n                                h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n                                h *= 60;\n                            }\n                            a[0] = h + .5 | 0;\n                            a[1] = s * 100 + .5 | 0;\n                            a[2] = l * 100 + .5 | 0;\n                        }\n                        return a;\n                    }, _formatColors = function(s, toHSL) {\n                        var colors = s.match(_colorExp) || [], charIndex = 0, parsed = colors.length ? \"\" : s, i, color, temp;\n                        for (i = 0; i < colors.length; i++) {\n                            color = colors[i];\n                            temp = s.substr(charIndex, s.indexOf(color, charIndex) - charIndex);\n                            charIndex += temp.length + color.length;\n                            color = _parseColor(color, toHSL);\n                            if (color.length === 3) {\n                                color.push(1);\n                            }\n                            parsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n                        }\n                        return parsed + s.substr(charIndex);\n                    }, _colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\";\n                    for (p in _colorLookup) {\n                        _colorExp += \"|\" + p + \"\\\\b\";\n                    }\n                    _colorExp = new RegExp(_colorExp + \")\", \"gi\");\n                    CSSPlugin.colorStringFilter = function(a) {\n                        var combined = a[0] + a[1], toHSL;\n                        if (_colorExp.test(combined)) {\n                            toHSL = combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1;\n                            a[0] = _formatColors(a[0], toHSL);\n                            a[1] = _formatColors(a[1], toHSL);\n                        }\n                        _colorExp.lastIndex = 0;\n                    };\n                    if (!TweenLite.defaultStringFilter) {\n                        TweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n                    }\n                    var _getFormatter = function(dflt, clr, collapsible, multi) {\n                        if (dflt == null) {\n                            return function(v) {\n                                return v;\n                            };\n                        }\n                        var dColor = clr ? (dflt.match(_colorExp) || [ \"\" ])[0] : \"\", dVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [], pfx = dflt.substr(0, dflt.indexOf(dVals[0])), sfx = dflt.charAt(dflt.length - 1) === \")\" ? \")\" : \"\", delim = dflt.indexOf(\" \") !== -1 ? \" \" : \",\", numVals = dVals.length, dSfx = numVals > 0 ? dVals[0].replace(_numExp, \"\") : \"\", formatter;\n                        if (!numVals) {\n                            return function(v) {\n                                return v;\n                            };\n                        }\n                        if (clr) {\n                            formatter = function(v) {\n                                var color, vals, i, a;\n                                if (typeof v === \"number\") {\n                                    v += dSfx;\n                                } else if (multi && _commasOutsideParenExp.test(v)) {\n                                    a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                    for (i = 0; i < a.length; i++) {\n                                        a[i] = formatter(a[i]);\n                                    }\n                                    return a.join(\",\");\n                                }\n                                color = (v.match(_colorExp) || [ dColor ])[0];\n                                vals = v.split(color).join(\"\").match(_valuesExp) || [];\n                                i = vals.length;\n                                if (numVals > i--) {\n                                    while (++i < numVals) {\n                                        vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n                                    }\n                                }\n                                return pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n                            };\n                            return formatter;\n                        }\n                        formatter = function(v) {\n                            var vals, a, i;\n                            if (typeof v === \"number\") {\n                                v += dSfx;\n                            } else if (multi && _commasOutsideParenExp.test(v)) {\n                                a = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                                for (i = 0; i < a.length; i++) {\n                                    a[i] = formatter(a[i]);\n                                }\n                                return a.join(\",\");\n                            }\n                            vals = v.match(_valuesExp) || [];\n                            i = vals.length;\n                            if (numVals > i--) {\n                                while (++i < numVals) {\n                                    vals[i] = collapsible ? vals[(i - 1) / 2 | 0] : dVals[i];\n                                }\n                            }\n                            return pfx + vals.join(delim) + sfx;\n                        };\n                        return formatter;\n                    }, _getEdgeParser = function(props) {\n                        props = props.split(\",\");\n                        return function(t, e, p, cssp, pt, plugin, vars) {\n                            var a = (e + \"\").split(\" \"), i;\n                            vars = {};\n                            for (i = 0; i < 4; i++) {\n                                vars[props[i]] = a[i] = a[i] || a[(i - 1) / 2 >> 0];\n                            }\n                            return cssp.parse(t, vars, pt, plugin);\n                        };\n                    }, _setPluginRatio = _internals._setPluginRatio = function(v) {\n                        this.plugin.setRatio(v);\n                        var d = this.data, proxy = d.proxy, mpt = d.firstMPT, min = 1e-6, val, pt, i, str, p;\n                        while (mpt) {\n                            val = proxy[mpt.v];\n                            if (mpt.r) {\n                                val = Math.round(val);\n                            } else if (val < min && val > -min) {\n                                val = 0;\n                            }\n                            mpt.t[mpt.p] = val;\n                            mpt = mpt._next;\n                        }\n                        if (d.autoRotate) {\n                            d.autoRotate.rotation = proxy.rotation;\n                        }\n                        if (v === 1 || v === 0) {\n                            mpt = d.firstMPT;\n                            p = v === 1 ? \"e\" : \"b\";\n                            while (mpt) {\n                                pt = mpt.t;\n                                if (!pt.type) {\n                                    pt[p] = pt.s + pt.xs0;\n                                } else if (pt.type === 1) {\n                                    str = pt.xs0 + pt.s + pt.xs1;\n                                    for (i = 1; i < pt.l; i++) {\n                                        str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                    }\n                                    pt[p] = str;\n                                }\n                                mpt = mpt._next;\n                            }\n                        }\n                    }, MiniPropTween = function(t, p, v, next, r) {\n                        this.t = t;\n                        this.p = p;\n                        this.v = v;\n                        this.r = r;\n                        if (next) {\n                            next._prev = this;\n                            this._next = next;\n                        }\n                    }, _parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n                        var bpt = pt, start = {}, end = {}, transform = cssp._transform, oldForce = _forcePT, i, p, xp, mpt, firstPT;\n                        cssp._transform = null;\n                        _forcePT = vars;\n                        pt = firstPT = cssp.parse(t, vars, pt, plugin);\n                        _forcePT = oldForce;\n                        if (shallow) {\n                            cssp._transform = transform;\n                            if (bpt) {\n                                bpt._prev = null;\n                                if (bpt._prev) {\n                                    bpt._prev._next = null;\n                                }\n                            }\n                        }\n                        while (pt && pt !== bpt) {\n                            if (pt.type <= 1) {\n                                p = pt.p;\n                                end[p] = pt.s + pt.c;\n                                start[p] = pt.s;\n                                if (!shallow) {\n                                    mpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n                                    pt.c = 0;\n                                }\n                                if (pt.type === 1) {\n                                    i = pt.l;\n                                    while (--i > 0) {\n                                        xp = \"xn\" + i;\n                                        p = pt.p + \"_\" + xp;\n                                        end[p] = pt.data[xp];\n                                        start[p] = pt[xp];\n                                        if (!shallow) {\n                                            mpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n                                        }\n                                    }\n                                }\n                            }\n                            pt = pt._next;\n                        }\n                        return {\n                            proxy: start,\n                            end: end,\n                            firstMPT: mpt,\n                            pt: firstPT\n                        };\n                    }, CSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n                        this.t = t;\n                        this.p = p;\n                        this.s = s;\n                        this.c = c;\n                        this.n = n || p;\n                        if (!(t instanceof CSSPropTween)) {\n                            _overwriteProps.push(this.n);\n                        }\n                        this.r = r;\n                        this.type = type || 0;\n                        if (pr) {\n                            this.pr = pr;\n                            _hasPriority = true;\n                        }\n                        this.b = b === undefined ? s : b;\n                        this.e = e === undefined ? s + c : e;\n                        if (next) {\n                            this._next = next;\n                            next._prev = this;\n                        }\n                    }, _addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) {\n                        var pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n                        pt.b = start;\n                        pt.e = pt.xs0 = end;\n                        return pt;\n                    }, _parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n                        b = b || dflt || \"\";\n                        pt = new CSSPropTween(t, p, 0, 0, pt, setRatio ? 2 : 1, null, false, pr, b, e);\n                        e += \"\";\n                        if (clrs && _colorExp.test(e + b)) {\n                            e = [ b, e ];\n                            CSSPlugin.colorStringFilter(e);\n                            b = e[0];\n                            e = e[1];\n                        }\n                        var ba = b.split(\", \").join(\",\").split(\" \"), ea = e.split(\", \").join(\",\").split(\" \"), l = ba.length, autoRound = _autoRound !== false, i, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n                        if (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n                            ba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n                            ea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n                            l = ba.length;\n                        }\n                        if (l !== ea.length) {\n                            ba = (dflt || \"\").split(\" \");\n                            l = ba.length;\n                        }\n                        pt.plugin = plugin;\n                        pt.setRatio = setRatio;\n                        _colorExp.lastIndex = 0;\n                        for (i = 0; i < l; i++) {\n                            bv = ba[i];\n                            ev = ea[i];\n                            bn = parseFloat(bv);\n                            if (bn || bn === 0) {\n                                pt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), autoRound && ev.indexOf(\"px\") !== -1, true);\n                            } else if (clrs && _colorExp.test(bv)) {\n                                str = ev.indexOf(\")\") + 1;\n                                str = \")\" + (str ? ev.substr(str) : \"\");\n                                useHSL = ev.indexOf(\"hsl\") !== -1 && _supportsOpacity;\n                                bv = _parseColor(bv, useHSL);\n                                ev = _parseColor(ev, useHSL);\n                                hasAlpha = bv.length + ev.length > 6;\n                                if (hasAlpha && !_supportsOpacity && ev[3] === 0) {\n                                    pt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n                                    pt.e = pt.e.split(ea[i]).join(\"transparent\");\n                                } else {\n                                    if (!_supportsOpacity) {\n                                        hasAlpha = false;\n                                    }\n                                    if (useHSL) {\n                                        pt.appendXtra(hasAlpha ? \"hsla(\" : \"hsl(\", bv[0], _parseChange(ev[0], bv[0]), \",\", false, true).appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false).appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), hasAlpha ? \"%,\" : \"%\" + str, false);\n                                    } else {\n                                        pt.appendXtra(hasAlpha ? \"rgba(\" : \"rgb(\", bv[0], ev[0] - bv[0], \",\", true, true).appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true).appendXtra(\"\", bv[2], ev[2] - bv[2], hasAlpha ? \",\" : str, true);\n                                    }\n                                    if (hasAlpha) {\n                                        bv = bv.length < 4 ? 1 : bv[3];\n                                        pt.appendXtra(\"\", bv, (ev.length < 4 ? 1 : ev[3]) - bv, str, false);\n                                    }\n                                }\n                                _colorExp.lastIndex = 0;\n                            } else {\n                                bnums = bv.match(_numExp);\n                                if (!bnums) {\n                                    pt[\"xs\" + pt.l] += pt.l || pt[\"xs\" + pt.l] ? \" \" + ev : ev;\n                                } else {\n                                    enums = ev.match(_relNumExp);\n                                    if (!enums || enums.length !== bnums.length) {\n                                        return pt;\n                                    }\n                                    ni = 0;\n                                    for (xi = 0; xi < bnums.length; xi++) {\n                                        cv = bnums[xi];\n                                        temp = bv.indexOf(cv, ni);\n                                        pt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", autoRound && bv.substr(temp + cv.length, 2) === \"px\", xi === 0);\n                                        ni = temp + cv.length;\n                                    }\n                                    pt[\"xs\" + pt.l] += bv.substr(ni);\n                                }\n                            }\n                        }\n                        if (e.indexOf(\"=\") !== -1) if (pt.data) {\n                            str = pt.xs0 + pt.data.s;\n                            for (i = 1; i < pt.l; i++) {\n                                str += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n                            }\n                            pt.e = str + pt[\"xs\" + i];\n                        }\n                        if (!pt.l) {\n                            pt.type = -1;\n                            pt.xs0 = pt.e;\n                        }\n                        return pt.xfirst || pt;\n                    }, i = 9;\n                    p = CSSPropTween.prototype;\n                    p.l = p.pr = 0;\n                    while (--i > 0) {\n                        p[\"xn\" + i] = 0;\n                        p[\"xs\" + i] = \"\";\n                    }\n                    p.xs0 = \"\";\n                    p._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n                    p.appendXtra = function(pfx, s, c, sfx, r, pad) {\n                        var pt = this, l = pt.l;\n                        pt[\"xs\" + l] += pad && (l || pt[\"xs\" + l]) ? \" \" + pfx : pfx || \"\";\n                        if (!c) if (l !== 0 && !pt.plugin) {\n                            pt[\"xs\" + l] += s + (sfx || \"\");\n                            return pt;\n                        }\n                        pt.l++;\n                        pt.type = pt.setRatio ? 2 : 1;\n                        pt[\"xs\" + pt.l] = sfx || \"\";\n                        if (l > 0) {\n                            pt.data[\"xn\" + l] = s + c;\n                            pt.rxp[\"xn\" + l] = r;\n                            pt[\"xn\" + l] = s;\n                            if (!pt.plugin) {\n                                pt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n                                pt.xfirst.xs0 = 0;\n                            }\n                            return pt;\n                        }\n                        pt.data = {\n                            s: s + c\n                        };\n                        pt.rxp = {};\n                        pt.s = s;\n                        pt.c = c;\n                        pt.r = r;\n                        return pt;\n                    };\n                    var SpecialProp = function(p, options) {\n                        options = options || {};\n                        this.p = options.prefix ? _checkPropPrefix(p) || p : p;\n                        _specialProps[p] = _specialProps[this.p] = this;\n                        this.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n                        if (options.parser) {\n                            this.parse = options.parser;\n                        }\n                        this.clrs = options.color;\n                        this.multi = options.multi;\n                        this.keyword = options.keyword;\n                        this.dflt = options.defaultValue;\n                        this.pr = options.priority || 0;\n                    }, _registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n                        if (typeof options !== \"object\") {\n                            options = {\n                                parser: defaults\n                            };\n                        }\n                        var a = p.split(\",\"), d = options.defaultValue, i, temp;\n                        defaults = defaults || [ d ];\n                        for (i = 0; i < a.length; i++) {\n                            options.prefix = i === 0 && options.prefix;\n                            options.defaultValue = defaults[i] || d;\n                            temp = new SpecialProp(a[i], options);\n                        }\n                    }, _registerPluginProp = function(p) {\n                        if (!_specialProps[p]) {\n                            var pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n                            _registerComplexSpecialProp(p, {\n                                parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                    var pluginClass = _globals.com.greensock.plugins[pluginName];\n                                    if (!pluginClass) {\n                                        _log(\"Error: \" + pluginName + \" js file not loaded.\");\n                                        return pt;\n                                    }\n                                    pluginClass._cssRegister();\n                                    return _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n                                }\n                            });\n                        }\n                    };\n                    p = SpecialProp.prototype;\n                    p.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n                        var kwd = this.keyword, i, ba, ea, l, bi, ei;\n                        if (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n                            ba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                            ea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n                        } else if (kwd) {\n                            ba = [ b ];\n                            ea = [ e ];\n                        }\n                        if (ea) {\n                            l = ea.length > ba.length ? ea.length : ba.length;\n                            for (i = 0; i < l; i++) {\n                                b = ba[i] = ba[i] || this.dflt;\n                                e = ea[i] = ea[i] || this.dflt;\n                                if (kwd) {\n                                    bi = b.indexOf(kwd);\n                                    ei = e.indexOf(kwd);\n                                    if (bi !== ei) {\n                                        if (ei === -1) {\n                                            ba[i] = ba[i].split(kwd).join(\"\");\n                                        } else if (bi === -1) {\n                                            ba[i] += \" \" + kwd;\n                                        }\n                                    }\n                                }\n                            }\n                            b = ba.join(\", \");\n                            e = ea.join(\", \");\n                        }\n                        return _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n                    };\n                    p.parse = function(t, e, p, cssp, pt, plugin, vars) {\n                        return this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n                    };\n                    CSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n                        _registerComplexSpecialProp(name, {\n                            parser: function(t, e, p, cssp, pt, plugin, vars) {\n                                var rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n                                rv.plugin = plugin;\n                                rv.setRatio = onInitTween(t, e, cssp._tween, p);\n                                return rv;\n                            },\n                            priority: priority\n                        });\n                    };\n                    CSSPlugin.useSVGTransformAttr = _isSafari || _isFirefox;\n                    var _transformProps = \"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\".split(\",\"), _transformProp = _checkPropPrefix(\"transform\"), _transformPropCSS = _prefixCSS + \"transform\", _transformOriginProp = _checkPropPrefix(\"transformOrigin\"), _supports3D = _checkPropPrefix(\"perspective\") !== null, Transform = _internals.Transform = function() {\n                        this.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n                        this.force3D = CSSPlugin.defaultForce3D === false || !_supports3D ? false : CSSPlugin.defaultForce3D || \"auto\";\n                    }, _SVGElement = window.SVGElement, _useSVGTransformAttr, _createSVG = function(type, container, attributes) {\n                        var element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type), reg = /([a-z])([A-Z])/g, p;\n                        for (p in attributes) {\n                            element.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n                        }\n                        container.appendChild(element);\n                        return element;\n                    }, _docElement = _doc.documentElement, _forceSVGTransformAttr = function() {\n                        var force = _ieVers || /Android/i.test(_agent) && !window.chrome, svg, rect, width;\n                        if (_doc.createElementNS && !force) {\n                            svg = _createSVG(\"svg\", _docElement);\n                            rect = _createSVG(\"rect\", svg, {\n                                width: 100,\n                                height: 50,\n                                x: 100\n                            });\n                            width = rect.getBoundingClientRect().width;\n                            rect.style[_transformOriginProp] = \"50% 50%\";\n                            rect.style[_transformProp] = \"scaleX(0.5)\";\n                            force = width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D);\n                            _docElement.removeChild(svg);\n                        }\n                        return force;\n                    }(), _parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n                        var tm = e._gsTransform, m = _getMatrix(e, true), v, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n                        if (tm) {\n                            xOriginOld = tm.xOrigin;\n                            yOriginOld = tm.yOrigin;\n                        }\n                        if (!absolute || (v = absolute.split(\" \")).length < 2) {\n                            b = e.getBBox();\n                            local = _parsePosition(local).split(\" \");\n                            v = [ (local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x, (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y ];\n                        }\n                        decoratee.xOrigin = xOrigin = parseFloat(v[0]);\n                        decoratee.yOrigin = yOrigin = parseFloat(v[1]);\n                        if (absolute && m !== _identity2DMatrix) {\n                            a = m[0];\n                            b = m[1];\n                            c = m[2];\n                            d = m[3];\n                            tx = m[4];\n                            ty = m[5];\n                            determinant = a * d - b * c;\n                            x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;\n                            y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;\n                            xOrigin = decoratee.xOrigin = v[0] = x;\n                            yOrigin = decoratee.yOrigin = v[1] = y;\n                        }\n                        if (tm) {\n                            if (skipRecord) {\n                                decoratee.xOffset = tm.xOffset;\n                                decoratee.yOffset = tm.yOffset;\n                                tm = decoratee;\n                            }\n                            if (smoothOrigin || smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false) {\n                                x = xOrigin - xOriginOld;\n                                y = yOrigin - yOriginOld;\n                                tm.xOffset += x * m[0] + y * m[2] - x;\n                                tm.yOffset += x * m[1] + y * m[3] - y;\n                            } else {\n                                tm.xOffset = tm.yOffset = 0;\n                            }\n                        }\n                        if (!skipRecord) {\n                            e.setAttribute(\"data-svg-origin\", v.join(\" \"));\n                        }\n                    }, _canGetBBox = function(e) {\n                        try {\n                            return e.getBBox();\n                        } catch (e) {}\n                    }, _isSVG = function(e) {\n                        return !!(_SVGElement && e.getBBox && e.getCTM && _canGetBBox(e) && (!e.parentNode || e.parentNode.getBBox && e.parentNode.getCTM));\n                    }, _identity2DMatrix = [ 1, 0, 0, 1, 0, 0 ], _getMatrix = function(e, force2D) {\n                        var tm = e._gsTransform || new Transform(), rnd = 1e5, style = e.style, isDefault, s, m, n, dec, none;\n                        if (_transformProp) {\n                            s = _getStyle(e, _transformPropCSS, null, true);\n                        } else if (e.currentStyle) {\n                            s = e.currentStyle.filter.match(_ieGetMatrixExp);\n                            s = s && s.length === 4 ? [ s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), tm.x || 0, tm.y || 0 ].join(\",\") : \"\";\n                        }\n                        isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n                        if (isDefault && _transformProp && ((none = _getComputedStyle(e).display === \"none\") || !e.parentNode)) {\n                            if (none) {\n                                n = style.display;\n                                style.display = \"block\";\n                            }\n                            if (!e.parentNode) {\n                                dec = 1;\n                                _docElement.appendChild(e);\n                            }\n                            s = _getStyle(e, _transformPropCSS, null, true);\n                            isDefault = !s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\";\n                            if (n) {\n                                style.display = n;\n                            } else if (none) {\n                                _removeProp(style, \"display\");\n                            }\n                            if (dec) {\n                                _docElement.removeChild(e);\n                            }\n                        }\n                        if (tm.svg || e.getBBox && _isSVG(e)) {\n                            if (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) {\n                                s = style[_transformProp];\n                                isDefault = 0;\n                            }\n                            m = e.getAttribute(\"transform\");\n                            if (isDefault && m) {\n                                if (m.indexOf(\"matrix\") !== -1) {\n                                    s = m;\n                                    isDefault = 0;\n                                } else if (m.indexOf(\"translate\") !== -1) {\n                                    s = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n                                    isDefault = 0;\n                                }\n                            }\n                        }\n                        if (isDefault) {\n                            return _identity2DMatrix;\n                        }\n                        m = (s || \"\").match(_numExp) || [];\n                        i = m.length;\n                        while (--i > -1) {\n                            n = Number(m[i]);\n                            m[i] = (dec = n - (n |= 0)) ? (dec * rnd + (dec < 0 ? -.5 : .5) | 0) / rnd + n : n;\n                        }\n                        return force2D && m.length > 6 ? [ m[0], m[1], m[4], m[5], m[12], m[13] ] : m;\n                    }, _getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n                        if (t._gsTransform && rec && !parse) {\n                            return t._gsTransform;\n                        }\n                        var tm = rec ? t._gsTransform || new Transform() : new Transform(), invX = tm.scaleX < 0, min = 2e-5, rnd = 1e5, zOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin || 0 : 0, defaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0, m, i, scaleX, scaleY, rotation, skewX;\n                        tm.svg = !!(t.getBBox && _isSVG(t));\n                        if (tm.svg) {\n                            _parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n                            _useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n                        }\n                        m = _getMatrix(t);\n                        if (m !== _identity2DMatrix) {\n                            if (m.length === 16) {\n                                var a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3], a12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7], a13 = m[8], a23 = m[9], a33 = m[10], a14 = m[12], a24 = m[13], a34 = m[14], a43 = m[11], angle = Math.atan2(a32, a33), t1, t2, t3, t4, cos, sin;\n                                if (tm.zOrigin) {\n                                    a34 = -tm.zOrigin;\n                                    a14 = a13 * a34 - m[12];\n                                    a24 = a23 * a34 - m[13];\n                                    a34 = a33 * a34 + tm.zOrigin - m[14];\n                                }\n                                tm.rotationX = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    t1 = a12 * cos + a13 * sin;\n                                    t2 = a22 * cos + a23 * sin;\n                                    t3 = a32 * cos + a33 * sin;\n                                    a13 = a12 * -sin + a13 * cos;\n                                    a23 = a22 * -sin + a23 * cos;\n                                    a33 = a32 * -sin + a33 * cos;\n                                    a43 = a42 * -sin + a43 * cos;\n                                    a12 = t1;\n                                    a22 = t2;\n                                    a32 = t3;\n                                }\n                                angle = Math.atan2(-a31, a33);\n                                tm.rotationY = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    t1 = a11 * cos - a13 * sin;\n                                    t2 = a21 * cos - a23 * sin;\n                                    t3 = a31 * cos - a33 * sin;\n                                    a23 = a21 * sin + a23 * cos;\n                                    a33 = a31 * sin + a33 * cos;\n                                    a43 = a41 * sin + a43 * cos;\n                                    a11 = t1;\n                                    a21 = t2;\n                                    a31 = t3;\n                                }\n                                angle = Math.atan2(a21, a11);\n                                tm.rotation = angle * _RAD2DEG;\n                                if (angle) {\n                                    cos = Math.cos(-angle);\n                                    sin = Math.sin(-angle);\n                                    a11 = a11 * cos + a12 * sin;\n                                    t2 = a21 * cos + a22 * sin;\n                                    a22 = a21 * -sin + a22 * cos;\n                                    a32 = a31 * -sin + a32 * cos;\n                                    a21 = t2;\n                                }\n                                if (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) {\n                                    tm.rotationX = tm.rotation = 0;\n                                    tm.rotationY = 180 - tm.rotationY;\n                                }\n                                tm.scaleX = (Math.sqrt(a11 * a11 + a21 * a21) * rnd + .5 | 0) / rnd;\n                                tm.scaleY = (Math.sqrt(a22 * a22 + a23 * a23) * rnd + .5 | 0) / rnd;\n                                tm.scaleZ = (Math.sqrt(a32 * a32 + a33 * a33) * rnd + .5 | 0) / rnd;\n                                if (tm.rotationX || tm.rotationY) {\n                                    tm.skewX = 0;\n                                } else {\n                                    tm.skewX = a12 || a22 ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n                                    if (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n                                        if (invX) {\n                                            tm.scaleX *= -1;\n                                            tm.skewX += tm.rotation <= 0 ? 180 : -180;\n                                            tm.rotation += tm.rotation <= 0 ? 180 : -180;\n                                        } else {\n                                            tm.scaleY *= -1;\n                                            tm.skewX += tm.skewX <= 0 ? 180 : -180;\n                                        }\n                                    }\n                                }\n                                tm.perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;\n                                tm.x = a14;\n                                tm.y = a24;\n                                tm.z = a34;\n                                if (tm.svg) {\n                                    tm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n                                    tm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n                                }\n                            } else if (!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || !tm.rotationX && !tm.rotationY) {\n                                var k = m.length >= 6, a = k ? m[0] : 1, b = m[1] || 0, c = m[2] || 0, d = k ? m[3] : 1;\n                                tm.x = m[4] || 0;\n                                tm.y = m[5] || 0;\n                                scaleX = Math.sqrt(a * a + b * b);\n                                scaleY = Math.sqrt(d * d + c * c);\n                                rotation = a || b ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0;\n                                skewX = c || d ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n                                if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n                                    if (invX) {\n                                        scaleX *= -1;\n                                        skewX += rotation <= 0 ? 180 : -180;\n                                        rotation += rotation <= 0 ? 180 : -180;\n                                    } else {\n                                        scaleY *= -1;\n                                        skewX += skewX <= 0 ? 180 : -180;\n                                    }\n                                }\n                                tm.scaleX = scaleX;\n                                tm.scaleY = scaleY;\n                                tm.rotation = rotation;\n                                tm.skewX = skewX;\n                                if (_supports3D) {\n                                    tm.rotationX = tm.rotationY = tm.z = 0;\n                                    tm.perspective = defaultTransformPerspective;\n                                    tm.scaleZ = 1;\n                                }\n                                if (tm.svg) {\n                                    tm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n                                    tm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n                                }\n                            }\n                            tm.zOrigin = zOrigin;\n                            for (i in tm) {\n                                if (tm[i] < min) if (tm[i] > -min) {\n                                    tm[i] = 0;\n                                }\n                            }\n                        }\n                        if (rec) {\n                            t._gsTransform = tm;\n                            if (tm.svg) {\n                                if (_useSVGTransformAttr && t.style[_transformProp]) {\n                                    TweenLite.delayedCall(.001, function() {\n                                        _removeProp(t.style, _transformProp);\n                                    });\n                                } else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n                                    TweenLite.delayedCall(.001, function() {\n                                        t.removeAttribute(\"transform\");\n                                    });\n                                }\n                            }\n                        }\n                        return tm;\n                    }, _setIETransformRatio = function(v) {\n                        var t = this.data, ang = -t.rotation * _DEG2RAD, skew = ang + t.skewX * _DEG2RAD, rnd = 1e5, a = (Math.cos(ang) * t.scaleX * rnd | 0) / rnd, b = (Math.sin(ang) * t.scaleX * rnd | 0) / rnd, c = (Math.sin(skew) * -t.scaleY * rnd | 0) / rnd, d = (Math.cos(skew) * t.scaleY * rnd | 0) / rnd, style = this.t.style, cs = this.t.currentStyle, filters, val;\n                        if (!cs) {\n                            return;\n                        }\n                        val = b;\n                        b = -c;\n                        c = -val;\n                        filters = cs.filter;\n                        style.filter = \"\";\n                        var w = this.t.offsetWidth, h = this.t.offsetHeight, clip = cs.position !== \"absolute\", m = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d, ox = t.x + w * t.xPercent / 100, oy = t.y + h * t.yPercent / 100, dx, dy;\n                        if (t.ox != null) {\n                            dx = (t.oxp ? w * t.ox * .01 : t.ox) - w / 2;\n                            dy = (t.oyp ? h * t.oy * .01 : t.oy) - h / 2;\n                            ox += dx - (dx * a + dy * b);\n                            oy += dy - (dx * c + dy * d);\n                        }\n                        if (!clip) {\n                            m += \", sizingMethod='auto expand')\";\n                        } else {\n                            dx = w / 2;\n                            dy = h / 2;\n                            m += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n                        }\n                        if (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n                            style.filter = filters.replace(_ieSetMatrixExp, m);\n                        } else {\n                            style.filter = m + \" \" + filters;\n                        }\n                        if (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n                            style.removeAttribute(\"filter\");\n                        }\n                        if (!clip) {\n                            var mult = _ieVers < 8 ? 1 : -1, marg, prop, dif;\n                            dx = t.ieOffsetX || 0;\n                            dy = t.ieOffsetY || 0;\n                            t.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n                            t.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n                            for (i = 0; i < 4; i++) {\n                                prop = _margins[i];\n                                marg = cs[prop];\n                                val = marg.indexOf(\"px\") !== -1 ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n                                if (val !== t[prop]) {\n                                    dif = i < 2 ? -t.ieOffsetX : -t.ieOffsetY;\n                                } else {\n                                    dif = i < 2 ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n                                }\n                                style[prop] = (t[prop] = Math.round(val - dif * (i === 0 || i === 2 ? 1 : mult))) + \"px\";\n                            }\n                        }\n                    }, _setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n                        var t = this.data, style = this.t.style, angle = t.rotation, rotationX = t.rotationX, rotationY = t.rotationY, sx = t.scaleX, sy = t.scaleY, sz = t.scaleZ, x = t.x, y = t.y, z = t.z, isSVG = t.svg, perspective = t.perspective, force3D = t.force3D, a11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43, zOrigin, min, cos, sin, t1, t2, transform, comma, zero, skew, rnd;\n                        if (((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1 || _useSVGTransformAttr && isSVG || !_supports3D) {\n                            if (angle || t.skewX || isSVG) {\n                                angle *= _DEG2RAD;\n                                skew = t.skewX * _DEG2RAD;\n                                rnd = 1e5;\n                                a11 = Math.cos(angle) * sx;\n                                a21 = Math.sin(angle) * sx;\n                                a12 = Math.sin(angle - skew) * -sy;\n                                a22 = Math.cos(angle - skew) * sy;\n                                if (skew && t.skewType === \"simple\") {\n                                    t1 = Math.tan(skew);\n                                    t1 = Math.sqrt(1 + t1 * t1);\n                                    a12 *= t1;\n                                    a22 *= t1;\n                                    if (t.skewY) {\n                                        a11 *= t1;\n                                        a21 *= t1;\n                                    }\n                                }\n                                if (isSVG) {\n                                    x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n                                    y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n                                    if (_useSVGTransformAttr && (t.xPercent || t.yPercent)) {\n                                        min = this.t.getBBox();\n                                        x += t.xPercent * .01 * min.width;\n                                        y += t.yPercent * .01 * min.height;\n                                    }\n                                    min = 1e-6;\n                                    if (x < min) if (x > -min) {\n                                        x = 0;\n                                    }\n                                    if (y < min) if (y > -min) {\n                                        y = 0;\n                                    }\n                                }\n                                transform = (a11 * rnd | 0) / rnd + \",\" + (a21 * rnd | 0) / rnd + \",\" + (a12 * rnd | 0) / rnd + \",\" + (a22 * rnd | 0) / rnd + \",\" + x + \",\" + y + \")\";\n                                if (isSVG && _useSVGTransformAttr) {\n                                    this.t.setAttribute(\"transform\", \"matrix(\" + transform);\n                                } else {\n                                    style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n                                }\n                            } else {\n                                style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n                            }\n                            return;\n                        }\n                        if (_isFirefox) {\n                            min = 1e-4;\n                            if (sx < min && sx > -min) {\n                                sx = sz = 2e-5;\n                            }\n                            if (sy < min && sy > -min) {\n                                sy = sz = 2e-5;\n                            }\n                            if (perspective && !t.z && !t.rotationX && !t.rotationY) {\n                                perspective = 0;\n                            }\n                        }\n                        if (angle || t.skewX) {\n                            angle *= _DEG2RAD;\n                            cos = a11 = Math.cos(angle);\n                            sin = a21 = Math.sin(angle);\n                            if (t.skewX) {\n                                angle -= t.skewX * _DEG2RAD;\n                                cos = Math.cos(angle);\n                                sin = Math.sin(angle);\n                                if (t.skewType === \"simple\") {\n                                    t1 = Math.tan(t.skewX * _DEG2RAD);\n                                    t1 = Math.sqrt(1 + t1 * t1);\n                                    cos *= t1;\n                                    sin *= t1;\n                                    if (t.skewY) {\n                                        a11 *= t1;\n                                        a21 *= t1;\n                                    }\n                                }\n                            }\n                            a12 = -sin;\n                            a22 = cos;\n                        } else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) {\n                            style[_transformProp] = (t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z + \"px)\" + (sx !== 1 || sy !== 1 ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n                            return;\n                        } else {\n                            a11 = a22 = 1;\n                            a12 = a21 = 0;\n                        }\n                        a33 = 1;\n                        a13 = a23 = a31 = a32 = a41 = a42 = 0;\n                        a43 = perspective ? -1 / perspective : 0;\n                        zOrigin = t.zOrigin;\n                        min = 1e-6;\n                        comma = \",\";\n                        zero = \"0\";\n                        angle = rotationY * _DEG2RAD;\n                        if (angle) {\n                            cos = Math.cos(angle);\n                            sin = Math.sin(angle);\n                            a31 = -sin;\n                            a41 = a43 * -sin;\n                            a13 = a11 * sin;\n                            a23 = a21 * sin;\n                            a33 = cos;\n                            a43 *= cos;\n                            a11 *= cos;\n                            a21 *= cos;\n                        }\n                        angle = rotationX * _DEG2RAD;\n                        if (angle) {\n                            cos = Math.cos(angle);\n                            sin = Math.sin(angle);\n                            t1 = a12 * cos + a13 * sin;\n                            t2 = a22 * cos + a23 * sin;\n                            a32 = a33 * sin;\n                            a42 = a43 * sin;\n                            a13 = a12 * -sin + a13 * cos;\n                            a23 = a22 * -sin + a23 * cos;\n                            a33 = a33 * cos;\n                            a43 = a43 * cos;\n                            a12 = t1;\n                            a22 = t2;\n                        }\n                        if (sz !== 1) {\n                            a13 *= sz;\n                            a23 *= sz;\n                            a33 *= sz;\n                            a43 *= sz;\n                        }\n                        if (sy !== 1) {\n                            a12 *= sy;\n                            a22 *= sy;\n                            a32 *= sy;\n                            a42 *= sy;\n                        }\n                        if (sx !== 1) {\n                            a11 *= sx;\n                            a21 *= sx;\n                            a31 *= sx;\n                            a41 *= sx;\n                        }\n                        if (zOrigin || isSVG) {\n                            if (zOrigin) {\n                                x += a13 * -zOrigin;\n                                y += a23 * -zOrigin;\n                                z += a33 * -zOrigin + zOrigin;\n                            }\n                            if (isSVG) {\n                                x += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n                                y += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n                            }\n                            if (x < min && x > -min) {\n                                x = zero;\n                            }\n                            if (y < min && y > -min) {\n                                y = zero;\n                            }\n                            if (z < min && z > -min) {\n                                z = 0;\n                            }\n                        }\n                        transform = t.xPercent || t.yPercent ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\";\n                        transform += (a11 < min && a11 > -min ? zero : a11) + comma + (a21 < min && a21 > -min ? zero : a21) + comma + (a31 < min && a31 > -min ? zero : a31);\n                        transform += comma + (a41 < min && a41 > -min ? zero : a41) + comma + (a12 < min && a12 > -min ? zero : a12) + comma + (a22 < min && a22 > -min ? zero : a22);\n                        if (rotationX || rotationY || sz !== 1) {\n                            transform += comma + (a32 < min && a32 > -min ? zero : a32) + comma + (a42 < min && a42 > -min ? zero : a42) + comma + (a13 < min && a13 > -min ? zero : a13);\n                            transform += comma + (a23 < min && a23 > -min ? zero : a23) + comma + (a33 < min && a33 > -min ? zero : a33) + comma + (a43 < min && a43 > -min ? zero : a43) + comma;\n                        } else {\n                            transform += \",0,0,0,0,1,0,\";\n                        }\n                        transform += x + comma + y + comma + z + comma + (perspective ? 1 + -z / perspective : 1) + \")\";\n                        style[_transformProp] = transform;\n                    };\n                    p = Transform.prototype;\n                    p.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n                    p.scaleX = p.scaleY = p.scaleZ = 1;\n                    _registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {\n                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n                            if (cssp._lastParsedTransform === vars) {\n                                return pt;\n                            }\n                            cssp._lastParsedTransform = vars;\n                            var originalGSTransform = t._gsTransform, style = t.style, min = 1e-6, i = _transformProps.length, v = vars, endRotations = {}, transformOriginString = \"transformOrigin\", m1 = _getTransform(t, _cs, true, vars.parseTransform), m2, copy, orig, has3D, hasChange, dr, x, y, matrix;\n                            cssp._transform = m1;\n                            if (typeof v.transform === \"string\" && _transformProp) {\n                                copy = _tempDiv.style;\n                                copy[_transformProp] = v.transform;\n                                copy.display = \"block\";\n                                copy.position = \"absolute\";\n                                _doc.body.appendChild(_tempDiv);\n                                m2 = _getTransform(_tempDiv, null, false);\n                                if (m1.svg) {\n                                    x = m1.xOrigin;\n                                    y = m1.yOrigin;\n                                    m2.x -= m1.xOffset;\n                                    m2.y -= m1.yOffset;\n                                    if (v.transformOrigin || v.svgOrigin) {\n                                        orig = {};\n                                        _parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n                                        x = orig.xOrigin;\n                                        y = orig.yOrigin;\n                                        m2.x -= orig.xOffset - m1.xOffset;\n                                        m2.y -= orig.yOffset - m1.yOffset;\n                                    }\n                                    if (x || y) {\n                                        matrix = _getMatrix(_tempDiv, true);\n                                        m2.x -= x - (x * matrix[0] + y * matrix[2]);\n                                        m2.y -= y - (x * matrix[1] + y * matrix[3]);\n                                    }\n                                }\n                                _doc.body.removeChild(_tempDiv);\n                                if (!m2.perspective) {\n                                    m2.perspective = m1.perspective;\n                                }\n                                if (v.xPercent != null) {\n                                    m2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n                                }\n                                if (v.yPercent != null) {\n                                    m2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n                                }\n                            } else if (typeof v === \"object\") {\n                                m2 = {\n                                    scaleX: _parseVal(v.scaleX != null ? v.scaleX : v.scale, m1.scaleX),\n                                    scaleY: _parseVal(v.scaleY != null ? v.scaleY : v.scale, m1.scaleY),\n                                    scaleZ: _parseVal(v.scaleZ, m1.scaleZ),\n                                    x: _parseVal(v.x, m1.x),\n                                    y: _parseVal(v.y, m1.y),\n                                    z: _parseVal(v.z, m1.z),\n                                    xPercent: _parseVal(v.xPercent, m1.xPercent),\n                                    yPercent: _parseVal(v.yPercent, m1.yPercent),\n                                    perspective: _parseVal(v.transformPerspective, m1.perspective)\n                                };\n                                dr = v.directionalRotation;\n                                if (dr != null) {\n                                    if (typeof dr === \"object\") {\n                                        for (copy in dr) {\n                                            v[copy] = dr[copy];\n                                        }\n                                    } else {\n                                        v.rotation = dr;\n                                    }\n                                }\n                                if (typeof v.x === \"string\" && v.x.indexOf(\"%\") !== -1) {\n                                    m2.x = 0;\n                                    m2.xPercent = _parseVal(v.x, m1.xPercent);\n                                }\n                                if (typeof v.y === \"string\" && v.y.indexOf(\"%\") !== -1) {\n                                    m2.y = 0;\n                                    m2.yPercent = _parseVal(v.y, m1.yPercent);\n                                }\n                                m2.rotation = _parseAngle(\"rotation\" in v ? v.rotation : \"shortRotation\" in v ? v.shortRotation + \"_short\" : \"rotationZ\" in v ? v.rotationZ : m1.rotation - m1.skewY, m1.rotation - m1.skewY, \"rotation\", endRotations);\n                                if (_supports3D) {\n                                    m2.rotationX = _parseAngle(\"rotationX\" in v ? v.rotationX : \"shortRotationX\" in v ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n                                    m2.rotationY = _parseAngle(\"rotationY\" in v ? v.rotationY : \"shortRotationY\" in v ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n                                }\n                                m2.skewX = _parseAngle(v.skewX, m1.skewX - m1.skewY);\n                                if (m2.skewY = _parseAngle(v.skewY, m1.skewY)) {\n                                    m2.skewX += m2.skewY;\n                                    m2.rotation += m2.skewY;\n                                }\n                            }\n                            if (_supports3D && v.force3D != null) {\n                                m1.force3D = v.force3D;\n                                hasChange = true;\n                            }\n                            m1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n                            has3D = m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective;\n                            if (!has3D && v.scale != null) {\n                                m2.scaleZ = 1;\n                            }\n                            while (--i > -1) {\n                                p = _transformProps[i];\n                                orig = m2[p] - m1[p];\n                                if (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n                                    hasChange = true;\n                                    pt = new CSSPropTween(m1, p, m1[p], orig, pt);\n                                    if (p in endRotations) {\n                                        pt.e = endRotations[p];\n                                    }\n                                    pt.xs0 = 0;\n                                    pt.plugin = plugin;\n                                    cssp._overwriteProps.push(pt.n);\n                                }\n                            }\n                            orig = v.transformOrigin;\n                            if (m1.svg && (orig || v.svgOrigin)) {\n                                x = m1.xOffset;\n                                y = m1.yOffset;\n                                _parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n                                pt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString);\n                                pt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n                                if (x !== m1.xOffset || y !== m1.yOffset) {\n                                    pt = _addNonTweeningNumericPT(m1, \"xOffset\", originalGSTransform ? x : m1.xOffset, m1.xOffset, pt, transformOriginString);\n                                    pt = _addNonTweeningNumericPT(m1, \"yOffset\", originalGSTransform ? y : m1.yOffset, m1.yOffset, pt, transformOriginString);\n                                }\n                                orig = _useSVGTransformAttr ? null : \"0px 0px\";\n                            }\n                            if (orig || _supports3D && has3D && m1.zOrigin) {\n                                if (_transformProp) {\n                                    hasChange = true;\n                                    p = _transformOriginProp;\n                                    orig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\";\n                                    pt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n                                    pt.b = style[p];\n                                    pt.plugin = plugin;\n                                    if (_supports3D) {\n                                        copy = m1.zOrigin;\n                                        orig = orig.split(\" \");\n                                        m1.zOrigin = (orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\") ? parseFloat(orig[2]) : copy) || 0;\n                                        pt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\";\n                                        pt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n);\n                                        pt.b = copy;\n                                        pt.xs0 = pt.e = m1.zOrigin;\n                                    } else {\n                                        pt.xs0 = pt.e = orig;\n                                    }\n                                } else {\n                                    _parsePosition(orig + \"\", m1);\n                                }\n                            }\n                            if (hasChange) {\n                                cssp._transformType = !(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3) ? 3 : 2;\n                            }\n                            return pt;\n                        },\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"boxShadow\", {\n                        defaultValue: \"0px 0px 0px 0px #999\",\n                        prefix: true,\n                        color: true,\n                        multi: true,\n                        keyword: \"inset\"\n                    });\n                    _registerComplexSpecialProp(\"borderRadius\", {\n                        defaultValue: \"0px\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            e = this.format(e);\n                            var props = [ \"borderTopLeftRadius\", \"borderTopRightRadius\", \"borderBottomRightRadius\", \"borderBottomLeftRadius\" ], style = t.style, ea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n                            w = parseFloat(t.offsetWidth);\n                            h = parseFloat(t.offsetHeight);\n                            ea1 = e.split(\" \");\n                            for (i = 0; i < props.length; i++) {\n                                if (this.p.indexOf(\"border\")) {\n                                    props[i] = _checkPropPrefix(props[i]);\n                                }\n                                bs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n                                if (bs.indexOf(\" \") !== -1) {\n                                    bs2 = bs.split(\" \");\n                                    bs = bs2[0];\n                                    bs2 = bs2[1];\n                                }\n                                es = es2 = ea1[i];\n                                bn = parseFloat(bs);\n                                bsfx = bs.substr((bn + \"\").length);\n                                rel = es.charAt(1) === \"=\";\n                                if (rel) {\n                                    en = parseInt(es.charAt(0) + \"1\", 10);\n                                    es = es.substr(2);\n                                    en *= parseFloat(es);\n                                    esfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n                                } else {\n                                    en = parseFloat(es);\n                                    esfx = es.substr((en + \"\").length);\n                                }\n                                if (esfx === \"\") {\n                                    esfx = _suffixMap[p] || bsfx;\n                                }\n                                if (esfx !== bsfx) {\n                                    hn = _convertToPixels(t, \"borderLeft\", bn, bsfx);\n                                    vn = _convertToPixels(t, \"borderTop\", bn, bsfx);\n                                    if (esfx === \"%\") {\n                                        bs = hn / w * 100 + \"%\";\n                                        bs2 = vn / h * 100 + \"%\";\n                                    } else if (esfx === \"em\") {\n                                        em = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n                                        bs = hn / em + \"em\";\n                                        bs2 = vn / em + \"em\";\n                                    } else {\n                                        bs = hn + \"px\";\n                                        bs2 = vn + \"px\";\n                                    }\n                                    if (rel) {\n                                        es = parseFloat(bs) + en + esfx;\n                                        es2 = parseFloat(bs2) + en + esfx;\n                                    }\n                                }\n                                pt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n                            }\n                            return pt;\n                        },\n                        prefix: true,\n                        formatter: _getFormatter(\"0px 0px 0px 0px\", false, true)\n                    });\n                    _registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {\n                        defaultValue: \"0px\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            return _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n                        },\n                        prefix: true,\n                        formatter: _getFormatter(\"0px 0px\", false, true)\n                    });\n                    _registerComplexSpecialProp(\"backgroundPosition\", {\n                        defaultValue: \"0 0\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var bp = \"background-position\", cs = _cs || _getComputedStyle(t, null), bs = this.format((cs ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), es = this.format(e), ba, ea, i, pct, overlap, src;\n                            if (bs.indexOf(\"%\") !== -1 !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n                                src = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n                                if (src && src !== \"none\") {\n                                    ba = bs.split(\" \");\n                                    ea = es.split(\" \");\n                                    _tempImg.setAttribute(\"src\", src);\n                                    i = 2;\n                                    while (--i > -1) {\n                                        bs = ba[i];\n                                        pct = bs.indexOf(\"%\") !== -1;\n                                        if (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n                                            overlap = i === 0 ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n                                            ba[i] = pct ? parseFloat(bs) / 100 * overlap + \"px\" : parseFloat(bs) / overlap * 100 + \"%\";\n                                        }\n                                    }\n                                    bs = ba.join(\" \");\n                                }\n                            }\n                            return this.parseComplex(t.style, bs, es, pt, plugin);\n                        },\n                        formatter: _parsePosition\n                    });\n                    _registerComplexSpecialProp(\"backgroundSize\", {\n                        defaultValue: \"0 0\",\n                        formatter: _parsePosition\n                    });\n                    _registerComplexSpecialProp(\"perspective\", {\n                        defaultValue: \"0px\",\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"perspectiveOrigin\", {\n                        defaultValue: \"50% 50%\",\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"transformStyle\", {\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"backfaceVisibility\", {\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"userSelect\", {\n                        prefix: true\n                    });\n                    _registerComplexSpecialProp(\"margin\", {\n                        parser: _getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")\n                    });\n                    _registerComplexSpecialProp(\"padding\", {\n                        parser: _getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")\n                    });\n                    _registerComplexSpecialProp(\"clip\", {\n                        defaultValue: \"rect(0px,0px,0px,0px)\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var b, cs, delim;\n                            if (_ieVers < 9) {\n                                cs = t.currentStyle;\n                                delim = _ieVers < 8 ? \" \" : \",\";\n                                b = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n                                e = this.format(e).split(\",\").join(delim);\n                            } else {\n                                b = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n                                e = this.format(e);\n                            }\n                            return this.parseComplex(t.style, b, e, pt, plugin);\n                        }\n                    });\n                    _registerComplexSpecialProp(\"textShadow\", {\n                        defaultValue: \"0px 0px 0px #999\",\n                        color: true,\n                        multi: true\n                    });\n                    _registerComplexSpecialProp(\"autoRound,strictUnits\", {\n                        parser: function(t, e, p, cssp, pt) {\n                            return pt;\n                        }\n                    });\n                    _registerComplexSpecialProp(\"border\", {\n                        defaultValue: \"0px solid #000\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"), end = this.format(e).split(\" \"), esfx = end[0].replace(_suffixExp, \"\");\n                            if (esfx !== \"px\") {\n                                bw = parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx) + esfx;\n                            }\n                            return this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n                        },\n                        color: true,\n                        formatter: function(v) {\n                            var a = v.split(\" \");\n                            return a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [ \"#000\" ])[0];\n                        }\n                    });\n                    _registerComplexSpecialProp(\"borderWidth\", {\n                        parser: _getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")\n                    });\n                    _registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var s = t.style, prop = \"cssFloat\" in s ? \"cssFloat\" : \"styleFloat\";\n                            return new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n                        }\n                    });\n                    var _setIEOpacityRatio = function(v) {\n                        var t = this.t, filters = t.filter || _getStyle(this.data, \"filter\") || \"\", val = this.s + this.c * v | 0, skip;\n                        if (val === 100) {\n                            if (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n                                t.removeAttribute(\"filter\");\n                                skip = !_getStyle(this.data, \"filter\");\n                            } else {\n                                t.filter = filters.replace(_alphaFilterExp, \"\");\n                                skip = true;\n                            }\n                        }\n                        if (!skip) {\n                            if (this.xn1) {\n                                t.filter = filters = filters || \"alpha(opacity=\" + val + \")\";\n                            }\n                            if (filters.indexOf(\"pacity\") === -1) {\n                                if (val !== 0 || !this.xn1) {\n                                    t.filter = filters + \" alpha(opacity=\" + val + \")\";\n                                }\n                            } else {\n                                t.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n                            }\n                        }\n                    };\n                    _registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {\n                        defaultValue: \"1\",\n                        parser: function(t, e, p, cssp, pt, plugin) {\n                            var b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")), style = t.style, isAutoAlpha = p === \"autoAlpha\";\n                            if (typeof e === \"string\" && e.charAt(1) === \"=\") {\n                                e = (e.charAt(0) === \"-\" ? -1 : 1) * parseFloat(e.substr(2)) + b;\n                            }\n                            if (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) {\n                                b = 0;\n                            }\n                            if (_supportsOpacity) {\n                                pt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n                            } else {\n                                pt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n                                pt.xn1 = isAutoAlpha ? 1 : 0;\n                                style.zoom = 1;\n                                pt.type = 2;\n                                pt.b = \"alpha(opacity=\" + pt.s + \")\";\n                                pt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n                                pt.data = t;\n                                pt.plugin = plugin;\n                                pt.setRatio = _setIEOpacityRatio;\n                            }\n                            if (isAutoAlpha) {\n                                pt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, b !== 0 ? \"inherit\" : \"hidden\", e === 0 ? \"hidden\" : \"inherit\");\n                                pt.xs0 = \"inherit\";\n                                cssp._overwriteProps.push(pt.n);\n                                cssp._overwriteProps.push(p);\n                            }\n                            return pt;\n                        }\n                    });\n                    var _removeProp = function(s, p) {\n                        if (p) {\n                            if (s.removeProperty) {\n                                if (p.substr(0, 2) === \"ms\" || p.substr(0, 6) === \"webkit\") {\n                                    p = \"-\" + p;\n                                }\n                                s.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n                            } else {\n                                s.removeAttribute(p);\n                            }\n                        }\n                    }, _setClassNameRatio = function(v) {\n                        this.t._gsClassPT = this;\n                        if (v === 1 || v === 0) {\n                            this.t.setAttribute(\"class\", v === 0 ? this.b : this.e);\n                            var mpt = this.data, s = this.t.style;\n                            while (mpt) {\n                                if (!mpt.v) {\n                                    _removeProp(s, mpt.p);\n                                } else {\n                                    s[mpt.p] = mpt.v;\n                                }\n                                mpt = mpt._next;\n                            }\n                            if (v === 1 && this.t._gsClassPT === this) {\n                                this.t._gsClassPT = null;\n                            }\n                        } else if (this.t.getAttribute(\"class\") !== this.e) {\n                            this.t.setAttribute(\"class\", this.e);\n                        }\n                    };\n                    _registerComplexSpecialProp(\"className\", {\n                        parser: function(t, e, p, cssp, pt, plugin, vars) {\n                            var b = t.getAttribute(\"class\") || \"\", cssText = t.style.cssText, difData, bs, cnpt, cnptLookup, mpt;\n                            pt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n                            pt.setRatio = _setClassNameRatio;\n                            pt.pr = -11;\n                            _hasPriority = true;\n                            pt.b = b;\n                            bs = _getAllStyles(t, _cs);\n                            cnpt = t._gsClassPT;\n                            if (cnpt) {\n                                cnptLookup = {};\n                                mpt = cnpt.data;\n                                while (mpt) {\n                                    cnptLookup[mpt.p] = 1;\n                                    mpt = mpt._next;\n                                }\n                                cnpt.setRatio(1);\n                            }\n                            t._gsClassPT = pt;\n                            pt.e = e.charAt(1) !== \"=\" ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + (e.charAt(0) === \"+\" ? \" \" + e.substr(2) : \"\");\n                            t.setAttribute(\"class\", pt.e);\n                            difData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n                            t.setAttribute(\"class\", b);\n                            pt.data = difData.firstMPT;\n                            t.style.cssText = cssText;\n                            pt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin);\n                            return pt;\n                        }\n                    });\n                    var _setClearPropsRatio = function(v) {\n                        if (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") {\n                            var s = this.t.style, transformParse = _specialProps.transform.parse, a, p, i, clearTransform, transform;\n                            if (this.e === \"all\") {\n                                s.cssText = \"\";\n                                clearTransform = true;\n                            } else {\n                                a = this.e.split(\" \").join(\"\").split(\",\");\n                                i = a.length;\n                                while (--i > -1) {\n                                    p = a[i];\n                                    if (_specialProps[p]) {\n                                        if (_specialProps[p].parse === transformParse) {\n                                            clearTransform = true;\n                                        } else {\n                                            p = p === \"transformOrigin\" ? _transformOriginProp : _specialProps[p].p;\n                                        }\n                                    }\n                                    _removeProp(s, p);\n                                }\n                            }\n                            if (clearTransform) {\n                                _removeProp(s, _transformProp);\n                                transform = this.t._gsTransform;\n                                if (transform) {\n                                    if (transform.svg) {\n                                        this.t.removeAttribute(\"data-svg-origin\");\n                                        this.t.removeAttribute(\"transform\");\n                                    }\n                                    delete this.t._gsTransform;\n                                }\n                            }\n                        }\n                    };\n                    _registerComplexSpecialProp(\"clearProps\", {\n                        parser: function(t, e, p, cssp, pt) {\n                            pt = new CSSPropTween(t, p, 0, 0, pt, 2);\n                            pt.setRatio = _setClearPropsRatio;\n                            pt.e = e;\n                            pt.pr = -10;\n                            pt.data = cssp._tween;\n                            _hasPriority = true;\n                            return pt;\n                        }\n                    });\n                    p = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n                    i = p.length;\n                    while (i--) {\n                        _registerPluginProp(p[i]);\n                    }\n                    p = CSSPlugin.prototype;\n                    p._firstPT = p._lastParsedTransform = p._transform = null;\n                    p._onInitTween = function(target, vars, tween) {\n                        if (!target.nodeType) {\n                            return false;\n                        }\n                        this._target = target;\n                        this._tween = tween;\n                        this._vars = vars;\n                        _autoRound = vars.autoRound;\n                        _hasPriority = false;\n                        _suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n                        _cs = _getComputedStyle(target, \"\");\n                        _overwriteProps = this._overwriteProps;\n                        var style = target.style, v, pt, pt2, first, last, next, zIndex, tpt, threeD;\n                        if (_reqSafariFix) if (style.zIndex === \"\") {\n                            v = _getStyle(target, \"zIndex\", _cs);\n                            if (v === \"auto\" || v === \"\") {\n                                this._addLazySet(style, \"zIndex\", 0);\n                            }\n                        }\n                        if (typeof vars === \"string\") {\n                            first = style.cssText;\n                            v = _getAllStyles(target, _cs);\n                            style.cssText = first + \";\" + vars;\n                            v = _cssDif(target, v, _getAllStyles(target)).difs;\n                            if (!_supportsOpacity && _opacityValExp.test(vars)) {\n                                v.opacity = parseFloat(RegExp.$1);\n                            }\n                            vars = v;\n                            style.cssText = first;\n                        }\n                        if (vars.className) {\n                            this._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n                        } else {\n                            this._firstPT = pt = this.parse(target, vars, null);\n                        }\n                        if (this._transformType) {\n                            threeD = this._transformType === 3;\n                            if (!_transformProp) {\n                                style.zoom = 1;\n                            } else if (_isSafari) {\n                                _reqSafariFix = true;\n                                if (style.zIndex === \"\") {\n                                    zIndex = _getStyle(target, \"zIndex\", _cs);\n                                    if (zIndex === \"auto\" || zIndex === \"\") {\n                                        this._addLazySet(style, \"zIndex\", 0);\n                                    }\n                                }\n                                if (_isSafariLT6) {\n                                    this._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n                                }\n                            }\n                            pt2 = pt;\n                            while (pt2 && pt2._next) {\n                                pt2 = pt2._next;\n                            }\n                            tpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n                            this._linkCSSP(tpt, null, pt2);\n                            tpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n                            tpt.data = this._transform || _getTransform(target, _cs, true);\n                            tpt.tween = tween;\n                            tpt.pr = -1;\n                            _overwriteProps.pop();\n                        }\n                        if (_hasPriority) {\n                            while (pt) {\n                                next = pt._next;\n                                pt2 = first;\n                                while (pt2 && pt2.pr > pt.pr) {\n                                    pt2 = pt2._next;\n                                }\n                                if (pt._prev = pt2 ? pt2._prev : last) {\n                                    pt._prev._next = pt;\n                                } else {\n                                    first = pt;\n                                }\n                                if (pt._next = pt2) {\n                                    pt2._prev = pt;\n                                } else {\n                                    last = pt;\n                                }\n                                pt = next;\n                            }\n                            this._firstPT = first;\n                        }\n                        return true;\n                    };\n                    p.parse = function(target, vars, pt, plugin) {\n                        var style = target.style, p, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n                        for (p in vars) {\n                            es = vars[p];\n                            sp = _specialProps[p];\n                            if (sp) {\n                                pt = sp.parse(target, es, p, this, pt, plugin, vars);\n                            } else {\n                                bs = _getStyle(target, p, _cs) + \"\";\n                                isStr = typeof es === \"string\";\n                                if (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || isStr && _rgbhslExp.test(es)) {\n                                    if (!isStr) {\n                                        es = _parseColor(es);\n                                        es = (es.length > 3 ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n                                    }\n                                    pt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n                                } else if (isStr && _complexExp.test(es)) {\n                                    pt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n                                } else {\n                                    bn = parseFloat(bs);\n                                    bsfx = bn || bn === 0 ? bs.substr((bn + \"\").length) : \"\";\n                                    if (bs === \"\" || bs === \"auto\") {\n                                        if (p === \"width\" || p === \"height\") {\n                                            bn = _getDimension(target, p, _cs);\n                                            bsfx = \"px\";\n                                        } else if (p === \"left\" || p === \"top\") {\n                                            bn = _calculateOffset(target, p, _cs);\n                                            bsfx = \"px\";\n                                        } else {\n                                            bn = p !== \"opacity\" ? 0 : 1;\n                                            bsfx = \"\";\n                                        }\n                                    }\n                                    rel = isStr && es.charAt(1) === \"=\";\n                                    if (rel) {\n                                        en = parseInt(es.charAt(0) + \"1\", 10);\n                                        es = es.substr(2);\n                                        en *= parseFloat(es);\n                                        esfx = es.replace(_suffixExp, \"\");\n                                    } else {\n                                        en = parseFloat(es);\n                                        esfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n                                    }\n                                    if (esfx === \"\") {\n                                        esfx = p in _suffixMap ? _suffixMap[p] : bsfx;\n                                    }\n                                    es = en || en === 0 ? (rel ? en + bn : en) + esfx : vars[p];\n                                    if (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) {\n                                        bn = _convertToPixels(target, p, bn, bsfx);\n                                        if (esfx === \"%\") {\n                                            bn /= _convertToPixels(target, p, 100, \"%\") / 100;\n                                            if (vars.strictUnits !== true) {\n                                                bs = bn + \"%\";\n                                            }\n                                        } else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n                                            bn /= _convertToPixels(target, p, 1, esfx);\n                                        } else if (esfx !== \"px\") {\n                                            en = _convertToPixels(target, p, en, esfx);\n                                            esfx = \"px\";\n                                        }\n                                        if (rel) if (en || en === 0) {\n                                            es = en + bn + esfx;\n                                        }\n                                    }\n                                    if (rel) {\n                                        en += bn;\n                                    }\n                                    if ((bn || bn === 0) && (en || en === 0)) {\n                                        pt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, _autoRound !== false && (esfx === \"px\" || p === \"zIndex\"), 0, bs, es);\n                                        pt.xs0 = esfx;\n                                    } else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n                                        _log(\"invalid \" + p + \" tween value: \" + vars[p]);\n                                    } else {\n                                        pt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n                                        pt.xs0 = es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1) ? bs : es;\n                                    }\n                                }\n                            }\n                            if (plugin) if (pt && !pt.plugin) {\n                                pt.plugin = plugin;\n                            }\n                        }\n                        return pt;\n                    };\n                    p.setRatio = function(v) {\n                        var pt = this._firstPT, min = 1e-6, val, str, i;\n                        if (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n                            while (pt) {\n                                if (pt.type !== 2) {\n                                    if (pt.r && pt.type !== -1) {\n                                        val = Math.round(pt.s + pt.c);\n                                        if (!pt.type) {\n                                            pt.t[pt.p] = val + pt.xs0;\n                                        } else if (pt.type === 1) {\n                                            i = pt.l;\n                                            str = pt.xs0 + val + pt.xs1;\n                                            for (i = 1; i < pt.l; i++) {\n                                                str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                            }\n                                            pt.t[pt.p] = str;\n                                        }\n                                    } else {\n                                        pt.t[pt.p] = pt.e;\n                                    }\n                                } else {\n                                    pt.setRatio(v);\n                                }\n                                pt = pt._next;\n                            }\n                        } else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -1e-6) {\n                            while (pt) {\n                                val = pt.c * v + pt.s;\n                                if (pt.r) {\n                                    val = Math.round(val);\n                                } else if (val < min) if (val > -min) {\n                                    val = 0;\n                                }\n                                if (!pt.type) {\n                                    pt.t[pt.p] = val + pt.xs0;\n                                } else if (pt.type === 1) {\n                                    i = pt.l;\n                                    if (i === 2) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n                                    } else if (i === 3) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n                                    } else if (i === 4) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n                                    } else if (i === 5) {\n                                        pt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n                                    } else {\n                                        str = pt.xs0 + val + pt.xs1;\n                                        for (i = 1; i < pt.l; i++) {\n                                            str += pt[\"xn\" + i] + pt[\"xs\" + (i + 1)];\n                                        }\n                                        pt.t[pt.p] = str;\n                                    }\n                                } else if (pt.type === -1) {\n                                    pt.t[pt.p] = pt.xs0;\n                                } else if (pt.setRatio) {\n                                    pt.setRatio(v);\n                                }\n                                pt = pt._next;\n                            }\n                        } else {\n                            while (pt) {\n                                if (pt.type !== 2) {\n                                    pt.t[pt.p] = pt.b;\n                                } else {\n                                    pt.setRatio(v);\n                                }\n                                pt = pt._next;\n                            }\n                        }\n                    };\n                    p._enableTransforms = function(threeD) {\n                        this._transform = this._transform || _getTransform(this._target, _cs, true);\n                        this._transformType = !(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3) ? 3 : 2;\n                    };\n                    var lazySet = function(v) {\n                        this.t[this.p] = this.e;\n                        this.data._linkCSSP(this, this._next, null, true);\n                    };\n                    p._addLazySet = function(t, p, v) {\n                        var pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n                        pt.e = v;\n                        pt.setRatio = lazySet;\n                        pt.data = this;\n                    };\n                    p._linkCSSP = function(pt, next, prev, remove) {\n                        if (pt) {\n                            if (next) {\n                                next._prev = pt;\n                            }\n                            if (pt._next) {\n                                pt._next._prev = pt._prev;\n                            }\n                            if (pt._prev) {\n                                pt._prev._next = pt._next;\n                            } else if (this._firstPT === pt) {\n                                this._firstPT = pt._next;\n                                remove = true;\n                            }\n                            if (prev) {\n                                prev._next = pt;\n                            } else if (!remove && this._firstPT === null) {\n                                this._firstPT = pt;\n                            }\n                            pt._next = next;\n                            pt._prev = prev;\n                        }\n                        return pt;\n                    };\n                    p._kill = function(lookup) {\n                        var copy = lookup, pt, p, xfirst;\n                        if (lookup.autoAlpha || lookup.alpha) {\n                            copy = {};\n                            for (p in lookup) {\n                                copy[p] = lookup[p];\n                            }\n                            copy.opacity = 1;\n                            if (copy.autoAlpha) {\n                                copy.visibility = 1;\n                            }\n                        }\n                        if (lookup.className && (pt = this._classNamePT)) {\n                            xfirst = pt.xfirst;\n                            if (xfirst && xfirst._prev) {\n                                this._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev);\n                            } else if (xfirst === this._firstPT) {\n                                this._firstPT = pt._next;\n                            }\n                            if (pt._next) {\n                                this._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n                            }\n                            this._classNamePT = null;\n                        }\n                        return TweenPlugin.prototype._kill.call(this, copy);\n                    };\n                    var _getChildStyles = function(e, props, targets) {\n                        var children, i, child, type;\n                        if (e.slice) {\n                            i = e.length;\n                            while (--i > -1) {\n                                _getChildStyles(e[i], props, targets);\n                            }\n                            return;\n                        }\n                        children = e.childNodes;\n                        i = children.length;\n                        while (--i > -1) {\n                            child = children[i];\n                            type = child.type;\n                            if (child.style) {\n                                props.push(_getAllStyles(child));\n                                if (targets) {\n                                    targets.push(child);\n                                }\n                            }\n                            if ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n                                _getChildStyles(child, props, targets);\n                            }\n                        }\n                    };\n                    CSSPlugin.cascadeTo = function(target, duration, vars) {\n                        var tween = TweenLite.to(target, duration, vars), results = [ tween ], b = [], e = [], targets = [], _reservedProps = TweenLite._internals.reservedProps, i, difs, p, from;\n                        target = tween._targets || tween.target;\n                        _getChildStyles(target, b, targets);\n                        tween.render(duration, true, true);\n                        _getChildStyles(target, e);\n                        tween.render(0, true, true);\n                        tween._enabled(true);\n                        i = targets.length;\n                        while (--i > -1) {\n                            difs = _cssDif(targets[i], b[i], e[i]);\n                            if (difs.firstMPT) {\n                                difs = difs.difs;\n                                for (p in vars) {\n                                    if (_reservedProps[p]) {\n                                        difs[p] = vars[p];\n                                    }\n                                }\n                                from = {};\n                                for (p in difs) {\n                                    from[p] = b[i][p];\n                                }\n                                results.push(TweenLite.fromTo(targets[i], duration, from, difs));\n                            }\n                        }\n                        return results;\n                    };\n                    TweenPlugin.activate([ CSSPlugin ]);\n                    return CSSPlugin;\n                }, true);\n                (function() {\n                    var RoundPropsPlugin = _gsScope._gsDefine.plugin({\n                        propName: \"roundProps\",\n                        version: \"1.5\",\n                        priority: -1,\n                        API: 2,\n                        init: function(target, value, tween) {\n                            this._tween = tween;\n                            return true;\n                        }\n                    }), _roundLinkedList = function(node) {\n                        while (node) {\n                            if (!node.f && !node.blob) {\n                                node.r = 1;\n                            }\n                            node = node._next;\n                        }\n                    }, p = RoundPropsPlugin.prototype;\n                    p._onInitAllProps = function() {\n                        var tween = this._tween, rp = tween.vars.roundProps.join ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"), i = rp.length, lookup = {}, rpt = tween._propLookup.roundProps, prop, pt, next;\n                        while (--i > -1) {\n                            lookup[rp[i]] = 1;\n                        }\n                        i = rp.length;\n                        while (--i > -1) {\n                            prop = rp[i];\n                            pt = tween._firstPT;\n                            while (pt) {\n                                next = pt._next;\n                                if (pt.pg) {\n                                    pt.t._roundProps(lookup, true);\n                                } else if (pt.n === prop) {\n                                    if (pt.f === 2 && pt.t) {\n                                        _roundLinkedList(pt.t._firstPT);\n                                    } else {\n                                        this._add(pt.t, prop, pt.s, pt.c);\n                                        if (next) {\n                                            next._prev = pt._prev;\n                                        }\n                                        if (pt._prev) {\n                                            pt._prev._next = next;\n                                        } else if (tween._firstPT === pt) {\n                                            tween._firstPT = next;\n                                        }\n                                        pt._next = pt._prev = null;\n                                        tween._propLookup[prop] = rpt;\n                                    }\n                                }\n                                pt = next;\n                            }\n                        }\n                        return false;\n                    };\n                    p._add = function(target, p, s, c) {\n                        this._addTween(target, p, s, s + c, p, true);\n                        this._overwriteProps.push(p);\n                    };\n                })();\n                (function() {\n                    _gsScope._gsDefine.plugin({\n                        propName: \"attr\",\n                        API: 2,\n                        version: \"0.5.0\",\n                        init: function(target, value, tween) {\n                            var p;\n                            if (typeof target.setAttribute !== \"function\") {\n                                return false;\n                            }\n                            for (p in value) {\n                                this._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", value[p] + \"\", p, false, p);\n                                this._overwriteProps.push(p);\n                            }\n                            return true;\n                        }\n                    });\n                })();\n                _gsScope._gsDefine.plugin({\n                    propName: \"directionalRotation\",\n                    version: \"0.2.1\",\n                    API: 2,\n                    init: function(target, value, tween) {\n                        if (typeof value !== \"object\") {\n                            value = {\n                                rotation: value\n                            };\n                        }\n                        this.finals = {};\n                        var cap = value.useRadians === true ? Math.PI * 2 : 360, min = 1e-6, p, v, start, end, dif, split;\n                        for (p in value) {\n                            if (p !== \"useRadians\") {\n                                split = (value[p] + \"\").split(\"_\");\n                                v = split[0];\n                                start = parseFloat(typeof target[p] !== \"function\" ? target[p] : target[p.indexOf(\"set\") || typeof target[\"get\" + p.substr(3)] !== \"function\" ? p : \"get\" + p.substr(3)]());\n                                end = this.finals[p] = typeof v === \"string\" && v.charAt(1) === \"=\" ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n                                dif = end - start;\n                                if (split.length) {\n                                    v = split.join(\"_\");\n                                    if (v.indexOf(\"short\") !== -1) {\n                                        dif = dif % cap;\n                                        if (dif !== dif % (cap / 2)) {\n                                            dif = dif < 0 ? dif + cap : dif - cap;\n                                        }\n                                    }\n                                    if (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n                                        dif = (dif + cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                    } else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n                                        dif = (dif - cap * 9999999999) % cap - (dif / cap | 0) * cap;\n                                    }\n                                }\n                                if (dif > min || dif < -min) {\n                                    this._addTween(target, p, start, start + dif, p);\n                                    this._overwriteProps.push(p);\n                                }\n                            }\n                        }\n                        return true;\n                    },\n                    set: function(ratio) {\n                        var pt;\n                        if (ratio !== 1) {\n                            this._super.setRatio.call(this, ratio);\n                        } else {\n                            pt = this._firstPT;\n                            while (pt) {\n                                if (pt.f) {\n                                    pt.t[pt.p](this.finals[pt.p]);\n                                } else {\n                                    pt.t[pt.p] = this.finals[pt.p];\n                                }\n                                pt = pt._next;\n                            }\n                        }\n                    }\n                })._autoCSS = true;\n                _gsScope._gsDefine(\"easing.Back\", [ \"easing.Ease\" ], function(Ease) {\n                    var w = _gsScope.GreenSockGlobals || _gsScope, gs = w.com.greensock, _2PI = Math.PI * 2, _HALF_PI = Math.PI / 2, _class = gs._class, _create = function(n, f) {\n                        var C = _class(\"easing.\" + n, function() {}, true), p = C.prototype = new Ease();\n                        p.constructor = C;\n                        p.getRatio = f;\n                        return C;\n                    }, _easeReg = Ease.register || function() {}, _wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n                        var C = _class(\"easing.\" + name, {\n                            easeOut: new EaseOut(),\n                            easeIn: new EaseIn(),\n                            easeInOut: new EaseInOut()\n                        }, true);\n                        _easeReg(C, name);\n                        return C;\n                    }, EasePoint = function(time, value, next) {\n                        this.t = time;\n                        this.v = value;\n                        if (next) {\n                            this.next = next;\n                            next.prev = this;\n                            this.c = next.v - value;\n                            this.gap = next.t - time;\n                        }\n                    }, _createBack = function(n, f) {\n                        var C = _class(\"easing.\" + n, function(overshoot) {\n                            this._p1 = overshoot || overshoot === 0 ? overshoot : 1.70158;\n                            this._p2 = this._p1 * 1.525;\n                        }, true), p = C.prototype = new Ease();\n                        p.constructor = C;\n                        p.getRatio = f;\n                        p.config = function(overshoot) {\n                            return new C(overshoot);\n                        };\n                        return C;\n                    }, Back = _wrap(\"Back\", _createBack(\"BackOut\", function(p) {\n                        return (p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1;\n                    }), _createBack(\"BackIn\", function(p) {\n                        return p * p * ((this._p1 + 1) * p - this._p1);\n                    }), _createBack(\"BackInOut\", function(p) {\n                        return (p *= 2) < 1 ? .5 * p * p * ((this._p2 + 1) * p - this._p2) : .5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n                    })), SlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n                        power = power || power === 0 ? power : .7;\n                        if (linearRatio == null) {\n                            linearRatio = .7;\n                        } else if (linearRatio > 1) {\n                            linearRatio = 1;\n                        }\n                        this._p = linearRatio !== 1 ? power : 0;\n                        this._p1 = (1 - linearRatio) / 2;\n                        this._p2 = linearRatio;\n                        this._p3 = this._p1 + this._p2;\n                        this._calcEnd = yoyoMode === true;\n                    }, true), p = SlowMo.prototype = new Ease(), SteppedEase, RoughEase, _createElastic;\n                    p.constructor = SlowMo;\n                    p.getRatio = function(p) {\n                        var r = p + (.5 - p) * this._p;\n                        if (p < this._p1) {\n                            return this._calcEnd ? 1 - (p = 1 - p / this._p1) * p : r - (p = 1 - p / this._p1) * p * p * p * r;\n                        } else if (p > this._p3) {\n                            return this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + (p - r) * (p = (p - this._p3) / this._p1) * p * p * p;\n                        }\n                        return this._calcEnd ? 1 : r;\n                    };\n                    SlowMo.ease = new SlowMo(.7, .7);\n                    p.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n                        return new SlowMo(linearRatio, power, yoyoMode);\n                    };\n                    SteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n                        steps = steps || 1;\n                        this._p1 = 1 / steps;\n                        this._p2 = steps + 1;\n                    }, true);\n                    p = SteppedEase.prototype = new Ease();\n                    p.constructor = SteppedEase;\n                    p.getRatio = function(p) {\n                        if (p < 0) {\n                            p = 0;\n                        } else if (p >= 1) {\n                            p = .999999999;\n                        }\n                        return (this._p2 * p >> 0) * this._p1;\n                    };\n                    p.config = SteppedEase.config = function(steps) {\n                        return new SteppedEase(steps);\n                    };\n                    RoughEase = _class(\"easing.RoughEase\", function(vars) {\n                        vars = vars || {};\n                        var taper = vars.taper || \"none\", a = [], cnt = 0, points = (vars.points || 20) | 0, i = points, randomize = vars.randomize !== false, clamp = vars.clamp === true, template = vars.template instanceof Ease ? vars.template : null, strength = typeof vars.strength === \"number\" ? vars.strength * .4 : .4, x, y, bump, invX, obj, pnt;\n                        while (--i > -1) {\n                            x = randomize ? Math.random() : 1 / points * i;\n                            y = template ? template.getRatio(x) : x;\n                            if (taper === \"none\") {\n                                bump = strength;\n                            } else if (taper === \"out\") {\n                                invX = 1 - x;\n                                bump = invX * invX * strength;\n                            } else if (taper === \"in\") {\n                                bump = x * x * strength;\n                            } else if (x < .5) {\n                                invX = x * 2;\n                                bump = invX * invX * .5 * strength;\n                            } else {\n                                invX = (1 - x) * 2;\n                                bump = invX * invX * .5 * strength;\n                            }\n                            if (randomize) {\n                                y += Math.random() * bump - bump * .5;\n                            } else if (i % 2) {\n                                y += bump * .5;\n                            } else {\n                                y -= bump * .5;\n                            }\n                            if (clamp) {\n                                if (y > 1) {\n                                    y = 1;\n                                } else if (y < 0) {\n                                    y = 0;\n                                }\n                            }\n                            a[cnt++] = {\n                                x: x,\n                                y: y\n                            };\n                        }\n                        a.sort(function(a, b) {\n                            return a.x - b.x;\n                        });\n                        pnt = new EasePoint(1, 1, null);\n                        i = points;\n                        while (--i > -1) {\n                            obj = a[i];\n                            pnt = new EasePoint(obj.x, obj.y, pnt);\n                        }\n                        this._prev = new EasePoint(0, 0, pnt.t !== 0 ? pnt : pnt.next);\n                    }, true);\n                    p = RoughEase.prototype = new Ease();\n                    p.constructor = RoughEase;\n                    p.getRatio = function(p) {\n                        var pnt = this._prev;\n                        if (p > pnt.t) {\n                            while (pnt.next && p >= pnt.t) {\n                                pnt = pnt.next;\n                            }\n                            pnt = pnt.prev;\n                        } else {\n                            while (pnt.prev && p <= pnt.t) {\n                                pnt = pnt.prev;\n                            }\n                        }\n                        this._prev = pnt;\n                        return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;\n                    };\n                    p.config = function(vars) {\n                        return new RoughEase(vars);\n                    };\n                    RoughEase.ease = new RoughEase();\n                    _wrap(\"Bounce\", _create(\"BounceOut\", function(p) {\n                        if (p < 1 / 2.75) {\n                            return 7.5625 * p * p;\n                        } else if (p < 2 / 2.75) {\n                            return 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n                        } else if (p < 2.5 / 2.75) {\n                            return 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n                        }\n                        return 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n                    }), _create(\"BounceIn\", function(p) {\n                        if ((p = 1 - p) < 1 / 2.75) {\n                            return 1 - 7.5625 * p * p;\n                        } else if (p < 2 / 2.75) {\n                            return 1 - (7.5625 * (p -= 1.5 / 2.75) * p + .75);\n                        } else if (p < 2.5 / 2.75) {\n                            return 1 - (7.5625 * (p -= 2.25 / 2.75) * p + .9375);\n                        }\n                        return 1 - (7.5625 * (p -= 2.625 / 2.75) * p + .984375);\n                    }), _create(\"BounceInOut\", function(p) {\n                        var invert = p < .5;\n                        if (invert) {\n                            p = 1 - p * 2;\n                        } else {\n                            p = p * 2 - 1;\n                        }\n                        if (p < 1 / 2.75) {\n                            p = 7.5625 * p * p;\n                        } else if (p < 2 / 2.75) {\n                            p = 7.5625 * (p -= 1.5 / 2.75) * p + .75;\n                        } else if (p < 2.5 / 2.75) {\n                            p = 7.5625 * (p -= 2.25 / 2.75) * p + .9375;\n                        } else {\n                            p = 7.5625 * (p -= 2.625 / 2.75) * p + .984375;\n                        }\n                        return invert ? (1 - p) * .5 : p * .5 + .5;\n                    }));\n                    _wrap(\"Circ\", _create(\"CircOut\", function(p) {\n                        return Math.sqrt(1 - (p = p - 1) * p);\n                    }), _create(\"CircIn\", function(p) {\n                        return -(Math.sqrt(1 - p * p) - 1);\n                    }), _create(\"CircInOut\", function(p) {\n                        return (p *= 2) < 1 ? -.5 * (Math.sqrt(1 - p * p) - 1) : .5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n                    }));\n                    _createElastic = function(n, f, def) {\n                        var C = _class(\"easing.\" + n, function(amplitude, period) {\n                            this._p1 = amplitude >= 1 ? amplitude : 1;\n                            this._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n                            this._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n                            this._p2 = _2PI / this._p2;\n                        }, true), p = C.prototype = new Ease();\n                        p.constructor = C;\n                        p.getRatio = f;\n                        p.config = function(amplitude, period) {\n                            return new C(amplitude, period);\n                        };\n                        return C;\n                    };\n                    _wrap(\"Elastic\", _createElastic(\"ElasticOut\", function(p) {\n                        return this._p1 * Math.pow(2, -10 * p) * Math.sin((p - this._p3) * this._p2) + 1;\n                    }, .3), _createElastic(\"ElasticIn\", function(p) {\n                        return -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2));\n                    }, .3), _createElastic(\"ElasticInOut\", function(p) {\n                        return (p *= 2) < 1 ? -.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 * (p -= 1)) * Math.sin((p - this._p3) * this._p2) * .5 + 1;\n                    }, .45));\n                    _wrap(\"Expo\", _create(\"ExpoOut\", function(p) {\n                        return 1 - Math.pow(2, -10 * p);\n                    }), _create(\"ExpoIn\", function(p) {\n                        return Math.pow(2, 10 * (p - 1)) - .001;\n                    }), _create(\"ExpoInOut\", function(p) {\n                        return (p *= 2) < 1 ? .5 * Math.pow(2, 10 * (p - 1)) : .5 * (2 - Math.pow(2, -10 * (p - 1)));\n                    }));\n                    _wrap(\"Sine\", _create(\"SineOut\", function(p) {\n                        return Math.sin(p * _HALF_PI);\n                    }), _create(\"SineIn\", function(p) {\n                        return -Math.cos(p * _HALF_PI) + 1;\n                    }), _create(\"SineInOut\", function(p) {\n                        return -.5 * (Math.cos(Math.PI * p) - 1);\n                    }));\n                    _class(\"easing.EaseLookup\", {\n                        find: function(s) {\n                            return Ease.map[s];\n                        }\n                    }, true);\n                    _easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n                    _easeReg(RoughEase, \"RoughEase\", \"ease,\");\n                    _easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n                    return Back;\n                }, true);\n            });\n            if (_gsScope._gsDefine) {\n                _gsScope._gsQueue.pop()();\n            }\n            (function(window, moduleName) {\n                \"use strict\";\n                var _exports = {}, _globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n                if (_globals.TweenLite) {\n                    return;\n                }\n                var _namespace = function(ns) {\n                    var a = ns.split(\".\"), p = _globals, i;\n                    for (i = 0; i < a.length; i++) {\n                        p[a[i]] = p = p[a[i]] || {};\n                    }\n                    return p;\n                }, gs = _namespace(\"com.greensock\"), _tinyNum = 1e-10, _slice = function(a) {\n                    var b = [], l = a.length, i;\n                    for (i = 0; i !== l; b.push(a[i++])) {}\n                    return b;\n                }, _emptyFunc = function() {}, _isArray = function() {\n                    var toString = Object.prototype.toString, array = toString.call([]);\n                    return function(obj) {\n                        return obj != null && (obj instanceof Array || typeof obj === \"object\" && !!obj.push && toString.call(obj) === array);\n                    };\n                }(), a, i, p, _ticker, _tickerActive, _defLookup = {}, Definition = function(ns, dependencies, func, global) {\n                    this.sc = _defLookup[ns] ? _defLookup[ns].sc : [];\n                    _defLookup[ns] = this;\n                    this.gsClass = null;\n                    this.func = func;\n                    var _classes = [];\n                    this.check = function(init) {\n                        var i = dependencies.length, missing = i, cur, a, n, cl, hasModule;\n                        while (--i > -1) {\n                            if ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n                                _classes[i] = cur.gsClass;\n                                missing--;\n                            } else if (init) {\n                                cur.sc.push(this);\n                            }\n                        }\n                        if (missing === 0 && func) {\n                            a = (\"com.greensock.\" + ns).split(\".\");\n                            n = a.pop();\n                            cl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n                            if (global) {\n                                _globals[n] = cl;\n                                hasModule = typeof module !== \"undefined\" && module.exports;\n                                if (!hasModule && \"function\" === \"function\" && __webpack_require__(6)) {\n                                    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                                        return cl;\n                                    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n                                } else if (hasModule) {\n                                    if (ns === moduleName) {\n                                        module.exports = _exports[moduleName] = cl;\n                                        for (i in _exports) {\n                                            cl[i] = _exports[i];\n                                        }\n                                    } else if (_exports[moduleName]) {\n                                        _exports[moduleName][n] = cl;\n                                    }\n                                }\n                            }\n                            for (i = 0; i < this.sc.length; i++) {\n                                this.sc[i].check();\n                            }\n                        }\n                    };\n                    this.check(true);\n                }, _gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n                    return new Definition(ns, dependencies, func, global);\n                }, _class = gs._class = function(ns, func, global) {\n                    func = func || function() {};\n                    _gsDefine(ns, [], function() {\n                        return func;\n                    }, global);\n                    return func;\n                };\n                _gsDefine.globals = _globals;\n                var _baseParams = [ 0, 0, 1, 1 ], _blankArray = [], Ease = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n                    this._func = func;\n                    this._type = type || 0;\n                    this._power = power || 0;\n                    this._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n                }, true), _easeMap = Ease.map = {}, _easeReg = Ease.register = function(ease, names, types, create) {\n                    var na = names.split(\",\"), i = na.length, ta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"), e, name, j, type;\n                    while (--i > -1) {\n                        name = na[i];\n                        e = create ? _class(\"easing.\" + name, null, true) : gs.easing[name] || {};\n                        j = ta.length;\n                        while (--j > -1) {\n                            type = ta[j];\n                            _easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n                        }\n                    }\n                };\n                p = Ease.prototype;\n                p._calcEnd = false;\n                p.getRatio = function(p) {\n                    if (this._func) {\n                        this._params[0] = p;\n                        return this._func.apply(null, this._params);\n                    }\n                    var t = this._type, pw = this._power, r = t === 1 ? 1 - p : t === 2 ? p : p < .5 ? p * 2 : (1 - p) * 2;\n                    if (pw === 1) {\n                        r *= r;\n                    } else if (pw === 2) {\n                        r *= r * r;\n                    } else if (pw === 3) {\n                        r *= r * r * r;\n                    } else if (pw === 4) {\n                        r *= r * r * r * r;\n                    }\n                    return t === 1 ? 1 - r : t === 2 ? r : p < .5 ? r / 2 : 1 - r / 2;\n                };\n                a = [ \"Linear\", \"Quad\", \"Cubic\", \"Quart\", \"Quint,Strong\" ];\n                i = a.length;\n                while (--i > -1) {\n                    p = a[i] + \",Power\" + i;\n                    _easeReg(new Ease(null, null, 1, i), p, \"easeOut\", true);\n                    _easeReg(new Ease(null, null, 2, i), p, \"easeIn\" + (i === 0 ? \",easeNone\" : \"\"));\n                    _easeReg(new Ease(null, null, 3, i), p, \"easeInOut\");\n                }\n                _easeMap.linear = gs.easing.Linear.easeIn;\n                _easeMap.swing = gs.easing.Quad.easeInOut;\n                var EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n                    this._listeners = {};\n                    this._eventTarget = target || this;\n                });\n                p = EventDispatcher.prototype;\n                p.addEventListener = function(type, callback, scope, useParam, priority) {\n                    priority = priority || 0;\n                    var list = this._listeners[type], index = 0, listener, i;\n                    if (this === _ticker && !_tickerActive) {\n                        _ticker.wake();\n                    }\n                    if (list == null) {\n                        this._listeners[type] = list = [];\n                    }\n                    i = list.length;\n                    while (--i > -1) {\n                        listener = list[i];\n                        if (listener.c === callback && listener.s === scope) {\n                            list.splice(i, 1);\n                        } else if (index === 0 && listener.pr < priority) {\n                            index = i + 1;\n                        }\n                    }\n                    list.splice(index, 0, {\n                        c: callback,\n                        s: scope,\n                        up: useParam,\n                        pr: priority\n                    });\n                };\n                p.removeEventListener = function(type, callback) {\n                    var list = this._listeners[type], i;\n                    if (list) {\n                        i = list.length;\n                        while (--i > -1) {\n                            if (list[i].c === callback) {\n                                list.splice(i, 1);\n                                return;\n                            }\n                        }\n                    }\n                };\n                p.dispatchEvent = function(type) {\n                    var list = this._listeners[type], i, t, listener;\n                    if (list) {\n                        i = list.length;\n                        t = this._eventTarget;\n                        while (--i > -1) {\n                            listener = list[i];\n                            if (listener) {\n                                if (listener.up) {\n                                    listener.c.call(listener.s || t, {\n                                        type: type,\n                                        target: t\n                                    });\n                                } else {\n                                    listener.c.call(listener.s || t);\n                                }\n                            }\n                        }\n                    }\n                };\n                var _reqAnimFrame = window.requestAnimationFrame, _cancelAnimFrame = window.cancelAnimationFrame, _getTime = Date.now || function() {\n                    return new Date().getTime();\n                }, _lastUpdate = _getTime();\n                a = [ \"ms\", \"moz\", \"webkit\", \"o\" ];\n                i = a.length;\n                while (--i > -1 && !_reqAnimFrame) {\n                    _reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n                    _cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n                }\n                _class(\"Ticker\", function(fps, useRAF) {\n                    var _self = this, _startTime = _getTime(), _useRAF = useRAF !== false && _reqAnimFrame ? \"auto\" : false, _lagThreshold = 500, _adjustedLag = 33, _tickWord = \"tick\", _fps, _req, _id, _gap, _nextTime, _tick = function(manual) {\n                        var elapsed = _getTime() - _lastUpdate, overlap, dispatch;\n                        if (elapsed > _lagThreshold) {\n                            _startTime += elapsed - _adjustedLag;\n                        }\n                        _lastUpdate += elapsed;\n                        _self.time = (_lastUpdate - _startTime) / 1e3;\n                        overlap = _self.time - _nextTime;\n                        if (!_fps || overlap > 0 || manual === true) {\n                            _self.frame++;\n                            _nextTime += overlap + (overlap >= _gap ? .004 : _gap - overlap);\n                            dispatch = true;\n                        }\n                        if (manual !== true) {\n                            _id = _req(_tick);\n                        }\n                        if (dispatch) {\n                            _self.dispatchEvent(_tickWord);\n                        }\n                    };\n                    EventDispatcher.call(_self);\n                    _self.time = _self.frame = 0;\n                    _self.tick = function() {\n                        _tick(true);\n                    };\n                    _self.lagSmoothing = function(threshold, adjustedLag) {\n                        _lagThreshold = threshold || 1 / _tinyNum;\n                        _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n                    };\n                    _self.sleep = function() {\n                        if (_id == null) {\n                            return;\n                        }\n                        if (!_useRAF || !_cancelAnimFrame) {\n                            clearTimeout(_id);\n                        } else {\n                            _cancelAnimFrame(_id);\n                        }\n                        _req = _emptyFunc;\n                        _id = null;\n                        if (_self === _ticker) {\n                            _tickerActive = false;\n                        }\n                    };\n                    _self.wake = function(seamless) {\n                        if (_id !== null) {\n                            _self.sleep();\n                        } else if (seamless) {\n                            _startTime += -_lastUpdate + (_lastUpdate = _getTime());\n                        } else if (_self.frame > 10) {\n                            _lastUpdate = _getTime() - _lagThreshold + 5;\n                        }\n                        _req = _fps === 0 ? _emptyFunc : !_useRAF || !_reqAnimFrame ? function(f) {\n                            return setTimeout(f, (_nextTime - _self.time) * 1e3 + 1 | 0);\n                        } : _reqAnimFrame;\n                        if (_self === _ticker) {\n                            _tickerActive = true;\n                        }\n                        _tick(2);\n                    };\n                    _self.fps = function(value) {\n                        if (!arguments.length) {\n                            return _fps;\n                        }\n                        _fps = value;\n                        _gap = 1 / (_fps || 60);\n                        _nextTime = this.time + _gap;\n                        _self.wake();\n                    };\n                    _self.useRAF = function(value) {\n                        if (!arguments.length) {\n                            return _useRAF;\n                        }\n                        _self.sleep();\n                        _useRAF = value;\n                        _self.fps(_fps);\n                    };\n                    _self.fps(fps);\n                    setTimeout(function() {\n                        if (_useRAF === \"auto\" && _self.frame < 5 && document.visibilityState !== \"hidden\") {\n                            _self.useRAF(false);\n                        }\n                    }, 1500);\n                });\n                p = gs.Ticker.prototype = new gs.events.EventDispatcher();\n                p.constructor = gs.Ticker;\n                var Animation = _class(\"core.Animation\", function(duration, vars) {\n                    this.vars = vars = vars || {};\n                    this._duration = this._totalDuration = duration || 0;\n                    this._delay = Number(vars.delay) || 0;\n                    this._timeScale = 1;\n                    this._active = vars.immediateRender === true;\n                    this.data = vars.data;\n                    this._reversed = vars.reversed === true;\n                    if (!_rootTimeline) {\n                        return;\n                    }\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    var tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n                    tl.add(this, tl._time);\n                    if (this.vars.paused) {\n                        this.paused(true);\n                    }\n                });\n                _ticker = Animation.ticker = new gs.Ticker();\n                p = Animation.prototype;\n                p._dirty = p._gc = p._initted = p._paused = false;\n                p._totalTime = p._time = 0;\n                p._rawPrevTime = -1;\n                p._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n                p._paused = false;\n                var _checkTimeout = function() {\n                    if (_tickerActive && _getTime() - _lastUpdate > 2e3) {\n                        _ticker.wake();\n                    }\n                    setTimeout(_checkTimeout, 2e3);\n                };\n                _checkTimeout();\n                p.play = function(from, suppressEvents) {\n                    if (from != null) {\n                        this.seek(from, suppressEvents);\n                    }\n                    return this.reversed(false).paused(false);\n                };\n                p.pause = function(atTime, suppressEvents) {\n                    if (atTime != null) {\n                        this.seek(atTime, suppressEvents);\n                    }\n                    return this.paused(true);\n                };\n                p.resume = function(from, suppressEvents) {\n                    if (from != null) {\n                        this.seek(from, suppressEvents);\n                    }\n                    return this.paused(false);\n                };\n                p.seek = function(time, suppressEvents) {\n                    return this.totalTime(Number(time), suppressEvents !== false);\n                };\n                p.restart = function(includeDelay, suppressEvents) {\n                    return this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, suppressEvents !== false, true);\n                };\n                p.reverse = function(from, suppressEvents) {\n                    if (from != null) {\n                        this.seek(from || this.totalDuration(), suppressEvents);\n                    }\n                    return this.reversed(true).paused(false);\n                };\n                p.render = function(time, suppressEvents, force) {};\n                p.invalidate = function() {\n                    this._time = this._totalTime = 0;\n                    this._initted = this._gc = false;\n                    this._rawPrevTime = -1;\n                    if (this._gc || !this.timeline) {\n                        this._enabled(true);\n                    }\n                    return this;\n                };\n                p.isActive = function() {\n                    var tl = this._timeline, startTime = this._startTime, rawTime;\n                    return !tl || !this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime()) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale;\n                };\n                p._enabled = function(enabled, ignoreTimeline) {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    this._gc = !enabled;\n                    this._active = this.isActive();\n                    if (ignoreTimeline !== true) {\n                        if (enabled && !this.timeline) {\n                            this._timeline.add(this, this._startTime - this._delay);\n                        } else if (!enabled && this.timeline) {\n                            this._timeline._remove(this, true);\n                        }\n                    }\n                    return false;\n                };\n                p._kill = function(vars, target) {\n                    return this._enabled(false, false);\n                };\n                p.kill = function(vars, target) {\n                    this._kill(vars, target);\n                    return this;\n                };\n                p._uncache = function(includeSelf) {\n                    var tween = includeSelf ? this : this.timeline;\n                    while (tween) {\n                        tween._dirty = true;\n                        tween = tween.timeline;\n                    }\n                    return this;\n                };\n                p._swapSelfInParams = function(params) {\n                    var i = params.length, copy = params.concat();\n                    while (--i > -1) {\n                        if (params[i] === \"{self}\") {\n                            copy[i] = this;\n                        }\n                    }\n                    return copy;\n                };\n                p._callback = function(type) {\n                    var v = this.vars;\n                    v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n                };\n                p.eventCallback = function(type, callback, params, scope) {\n                    if ((type || \"\").substr(0, 2) === \"on\") {\n                        var v = this.vars;\n                        if (arguments.length === 1) {\n                            return v[type];\n                        }\n                        if (callback == null) {\n                            delete v[type];\n                        } else {\n                            v[type] = callback;\n                            v[type + \"Params\"] = _isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1 ? this._swapSelfInParams(params) : params;\n                            v[type + \"Scope\"] = scope;\n                        }\n                        if (type === \"onUpdate\") {\n                            this._onUpdate = callback;\n                        }\n                    }\n                    return this;\n                };\n                p.delay = function(value) {\n                    if (!arguments.length) {\n                        return this._delay;\n                    }\n                    if (this._timeline.smoothChildTiming) {\n                        this.startTime(this._startTime + value - this._delay);\n                    }\n                    this._delay = value;\n                    return this;\n                };\n                p.duration = function(value) {\n                    if (!arguments.length) {\n                        this._dirty = false;\n                        return this._duration;\n                    }\n                    this._duration = this._totalDuration = value;\n                    this._uncache(true);\n                    if (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n                        this.totalTime(this._totalTime * (value / this._duration), true);\n                    }\n                    return this;\n                };\n                p.totalDuration = function(value) {\n                    this._dirty = false;\n                    return !arguments.length ? this._totalDuration : this.duration(value);\n                };\n                p.time = function(value, suppressEvents) {\n                    if (!arguments.length) {\n                        return this._time;\n                    }\n                    if (this._dirty) {\n                        this.totalDuration();\n                    }\n                    return this.totalTime(value > this._duration ? this._duration : value, suppressEvents);\n                };\n                p.totalTime = function(time, suppressEvents, uncapped) {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    if (!arguments.length) {\n                        return this._totalTime;\n                    }\n                    if (this._timeline) {\n                        if (time < 0 && !uncapped) {\n                            time += this.totalDuration();\n                        }\n                        if (this._timeline.smoothChildTiming) {\n                            if (this._dirty) {\n                                this.totalDuration();\n                            }\n                            var totalDuration = this._totalDuration, tl = this._timeline;\n                            if (time > totalDuration && !uncapped) {\n                                time = totalDuration;\n                            }\n                            this._startTime = (this._paused ? this._pauseTime : tl._time) - (!this._reversed ? time : totalDuration - time) / this._timeScale;\n                            if (!tl._dirty) {\n                                this._uncache(false);\n                            }\n                            if (tl._timeline) {\n                                while (tl._timeline) {\n                                    if (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n                                        tl.totalTime(tl._totalTime, true);\n                                    }\n                                    tl = tl._timeline;\n                                }\n                            }\n                        }\n                        if (this._gc) {\n                            this._enabled(true, false);\n                        }\n                        if (this._totalTime !== time || this._duration === 0) {\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                            this.render(time, suppressEvents, false);\n                            if (_lazyTweens.length) {\n                                _lazyRender();\n                            }\n                        }\n                    }\n                    return this;\n                };\n                p.progress = p.totalProgress = function(value, suppressEvents) {\n                    var duration = this.duration();\n                    return !arguments.length ? duration ? this._time / duration : this.ratio : this.totalTime(duration * value, suppressEvents);\n                };\n                p.startTime = function(value) {\n                    if (!arguments.length) {\n                        return this._startTime;\n                    }\n                    if (value !== this._startTime) {\n                        this._startTime = value;\n                        if (this.timeline) if (this.timeline._sortChildren) {\n                            this.timeline.add(this, value - this._delay);\n                        }\n                    }\n                    return this;\n                };\n                p.endTime = function(includeRepeats) {\n                    return this._startTime + (includeRepeats != false ? this.totalDuration() : this.duration()) / this._timeScale;\n                };\n                p.timeScale = function(value) {\n                    if (!arguments.length) {\n                        return this._timeScale;\n                    }\n                    value = value || _tinyNum;\n                    if (this._timeline && this._timeline.smoothChildTiming) {\n                        var pauseTime = this._pauseTime, t = pauseTime || pauseTime === 0 ? pauseTime : this._timeline.totalTime();\n                        this._startTime = t - (t - this._startTime) * this._timeScale / value;\n                    }\n                    this._timeScale = value;\n                    return this._uncache(false);\n                };\n                p.reversed = function(value) {\n                    if (!arguments.length) {\n                        return this._reversed;\n                    }\n                    if (value != this._reversed) {\n                        this._reversed = value;\n                        this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, true);\n                    }\n                    return this;\n                };\n                p.paused = function(value) {\n                    if (!arguments.length) {\n                        return this._paused;\n                    }\n                    var tl = this._timeline, raw, elapsed;\n                    if (value != this._paused) if (tl) {\n                        if (!_tickerActive && !value) {\n                            _ticker.wake();\n                        }\n                        raw = tl.rawTime();\n                        elapsed = raw - this._pauseTime;\n                        if (!value && tl.smoothChildTiming) {\n                            this._startTime += elapsed;\n                            this._uncache(false);\n                        }\n                        this._pauseTime = value ? raw : null;\n                        this._paused = value;\n                        this._active = this.isActive();\n                        if (!value && elapsed !== 0 && this._initted && this.duration()) {\n                            raw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n                            this.render(raw, raw === this._totalTime, true);\n                        }\n                    }\n                    if (this._gc && !value) {\n                        this._enabled(true, false);\n                    }\n                    return this;\n                };\n                var SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n                    Animation.call(this, 0, vars);\n                    this.autoRemoveChildren = this.smoothChildTiming = true;\n                });\n                p = SimpleTimeline.prototype = new Animation();\n                p.constructor = SimpleTimeline;\n                p.kill()._gc = false;\n                p._first = p._last = p._recent = null;\n                p._sortChildren = false;\n                p.add = p.insert = function(child, position, align, stagger) {\n                    var prevTween, st;\n                    child._startTime = Number(position || 0) + child._delay;\n                    if (child._paused) if (this !== child._timeline) {\n                        child._pauseTime = child._startTime + (this.rawTime() - child._startTime) / child._timeScale;\n                    }\n                    if (child.timeline) {\n                        child.timeline._remove(child, true);\n                    }\n                    child.timeline = child._timeline = this;\n                    if (child._gc) {\n                        child._enabled(true, true);\n                    }\n                    prevTween = this._last;\n                    if (this._sortChildren) {\n                        st = child._startTime;\n                        while (prevTween && prevTween._startTime > st) {\n                            prevTween = prevTween._prev;\n                        }\n                    }\n                    if (prevTween) {\n                        child._next = prevTween._next;\n                        prevTween._next = child;\n                    } else {\n                        child._next = this._first;\n                        this._first = child;\n                    }\n                    if (child._next) {\n                        child._next._prev = child;\n                    } else {\n                        this._last = child;\n                    }\n                    child._prev = prevTween;\n                    this._recent = child;\n                    if (this._timeline) {\n                        this._uncache(true);\n                    }\n                    return this;\n                };\n                p._remove = function(tween, skipDisable) {\n                    if (tween.timeline === this) {\n                        if (!skipDisable) {\n                            tween._enabled(false, true);\n                        }\n                        if (tween._prev) {\n                            tween._prev._next = tween._next;\n                        } else if (this._first === tween) {\n                            this._first = tween._next;\n                        }\n                        if (tween._next) {\n                            tween._next._prev = tween._prev;\n                        } else if (this._last === tween) {\n                            this._last = tween._prev;\n                        }\n                        tween._next = tween._prev = tween.timeline = null;\n                        if (tween === this._recent) {\n                            this._recent = this._last;\n                        }\n                        if (this._timeline) {\n                            this._uncache(true);\n                        }\n                    }\n                    return this;\n                };\n                p.render = function(time, suppressEvents, force) {\n                    var tween = this._first, next;\n                    this._totalTime = this._time = this._rawPrevTime = time;\n                    while (tween) {\n                        next = tween._next;\n                        if (tween._active || time >= tween._startTime && !tween._paused) {\n                            if (!tween._reversed) {\n                                tween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                            } else {\n                                tween.render((!tween._dirty ? tween._totalDuration : tween.totalDuration()) - (time - tween._startTime) * tween._timeScale, suppressEvents, force);\n                            }\n                        }\n                        tween = next;\n                    }\n                };\n                p.rawTime = function() {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    return this._totalTime;\n                };\n                var TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n                    Animation.call(this, duration, vars);\n                    this.render = TweenLite.prototype.render;\n                    if (target == null) {\n                        throw \"Cannot tween a null target.\";\n                    }\n                    this.target = target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n                    var isSelector = target.jquery || target.length && target !== window && target[0] && (target[0] === window || target[0].nodeType && target[0].style && !target.nodeType), overwrite = this.vars.overwrite, i, targ, targets;\n                    this._overwrite = overwrite = overwrite == null ? _overwriteLookup[TweenLite.defaultOverwrite] : typeof overwrite === \"number\" ? overwrite >> 0 : _overwriteLookup[overwrite];\n                    if ((isSelector || target instanceof Array || target.push && _isArray(target)) && typeof target[0] !== \"number\") {\n                        this._targets = targets = _slice(target);\n                        this._propLookup = [];\n                        this._siblings = [];\n                        for (i = 0; i < targets.length; i++) {\n                            targ = targets[i];\n                            if (!targ) {\n                                targets.splice(i--, 1);\n                                continue;\n                            } else if (typeof targ === \"string\") {\n                                targ = targets[i--] = TweenLite.selector(targ);\n                                if (typeof targ === \"string\") {\n                                    targets.splice(i + 1, 1);\n                                }\n                                continue;\n                            } else if (targ.length && targ !== window && targ[0] && (targ[0] === window || targ[0].nodeType && targ[0].style && !targ.nodeType)) {\n                                targets.splice(i--, 1);\n                                this._targets = targets = targets.concat(_slice(targ));\n                                continue;\n                            }\n                            this._siblings[i] = _register(targ, this, false);\n                            if (overwrite === 1) if (this._siblings[i].length > 1) {\n                                _applyOverwrite(targ, this, null, 1, this._siblings[i]);\n                            }\n                        }\n                    } else {\n                        this._propLookup = {};\n                        this._siblings = _register(target, this, false);\n                        if (overwrite === 1) if (this._siblings.length > 1) {\n                            _applyOverwrite(target, this, null, 1, this._siblings);\n                        }\n                    }\n                    if (this.vars.immediateRender || duration === 0 && this._delay === 0 && this.vars.immediateRender !== false) {\n                        this._time = -_tinyNum;\n                        this.render(Math.min(0, -this._delay));\n                    }\n                }, true), _isSelector = function(v) {\n                    return v && v.length && v !== window && v[0] && (v[0] === window || v[0].nodeType && v[0].style && !v.nodeType);\n                }, _autoCSS = function(vars, target) {\n                    var css = {}, p;\n                    for (p in vars) {\n                        if (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || _plugins[p] && _plugins[p]._autoCSS)) {\n                            css[p] = vars[p];\n                            delete vars[p];\n                        }\n                    }\n                    vars.css = css;\n                };\n                p = TweenLite.prototype = new Animation();\n                p.constructor = TweenLite;\n                p.kill()._gc = false;\n                p.ratio = 0;\n                p._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n                p._notifyPluginsOfEnabled = p._lazy = false;\n                TweenLite.version = \"1.18.5\";\n                TweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n                TweenLite.defaultOverwrite = \"auto\";\n                TweenLite.ticker = _ticker;\n                TweenLite.autoSleep = 120;\n                TweenLite.lagSmoothing = function(threshold, adjustedLag) {\n                    _ticker.lagSmoothing(threshold, adjustedLag);\n                };\n                TweenLite.selector = window.$ || window.jQuery || function(e) {\n                    var selector = window.$ || window.jQuery;\n                    if (selector) {\n                        TweenLite.selector = selector;\n                        return selector(e);\n                    }\n                    return typeof document === \"undefined\" ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById(e.charAt(0) === \"#\" ? e.substr(1) : e);\n                };\n                var _lazyTweens = [], _lazyLookup = {}, _numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/gi, _setRatio = function(v) {\n                    var pt = this._firstPT, min = 1e-6, val;\n                    while (pt) {\n                        val = !pt.blob ? pt.c * v + pt.s : v ? this.join(\"\") : this.start;\n                        if (pt.r) {\n                            val = Math.round(val);\n                        } else if (val < min) if (val > -min) {\n                            val = 0;\n                        }\n                        if (!pt.f) {\n                            pt.t[pt.p] = val;\n                        } else if (pt.fp) {\n                            pt.t[pt.p](pt.fp, val);\n                        } else {\n                            pt.t[pt.p](val);\n                        }\n                        pt = pt._next;\n                    }\n                }, _blobDif = function(start, end, filter, pt) {\n                    var a = [ start, end ], charIndex = 0, s = \"\", color = 0, startNums, endNums, num, i, l, nonNumbers, currentNum;\n                    a.start = start;\n                    if (filter) {\n                        filter(a);\n                        start = a[0];\n                        end = a[1];\n                    }\n                    a.length = 0;\n                    startNums = start.match(_numbersExp) || [];\n                    endNums = end.match(_numbersExp) || [];\n                    if (pt) {\n                        pt._next = null;\n                        pt.blob = 1;\n                        a._firstPT = pt;\n                    }\n                    l = endNums.length;\n                    for (i = 0; i < l; i++) {\n                        currentNum = endNums[i];\n                        nonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex) - charIndex);\n                        s += nonNumbers || !i ? nonNumbers : \",\";\n                        charIndex += nonNumbers.length;\n                        if (color) {\n                            color = (color + 1) % 5;\n                        } else if (nonNumbers.substr(-5) === \"rgba(\") {\n                            color = 1;\n                        }\n                        if (currentNum === startNums[i] || startNums.length <= i) {\n                            s += currentNum;\n                        } else {\n                            if (s) {\n                                a.push(s);\n                                s = \"\";\n                            }\n                            num = parseFloat(startNums[i]);\n                            a.push(num);\n                            a._firstPT = {\n                                _next: a._firstPT,\n                                t: a,\n                                p: a.length - 1,\n                                s: num,\n                                c: (currentNum.charAt(1) === \"=\" ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : parseFloat(currentNum) - num) || 0,\n                                f: 0,\n                                r: color && color < 4\n                            };\n                        }\n                        charIndex += currentNum.length;\n                    }\n                    s += end.substr(charIndex);\n                    if (s) {\n                        a.push(s);\n                    }\n                    a.setRatio = _setRatio;\n                    return a;\n                }, _addPropTween = function(target, prop, start, end, overwriteProp, round, funcParam, stringFilter) {\n                    var s = start === \"get\" ? target[prop] : start, type = typeof target[prop], isRelative = typeof end === \"string\" && end.charAt(1) === \"=\", pt = {\n                        t: target,\n                        p: prop,\n                        s: s,\n                        f: type === \"function\",\n                        pg: 0,\n                        n: overwriteProp || prop,\n                        r: round,\n                        pr: 0,\n                        c: isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : parseFloat(end) - s || 0\n                    }, blob, getterName;\n                    if (type !== \"number\") {\n                        if (type === \"function\" && start === \"get\") {\n                            getterName = prop.indexOf(\"set\") || typeof target[\"get\" + prop.substr(3)] !== \"function\" ? prop : \"get\" + prop.substr(3);\n                            pt.s = s = funcParam ? target[getterName](funcParam) : target[getterName]();\n                        }\n                        if (typeof s === \"string\" && (funcParam || isNaN(s))) {\n                            pt.fp = funcParam;\n                            blob = _blobDif(s, end, stringFilter || TweenLite.defaultStringFilter, pt);\n                            pt = {\n                                t: blob,\n                                p: \"setRatio\",\n                                s: 0,\n                                c: 1,\n                                f: 2,\n                                pg: 0,\n                                n: overwriteProp || prop,\n                                pr: 0\n                            };\n                        } else if (!isRelative) {\n                            pt.s = parseFloat(s);\n                            pt.c = parseFloat(end) - pt.s || 0;\n                        }\n                    }\n                    if (pt.c) {\n                        if (pt._next = this._firstPT) {\n                            pt._next._prev = pt;\n                        }\n                        this._firstPT = pt;\n                        return pt;\n                    }\n                }, _internals = TweenLite._internals = {\n                    isArray: _isArray,\n                    isSelector: _isSelector,\n                    lazyTweens: _lazyTweens,\n                    blobDif: _blobDif\n                }, _plugins = TweenLite._plugins = {}, _tweenLookup = _internals.tweenLookup = {}, _tweenLookupNum = 0, _reservedProps = _internals.reservedProps = {\n                    ease: 1,\n                    delay: 1,\n                    overwrite: 1,\n                    onComplete: 1,\n                    onCompleteParams: 1,\n                    onCompleteScope: 1,\n                    useFrames: 1,\n                    runBackwards: 1,\n                    startAt: 1,\n                    onUpdate: 1,\n                    onUpdateParams: 1,\n                    onUpdateScope: 1,\n                    onStart: 1,\n                    onStartParams: 1,\n                    onStartScope: 1,\n                    onReverseComplete: 1,\n                    onReverseCompleteParams: 1,\n                    onReverseCompleteScope: 1,\n                    onRepeat: 1,\n                    onRepeatParams: 1,\n                    onRepeatScope: 1,\n                    easeParams: 1,\n                    yoyo: 1,\n                    immediateRender: 1,\n                    repeat: 1,\n                    repeatDelay: 1,\n                    data: 1,\n                    paused: 1,\n                    reversed: 1,\n                    autoCSS: 1,\n                    lazy: 1,\n                    onOverwrite: 1,\n                    callbackScope: 1,\n                    stringFilter: 1,\n                    id: 1\n                }, _overwriteLookup = {\n                    none: 0,\n                    all: 1,\n                    auto: 2,\n                    concurrent: 3,\n                    allOnStart: 4,\n                    preexisting: 5,\n                    \"true\": 1,\n                    \"false\": 0\n                }, _rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(), _rootTimeline = Animation._rootTimeline = new SimpleTimeline(), _nextGCFrame = 30, _lazyRender = _internals.lazyRender = function() {\n                    var i = _lazyTweens.length, tween;\n                    _lazyLookup = {};\n                    while (--i > -1) {\n                        tween = _lazyTweens[i];\n                        if (tween && tween._lazy !== false) {\n                            tween.render(tween._lazy[0], tween._lazy[1], true);\n                            tween._lazy = false;\n                        }\n                    }\n                    _lazyTweens.length = 0;\n                };\n                _rootTimeline._startTime = _ticker.time;\n                _rootFramesTimeline._startTime = _ticker.frame;\n                _rootTimeline._active = _rootFramesTimeline._active = true;\n                setTimeout(_lazyRender, 1);\n                Animation._updateRoot = TweenLite.render = function() {\n                    var i, a, p;\n                    if (_lazyTweens.length) {\n                        _lazyRender();\n                    }\n                    _rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n                    _rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n                    if (_lazyTweens.length) {\n                        _lazyRender();\n                    }\n                    if (_ticker.frame >= _nextGCFrame) {\n                        _nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n                        for (p in _tweenLookup) {\n                            a = _tweenLookup[p].tweens;\n                            i = a.length;\n                            while (--i > -1) {\n                                if (a[i]._gc) {\n                                    a.splice(i, 1);\n                                }\n                            }\n                            if (a.length === 0) {\n                                delete _tweenLookup[p];\n                            }\n                        }\n                        p = _rootTimeline._first;\n                        if (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n                            while (p && p._paused) {\n                                p = p._next;\n                            }\n                            if (!p) {\n                                _ticker.sleep();\n                            }\n                        }\n                    }\n                };\n                _ticker.addEventListener(\"tick\", Animation._updateRoot);\n                var _register = function(target, tween, scrub) {\n                    var id = target._gsTweenID, a, i;\n                    if (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + _tweenLookupNum++)]) {\n                        _tweenLookup[id] = {\n                            target: target,\n                            tweens: []\n                        };\n                    }\n                    if (tween) {\n                        a = _tweenLookup[id].tweens;\n                        a[i = a.length] = tween;\n                        if (scrub) {\n                            while (--i > -1) {\n                                if (a[i] === tween) {\n                                    a.splice(i, 1);\n                                }\n                            }\n                        }\n                    }\n                    return _tweenLookup[id].tweens;\n                }, _onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n                    var func = overwrittenTween.vars.onOverwrite, r1, r2;\n                    if (func) {\n                        r1 = func(overwrittenTween, overwritingTween, target, killedProps);\n                    }\n                    func = TweenLite.onOverwrite;\n                    if (func) {\n                        r2 = func(overwrittenTween, overwritingTween, target, killedProps);\n                    }\n                    return r1 !== false && r2 !== false;\n                }, _applyOverwrite = function(target, tween, props, mode, siblings) {\n                    var i, changed, curTween, l;\n                    if (mode === 1 || mode >= 4) {\n                        l = siblings.length;\n                        for (i = 0; i < l; i++) {\n                            if ((curTween = siblings[i]) !== tween) {\n                                if (!curTween._gc) {\n                                    if (curTween._kill(null, target, tween)) {\n                                        changed = true;\n                                    }\n                                }\n                            } else if (mode === 5) {\n                                break;\n                            }\n                        }\n                        return changed;\n                    }\n                    var startTime = tween._startTime + _tinyNum, overlaps = [], oCount = 0, zeroDur = tween._duration === 0, globalStart;\n                    i = siblings.length;\n                    while (--i > -1) {\n                        if ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {} else if (curTween._timeline !== tween._timeline) {\n                            globalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n                            if (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n                                overlaps[oCount++] = curTween;\n                            }\n                        } else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 2e-10)) {\n                            overlaps[oCount++] = curTween;\n                        }\n                    }\n                    i = oCount;\n                    while (--i > -1) {\n                        curTween = overlaps[i];\n                        if (mode === 2) if (curTween._kill(props, target, tween)) {\n                            changed = true;\n                        }\n                        if (mode !== 2 || !curTween._firstPT && curTween._initted) {\n                            if (mode !== 2 && !_onOverwrite(curTween, tween)) {\n                                continue;\n                            }\n                            if (curTween._enabled(false, false)) {\n                                changed = true;\n                            }\n                        }\n                    }\n                    return changed;\n                }, _checkOverlap = function(tween, reference, zeroDur) {\n                    var tl = tween._timeline, ts = tl._timeScale, t = tween._startTime;\n                    while (tl._timeline) {\n                        t += tl._startTime;\n                        ts *= tl._timeScale;\n                        if (tl._paused) {\n                            return -100;\n                        }\n                        tl = tl._timeline;\n                    }\n                    t /= ts;\n                    return t > reference ? t - reference : zeroDur && t === reference || !tween._initted && t - reference < 2 * _tinyNum ? _tinyNum : (t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum ? 0 : t - reference - _tinyNum;\n                };\n                p._init = function() {\n                    var v = this.vars, op = this._overwrittenProps, dur = this._duration, immediate = !!v.immediateRender, ease = v.ease, i, initPlugins, pt, p, startVars;\n                    if (v.startAt) {\n                        if (this._startAt) {\n                            this._startAt.render(-1, true);\n                            this._startAt.kill();\n                        }\n                        startVars = {};\n                        for (p in v.startAt) {\n                            startVars[p] = v.startAt[p];\n                        }\n                        startVars.overwrite = false;\n                        startVars.immediateRender = true;\n                        startVars.lazy = immediate && v.lazy !== false;\n                        startVars.startAt = startVars.delay = null;\n                        this._startAt = TweenLite.to(this.target, 0, startVars);\n                        if (immediate) {\n                            if (this._time > 0) {\n                                this._startAt = null;\n                            } else if (dur !== 0) {\n                                return;\n                            }\n                        }\n                    } else if (v.runBackwards && dur !== 0) {\n                        if (this._startAt) {\n                            this._startAt.render(-1, true);\n                            this._startAt.kill();\n                            this._startAt = null;\n                        } else {\n                            if (this._time !== 0) {\n                                immediate = false;\n                            }\n                            pt = {};\n                            for (p in v) {\n                                if (!_reservedProps[p] || p === \"autoCSS\") {\n                                    pt[p] = v[p];\n                                }\n                            }\n                            pt.overwrite = 0;\n                            pt.data = \"isFromStart\";\n                            pt.lazy = immediate && v.lazy !== false;\n                            pt.immediateRender = immediate;\n                            this._startAt = TweenLite.to(this.target, 0, pt);\n                            if (!immediate) {\n                                this._startAt._init();\n                                this._startAt._enabled(false);\n                                if (this.vars.immediateRender) {\n                                    this._startAt = null;\n                                }\n                            } else if (this._time === 0) {\n                                return;\n                            }\n                        }\n                    }\n                    this._ease = ease = !ease ? TweenLite.defaultEase : ease instanceof Ease ? ease : typeof ease === \"function\" ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n                    if (v.easeParams instanceof Array && ease.config) {\n                        this._ease = ease.config.apply(ease, v.easeParams);\n                    }\n                    this._easeType = this._ease._type;\n                    this._easePower = this._ease._power;\n                    this._firstPT = null;\n                    if (this._targets) {\n                        i = this._targets.length;\n                        while (--i > -1) {\n                            if (this._initProps(this._targets[i], this._propLookup[i] = {}, this._siblings[i], op ? op[i] : null)) {\n                                initPlugins = true;\n                            }\n                        }\n                    } else {\n                        initPlugins = this._initProps(this.target, this._propLookup, this._siblings, op);\n                    }\n                    if (initPlugins) {\n                        TweenLite._onPluginEvent(\"_onInitAllProps\", this);\n                    }\n                    if (op) if (!this._firstPT) if (typeof this.target !== \"function\") {\n                        this._enabled(false, false);\n                    }\n                    if (v.runBackwards) {\n                        pt = this._firstPT;\n                        while (pt) {\n                            pt.s += pt.c;\n                            pt.c = -pt.c;\n                            pt = pt._next;\n                        }\n                    }\n                    this._onUpdate = v.onUpdate;\n                    this._initted = true;\n                };\n                p._initProps = function(target, propLookup, siblings, overwrittenProps) {\n                    var p, i, initPlugins, plugin, pt, v;\n                    if (target == null) {\n                        return false;\n                    }\n                    if (_lazyLookup[target._gsTweenID]) {\n                        _lazyRender();\n                    }\n                    if (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) {\n                        _autoCSS(this.vars, target);\n                    }\n                    for (p in this.vars) {\n                        v = this.vars[p];\n                        if (_reservedProps[p]) {\n                            if (v) if (v instanceof Array || v.push && _isArray(v)) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n                                this.vars[p] = v = this._swapSelfInParams(v, this);\n                            }\n                        } else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this)) {\n                            this._firstPT = pt = {\n                                _next: this._firstPT,\n                                t: plugin,\n                                p: \"setRatio\",\n                                s: 0,\n                                c: 1,\n                                f: 1,\n                                n: p,\n                                pg: 1,\n                                pr: plugin._priority\n                            };\n                            i = plugin._overwriteProps.length;\n                            while (--i > -1) {\n                                propLookup[plugin._overwriteProps[i]] = this._firstPT;\n                            }\n                            if (plugin._priority || plugin._onInitAllProps) {\n                                initPlugins = true;\n                            }\n                            if (plugin._onDisable || plugin._onEnable) {\n                                this._notifyPluginsOfEnabled = true;\n                            }\n                            if (pt._next) {\n                                pt._next._prev = pt;\n                            }\n                        } else {\n                            propLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter);\n                        }\n                    }\n                    if (overwrittenProps) if (this._kill(overwrittenProps, target)) {\n                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n                    }\n                    if (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n                        this._kill(propLookup, target);\n                        return this._initProps(target, propLookup, siblings, overwrittenProps);\n                    }\n                    if (this._firstPT) if (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration) {\n                        _lazyLookup[target._gsTweenID] = true;\n                    }\n                    return initPlugins;\n                };\n                p.render = function(time, suppressEvents, force) {\n                    var prevTime = this._time, duration = this._duration, prevRawPrevTime = this._rawPrevTime, isComplete, callback, pt, rawPrevTime;\n                    if (time >= duration - 1e-7) {\n                        this._totalTime = this._time = duration;\n                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n                        if (!this._reversed) {\n                            isComplete = true;\n                            callback = \"onComplete\";\n                            force = force || this._timeline.autoRemoveChildren;\n                        }\n                        if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                            if (this._startTime === this._timeline._duration) {\n                                time = 0;\n                            }\n                            if (prevRawPrevTime < 0 || time <= 0 && time >= -1e-7 || prevRawPrevTime === _tinyNum && this.data !== \"isPause\") if (prevRawPrevTime !== time) {\n                                force = true;\n                                if (prevRawPrevTime > _tinyNum) {\n                                    callback = \"onReverseComplete\";\n                                }\n                            }\n                            this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                        }\n                    } else if (time < 1e-7) {\n                        this._totalTime = this._time = 0;\n                        this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n                        if (prevTime !== 0 || duration === 0 && prevRawPrevTime > 0) {\n                            callback = \"onReverseComplete\";\n                            isComplete = this._reversed;\n                        }\n                        if (time < 0) {\n                            this._active = false;\n                            if (duration === 0) if (this._initted || !this.vars.lazy || force) {\n                                if (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n                                    force = true;\n                                }\n                                this._rawPrevTime = rawPrevTime = !suppressEvents || time || prevRawPrevTime === time ? time : _tinyNum;\n                            }\n                        }\n                        if (!this._initted) {\n                            force = true;\n                        }\n                    } else {\n                        this._totalTime = this._time = time;\n                        if (this._easeType) {\n                            var r = time / duration, type = this._easeType, pow = this._easePower;\n                            if (type === 1 || type === 3 && r >= .5) {\n                                r = 1 - r;\n                            }\n                            if (type === 3) {\n                                r *= 2;\n                            }\n                            if (pow === 1) {\n                                r *= r;\n                            } else if (pow === 2) {\n                                r *= r * r;\n                            } else if (pow === 3) {\n                                r *= r * r * r;\n                            } else if (pow === 4) {\n                                r *= r * r * r * r;\n                            }\n                            if (type === 1) {\n                                this.ratio = 1 - r;\n                            } else if (type === 2) {\n                                this.ratio = r;\n                            } else if (time / duration < .5) {\n                                this.ratio = r / 2;\n                            } else {\n                                this.ratio = 1 - r / 2;\n                            }\n                        } else {\n                            this.ratio = this._ease.getRatio(time / duration);\n                        }\n                    }\n                    if (this._time === prevTime && !force) {\n                        return;\n                    } else if (!this._initted) {\n                        this._init();\n                        if (!this._initted || this._gc) {\n                            return;\n                        } else if (!force && this._firstPT && (this.vars.lazy !== false && this._duration || this.vars.lazy && !this._duration)) {\n                            this._time = this._totalTime = prevTime;\n                            this._rawPrevTime = prevRawPrevTime;\n                            _lazyTweens.push(this);\n                            this._lazy = [ time, suppressEvents ];\n                            return;\n                        }\n                        if (this._time && !isComplete) {\n                            this.ratio = this._ease.getRatio(this._time / duration);\n                        } else if (isComplete && this._ease._calcEnd) {\n                            this.ratio = this._ease.getRatio(this._time === 0 ? 0 : 1);\n                        }\n                    }\n                    if (this._lazy !== false) {\n                        this._lazy = false;\n                    }\n                    if (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n                        this._active = true;\n                    }\n                    if (prevTime === 0) {\n                        if (this._startAt) {\n                            if (time >= 0) {\n                                this._startAt.render(time, suppressEvents, force);\n                            } else if (!callback) {\n                                callback = \"_dummyGS\";\n                            }\n                        }\n                        if (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n                            this._callback(\"onStart\");\n                        }\n                    }\n                    pt = this._firstPT;\n                    while (pt) {\n                        if (pt.f) {\n                            pt.t[pt.p](pt.c * this.ratio + pt.s);\n                        } else {\n                            pt.t[pt.p] = pt.c * this.ratio + pt.s;\n                        }\n                        pt = pt._next;\n                    }\n                    if (this._onUpdate) {\n                        if (time < 0) if (this._startAt && time !== -1e-4) {\n                            this._startAt.render(time, suppressEvents, force);\n                        }\n                        if (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n                            this._callback(\"onUpdate\");\n                        }\n                    }\n                    if (callback) if (!this._gc || force) {\n                        if (time < 0 && this._startAt && !this._onUpdate && time !== -1e-4) {\n                            this._startAt.render(time, suppressEvents, force);\n                        }\n                        if (isComplete) {\n                            if (this._timeline.autoRemoveChildren) {\n                                this._enabled(false, false);\n                            }\n                            this._active = false;\n                        }\n                        if (!suppressEvents && this.vars[callback]) {\n                            this._callback(callback);\n                        }\n                        if (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) {\n                            this._rawPrevTime = 0;\n                        }\n                    }\n                };\n                p._kill = function(vars, target, overwritingTween) {\n                    if (vars === \"all\") {\n                        vars = null;\n                    }\n                    if (vars == null) if (target == null || target === this.target) {\n                        this._lazy = false;\n                        return this._enabled(false, false);\n                    }\n                    target = typeof target !== \"string\" ? target || this._targets || this.target : TweenLite.selector(target) || target;\n                    var simultaneousOverwrite = overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline, i, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n                        i = target.length;\n                        while (--i > -1) {\n                            if (this._kill(vars, target[i], overwritingTween)) {\n                                changed = true;\n                            }\n                        }\n                    } else {\n                        if (this._targets) {\n                            i = this._targets.length;\n                            while (--i > -1) {\n                                if (target === this._targets[i]) {\n                                    propLookup = this._propLookup[i] || {};\n                                    this._overwrittenProps = this._overwrittenProps || [];\n                                    overwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n                                    break;\n                                }\n                            }\n                        } else if (target !== this.target) {\n                            return false;\n                        } else {\n                            propLookup = this._propLookup;\n                            overwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n                        }\n                        if (propLookup) {\n                            killProps = vars || propLookup;\n                            record = vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof vars !== \"object\" || !vars._tempKill);\n                            if (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n                                for (p in killProps) {\n                                    if (propLookup[p]) {\n                                        if (!killed) {\n                                            killed = [];\n                                        }\n                                        killed.push(p);\n                                    }\n                                }\n                                if ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) {\n                                    return false;\n                                }\n                            }\n                            for (p in killProps) {\n                                if (pt = propLookup[p]) {\n                                    if (simultaneousOverwrite) {\n                                        if (pt.f) {\n                                            pt.t[pt.p](pt.s);\n                                        } else {\n                                            pt.t[pt.p] = pt.s;\n                                        }\n                                        changed = true;\n                                    }\n                                    if (pt.pg && pt.t._kill(killProps)) {\n                                        changed = true;\n                                    }\n                                    if (!pt.pg || pt.t._overwriteProps.length === 0) {\n                                        if (pt._prev) {\n                                            pt._prev._next = pt._next;\n                                        } else if (pt === this._firstPT) {\n                                            this._firstPT = pt._next;\n                                        }\n                                        if (pt._next) {\n                                            pt._next._prev = pt._prev;\n                                        }\n                                        pt._next = pt._prev = null;\n                                    }\n                                    delete propLookup[p];\n                                }\n                                if (record) {\n                                    overwrittenProps[p] = 1;\n                                }\n                            }\n                            if (!this._firstPT && this._initted) {\n                                this._enabled(false, false);\n                            }\n                        }\n                    }\n                    return changed;\n                };\n                p.invalidate = function() {\n                    if (this._notifyPluginsOfEnabled) {\n                        TweenLite._onPluginEvent(\"_onDisable\", this);\n                    }\n                    this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n                    this._notifyPluginsOfEnabled = this._active = this._lazy = false;\n                    this._propLookup = this._targets ? {} : [];\n                    Animation.prototype.invalidate.call(this);\n                    if (this.vars.immediateRender) {\n                        this._time = -_tinyNum;\n                        this.render(Math.min(0, -this._delay));\n                    }\n                    return this;\n                };\n                p._enabled = function(enabled, ignoreTimeline) {\n                    if (!_tickerActive) {\n                        _ticker.wake();\n                    }\n                    if (enabled && this._gc) {\n                        var targets = this._targets, i;\n                        if (targets) {\n                            i = targets.length;\n                            while (--i > -1) {\n                                this._siblings[i] = _register(targets[i], this, true);\n                            }\n                        } else {\n                            this._siblings = _register(this.target, this, true);\n                        }\n                    }\n                    Animation.prototype._enabled.call(this, enabled, ignoreTimeline);\n                    if (this._notifyPluginsOfEnabled) if (this._firstPT) {\n                        return TweenLite._onPluginEvent(enabled ? \"_onEnable\" : \"_onDisable\", this);\n                    }\n                    return false;\n                };\n                TweenLite.to = function(target, duration, vars) {\n                    return new TweenLite(target, duration, vars);\n                };\n                TweenLite.from = function(target, duration, vars) {\n                    vars.runBackwards = true;\n                    vars.immediateRender = vars.immediateRender != false;\n                    return new TweenLite(target, duration, vars);\n                };\n                TweenLite.fromTo = function(target, duration, fromVars, toVars) {\n                    toVars.startAt = fromVars;\n                    toVars.immediateRender = toVars.immediateRender != false && fromVars.immediateRender != false;\n                    return new TweenLite(target, duration, toVars);\n                };\n                TweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n                    return new TweenLite(callback, 0, {\n                        delay: delay,\n                        onComplete: callback,\n                        onCompleteParams: params,\n                        callbackScope: scope,\n                        onReverseComplete: callback,\n                        onReverseCompleteParams: params,\n                        immediateRender: false,\n                        lazy: false,\n                        useFrames: useFrames,\n                        overwrite: 0\n                    });\n                };\n                TweenLite.set = function(target, vars) {\n                    return new TweenLite(target, 0, vars);\n                };\n                TweenLite.getTweensOf = function(target, onlyActive) {\n                    if (target == null) {\n                        return [];\n                    }\n                    target = typeof target !== \"string\" ? target : TweenLite.selector(target) || target;\n                    var i, a, j, t;\n                    if ((_isArray(target) || _isSelector(target)) && typeof target[0] !== \"number\") {\n                        i = target.length;\n                        a = [];\n                        while (--i > -1) {\n                            a = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n                        }\n                        i = a.length;\n                        while (--i > -1) {\n                            t = a[i];\n                            j = i;\n                            while (--j > -1) {\n                                if (t === a[j]) {\n                                    a.splice(i, 1);\n                                }\n                            }\n                        }\n                    } else {\n                        a = _register(target).concat();\n                        i = a.length;\n                        while (--i > -1) {\n                            if (a[i]._gc || onlyActive && !a[i].isActive()) {\n                                a.splice(i, 1);\n                            }\n                        }\n                    }\n                    return a;\n                };\n                TweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n                    if (typeof onlyActive === \"object\") {\n                        vars = onlyActive;\n                        onlyActive = false;\n                    }\n                    var a = TweenLite.getTweensOf(target, onlyActive), i = a.length;\n                    while (--i > -1) {\n                        a[i]._kill(vars, target);\n                    }\n                };\n                var TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n                    this._overwriteProps = (props || \"\").split(\",\");\n                    this._propName = this._overwriteProps[0];\n                    this._priority = priority || 0;\n                    this._super = TweenPlugin.prototype;\n                }, true);\n                p = TweenPlugin.prototype;\n                TweenPlugin.version = \"1.18.0\";\n                TweenPlugin.API = 2;\n                p._firstPT = null;\n                p._addTween = _addPropTween;\n                p.setRatio = _setRatio;\n                p._kill = function(lookup) {\n                    var a = this._overwriteProps, pt = this._firstPT, i;\n                    if (lookup[this._propName] != null) {\n                        this._overwriteProps = [];\n                    } else {\n                        i = a.length;\n                        while (--i > -1) {\n                            if (lookup[a[i]] != null) {\n                                a.splice(i, 1);\n                            }\n                        }\n                    }\n                    while (pt) {\n                        if (lookup[pt.n] != null) {\n                            if (pt._next) {\n                                pt._next._prev = pt._prev;\n                            }\n                            if (pt._prev) {\n                                pt._prev._next = pt._next;\n                                pt._prev = null;\n                            } else if (this._firstPT === pt) {\n                                this._firstPT = pt._next;\n                            }\n                        }\n                        pt = pt._next;\n                    }\n                    return false;\n                };\n                p._roundProps = function(lookup, value) {\n                    var pt = this._firstPT;\n                    while (pt) {\n                        if (lookup[this._propName] || pt.n != null && lookup[pt.n.split(this._propName + \"_\").join(\"\")]) {\n                            pt.r = value;\n                        }\n                        pt = pt._next;\n                    }\n                };\n                TweenLite._onPluginEvent = function(type, tween) {\n                    var pt = tween._firstPT, changed, pt2, first, last, next;\n                    if (type === \"_onInitAllProps\") {\n                        while (pt) {\n                            next = pt._next;\n                            pt2 = first;\n                            while (pt2 && pt2.pr > pt.pr) {\n                                pt2 = pt2._next;\n                            }\n                            if (pt._prev = pt2 ? pt2._prev : last) {\n                                pt._prev._next = pt;\n                            } else {\n                                first = pt;\n                            }\n                            if (pt._next = pt2) {\n                                pt2._prev = pt;\n                            } else {\n                                last = pt;\n                            }\n                            pt = next;\n                        }\n                        pt = tween._firstPT = first;\n                    }\n                    while (pt) {\n                        if (pt.pg) if (typeof pt.t[type] === \"function\") if (pt.t[type]()) {\n                            changed = true;\n                        }\n                        pt = pt._next;\n                    }\n                    return changed;\n                };\n                TweenPlugin.activate = function(plugins) {\n                    var i = plugins.length;\n                    while (--i > -1) {\n                        if (plugins[i].API === TweenPlugin.API) {\n                            _plugins[new plugins[i]()._propName] = plugins[i];\n                        }\n                    }\n                    return true;\n                };\n                _gsDefine.plugin = function(config) {\n                    if (!config || !config.propName || !config.init || !config.API) {\n                        throw \"illegal plugin definition.\";\n                    }\n                    var propName = config.propName, priority = config.priority || 0, overwriteProps = config.overwriteProps, map = {\n                        init: \"_onInitTween\",\n                        set: \"setRatio\",\n                        kill: \"_kill\",\n                        round: \"_roundProps\",\n                        initAll: \"_onInitAllProps\"\n                    }, Plugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\", function() {\n                        TweenPlugin.call(this, propName, priority);\n                        this._overwriteProps = overwriteProps || [];\n                    }, config.global === true), p = Plugin.prototype = new TweenPlugin(propName), prop;\n                    p.constructor = Plugin;\n                    Plugin.API = config.API;\n                    for (prop in map) {\n                        if (typeof config[prop] === \"function\") {\n                            p[map[prop]] = config[prop];\n                        }\n                    }\n                    Plugin.version = config.version;\n                    TweenPlugin.activate([ Plugin ]);\n                    return Plugin;\n                };\n                a = window._gsQueue;\n                if (a) {\n                    for (i = 0; i < a.length; i++) {\n                        a[i]();\n                    }\n                    for (p in _defLookup) {\n                        if (!_defLookup[p].func) {\n                            window.console.log(\"GSAP encountered missing dependency: com.greensock.\" + p);\n                        }\n                    }\n                }\n                _tickerActive = false;\n            })(typeof module !== \"undefined\" && module.exports && typeof global !== \"undefined\" ? global : this || window, \"TweenMax\");\n        }).call(exports, function() {\n            return this;\n        }());\n    }, function(module, exports) {\n        (function(__webpack_amd_options__) {\n            module.exports = __webpack_amd_options__;\n        }).call(exports, {});\n    }, function(module, exports) {\n        THREE.SpriteCanvasMaterial = function(parameters) {\n            THREE.Material.call(this);\n            this.type = \"SpriteCanvasMaterial\";\n            this.color = new THREE.Color(16777215);\n            this.program = function(context, color) {};\n            this.setValues(parameters);\n        };\n        THREE.SpriteCanvasMaterial.prototype = Object.create(THREE.Material.prototype);\n        THREE.SpriteCanvasMaterial.prototype.constructor = THREE.SpriteCanvasMaterial;\n        THREE.SpriteCanvasMaterial.prototype.clone = function() {\n            var material = new THREE.SpriteCanvasMaterial();\n            material.copy(this);\n            material.color.copy(this.color);\n            material.program = this.program;\n            return material;\n        };\n        THREE.CanvasRenderer = function(parameters) {\n            console.log(\"THREE.CanvasRenderer\", THREE.REVISION);\n            parameters = parameters || {};\n            var _this = this, _renderData, _elements, _lights, _projector = new THREE.Projector(), _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement(\"canvas\"), _canvasWidth = _canvas.width, _canvasHeight = _canvas.height, _canvasWidthHalf = Math.floor(_canvasWidth / 2), _canvasHeightHalf = Math.floor(_canvasHeight / 2), _viewportX = 0, _viewportY = 0, _viewportWidth = _canvasWidth, _viewportHeight = _canvasHeight, _pixelRatio = 1, _context = _canvas.getContext(\"2d\", {\n                alpha: parameters.alpha === true\n            }), _clearColor = new THREE.Color(0), _clearAlpha = parameters.alpha === true ? 0 : 1, _contextGlobalAlpha = 1, _contextGlobalCompositeOperation = 0, _contextStrokeStyle = null, _contextFillStyle = null, _contextLineWidth = null, _contextLineCap = null, _contextLineJoin = null, _contextLineDash = [], _camera, _v1, _v2, _v3, _v4, _v5 = new THREE.RenderableVertex(), _v6 = new THREE.RenderableVertex(), _v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _v4x, _v4y, _v5x, _v5y, _v6x, _v6y, _color = new THREE.Color(), _color1 = new THREE.Color(), _color2 = new THREE.Color(), _color3 = new THREE.Color(), _color4 = new THREE.Color(), _diffuseColor = new THREE.Color(), _emissiveColor = new THREE.Color(), _lightColor = new THREE.Color(), _patterns = {}, _image, _uvs, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, _clipBox = new THREE.Box2(), _clearBox = new THREE.Box2(), _elemBox = new THREE.Box2(), _ambientLight = new THREE.Color(), _directionalLights = new THREE.Color(), _pointLights = new THREE.Color(), _vector3 = new THREE.Vector3(), _centroid = new THREE.Vector3(), _normal = new THREE.Vector3(), _normalViewMatrix = new THREE.Matrix3();\n            if (_context.setLineDash === undefined) {\n                _context.setLineDash = function() {};\n            }\n            this.domElement = _canvas;\n            this.autoClear = true;\n            this.sortObjects = true;\n            this.sortElements = true;\n            this.info = {\n                render: {\n                    vertices: 0,\n                    faces: 0\n                }\n            };\n            this.supportsVertexTextures = function() {};\n            this.setFaceCulling = function() {};\n            this.getContext = function() {\n                return _context;\n            };\n            this.getContextAttributes = function() {\n                return _context.getContextAttributes();\n            };\n            this.getPixelRatio = function() {\n                return _pixelRatio;\n            };\n            this.setPixelRatio = function(value) {\n                if (value !== undefined) _pixelRatio = value;\n            };\n            this.setSize = function(width, height, updateStyle) {\n                _canvasWidth = width * _pixelRatio;\n                _canvasHeight = height * _pixelRatio;\n                _canvas.width = _canvasWidth;\n                _canvas.height = _canvasHeight;\n                _canvasWidthHalf = Math.floor(_canvasWidth / 2);\n                _canvasHeightHalf = Math.floor(_canvasHeight / 2);\n                if (updateStyle !== false) {\n                    _canvas.style.width = width + \"px\";\n                    _canvas.style.height = height + \"px\";\n                }\n                _clipBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clipBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n                _contextGlobalAlpha = 1;\n                _contextGlobalCompositeOperation = 0;\n                _contextStrokeStyle = null;\n                _contextFillStyle = null;\n                _contextLineWidth = null;\n                _contextLineCap = null;\n                _contextLineJoin = null;\n                this.setViewport(0, 0, width, height);\n            };\n            this.setViewport = function(x, y, width, height) {\n                _viewportX = x * _pixelRatio;\n                _viewportY = y * _pixelRatio;\n                _viewportWidth = width * _pixelRatio;\n                _viewportHeight = height * _pixelRatio;\n            };\n            this.setScissor = function() {};\n            this.setScissorTest = function() {};\n            this.setClearColor = function(color, alpha) {\n                _clearColor.set(color);\n                _clearAlpha = alpha !== undefined ? alpha : 1;\n                _clearBox.min.set(-_canvasWidthHalf, -_canvasHeightHalf);\n                _clearBox.max.set(_canvasWidthHalf, _canvasHeightHalf);\n            };\n            this.setClearColorHex = function(hex, alpha) {\n                console.warn(\"THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.\");\n                this.setClearColor(hex, alpha);\n            };\n            this.getClearColor = function() {\n                return _clearColor;\n            };\n            this.getClearAlpha = function() {\n                return _clearAlpha;\n            };\n            this.getMaxAnisotropy = function() {\n                return 0;\n            };\n            this.clear = function() {\n                if (_clearBox.isEmpty() === false) {\n                    _clearBox.intersect(_clipBox);\n                    _clearBox.expandByScalar(2);\n                    _clearBox.min.x = _clearBox.min.x + _canvasWidthHalf;\n                    _clearBox.min.y = -_clearBox.min.y + _canvasHeightHalf;\n                    _clearBox.max.x = _clearBox.max.x + _canvasWidthHalf;\n                    _clearBox.max.y = -_clearBox.max.y + _canvasHeightHalf;\n                    if (_clearAlpha < 1) {\n                        _context.clearRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    if (_clearAlpha > 0) {\n                        setBlending(THREE.NormalBlending);\n                        setOpacity(1);\n                        setFillStyle(\"rgba(\" + Math.floor(_clearColor.r * 255) + \",\" + Math.floor(_clearColor.g * 255) + \",\" + Math.floor(_clearColor.b * 255) + \",\" + _clearAlpha + \")\");\n                        _context.fillRect(_clearBox.min.x | 0, _clearBox.max.y | 0, _clearBox.max.x - _clearBox.min.x | 0, _clearBox.min.y - _clearBox.max.y | 0);\n                    }\n                    _clearBox.makeEmpty();\n                }\n            };\n            this.clearColor = function() {};\n            this.clearDepth = function() {};\n            this.clearStencil = function() {};\n            this.render = function(scene, camera) {\n                if (camera instanceof THREE.Camera === false) {\n                    console.error(\"THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.\");\n                    return;\n                }\n                if (this.autoClear === true) this.clear();\n                _this.info.render.vertices = 0;\n                _this.info.render.faces = 0;\n                _context.setTransform(_viewportWidth / _canvasWidth, 0, 0, -_viewportHeight / _canvasHeight, _viewportX, _canvasHeight - _viewportY);\n                _context.translate(_canvasWidthHalf, _canvasHeightHalf);\n                _renderData = _projector.projectScene(scene, camera, this.sortObjects, this.sortElements);\n                _elements = _renderData.elements;\n                _lights = _renderData.lights;\n                _camera = camera;\n                _normalViewMatrix.getNormalMatrix(camera.matrixWorldInverse);\n                calculateLights();\n                for (var e = 0, el = _elements.length; e < el; e++) {\n                    var element = _elements[e];\n                    var material = element.material;\n                    if (material === undefined || material.opacity === 0) continue;\n                    _elemBox.makeEmpty();\n                    if (element instanceof THREE.RenderableSprite) {\n                        _v1 = element;\n                        _v1.x *= _canvasWidthHalf;\n                        _v1.y *= _canvasHeightHalf;\n                        renderSprite(_v1, element, material);\n                    } else if (element instanceof THREE.RenderableLine) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderLine(_v1, _v2, element, material);\n                        }\n                    } else if (element instanceof THREE.RenderableFace) {\n                        _v1 = element.v1;\n                        _v2 = element.v2;\n                        _v3 = element.v3;\n                        if (_v1.positionScreen.z < -1 || _v1.positionScreen.z > 1) continue;\n                        if (_v2.positionScreen.z < -1 || _v2.positionScreen.z > 1) continue;\n                        if (_v3.positionScreen.z < -1 || _v3.positionScreen.z > 1) continue;\n                        _v1.positionScreen.x *= _canvasWidthHalf;\n                        _v1.positionScreen.y *= _canvasHeightHalf;\n                        _v2.positionScreen.x *= _canvasWidthHalf;\n                        _v2.positionScreen.y *= _canvasHeightHalf;\n                        _v3.positionScreen.x *= _canvasWidthHalf;\n                        _v3.positionScreen.y *= _canvasHeightHalf;\n                        if (material.overdraw > 0) {\n                            expand(_v1.positionScreen, _v2.positionScreen, material.overdraw);\n                            expand(_v2.positionScreen, _v3.positionScreen, material.overdraw);\n                            expand(_v3.positionScreen, _v1.positionScreen, material.overdraw);\n                        }\n                        _elemBox.setFromPoints([ _v1.positionScreen, _v2.positionScreen, _v3.positionScreen ]);\n                        if (_clipBox.intersectsBox(_elemBox) === true) {\n                            renderFace3(_v1, _v2, _v3, 0, 1, 2, element, material);\n                        }\n                    }\n                    _clearBox.union(_elemBox);\n                }\n                _context.setTransform(1, 0, 0, 1, 0, 0);\n            };\n            function calculateLights() {\n                _ambientLight.setRGB(0, 0, 0);\n                _directionalLights.setRGB(0, 0, 0);\n                _pointLights.setRGB(0, 0, 0);\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    var lightColor = light.color;\n                    if (light instanceof THREE.AmbientLight) {\n                        _ambientLight.add(lightColor);\n                    } else if (light instanceof THREE.DirectionalLight) {\n                        _directionalLights.add(lightColor);\n                    } else if (light instanceof THREE.PointLight) {\n                        _pointLights.add(lightColor);\n                    }\n                }\n            }\n            function calculateLight(position, normal, color) {\n                for (var l = 0, ll = _lights.length; l < ll; l++) {\n                    var light = _lights[l];\n                    _lightColor.copy(light.color);\n                    if (light instanceof THREE.DirectionalLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld).normalize();\n                        var amount = normal.dot(lightPosition);\n                        if (amount <= 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    } else if (light instanceof THREE.PointLight) {\n                        var lightPosition = _vector3.setFromMatrixPosition(light.matrixWorld);\n                        var amount = normal.dot(_vector3.subVectors(lightPosition, position).normalize());\n                        if (amount <= 0) continue;\n                        amount *= light.distance == 0 ? 1 : 1 - Math.min(position.distanceTo(lightPosition) / light.distance, 1);\n                        if (amount == 0) continue;\n                        amount *= light.intensity;\n                        color.add(_lightColor.multiplyScalar(amount));\n                    }\n                }\n            }\n            function renderSprite(v1, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                var scaleX = element.scale.x * _canvasWidthHalf;\n                var scaleY = element.scale.y * _canvasHeightHalf;\n                var dist = .5 * Math.sqrt(scaleX * scaleX + scaleY * scaleY);\n                _elemBox.min.set(v1.x - dist, v1.y - dist);\n                _elemBox.max.set(v1.x + dist, v1.y + dist);\n                if (material instanceof THREE.SpriteMaterial) {\n                    var texture = material.map;\n                    if (texture !== null) {\n                        var pattern = _patterns[texture.id];\n                        if (pattern === undefined || pattern.version !== texture.version) {\n                            pattern = textureToPattern(texture);\n                            _patterns[texture.id] = pattern;\n                        }\n                        if (pattern.canvas !== undefined) {\n                            setFillStyle(pattern.canvas);\n                            var bitmap = texture.image;\n                            var ox = bitmap.width * texture.offset.x;\n                            var oy = bitmap.height * texture.offset.y;\n                            var sx = bitmap.width * texture.repeat.x;\n                            var sy = bitmap.height * texture.repeat.y;\n                            var cx = scaleX / sx;\n                            var cy = scaleY / sy;\n                            _context.save();\n                            _context.translate(v1.x, v1.y);\n                            if (material.rotation !== 0) _context.rotate(material.rotation);\n                            _context.translate(-scaleX / 2, -scaleY / 2);\n                            _context.scale(cx, cy);\n                            _context.translate(-ox, -oy);\n                            _context.fillRect(ox, oy, sx, sy);\n                            _context.restore();\n                        }\n                    } else {\n                        setFillStyle(material.color.getStyle());\n                        _context.save();\n                        _context.translate(v1.x, v1.y);\n                        if (material.rotation !== 0) _context.rotate(material.rotation);\n                        _context.scale(scaleX, -scaleY);\n                        _context.fillRect(-.5, -.5, 1, 1);\n                        _context.restore();\n                    }\n                } else if (material instanceof THREE.SpriteCanvasMaterial) {\n                    setStrokeStyle(material.color.getStyle());\n                    setFillStyle(material.color.getStyle());\n                    _context.save();\n                    _context.translate(v1.x, v1.y);\n                    if (material.rotation !== 0) _context.rotate(material.rotation);\n                    _context.scale(scaleX, scaleY);\n                    material.program(_context);\n                    _context.restore();\n                }\n            }\n            function renderLine(v1, v2, element, material) {\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _context.beginPath();\n                _context.moveTo(v1.positionScreen.x, v1.positionScreen.y);\n                _context.lineTo(v2.positionScreen.x, v2.positionScreen.y);\n                if (material instanceof THREE.LineBasicMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    if (material.vertexColors !== THREE.VertexColors) {\n                        setStrokeStyle(material.color.getStyle());\n                    } else {\n                        var colorStyle1 = element.vertexColors[0].getStyle();\n                        var colorStyle2 = element.vertexColors[1].getStyle();\n                        if (colorStyle1 === colorStyle2) {\n                            setStrokeStyle(colorStyle1);\n                        } else {\n                            try {\n                                var grad = _context.createLinearGradient(v1.positionScreen.x, v1.positionScreen.y, v2.positionScreen.x, v2.positionScreen.y);\n                                grad.addColorStop(0, colorStyle1);\n                                grad.addColorStop(1, colorStyle2);\n                            } catch (exception) {\n                                grad = colorStyle1;\n                            }\n                            setStrokeStyle(grad);\n                        }\n                    }\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                } else if (material instanceof THREE.LineDashedMaterial) {\n                    setLineWidth(material.linewidth);\n                    setLineCap(material.linecap);\n                    setLineJoin(material.linejoin);\n                    setStrokeStyle(material.color.getStyle());\n                    setLineDash([ material.dashSize, material.gapSize ]);\n                    _context.stroke();\n                    _elemBox.expandByScalar(material.linewidth * 2);\n                    setLineDash([]);\n                }\n            }\n            function renderFace3(v1, v2, v3, uv1, uv2, uv3, element, material) {\n                _this.info.render.vertices += 3;\n                _this.info.render.faces++;\n                setOpacity(material.opacity);\n                setBlending(material.blending);\n                _v1x = v1.positionScreen.x;\n                _v1y = v1.positionScreen.y;\n                _v2x = v2.positionScreen.x;\n                _v2y = v2.positionScreen.y;\n                _v3x = v3.positionScreen.x;\n                _v3y = v3.positionScreen.y;\n                drawTriangle(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y);\n                if ((material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) && material.map === null) {\n                    _diffuseColor.copy(material.color);\n                    _emissiveColor.copy(material.emissive);\n                    if (material.vertexColors === THREE.FaceColors) {\n                        _diffuseColor.multiply(element.color);\n                    }\n                    _color.copy(_ambientLight);\n                    _centroid.copy(v1.positionWorld).add(v2.positionWorld).add(v3.positionWorld).divideScalar(3);\n                    calculateLight(_centroid, element.normalModel, _color);\n                    _color.multiply(_diffuseColor).add(_emissiveColor);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else if (material instanceof THREE.MeshBasicMaterial || material instanceof THREE.MeshLambertMaterial || material instanceof THREE.MeshPhongMaterial) {\n                    if (material.map !== null) {\n                        var mapping = material.map.mapping;\n                        if (mapping === THREE.UVMapping) {\n                            _uvs = element.uvs;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uvs[uv1].x, _uvs[uv1].y, _uvs[uv2].x, _uvs[uv2].y, _uvs[uv3].x, _uvs[uv3].y, material.map);\n                        }\n                    } else if (material.envMap !== null) {\n                        if (material.envMap.mapping === THREE.SphericalReflectionMapping) {\n                            _normal.copy(element.vertexNormalsModel[uv1]).applyMatrix3(_normalViewMatrix);\n                            _uv1x = .5 * _normal.x + .5;\n                            _uv1y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv2]).applyMatrix3(_normalViewMatrix);\n                            _uv2x = .5 * _normal.x + .5;\n                            _uv2y = .5 * _normal.y + .5;\n                            _normal.copy(element.vertexNormalsModel[uv3]).applyMatrix3(_normalViewMatrix);\n                            _uv3x = .5 * _normal.x + .5;\n                            _uv3y = .5 * _normal.y + .5;\n                            patternPath(_v1x, _v1y, _v2x, _v2y, _v3x, _v3y, _uv1x, _uv1y, _uv2x, _uv2y, _uv3x, _uv3y, material.envMap);\n                        }\n                    } else {\n                        _color.copy(material.color);\n                        if (material.vertexColors === THREE.FaceColors) {\n                            _color.multiply(element.color);\n                        }\n                        material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                    }\n                } else if (material instanceof THREE.MeshNormalMaterial) {\n                    _normal.copy(element.normalModel).applyMatrix3(_normalViewMatrix);\n                    _color.setRGB(_normal.x, _normal.y, _normal.z).multiplyScalar(.5).addScalar(.5);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                } else {\n                    _color.setRGB(1, 1, 1);\n                    material.wireframe === true ? strokePath(_color, material.wireframeLinewidth, material.wireframeLinecap, material.wireframeLinejoin) : fillPath(_color);\n                }\n            }\n            function drawTriangle(x0, y0, x1, y1, x2, y2) {\n                _context.beginPath();\n                _context.moveTo(x0, y0);\n                _context.lineTo(x1, y1);\n                _context.lineTo(x2, y2);\n                _context.closePath();\n            }\n            function strokePath(color, linewidth, linecap, linejoin) {\n                setLineWidth(linewidth);\n                setLineCap(linecap);\n                setLineJoin(linejoin);\n                setStrokeStyle(color.getStyle());\n                _context.stroke();\n                _elemBox.expandByScalar(linewidth * 2);\n            }\n            function fillPath(color) {\n                setFillStyle(color.getStyle());\n                _context.fill();\n            }\n            function textureToPattern(texture) {\n                if (texture.version === 0 || texture instanceof THREE.CompressedTexture || texture instanceof THREE.DataTexture) {\n                    return {\n                        canvas: undefined,\n                        version: texture.version\n                    };\n                }\n                var image = texture.image;\n                if (image.complete === false) {\n                    return {\n                        canvas: undefined,\n                        version: 0\n                    };\n                }\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = image.width;\n                canvas.height = image.height;\n                var context = canvas.getContext(\"2d\");\n                context.setTransform(1, 0, 0, -1, 0, image.height);\n                context.drawImage(image, 0, 0);\n                var repeatX = texture.wrapS === THREE.RepeatWrapping;\n                var repeatY = texture.wrapT === THREE.RepeatWrapping;\n                var repeat = \"no-repeat\";\n                if (repeatX === true && repeatY === true) {\n                    repeat = \"repeat\";\n                } else if (repeatX === true) {\n                    repeat = \"repeat-x\";\n                } else if (repeatY === true) {\n                    repeat = \"repeat-y\";\n                }\n                var pattern = _context.createPattern(canvas, repeat);\n                if (texture.onUpdate) texture.onUpdate(texture);\n                return {\n                    canvas: pattern,\n                    version: texture.version\n                };\n            }\n            function patternPath(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, texture) {\n                var pattern = _patterns[texture.id];\n                if (pattern === undefined || pattern.version !== texture.version) {\n                    pattern = textureToPattern(texture);\n                    _patterns[texture.id] = pattern;\n                }\n                if (pattern.canvas !== undefined) {\n                    setFillStyle(pattern.canvas);\n                } else {\n                    setFillStyle(\"rgba( 0, 0, 0, 1)\");\n                    _context.fill();\n                    return;\n                }\n                var a, b, c, d, e, f, det, idet, offsetX = texture.offset.x / texture.repeat.x, offsetY = texture.offset.y / texture.repeat.y, width = texture.image.width * texture.repeat.x, height = texture.image.height * texture.repeat.y;\n                u0 = (u0 + offsetX) * width;\n                v0 = (v0 + offsetY) * height;\n                u1 = (u1 + offsetX) * width;\n                v1 = (v1 + offsetY) * height;\n                u2 = (u2 + offsetX) * width;\n                v2 = (v2 + offsetY) * height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                if (det === 0) return;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.fill();\n                _context.restore();\n            }\n            function clipImage(x0, y0, x1, y1, x2, y2, u0, v0, u1, v1, u2, v2, image) {\n                var a, b, c, d, e, f, det, idet, width = image.width - 1, height = image.height - 1;\n                u0 *= width;\n                v0 *= height;\n                u1 *= width;\n                v1 *= height;\n                u2 *= width;\n                v2 *= height;\n                x1 -= x0;\n                y1 -= y0;\n                x2 -= x0;\n                y2 -= y0;\n                u1 -= u0;\n                v1 -= v0;\n                u2 -= u0;\n                v2 -= v0;\n                det = u1 * v2 - u2 * v1;\n                idet = 1 / det;\n                a = (v2 * x1 - v1 * x2) * idet;\n                b = (v2 * y1 - v1 * y2) * idet;\n                c = (u1 * x2 - u2 * x1) * idet;\n                d = (u1 * y2 - u2 * y1) * idet;\n                e = x0 - a * u0 - c * v0;\n                f = y0 - b * u0 - d * v0;\n                _context.save();\n                _context.transform(a, b, c, d, e, f);\n                _context.clip();\n                _context.drawImage(image, 0, 0);\n                _context.restore();\n            }\n            function expand(v1, v2, pixels) {\n                var x = v2.x - v1.x, y = v2.y - v1.y, det = x * x + y * y, idet;\n                if (det === 0) return;\n                idet = pixels / Math.sqrt(det);\n                x *= idet;\n                y *= idet;\n                v2.x += x;\n                v2.y += y;\n                v1.x -= x;\n                v1.y -= y;\n            }\n            function setOpacity(value) {\n                if (_contextGlobalAlpha !== value) {\n                    _context.globalAlpha = value;\n                    _contextGlobalAlpha = value;\n                }\n            }\n            function setBlending(value) {\n                if (_contextGlobalCompositeOperation !== value) {\n                    if (value === THREE.NormalBlending) {\n                        _context.globalCompositeOperation = \"source-over\";\n                    } else if (value === THREE.AdditiveBlending) {\n                        _context.globalCompositeOperation = \"lighter\";\n                    } else if (value === THREE.SubtractiveBlending) {\n                        _context.globalCompositeOperation = \"darker\";\n                    }\n                    _contextGlobalCompositeOperation = value;\n                }\n            }\n            function setLineWidth(value) {\n                if (_contextLineWidth !== value) {\n                    _context.lineWidth = value;\n                    _contextLineWidth = value;\n                }\n            }\n            function setLineCap(value) {\n                if (_contextLineCap !== value) {\n                    _context.lineCap = value;\n                    _contextLineCap = value;\n                }\n            }\n            function setLineJoin(value) {\n                if (_contextLineJoin !== value) {\n                    _context.lineJoin = value;\n                    _contextLineJoin = value;\n                }\n            }\n            function setStrokeStyle(value) {\n                if (_contextStrokeStyle !== value) {\n                    _context.strokeStyle = value;\n                    _contextStrokeStyle = value;\n                }\n            }\n            function setFillStyle(value) {\n                if (_contextFillStyle !== value) {\n                    _context.fillStyle = value;\n                    _contextFillStyle = value;\n                }\n            }\n            function setLineDash(value) {\n                if (_contextLineDash.length !== value.length) {\n                    _context.setLineDash(value);\n                    _contextLineDash = value;\n                }\n            }\n        };\n    }, function(module, exports) {\n        THREE.RenderableObject = function() {\n            this.id = 0;\n            this.object = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableFace = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.v3 = new THREE.RenderableVertex();\n            this.normalModel = new THREE.Vector3();\n            this.vertexNormalsModel = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n            this.vertexNormalsLength = 0;\n            this.color = new THREE.Color();\n            this.material = null;\n            this.uvs = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableVertex = function() {\n            this.position = new THREE.Vector3();\n            this.positionWorld = new THREE.Vector3();\n            this.positionScreen = new THREE.Vector4();\n            this.visible = true;\n        };\n        THREE.RenderableVertex.prototype.copy = function(vertex) {\n            this.positionWorld.copy(vertex.positionWorld);\n            this.positionScreen.copy(vertex.positionScreen);\n        };\n        THREE.RenderableLine = function() {\n            this.id = 0;\n            this.v1 = new THREE.RenderableVertex();\n            this.v2 = new THREE.RenderableVertex();\n            this.vertexColors = [ new THREE.Color(), new THREE.Color() ];\n            this.material = null;\n            this.z = 0;\n            this.renderOrder = 0;\n        };\n        THREE.RenderableSprite = function() {\n            this.id = 0;\n            this.object = null;\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.rotation = 0;\n            this.scale = new THREE.Vector2();\n            this.material = null;\n            this.renderOrder = 0;\n        };\n        THREE.Projector = function() {\n            var _object, _objectCount, _objectPool = [], _objectPoolLength = 0, _vertex, _vertexCount, _vertexPool = [], _vertexPoolLength = 0, _face, _faceCount, _facePool = [], _facePoolLength = 0, _line, _lineCount, _linePool = [], _linePoolLength = 0, _sprite, _spriteCount, _spritePool = [], _spritePoolLength = 0, _renderData = {\n                objects: [],\n                lights: [],\n                elements: []\n            }, _vector3 = new THREE.Vector3(), _vector4 = new THREE.Vector4(), _clipBox = new THREE.Box3(new THREE.Vector3(-1, -1, -1), new THREE.Vector3(1, 1, 1)), _boundingBox = new THREE.Box3(), _points3 = new Array(3), _points4 = new Array(4), _viewMatrix = new THREE.Matrix4(), _viewProjectionMatrix = new THREE.Matrix4(), _modelMatrix, _modelViewProjectionMatrix = new THREE.Matrix4(), _normalMatrix = new THREE.Matrix3(), _frustum = new THREE.Frustum(), _clippedVertex1PositionScreen = new THREE.Vector4(), _clippedVertex2PositionScreen = new THREE.Vector4();\n            this.projectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .projectVector() is now vector.project().\");\n                vector.project(camera);\n            };\n            this.unprojectVector = function(vector, camera) {\n                console.warn(\"THREE.Projector: .unprojectVector() is now vector.unproject().\");\n                vector.unproject(camera);\n            };\n            this.pickingRay = function(vector, camera) {\n                console.error(\"THREE.Projector: .pickingRay() is now raycaster.setFromCamera().\");\n            };\n            var RenderList = function() {\n                var normals = [];\n                var uvs = [];\n                var object = null;\n                var material = null;\n                var normalMatrix = new THREE.Matrix3();\n                function setObject(value) {\n                    object = value;\n                    material = object.material;\n                    normalMatrix.getNormalMatrix(object.matrixWorld);\n                    normals.length = 0;\n                    uvs.length = 0;\n                }\n                function projectVertex(vertex) {\n                    var position = vertex.position;\n                    var positionWorld = vertex.positionWorld;\n                    var positionScreen = vertex.positionScreen;\n                    positionWorld.copy(position).applyMatrix4(_modelMatrix);\n                    positionScreen.copy(positionWorld).applyMatrix4(_viewProjectionMatrix);\n                    var invW = 1 / positionScreen.w;\n                    positionScreen.x *= invW;\n                    positionScreen.y *= invW;\n                    positionScreen.z *= invW;\n                    vertex.visible = positionScreen.x >= -1 && positionScreen.x <= 1 && positionScreen.y >= -1 && positionScreen.y <= 1 && positionScreen.z >= -1 && positionScreen.z <= 1;\n                }\n                function pushVertex(x, y, z) {\n                    _vertex = getNextVertexInPool();\n                    _vertex.position.set(x, y, z);\n                    projectVertex(_vertex);\n                }\n                function pushNormal(x, y, z) {\n                    normals.push(x, y, z);\n                }\n                function pushUv(x, y) {\n                    uvs.push(x, y);\n                }\n                function checkTriangleVisibility(v1, v2, v3) {\n                    if (v1.visible === true || v2.visible === true || v3.visible === true) return true;\n                    _points3[0] = v1.positionScreen;\n                    _points3[1] = v2.positionScreen;\n                    _points3[2] = v3.positionScreen;\n                    return _clipBox.intersectsBox(_boundingBox.setFromPoints(_points3));\n                }\n                function checkBackfaceCulling(v1, v2, v3) {\n                    return (v3.positionScreen.x - v1.positionScreen.x) * (v2.positionScreen.y - v1.positionScreen.y) - (v3.positionScreen.y - v1.positionScreen.y) * (v2.positionScreen.x - v1.positionScreen.x) < 0;\n                }\n                function pushLine(a, b) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    _line = getNextLineInPool();\n                    _line.id = object.id;\n                    _line.v1.copy(v1);\n                    _line.v2.copy(v2);\n                    _line.z = (v1.positionScreen.z + v2.positionScreen.z) / 2;\n                    _line.renderOrder = object.renderOrder;\n                    _line.material = object.material;\n                    _renderData.elements.push(_line);\n                }\n                function pushTriangle(a, b, c) {\n                    var v1 = _vertexPool[a];\n                    var v2 = _vertexPool[b];\n                    var v3 = _vertexPool[c];\n                    if (checkTriangleVisibility(v1, v2, v3) === false) return;\n                    if (material.side === THREE.DoubleSide || checkBackfaceCulling(v1, v2, v3) === true) {\n                        _face = getNextFaceInPool();\n                        _face.id = object.id;\n                        _face.v1.copy(v1);\n                        _face.v2.copy(v2);\n                        _face.v3.copy(v3);\n                        _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                        _face.renderOrder = object.renderOrder;\n                        _face.normalModel.fromArray(normals, a * 3);\n                        _face.normalModel.applyMatrix3(normalMatrix).normalize();\n                        for (var i = 0; i < 3; i++) {\n                            var normal = _face.vertexNormalsModel[i];\n                            normal.fromArray(normals, arguments[i] * 3);\n                            normal.applyMatrix3(normalMatrix).normalize();\n                            var uv = _face.uvs[i];\n                            uv.fromArray(uvs, arguments[i] * 2);\n                        }\n                        _face.vertexNormalsLength = 3;\n                        _face.material = object.material;\n                        _renderData.elements.push(_face);\n                    }\n                }\n                return {\n                    setObject: setObject,\n                    projectVertex: projectVertex,\n                    checkTriangleVisibility: checkTriangleVisibility,\n                    checkBackfaceCulling: checkBackfaceCulling,\n                    pushVertex: pushVertex,\n                    pushNormal: pushNormal,\n                    pushUv: pushUv,\n                    pushLine: pushLine,\n                    pushTriangle: pushTriangle\n                };\n            };\n            var renderList = new RenderList();\n            this.projectScene = function(scene, camera, sortObjects, sortElements) {\n                _faceCount = 0;\n                _lineCount = 0;\n                _spriteCount = 0;\n                _renderData.elements.length = 0;\n                if (scene.autoUpdate === true) scene.updateMatrixWorld();\n                if (camera.parent === null) camera.updateMatrixWorld();\n                _viewMatrix.copy(camera.matrixWorldInverse.getInverse(camera.matrixWorld));\n                _viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, _viewMatrix);\n                _frustum.setFromMatrix(_viewProjectionMatrix);\n                _objectCount = 0;\n                _renderData.objects.length = 0;\n                _renderData.lights.length = 0;\n                scene.traverseVisible(function(object) {\n                    if (object instanceof THREE.Light) {\n                        _renderData.lights.push(object);\n                    } else if (object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Sprite) {\n                        var material = object.material;\n                        if (material.visible === false) return;\n                        if (object.frustumCulled === false || _frustum.intersectsObject(object) === true) {\n                            _object = getNextObjectInPool();\n                            _object.id = object.id;\n                            _object.object = object;\n                            _vector3.setFromMatrixPosition(object.matrixWorld);\n                            _vector3.applyProjection(_viewProjectionMatrix);\n                            _object.z = _vector3.z;\n                            _object.renderOrder = object.renderOrder;\n                            _renderData.objects.push(_object);\n                        }\n                    }\n                });\n                if (sortObjects === true) {\n                    _renderData.objects.sort(painterSort);\n                }\n                for (var o = 0, ol = _renderData.objects.length; o < ol; o++) {\n                    var object = _renderData.objects[o].object;\n                    var geometry = object.geometry;\n                    renderList.setObject(object);\n                    _modelMatrix = object.matrixWorld;\n                    _vertexCount = 0;\n                    if (object instanceof THREE.Mesh) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            var groups = geometry.groups;\n                            if (attributes.position === undefined) continue;\n                            var positions = attributes.position.array;\n                            for (var i = 0, l = positions.length; i < l; i += 3) {\n                                renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                            }\n                            if (attributes.normal !== undefined) {\n                                var normals = attributes.normal.array;\n                                for (var i = 0, l = normals.length; i < l; i += 3) {\n                                    renderList.pushNormal(normals[i], normals[i + 1], normals[i + 2]);\n                                }\n                            }\n                            if (attributes.uv !== undefined) {\n                                var uvs = attributes.uv.array;\n                                for (var i = 0, l = uvs.length; i < l; i += 2) {\n                                    renderList.pushUv(uvs[i], uvs[i + 1]);\n                                }\n                            }\n                            if (geometry.index !== null) {\n                                var indices = geometry.index.array;\n                                if (groups.length > 0) {\n                                    for (var o = 0; o < groups.length; o++) {\n                                        var group = groups[o];\n                                        for (var i = group.start, l = group.start + group.count; i < l; i += 3) {\n                                            renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                        }\n                                    }\n                                } else {\n                                    for (var i = 0, l = indices.length; i < l; i += 3) {\n                                        renderList.pushTriangle(indices[i], indices[i + 1], indices[i + 2]);\n                                    }\n                                }\n                            } else {\n                                for (var i = 0, l = positions.length / 3; i < l; i += 3) {\n                                    renderList.pushTriangle(i, i + 1, i + 2);\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            var vertices = geometry.vertices;\n                            var faces = geometry.faces;\n                            var faceVertexUvs = geometry.faceVertexUvs[0];\n                            _normalMatrix.getNormalMatrix(_modelMatrix);\n                            var material = object.material;\n                            var isFaceMaterial = material instanceof THREE.MultiMaterial;\n                            var objectMaterials = isFaceMaterial === true ? object.material : null;\n                            for (var v = 0, vl = vertices.length; v < vl; v++) {\n                                var vertex = vertices[v];\n                                _vector3.copy(vertex);\n                                if (material.morphTargets === true) {\n                                    var morphTargets = geometry.morphTargets;\n                                    var morphInfluences = object.morphTargetInfluences;\n                                    for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n                                        var influence = morphInfluences[t];\n                                        if (influence === 0) continue;\n                                        var target = morphTargets[t];\n                                        var targetVertex = target.vertices[v];\n                                        _vector3.x += (targetVertex.x - vertex.x) * influence;\n                                        _vector3.y += (targetVertex.y - vertex.y) * influence;\n                                        _vector3.z += (targetVertex.z - vertex.z) * influence;\n                                    }\n                                }\n                                renderList.pushVertex(_vector3.x, _vector3.y, _vector3.z);\n                            }\n                            for (var f = 0, fl = faces.length; f < fl; f++) {\n                                var face = faces[f];\n                                material = isFaceMaterial === true ? objectMaterials.materials[face.materialIndex] : object.material;\n                                if (material === undefined) continue;\n                                var side = material.side;\n                                var v1 = _vertexPool[face.a];\n                                var v2 = _vertexPool[face.b];\n                                var v3 = _vertexPool[face.c];\n                                if (renderList.checkTriangleVisibility(v1, v2, v3) === false) continue;\n                                var visible = renderList.checkBackfaceCulling(v1, v2, v3);\n                                if (side !== THREE.DoubleSide) {\n                                    if (side === THREE.FrontSide && visible === false) continue;\n                                    if (side === THREE.BackSide && visible === true) continue;\n                                }\n                                _face = getNextFaceInPool();\n                                _face.id = object.id;\n                                _face.v1.copy(v1);\n                                _face.v2.copy(v2);\n                                _face.v3.copy(v3);\n                                _face.normalModel.copy(face.normal);\n                                if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                    _face.normalModel.negate();\n                                }\n                                _face.normalModel.applyMatrix3(_normalMatrix).normalize();\n                                var faceVertexNormals = face.vertexNormals;\n                                for (var n = 0, nl = Math.min(faceVertexNormals.length, 3); n < nl; n++) {\n                                    var normalModel = _face.vertexNormalsModel[n];\n                                    normalModel.copy(faceVertexNormals[n]);\n                                    if (visible === false && (side === THREE.BackSide || side === THREE.DoubleSide)) {\n                                        normalModel.negate();\n                                    }\n                                    normalModel.applyMatrix3(_normalMatrix).normalize();\n                                }\n                                _face.vertexNormalsLength = faceVertexNormals.length;\n                                var vertexUvs = faceVertexUvs[f];\n                                if (vertexUvs !== undefined) {\n                                    for (var u = 0; u < 3; u++) {\n                                        _face.uvs[u].copy(vertexUvs[u]);\n                                    }\n                                }\n                                _face.color = face.color;\n                                _face.material = material;\n                                _face.z = (v1.positionScreen.z + v2.positionScreen.z + v3.positionScreen.z) / 3;\n                                _face.renderOrder = object.renderOrder;\n                                _renderData.elements.push(_face);\n                            }\n                        }\n                    } else if (object instanceof THREE.Line) {\n                        if (geometry instanceof THREE.BufferGeometry) {\n                            var attributes = geometry.attributes;\n                            if (attributes.position !== undefined) {\n                                var positions = attributes.position.array;\n                                for (var i = 0, l = positions.length; i < l; i += 3) {\n                                    renderList.pushVertex(positions[i], positions[i + 1], positions[i + 2]);\n                                }\n                                if (geometry.index !== null) {\n                                    var indices = geometry.index.array;\n                                    for (var i = 0, l = indices.length; i < l; i += 2) {\n                                        renderList.pushLine(indices[i], indices[i + 1]);\n                                    }\n                                } else {\n                                    var step = object instanceof THREE.LineSegments ? 2 : 1;\n                                    for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n                                        renderList.pushLine(i, i + 1);\n                                    }\n                                }\n                            }\n                        } else if (geometry instanceof THREE.Geometry) {\n                            _modelViewProjectionMatrix.multiplyMatrices(_viewProjectionMatrix, _modelMatrix);\n                            var vertices = object.geometry.vertices;\n                            if (vertices.length === 0) continue;\n                            v1 = getNextVertexInPool();\n                            v1.positionScreen.copy(vertices[0]).applyMatrix4(_modelViewProjectionMatrix);\n                            var step = object instanceof THREE.LineSegments ? 2 : 1;\n                            for (var v = 1, vl = vertices.length; v < vl; v++) {\n                                v1 = getNextVertexInPool();\n                                v1.positionScreen.copy(vertices[v]).applyMatrix4(_modelViewProjectionMatrix);\n                                if ((v + 1) % step > 0) continue;\n                                v2 = _vertexPool[_vertexCount - 2];\n                                _clippedVertex1PositionScreen.copy(v1.positionScreen);\n                                _clippedVertex2PositionScreen.copy(v2.positionScreen);\n                                if (clipLine(_clippedVertex1PositionScreen, _clippedVertex2PositionScreen) === true) {\n                                    _clippedVertex1PositionScreen.multiplyScalar(1 / _clippedVertex1PositionScreen.w);\n                                    _clippedVertex2PositionScreen.multiplyScalar(1 / _clippedVertex2PositionScreen.w);\n                                    _line = getNextLineInPool();\n                                    _line.id = object.id;\n                                    _line.v1.positionScreen.copy(_clippedVertex1PositionScreen);\n                                    _line.v2.positionScreen.copy(_clippedVertex2PositionScreen);\n                                    _line.z = Math.max(_clippedVertex1PositionScreen.z, _clippedVertex2PositionScreen.z);\n                                    _line.renderOrder = object.renderOrder;\n                                    _line.material = object.material;\n                                    if (object.material.vertexColors === THREE.VertexColors) {\n                                        _line.vertexColors[0].copy(object.geometry.colors[v]);\n                                        _line.vertexColors[1].copy(object.geometry.colors[v - 1]);\n                                    }\n                                    _renderData.elements.push(_line);\n                                }\n                            }\n                        }\n                    } else if (object instanceof THREE.Sprite) {\n                        _vector4.set(_modelMatrix.elements[12], _modelMatrix.elements[13], _modelMatrix.elements[14], 1);\n                        _vector4.applyMatrix4(_viewProjectionMatrix);\n                        var invW = 1 / _vector4.w;\n                        _vector4.z *= invW;\n                        if (_vector4.z >= -1 && _vector4.z <= 1) {\n                            _sprite = getNextSpriteInPool();\n                            _sprite.id = object.id;\n                            _sprite.x = _vector4.x * invW;\n                            _sprite.y = _vector4.y * invW;\n                            _sprite.z = _vector4.z;\n                            _sprite.renderOrder = object.renderOrder;\n                            _sprite.object = object;\n                            _sprite.rotation = object.rotation;\n                            _sprite.scale.x = object.scale.x * Math.abs(_sprite.x - (_vector4.x + camera.projectionMatrix.elements[0]) / (_vector4.w + camera.projectionMatrix.elements[12]));\n                            _sprite.scale.y = object.scale.y * Math.abs(_sprite.y - (_vector4.y + camera.projectionMatrix.elements[5]) / (_vector4.w + camera.projectionMatrix.elements[13]));\n                            _sprite.material = object.material;\n                            _renderData.elements.push(_sprite);\n                        }\n                    }\n                }\n                if (sortElements === true) {\n                    _renderData.elements.sort(painterSort);\n                }\n                return _renderData;\n            };\n            function getNextObjectInPool() {\n                if (_objectCount === _objectPoolLength) {\n                    var object = new THREE.RenderableObject();\n                    _objectPool.push(object);\n                    _objectPoolLength++;\n                    _objectCount++;\n                    return object;\n                }\n                return _objectPool[_objectCount++];\n            }\n            function getNextVertexInPool() {\n                if (_vertexCount === _vertexPoolLength) {\n                    var vertex = new THREE.RenderableVertex();\n                    _vertexPool.push(vertex);\n                    _vertexPoolLength++;\n                    _vertexCount++;\n                    return vertex;\n                }\n                return _vertexPool[_vertexCount++];\n            }\n            function getNextFaceInPool() {\n                if (_faceCount === _facePoolLength) {\n                    var face = new THREE.RenderableFace();\n                    _facePool.push(face);\n                    _facePoolLength++;\n                    _faceCount++;\n                    return face;\n                }\n                return _facePool[_faceCount++];\n            }\n            function getNextLineInPool() {\n                if (_lineCount === _linePoolLength) {\n                    var line = new THREE.RenderableLine();\n                    _linePool.push(line);\n                    _linePoolLength++;\n                    _lineCount++;\n                    return line;\n                }\n                return _linePool[_lineCount++];\n            }\n            function getNextSpriteInPool() {\n                if (_spriteCount === _spritePoolLength) {\n                    var sprite = new THREE.RenderableSprite();\n                    _spritePool.push(sprite);\n                    _spritePoolLength++;\n                    _spriteCount++;\n                    return sprite;\n                }\n                return _spritePool[_spriteCount++];\n            }\n            function painterSort(a, b) {\n                if (a.renderOrder !== b.renderOrder) {\n                    return a.renderOrder - b.renderOrder;\n                } else if (a.z !== b.z) {\n                    return b.z - a.z;\n                } else if (a.id !== b.id) {\n                    return a.id - b.id;\n                } else {\n                    return 0;\n                }\n            }\n            function clipLine(s1, s2) {\n                var alpha1 = 0, alpha2 = 1, bc1near = s1.z + s1.w, bc2near = s2.z + s2.w, bc1far = -s1.z + s1.w, bc2far = -s2.z + s2.w;\n                if (bc1near >= 0 && bc2near >= 0 && bc1far >= 0 && bc2far >= 0) {\n                    return true;\n                } else if (bc1near < 0 && bc2near < 0 || bc1far < 0 && bc2far < 0) {\n                    return false;\n                } else {\n                    if (bc1near < 0) {\n                        alpha1 = Math.max(alpha1, bc1near / (bc1near - bc2near));\n                    } else if (bc2near < 0) {\n                        alpha2 = Math.min(alpha2, bc1near / (bc1near - bc2near));\n                    }\n                    if (bc1far < 0) {\n                        alpha1 = Math.max(alpha1, bc1far / (bc1far - bc2far));\n                    } else if (bc2far < 0) {\n                        alpha2 = Math.min(alpha2, bc1far / (bc1far - bc2far));\n                    }\n                    if (alpha2 < alpha1) {\n                        return false;\n                    } else {\n                        s1.lerp(s2, alpha1);\n                        s2.lerp(s1, 1 - alpha2);\n                        return true;\n                    }\n                }\n            }\n        };\n    }, function(module, exports, __webpack_require__) {\n        /*!\n\t * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        var isObject = __webpack_require__(10);\n        function isObjectObject(o) {\n            return isObject(o) === true && Object.prototype.toString.call(o) === \"[object Object]\";\n        }\n        module.exports = function isPlainObject(o) {\n            var ctor, prot;\n            if (isObjectObject(o) === false) return false;\n            ctor = o.constructor;\n            if (typeof ctor !== \"function\") return false;\n            prot = ctor.prototype;\n            if (isObjectObject(prot) === false) return false;\n            if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n                return false;\n            }\n            return true;\n        };\n    }, function(module, exports) {\n        /*!\n\t * isobject <https://github.com/jonschlinkert/isobject>\n\t *\n\t * Copyright (c) 2014-2015, Jon Schlinkert.\n\t * Licensed under the MIT License.\n\t */\n        \"use strict\";\n        module.exports = function isObject(val) {\n            return val != null && typeof val === \"object\" && !Array.isArray(val);\n        };\n    }, function(module, exports, __webpack_require__) {\n        var __WEBPACK_AMD_DEFINE_RESULT__;\n        !function(undefined) {\n            var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n                return Object.prototype.toString.call(obj) === \"[object Array]\";\n            };\n            var defaultMaxListeners = 10;\n            function init() {\n                this._events = {};\n                if (this._conf) {\n                    configure.call(this, this._conf);\n                }\n            }\n            function configure(conf) {\n                if (conf) {\n                    this._conf = conf;\n                    conf.delimiter && (this.delimiter = conf.delimiter);\n                    conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\n                    conf.wildcard && (this.wildcard = conf.wildcard);\n                    conf.newListener && (this.newListener = conf.newListener);\n                    if (this.wildcard) {\n                        this.listenerTree = {};\n                    }\n                }\n            }\n            function EventEmitter(conf) {\n                this._events = {};\n                this.newListener = false;\n                configure.call(this, conf);\n            }\n            function searchListenerTree(handlers, type, tree, i) {\n                if (!tree) {\n                    return [];\n                }\n                var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached, typeLength = type.length, currentType = type[i], nextType = type[i + 1];\n                if (i === typeLength && tree._listeners) {\n                    if (typeof tree._listeners === \"function\") {\n                        handlers && handlers.push(tree._listeners);\n                        return [ tree ];\n                    } else {\n                        for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\n                            handlers && handlers.push(tree._listeners[leaf]);\n                        }\n                        return [ tree ];\n                    }\n                }\n                if (currentType === \"*\" || currentType === \"**\" || tree[currentType]) {\n                    if (currentType === \"*\") {\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\n                            }\n                        }\n                        return listeners;\n                    } else if (currentType === \"**\") {\n                        endReached = i + 1 === typeLength || i + 2 === typeLength && nextType === \"*\";\n                        if (endReached && tree._listeners) {\n                            listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\n                        }\n                        for (branch in tree) {\n                            if (branch !== \"_listeners\" && tree.hasOwnProperty(branch)) {\n                                if (branch === \"*\" || branch === \"**\") {\n                                    if (tree[branch]._listeners && !endReached) {\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\n                                    }\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                } else if (branch === nextType) {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\n                                } else {\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\n                                }\n                            }\n                        }\n                        return listeners;\n                    }\n                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\n                }\n                xTree = tree[\"*\"];\n                if (xTree) {\n                    searchListenerTree(handlers, type, xTree, i + 1);\n                }\n                xxTree = tree[\"**\"];\n                if (xxTree) {\n                    if (i < typeLength) {\n                        if (xxTree._listeners) {\n                            searchListenerTree(handlers, type, xxTree, typeLength);\n                        }\n                        for (branch in xxTree) {\n                            if (branch !== \"_listeners\" && xxTree.hasOwnProperty(branch)) {\n                                if (branch === nextType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 2);\n                                } else if (branch === currentType) {\n                                    searchListenerTree(handlers, type, xxTree[branch], i + 1);\n                                } else {\n                                    isolatedBranch = {};\n                                    isolatedBranch[branch] = xxTree[branch];\n                                    searchListenerTree(handlers, type, {\n                                        \"**\": isolatedBranch\n                                    }, i + 1);\n                                }\n                            }\n                        }\n                    } else if (xxTree._listeners) {\n                        searchListenerTree(handlers, type, xxTree, typeLength);\n                    } else if (xxTree[\"*\"] && xxTree[\"*\"]._listeners) {\n                        searchListenerTree(handlers, type, xxTree[\"*\"], typeLength);\n                    }\n                }\n                return listeners;\n            }\n            function growListenerTree(type, listener) {\n                type = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                for (var i = 0, len = type.length; i + 1 < len; i++) {\n                    if (type[i] === \"**\" && type[i + 1] === \"**\") {\n                        return;\n                    }\n                }\n                var tree = this.listenerTree;\n                var name = type.shift();\n                while (name) {\n                    if (!tree[name]) {\n                        tree[name] = {};\n                    }\n                    tree = tree[name];\n                    if (type.length === 0) {\n                        if (!tree._listeners) {\n                            tree._listeners = listener;\n                        } else if (typeof tree._listeners === \"function\") {\n                            tree._listeners = [ tree._listeners, listener ];\n                        } else if (isArray(tree._listeners)) {\n                            tree._listeners.push(listener);\n                            if (!tree._listeners.warned) {\n                                var m = defaultMaxListeners;\n                                if (typeof this._events.maxListeners !== \"undefined\") {\n                                    m = this._events.maxListeners;\n                                }\n                                if (m > 0 && tree._listeners.length > m) {\n                                    tree._listeners.warned = true;\n                                    console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", tree._listeners.length);\n                                    console.trace();\n                                }\n                            }\n                        }\n                        return true;\n                    }\n                    name = type.shift();\n                }\n                return true;\n            }\n            EventEmitter.prototype.delimiter = \".\";\n            EventEmitter.prototype.setMaxListeners = function(n) {\n                this._events || init.call(this);\n                this._events.maxListeners = n;\n                if (!this._conf) this._conf = {};\n                this._conf.maxListeners = n;\n            };\n            EventEmitter.prototype.event = \"\";\n            EventEmitter.prototype.once = function(event, fn) {\n                this.many(event, 1, fn);\n                return this;\n            };\n            EventEmitter.prototype.many = function(event, ttl, fn) {\n                var self = this;\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"many only accepts instances of Function\");\n                }\n                function listener() {\n                    if (--ttl === 0) {\n                        self.off(event, listener);\n                    }\n                    fn.apply(this, arguments);\n                }\n                listener._origin = fn;\n                this.on(event, listener);\n                return self;\n            };\n            EventEmitter.prototype.emit = function() {\n                this._events || init.call(this);\n                var type = arguments[0];\n                if (type === \"newListener\" && !this.newListener) {\n                    if (!this._events.newListener) {\n                        return false;\n                    }\n                }\n                if (this._all) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    for (i = 0, l = this._all.length; i < l; i++) {\n                        this.event = type;\n                        this._all[i].apply(this, args);\n                    }\n                }\n                if (type === \"error\") {\n                    if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\n                        if (arguments[1] instanceof Error) {\n                            throw arguments[1];\n                        } else {\n                            throw new Error(\"Uncaught, unspecified 'error' event.\");\n                        }\n                        return false;\n                    }\n                }\n                var handler;\n                if (this.wildcard) {\n                    handler = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n                } else {\n                    handler = this._events[type];\n                }\n                if (typeof handler === \"function\") {\n                    this.event = type;\n                    if (arguments.length === 1) {\n                        handler.call(this);\n                    } else if (arguments.length > 1) switch (arguments.length) {\n                      case 2:\n                        handler.call(this, arguments[1]);\n                        break;\n\n                      case 3:\n                        handler.call(this, arguments[1], arguments[2]);\n                        break;\n\n                      default:\n                        var l = arguments.length;\n                        var args = new Array(l - 1);\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                        handler.apply(this, args);\n                    }\n                    return true;\n                } else if (handler) {\n                    var l = arguments.length;\n                    var args = new Array(l - 1);\n                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\n                    var listeners = handler.slice();\n                    for (var i = 0, l = listeners.length; i < l; i++) {\n                        this.event = type;\n                        listeners[i].apply(this, args);\n                    }\n                    return listeners.length > 0 || !!this._all;\n                } else {\n                    return !!this._all;\n                }\n            };\n            EventEmitter.prototype.on = function(type, listener) {\n                if (typeof type === \"function\") {\n                    this.onAny(type);\n                    return this;\n                }\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"on only accepts instances of Function\");\n                }\n                this._events || init.call(this);\n                this.emit(\"newListener\", type, listener);\n                if (this.wildcard) {\n                    growListenerTree.call(this, type, listener);\n                    return this;\n                }\n                if (!this._events[type]) {\n                    this._events[type] = listener;\n                } else if (typeof this._events[type] === \"function\") {\n                    this._events[type] = [ this._events[type], listener ];\n                } else if (isArray(this._events[type])) {\n                    this._events[type].push(listener);\n                    if (!this._events[type].warned) {\n                        var m = defaultMaxListeners;\n                        if (typeof this._events.maxListeners !== \"undefined\") {\n                            m = this._events.maxListeners;\n                        }\n                        if (m > 0 && this._events[type].length > m) {\n                            this._events[type].warned = true;\n                            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n                            console.trace();\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.onAny = function(fn) {\n                if (typeof fn !== \"function\") {\n                    throw new Error(\"onAny only accepts instances of Function\");\n                }\n                if (!this._all) {\n                    this._all = [];\n                }\n                this._all.push(fn);\n                return this;\n            };\n            EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n            EventEmitter.prototype.off = function(type, listener) {\n                if (typeof listener !== \"function\") {\n                    throw new Error(\"removeListener only takes instances of Function\");\n                }\n                var handlers, leafs = [];\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                } else {\n                    if (!this._events[type]) return this;\n                    handlers = this._events[type];\n                    leafs.push({\n                        _listeners: handlers\n                    });\n                }\n                for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                    var leaf = leafs[iLeaf];\n                    handlers = leaf._listeners;\n                    if (isArray(handlers)) {\n                        var position = -1;\n                        for (var i = 0, length = handlers.length; i < length; i++) {\n                            if (handlers[i] === listener || handlers[i].listener && handlers[i].listener === listener || handlers[i]._origin && handlers[i]._origin === listener) {\n                                position = i;\n                                break;\n                            }\n                        }\n                        if (position < 0) {\n                            continue;\n                        }\n                        if (this.wildcard) {\n                            leaf._listeners.splice(position, 1);\n                        } else {\n                            this._events[type].splice(position, 1);\n                        }\n                        if (handlers.length === 0) {\n                            if (this.wildcard) {\n                                delete leaf._listeners;\n                            } else {\n                                delete this._events[type];\n                            }\n                        }\n                        return this;\n                    } else if (handlers === listener || handlers.listener && handlers.listener === listener || handlers._origin && handlers._origin === listener) {\n                        if (this.wildcard) {\n                            delete leaf._listeners;\n                        } else {\n                            delete this._events[type];\n                        }\n                    }\n                }\n                return this;\n            };\n            EventEmitter.prototype.offAny = function(fn) {\n                var i = 0, l = 0, fns;\n                if (fn && this._all && this._all.length > 0) {\n                    fns = this._all;\n                    for (i = 0, l = fns.length; i < l; i++) {\n                        if (fn === fns[i]) {\n                            fns.splice(i, 1);\n                            return this;\n                        }\n                    }\n                } else {\n                    this._all = [];\n                }\n                return this;\n            };\n            EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n            EventEmitter.prototype.removeAllListeners = function(type) {\n                if (arguments.length === 0) {\n                    !this._events || init.call(this);\n                    return this;\n                }\n                if (this.wildcard) {\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\n                        var leaf = leafs[iLeaf];\n                        leaf._listeners = null;\n                    }\n                } else {\n                    if (!this._events[type]) return this;\n                    this._events[type] = null;\n                }\n                return this;\n            };\n            EventEmitter.prototype.listeners = function(type) {\n                if (this.wildcard) {\n                    var handlers = [];\n                    var ns = typeof type === \"string\" ? type.split(this.delimiter) : type.slice();\n                    searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n                    return handlers;\n                }\n                this._events || init.call(this);\n                if (!this._events[type]) this._events[type] = [];\n                if (!isArray(this._events[type])) {\n                    this._events[type] = [ this._events[type] ];\n                }\n                return this._events[type];\n            };\n            EventEmitter.prototype.listenersAny = function() {\n                if (this._all) {\n                    return this._all;\n                } else {\n                    return [];\n                }\n            };\n            if (true) {\n                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n                    return EventEmitter;\n                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n            } else if (typeof exports === \"object\") {\n                exports.EventEmitter2 = EventEmitter;\n            } else {\n                window.EventEmitter2 = EventEmitter;\n            }\n        }();\n    }, function(module, exports) {\n        module.exports = {\n            Promise: window[\"Promise\"]\n        };\n    }, function(module, exports) {\n        (function() {\n            var ResizeSensor = function(element, callback) {\n                function EventQueue() {\n                    this.q = [];\n                    this.add = function(ev) {\n                        this.q.push(ev);\n                    };\n                    var i, j;\n                    this.call = function() {\n                        for (i = 0, j = this.q.length; i < j; i++) {\n                            this.q[i].call();\n                        }\n                    };\n                }\n                function getComputedStyle(element, prop) {\n                    if (element.currentStyle) {\n                        return element.currentStyle[prop];\n                    } else if (window.getComputedStyle) {\n                        return window.getComputedStyle(element, null).getPropertyValue(prop);\n                    } else {\n                        return element.style[prop];\n                    }\n                }\n                function attachResizeEvent(element, resized) {\n                    if (!element.resizedAttached) {\n                        element.resizedAttached = new EventQueue();\n                        element.resizedAttached.add(resized);\n                    } else if (element.resizedAttached) {\n                        element.resizedAttached.add(resized);\n                        return;\n                    }\n                    element.resizeSensor = document.createElement(\"div\");\n                    element.resizeSensor.className = \"resize-sensor\";\n                    var style = \"position: absolute; left: 0; top: 0; right: 0; bottom: 0; overflow: hidden; z-index: -1; visibility: hidden;\";\n                    var styleChild = \"position: absolute; left: 0; top: 0; transition: 0s;\";\n                    element.resizeSensor.style.cssText = style;\n                    element.resizeSensor.innerHTML = '<div class=\"resize-sensor-expand\" style=\"' + style + '\">' + '<div style=\"' + styleChild + '\"></div>' + \"</div>\" + '<div class=\"resize-sensor-shrink\" style=\"' + style + '\">' + '<div style=\"' + styleChild + ' width: 200%; height: 200%\"></div>' + \"</div>\";\n                    element.appendChild(element.resizeSensor);\n                    if (!{\n                        fixed: 1,\n                        absolute: 1\n                    }[getComputedStyle(element, \"position\")]) {\n                        element.style.position = \"relative\";\n                    }\n                    var expand = element.resizeSensor.childNodes[0];\n                    var expandChild = expand.childNodes[0];\n                    var shrink = element.resizeSensor.childNodes[1];\n                    var shrinkChild = shrink.childNodes[0];\n                    var lastWidth, lastHeight;\n                    var reset = function() {\n                        expandChild.style.width = expand.offsetWidth + 10 + \"px\";\n                        expandChild.style.height = expand.offsetHeight + 10 + \"px\";\n                        expand.scrollLeft = expand.scrollWidth;\n                        expand.scrollTop = expand.scrollHeight;\n                        shrink.scrollLeft = shrink.scrollWidth;\n                        shrink.scrollTop = shrink.scrollHeight;\n                        lastWidth = element.offsetWidth;\n                        lastHeight = element.offsetHeight;\n                    };\n                    reset();\n                    var changed = function() {\n                        if (element.resizedAttached) {\n                            element.resizedAttached.call();\n                        }\n                    };\n                    var addEvent = function(el, name, cb) {\n                        if (el.attachEvent) {\n                            el.attachEvent(\"on\" + name, cb);\n                        } else {\n                            el.addEventListener(name, cb);\n                        }\n                    };\n                    var onScroll = function() {\n                        if (element.offsetWidth != lastWidth || element.offsetHeight != lastHeight) {\n                            changed();\n                        }\n                        reset();\n                    };\n                    addEvent(expand, \"scroll\", onScroll);\n                    addEvent(shrink, \"scroll\", onScroll);\n                }\n                var elementType = Object.prototype.toString.call(element);\n                var isCollectionTyped = \"[object Array]\" === elementType || \"[object NodeList]\" === elementType || \"[object HTMLCollection]\" === elementType || \"undefined\" !== typeof jQuery && element instanceof jQuery || \"undefined\" !== typeof Elements && element instanceof Elements;\n                if (isCollectionTyped) {\n                    var i = 0, j = element.length;\n                    for (;i < j; i++) {\n                        attachResizeEvent(element[i], callback);\n                    }\n                } else {\n                    attachResizeEvent(element, callback);\n                }\n                this.detach = function() {\n                    if (isCollectionTyped) {\n                        var i = 0, j = element.length;\n                        for (;i < j; i++) {\n                            ResizeSensor.detach(element[i]);\n                        }\n                    } else {\n                        ResizeSensor.detach(element);\n                    }\n                };\n            };\n            ResizeSensor.detach = function(element) {\n                if (element.resizeSensor) {\n                    element.removeChild(element.resizeSensor);\n                    delete element.resizeSensor;\n                    delete element.resizedAttached;\n                }\n            };\n            if (typeof module !== \"undefined\" && typeof module.exports !== \"undefined\") {\n                module.exports = ResizeSensor;\n            } else {\n                window.ResizeSensor = ResizeSensor;\n            }\n        })();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(15);\n        var Utils_1 = __webpack_require__(16);\n        var Widget_1 = __webpack_require__(17);\n        var TrendsManager_1 = __webpack_require__(18);\n        var Screen_1 = __webpack_require__(21);\n        var AxisMarks_1 = __webpack_require__(22);\n        var interfaces_1 = __webpack_require__(23);\n        var deps_1 = __webpack_require__(3);\n        var CHART_STATE_EVENTS = {\n            INITIAL_STATE_APPLIED: \"initialStateApplied\",\n            READY: \"ready\",\n            DESTROY: \"destroy\",\n            CHANGE: \"change\",\n            TREND_CHANGE: \"trendChange\",\n            TRENDS_CHANGE: \"trendsChange\",\n            ZOOM: \"zoom\",\n            RESIZE: \"resize\",\n            SCROLL: \"scroll\",\n            SCROLL_STOP: \"scrollStop\",\n            PLUGINS_STATE_CHANGED: \"pluginsStateChanged\"\n        };\n        var ChartState = function() {\n            function ChartState(initialState, widgetsClasses, plugins) {\n                if (widgetsClasses === void 0) {\n                    widgetsClasses = {};\n                }\n                if (plugins === void 0) {\n                    plugins = [];\n                }\n                this.data = {\n                    prevState: {},\n                    $el: null,\n                    zoom: 0,\n                    xAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.ALL,\n                            from: 0,\n                            to: 0,\n                            scroll: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 0,\n                                end: 5\n                            },\n                            margin: {\n                                start: 0,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        gridMinSize: 100,\n                        autoScroll: true,\n                        marks: []\n                    },\n                    yAxis: {\n                        range: {\n                            type: interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END,\n                            from: 0,\n                            to: 0,\n                            zoom: 1,\n                            padding: {\n                                start: 5,\n                                end: 5\n                            },\n                            margin: {\n                                start: 5,\n                                end: 5\n                            }\n                        },\n                        dataType: interfaces_1.AXIS_DATA_TYPE.NUMBER,\n                        gridMinSize: 50,\n                        marks: []\n                    },\n                    animations: {\n                        enabled: true,\n                        trendChangeSpeed: .5,\n                        trendChangeEase: void 0,\n                        zoomSpeed: .25,\n                        zoomEase: Linear.easeNone,\n                        scrollSpeed: .5,\n                        scrollEase: Linear.easeNone,\n                        autoScrollSpeed: 1,\n                        autoScrollEase: Linear.easeNone\n                    },\n                    autoRender: {\n                        enabled: true,\n                        fps: 0\n                    },\n                    autoResize: true,\n                    renderer: \"WebGLRenderer\",\n                    autoScroll: true,\n                    controls: {\n                        enabled: true\n                    },\n                    cursor: {\n                        dragMode: false,\n                        x: 0,\n                        y: 0\n                    },\n                    backgroundColor: 0,\n                    backgroundOpacity: 1,\n                    showStats: false,\n                    pluginsState: {},\n                    eventEmitterMaxListeners: 20\n                };\n                this.widgetsClasses = {};\n                this.plugins = {};\n                this.isReady = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.ee.setMaxListeners(initialState.eventEmitterMaxListeners || this.data.eventEmitterMaxListeners);\n                this.widgetsClasses = widgetsClasses;\n                this.trendsManager = new TrendsManager_1.TrendsManager(this, initialState);\n                initialState.trends = this.trendsManager.calculatedOptions;\n                initialState = this.installPlugins(plugins, initialState);\n                this.setState(initialState);\n                this.setState({\n                    computedData: this.getComputedData()\n                });\n                this.savePrevState();\n                this.screen = new Screen_1.Screen(this);\n                this.xAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.X);\n                this.yAxisMarks = new AxisMarks_1.AxisMarks(this, interfaces_1.AXIS_TYPE.Y);\n                this.initListeners();\n                this.ee.emit(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, initialState);\n                this.isReady = true;\n                this.ee.emit(CHART_STATE_EVENTS.READY, initialState);\n            }\n            ChartState.prototype.destroy = function() {\n                this.ee.emit(CHART_STATE_EVENTS.DESTROY);\n                this.ee.removeAllListeners();\n                this.data = {};\n            };\n            ChartState.prototype.onDestroy = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.DESTROY, cb);\n            };\n            ChartState.prototype.onInitialStateApplied = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.INITIAL_STATE_APPLIED, cb);\n            };\n            ChartState.prototype.onReady = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.READY, cb);\n            };\n            ChartState.prototype.onChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.CHANGE, cb);\n            };\n            ChartState.prototype.onTrendChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TREND_CHANGE, cb);\n            };\n            ChartState.prototype.onTrendsChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.TRENDS_CHANGE, cb);\n            };\n            ChartState.prototype.onScrollStop = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL_STOP, cb);\n            };\n            ChartState.prototype.onScroll = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.SCROLL, cb);\n            };\n            ChartState.prototype.onZoom = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.ZOOM, cb);\n            };\n            ChartState.prototype.onResize = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.RESIZE, cb);\n            };\n            ChartState.prototype.onPluginsStateChange = function(cb) {\n                return this.ee.subscribe(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, cb);\n            };\n            ChartState.prototype.getTrend = function(trendName) {\n                return this.trendsManager.getTrend(trendName);\n            };\n            ChartState.prototype.setState = function(newState, eventData, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var stateData = this.data;\n                var changedProps = {};\n                for (var key in newState) {\n                    if (stateData[key] !== newState[key]) {\n                        changedProps[key] = newState[key];\n                    }\n                }\n                this.savePrevState(changedProps);\n                var trendsData = {};\n                if (newState.trends) for (var trendName in newState.trends) {\n                    var trendOptions = newState.trends[trendName];\n                    if (trendOptions.data) trendsData[trendName] = trendOptions.data;\n                    delete trendOptions.data;\n                }\n                var newStateContainsData = Object.keys(trendsData).length > 0;\n                this.data = Utils_1.Utils.deepMerge(this.data, newState, false);\n                if (newStateContainsData) for (var trendName in trendsData) {\n                    this.data.trends[trendName].data = trendsData[trendName];\n                }\n                if (silent) return;\n                var recalculateResult = this.recalculateState(changedProps);\n                changedProps = recalculateResult.changedProps;\n                this.emitChangedStateEvents(changedProps, eventData);\n            };\n            ChartState.prototype.recalculateState = function(changedProps) {\n                var data = this.data;\n                var patch = {};\n                var actualData = Utils_1.Utils.deepMerge({}, data);\n                if (changedProps.widgets || !data.widgets) {\n                    patch.widgets = {};\n                    var widgetsOptions = data.widgets || {};\n                    for (var widgetName in this.widgetsClasses) {\n                        var WidgetClass = this.widgetsClasses[widgetName];\n                        var userOptions = widgetsOptions[widgetName] || {};\n                        var defaultOptions = WidgetClass.getDefaultOptions() || Widget_1.ChartWidget.getDefaultOptions();\n                        patch.widgets[widgetName] = Utils_1.Utils.deepMerge(defaultOptions, userOptions);\n                    }\n                }\n                var cursorOptions = changedProps.cursor;\n                var isMouseDrag = cursorOptions && data.cursor.dragMode && data.prevState.cursor.dragMode;\n                if (isMouseDrag) {\n                    var oldX = data.prevState.cursor.x;\n                    var currentX = cursorOptions.x;\n                    var currentScroll = data.xAxis.range.scroll;\n                    var deltaXVal = this.pxToValueByXAxis(oldX - currentX);\n                    patch.xAxis = {\n                        range: {\n                            scroll: currentScroll + deltaXVal\n                        }\n                    };\n                    actualData = Utils_1.Utils.deepMerge(actualData, {\n                        xAxis: patch.xAxis\n                    });\n                }\n                var chartWasResized = changedProps.width != void 0 || changedProps.height != void 0;\n                var scrollXChanged = false;\n                var needToRecalculateXAxis = isMouseDrag || chartWasResized || changedProps.xAxis && changedProps.xAxis.range || this.data.xAxis.range.zeroVal == void 0;\n                if (needToRecalculateXAxis) {\n                    var xAxisPatch = this.recalculateXAxis(actualData, changedProps);\n                    if (xAxisPatch) {\n                        scrollXChanged = true;\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            xAxis: xAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            xAxis: xAxisPatch\n                        });\n                    }\n                }\n                var needToRecalculateYAxis = chartWasResized || (data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END || data.yAxis.range.type === interfaces_1.AXIS_RANGE_TYPE.AUTO || data.yAxis.range.isMirrorMode) && (scrollXChanged || changedProps.trends || changedProps.yAxis) || this.data.yAxis.range.zeroVal == void 0;\n                if (needToRecalculateYAxis) {\n                    var yAxisPatch = this.recalculateYAxis(actualData);\n                    if (yAxisPatch) {\n                        patch = Utils_1.Utils.deepMerge(patch, {\n                            yAxis: yAxisPatch\n                        });\n                        actualData = Utils_1.Utils.deepMerge(actualData, {\n                            yAxis: yAxisPatch\n                        });\n                    }\n                }\n                this.savePrevState(patch);\n                var allChangedProps = Utils_1.Utils.deepMerge(changedProps, patch);\n                patch.computedData = this.getComputedData(allChangedProps);\n                this.savePrevState(patch);\n                this.data = Utils_1.Utils.deepMerge(this.data, patch);\n                return {\n                    changedProps: allChangedProps,\n                    patch: patch\n                };\n            };\n            ChartState.prototype.getComputedData = function(changedProps) {\n                var computeAll = !changedProps;\n                var computedData = {};\n                if (computeAll || changedProps.trends && this.trendsManager) {\n                    computedData.trends = {\n                        maxXVal: this.trendsManager.getEndXVal(),\n                        minXVal: this.trendsManager.getStartXVal()\n                    };\n                }\n                return computedData;\n            };\n            ChartState.prototype.savePrevState = function(changedProps) {\n                if (!changedProps) changedProps = this.data;\n                var prevState = this.data.prevState;\n                Utils_1.Utils.copyProps(this.data, prevState, changedProps, [ \"trends\" ]);\n            };\n            ChartState.prototype.emitChangedStateEvents = function(changedProps, eventData) {\n                var prevState = this.data.prevState;\n                this.ee.emit(CHART_STATE_EVENTS.CHANGE, changedProps, eventData);\n                for (var key in changedProps) {\n                    this.ee.emit(key + \"Change\", changedProps[key], eventData);\n                }\n                if (!this.isReady) return;\n                var scrollStopEventNeeded = changedProps.cursor && changedProps.cursor.dragMode === false && prevState.cursor.dragMode === true;\n                scrollStopEventNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL_STOP, changedProps);\n                var scrollChangeEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.scroll !== void 0;\n                scrollChangeEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.SCROLL, changedProps);\n                var zoomEventsNeeded = changedProps.xAxis && changedProps.xAxis.range && changedProps.xAxis.range.zoom || changedProps.yAxis && changedProps.yAxis.range && changedProps.yAxis.range.zoom;\n                zoomEventsNeeded && this.ee.emit(CHART_STATE_EVENTS.ZOOM, changedProps);\n                var resizeEventNeeded = changedProps.width || changedProps.height;\n                resizeEventNeeded && this.ee.emit(CHART_STATE_EVENTS.RESIZE, changedProps);\n                var pluginStateChangedEventNeeded = !!changedProps.pluginsState;\n                pluginStateChangedEventNeeded && this.ee.emit(CHART_STATE_EVENTS.PLUGINS_STATE_CHANGED, changedProps.pluginsState);\n            };\n            ChartState.prototype.installPlugins = function(plugins, initialState) {\n                var _this = this;\n                initialState.pluginsState = {};\n                plugins.forEach(function(plugin) {\n                    var PluginClass = plugin.constructor;\n                    var pluginName = PluginClass.NAME;\n                    PluginClass.pluginWidgets.forEach(function(PluginWidget) {\n                        return _this.widgetsClasses[PluginWidget.widgetName] = PluginWidget;\n                    });\n                    initialState.pluginsState[pluginName] = Utils_1.Utils.deepMerge({}, plugin.initialState);\n                    _this.plugins[pluginName] = plugin;\n                    plugin.setupChartState(_this);\n                });\n                return initialState;\n            };\n            ChartState.prototype.getPlugin = function(pluginName) {\n                return this.plugins[pluginName];\n            };\n            ChartState.prototype.initListeners = function() {\n                var _this = this;\n                this.ee.on(CHART_STATE_EVENTS.TRENDS_CHANGE, function(changedTrends, newData) {\n                    _this.handleTrendsChange(changedTrends, newData);\n                });\n            };\n            ChartState.prototype.handleTrendsChange = function(changedTrends, newData) {\n                for (var trendName in changedTrends) {\n                    this.ee.emit(CHART_STATE_EVENTS.TREND_CHANGE, trendName, changedTrends[trendName], newData);\n                }\n            };\n            ChartState.prototype.recalculateXAxis = function(actualData, changedProps) {\n                var axisRange = actualData.xAxis.range;\n                var patch = {\n                    range: {}\n                };\n                var isInitialize = axisRange.zeroVal == void 0;\n                var zeroVal, scaleFactor;\n                var zoom = axisRange.zoom;\n                if (axisRange.isMirrorMode) {\n                    Utils_1.Utils.error(\"range.isMirrorMode available only for yAxis.range\");\n                }\n                if (isInitialize) {\n                    zeroVal = axisRange.from;\n                    scaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                } else {\n                    zeroVal = axisRange.zeroVal;\n                    scaleFactor = axisRange.scaleFactor;\n                    if (changedProps.xAxis && (changedProps.xAxis.range.from != void 0 || changedProps.xAxis.range.to)) {\n                        if (changedProps.xAxis.range.zoom) {\n                            Utils_1.Utils.error('Impossible to change \"range.zoom\" then \"range.from\" or \"range.to\" present');\n                        }\n                        var currentScaleFactor = actualData.width / (axisRange.to - axisRange.from);\n                        patch.range.scroll = axisRange.from - zeroVal;\n                        patch.range.zoom = currentScaleFactor / scaleFactor;\n                        return patch;\n                    }\n                }\n                do {\n                    var from = zeroVal + axisRange.scroll;\n                    var to = from + actualData.width / (scaleFactor * zoom);\n                    var rangeLength = to - from;\n                    var needToRecalculateZoom = false;\n                    var rangeMoreThenMaxValue = axisRange.maxLength && rangeLength > axisRange.maxLength;\n                    var rangeLessThenMinValue = axisRange.minLength && rangeLength < axisRange.minLength;\n                    needToRecalculateZoom = rangeMoreThenMaxValue || rangeLessThenMinValue;\n                    if (needToRecalculateZoom) {\n                        var fixScale = rangeLength > axisRange.maxLength ? rangeLength / axisRange.maxLength : rangeLength / axisRange.minLength;\n                        var zoom = zoom * fixScale;\n                        patch.range.zoom = zoom;\n                    }\n                } while (needToRecalculateZoom);\n                patch.range.from = from;\n                patch.range.to = to;\n                return patch;\n            };\n            ChartState.prototype.recalculateYAxis = function(actualData) {\n                var patch = {\n                    range: {}\n                };\n                var yAxisRange = actualData.yAxis.range;\n                var isInitialize = yAxisRange.scaleFactor == void 0;\n                var trends = this.trendsManager;\n                var trendsEndXVal = trends.getEndXVal();\n                var trendsStartXVal = trends.getStartXVal();\n                var xRange = actualData.xAxis.range;\n                var xFrom = xRange.from, xTo = xRange.to;\n                var xRangeLength = xTo - xFrom;\n                var zeroVal, scaleFactor, scroll, zoom, needToZoom;\n                if (xTo > trendsEndXVal) {\n                    xTo = trendsEndXVal;\n                    xFrom = xTo - xRangeLength;\n                } else if (xFrom < trendsStartXVal) {\n                    xFrom = trendsStartXVal;\n                    xTo = xFrom + xRangeLength;\n                }\n                var maxY = trends.getMaxYVal(xFrom, xTo);\n                var minY = trends.getMinYVal(xFrom, xTo);\n                var trendLastY = trends.getMaxYVal(trendsEndXVal, trendsEndXVal);\n                if (yAxisRange.type == interfaces_1.AXIS_RANGE_TYPE.RELATIVE_END) {\n                    if (trendLastY > maxY) maxY = trendLastY;\n                    if (trendLastY < minY) minY = trendLastY;\n                }\n                if (yAxisRange.isMirrorMode) {\n                    if (yAxisRange.zeroVal == void 0) Utils_1.Utils.error(\"range.zeroVal must be set when range.isMirrorMode\");\n                    var distanceFromZeroValForMaxY = Math.abs(yAxisRange.zeroVal - maxY);\n                    var distanceFromZeroValForMinY = Math.abs(yAxisRange.zeroVal - minY);\n                    var maxDistanceFromZeroVal = Math.max(distanceFromZeroValForMaxY, distanceFromZeroValForMinY);\n                    maxY = yAxisRange.zeroVal + maxDistanceFromZeroVal;\n                    minY = yAxisRange.zeroVal - maxDistanceFromZeroVal;\n                }\n                var margin = yAxisRange.margin;\n                var padding = {\n                    start: yAxisRange.padding.start + margin.start,\n                    end: yAxisRange.padding.end + margin.end\n                };\n                if (padding.end + padding.start >= actualData.height) {\n                    Utils_1.Utils.warn(\"Sum of padding and margins of yAxi more then available chart height. Trends can be rendered incorrectly\");\n                }\n                var rangeLength = maxY - minY;\n                var paddingTopInPercents = padding.end / actualData.height;\n                var paddingBottomInPercents = padding.start / actualData.height;\n                var rangeLengthInPercents = 1 - paddingTopInPercents - paddingBottomInPercents;\n                var visibleRangeLength = rangeLength / rangeLengthInPercents;\n                var fromVal = minY - visibleRangeLength * paddingBottomInPercents;\n                var toVal = maxY + visibleRangeLength * paddingTopInPercents;\n                if (isInitialize) {\n                    zeroVal = yAxisRange.zeroVal != void 0 ? yAxisRange.zeroVal : fromVal;\n                    scaleFactor = actualData.height / (toVal - fromVal);\n                    patch = {\n                        range: {\n                            zeroVal: zeroVal,\n                            scaleFactor: scaleFactor\n                        }\n                    };\n                    needToZoom = true;\n                } else {\n                    scaleFactor = yAxisRange.scaleFactor;\n                    zeroVal = yAxisRange.zeroVal;\n                    var maxScreenY = Math.round(this.getScreenYByValue(maxY));\n                    var minScreenY = Math.round(this.getScreenYByValue(minY));\n                    needToZoom = maxScreenY > actualData.height - margin.end || maxScreenY < actualData.height - padding.end || minScreenY < margin.start || minScreenY > padding.start;\n                }\n                if (!needToZoom) return null;\n                scroll = fromVal - zeroVal;\n                zoom = actualData.height / (toVal - fromVal) / scaleFactor;\n                var currentAxisRange = this.data.yAxis.range;\n                if (currentAxisRange.from !== fromVal) patch.range.from = fromVal;\n                if (currentAxisRange.to !== toVal) patch.range.to = toVal;\n                if (currentAxisRange.scroll !== scroll) patch.range.scroll = scroll;\n                if (currentAxisRange.zoom !== zoom) patch.range.zoom = zoom;\n                return patch;\n            };\n            ChartState.prototype.zoom = function(zoomValue, origin) {\n                var _this = this;\n                if (origin === void 0) {\n                    origin = .5;\n                }\n                var _a = this.data.xAxis.range, zoom = _a.zoom, scroll = _a.scroll, scaleFactor = _a.scaleFactor;\n                var newZoom = zoom * zoomValue;\n                var currentRange = this.data.width / (scaleFactor * zoom);\n                var nextRange = this.data.width / (scaleFactor * newZoom);\n                var newScroll = scroll + (currentRange - nextRange) * origin;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            zoom: newZoom,\n                            scroll: newScroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.data.animations.enabled ? _this.data.animations.zoomSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            ChartState.prototype.zoomToRange = function(range, origin) {\n                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom;\n                var currentRange = this.data.width / (scaleFactor * zoom);\n                return this.zoom(currentRange / range, origin);\n            };\n            ChartState.prototype.scrollToEnd = function() {\n                var _this = this;\n                var state = this.data;\n                var endXVal = this.trendsManager.getEndXVal();\n                var range = state.xAxis.range;\n                var scroll = endXVal - this.pxToValueByXAxis(state.width) + this.pxToValueByXAxis(range.padding.end) - range.zeroVal;\n                this.setState({\n                    xAxis: {\n                        range: {\n                            scroll: scroll\n                        }\n                    }\n                });\n                return new deps_1.Promise(function(resolve) {\n                    var animationTime = _this.data.animations.enabled ? _this.data.animations.scrollSpeed : 0;\n                    setTimeout(resolve, animationTime * 1e3);\n                });\n            };\n            ChartState.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.data.xAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            ChartState.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.data.yAxis.range, scaleFactor = _a.scaleFactor, zoom = _a.zoom, zeroVal = _a.zeroVal;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            ChartState.prototype.getValueOnXAxis = function(x) {\n                return this.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            ChartState.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.data.xAxis.range.scaleFactor * this.data.xAxis.range.zoom;\n            };\n            ChartState.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.data.yAxis.range.scaleFactor * this.data.yAxis.range.zoom;\n            };\n            ChartState.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.data.xAxis.range.scaleFactor / this.data.xAxis.range.zoom;\n            };\n            ChartState.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.data.yAxis.range.scaleFactor / this.data.yAxis.range.zoom;\n            };\n            ChartState.prototype.getValueByScreenX = function(x) {\n                var _a = this.data.xAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByXAxis(x);\n            };\n            ChartState.prototype.getValueByScreenY = function(y) {\n                var _a = this.data.yAxis.range, zeroVal = _a.zeroVal, scroll = _a.scroll;\n                return zeroVal + scroll + this.pxToValueByYAxis(y);\n            };\n            ChartState.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            ChartState.prototype.getScreenYByValue = function(yVal) {\n                var _a = this.data.yAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByYAxis(yVal - zeroVal - scroll);\n            };\n            ChartState.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            ChartState.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            ChartState.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            ChartState.prototype.getScreenLeftVal = function() {\n                return this.getValueByScreenX(0);\n            };\n            ChartState.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.data.width);\n            };\n            ChartState.prototype.getPaddingRight = function() {\n                return this.getValueByScreenX(this.data.width - this.data.xAxis.range.padding.end);\n            };\n            return ChartState;\n        }();\n        exports.ChartState = ChartState;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(3);\n        var EventEmitter = function() {\n            function EventEmitter() {\n                this.ee = new deps_1.EE2();\n            }\n            EventEmitter.prototype.emit = function(eventName) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                (_a = this.ee).emit.apply(_a, [ eventName ].concat(args));\n                var _a;\n            };\n            EventEmitter.prototype.on = function(eventName, callback) {\n                return this.ee.on(eventName, callback);\n            };\n            EventEmitter.prototype.off = function(eventName, callback) {\n                return this.ee.off(eventName, callback);\n            };\n            EventEmitter.prototype.subscribe = function(eventName, callback) {\n                var _this = this;\n                this.on(eventName, callback);\n                return function() {\n                    return _this.off(eventName, callback);\n                };\n            };\n            EventEmitter.prototype.setMaxListeners = function(listenersCount) {\n                this.ee.setMaxListeners(listenersCount);\n            };\n            EventEmitter.prototype.removeAllListeners = function(eventName) {\n                this.ee.removeAllListeners(eventName);\n            };\n            return EventEmitter;\n        }();\n        exports.EventEmitter = EventEmitter;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var deps_1 = __webpack_require__(3);\n        function deepmerge(target, src, mergeArrays) {\n            if (mergeArrays === void 0) {\n                mergeArrays = true;\n            }\n            var array = Array.isArray(src);\n            var dst = array && [] || {};\n            if (array) {\n                target = target || [];\n                if (mergeArrays) {\n                    dst = dst.concat(target);\n                }\n                src.forEach(function(e, i) {\n                    if (typeof dst[i] === \"undefined\") {\n                        dst[i] = e;\n                    } else if (typeof e === \"object\") {\n                        dst[i] = deepmerge(target[i], e, mergeArrays);\n                    } else {\n                        if (target.indexOf(e) === -1) {\n                            dst.push(e);\n                        }\n                    }\n                });\n            } else {\n                if (target && typeof target === \"object\") {\n                    Object.keys(target).forEach(function(key) {\n                        dst[key] = target[key];\n                    });\n                }\n                Object.keys(src).forEach(function(key) {\n                    if (typeof src[key] !== \"object\" || !src[key]) {\n                        dst[key] = src[key];\n                    } else {\n                        if (!target[key]) {\n                            dst[key] = src[key];\n                        } else {\n                            dst[key] = deepmerge(target[key], src[key], mergeArrays);\n                        }\n                    }\n                });\n            }\n            return dst;\n        }\n        var Utils = function() {\n            function Utils() {}\n            Utils.deepMerge = function(obj1, obj2, mergeArrays) {\n                return deepmerge(obj1, obj2, mergeArrays);\n            };\n            Utils.deepCopy = function(obj) {\n                return JSON.parse(JSON.stringify(obj));\n            };\n            Utils.toFixed = function(num, digitsCount) {\n                var maxDigits = 15;\n                var result = \"\";\n                var intVal = Math.floor(num);\n                var intStr = intVal.toString();\n                var lengthDiff = digitsCount - intStr.length;\n                if (lengthDiff > 0) {\n                    result = \"0\".repeat(lengthDiff) + intStr;\n                } else {\n                    result = intStr;\n                }\n                var afterPointDigitsCount = maxDigits - intStr.length;\n                var afterPointStr = num.toString().split(\".\")[1];\n                if (afterPointStr) {\n                    result += \".\" + afterPointStr.substr(0, afterPointDigitsCount);\n                }\n                return result;\n            };\n            Utils.bindEvent = function() {};\n            Utils.createTexture = function(width, height, fn) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.width = width;\n                canvas.height = height;\n                var ctx = canvas.getContext(\"2d\");\n                fn(ctx);\n                var texture = new THREE.Texture(canvas);\n                texture.needsUpdate = true;\n                return texture;\n            };\n            Utils.createPixelPerfectTexture = function(width, height, fn) {\n                var texture = this.createTexture(width, height, fn);\n                texture.minFilter = THREE.NearestFilter;\n                return texture;\n            };\n            Utils.error = function(msg) {\n                console.error(\"Chart error: \" + msg);\n                throw \"Chart: \" + msg;\n            };\n            Utils.warn = function(msg) {\n                console.warn(\"Chart warning: \" + msg);\n            };\n            Utils.getUid = function() {\n                return this.currentId++;\n            };\n            Utils.getDistance = function(num1, num2) {\n                return Math.max(num1, num2) - Math.min(num1, num2);\n            };\n            Utils.binarySearchClosestInd = function(arr, num, key) {\n                var mid;\n                var lo = 0;\n                var hi = arr.length - 1;\n                while (hi - lo > 1) {\n                    mid = Math.floor((lo + hi) / 2);\n                    if (arr[mid][key] < num) {\n                        lo = mid;\n                    } else {\n                        hi = mid;\n                    }\n                }\n                if (num - arr[lo][key] <= arr[hi][key] - num) {\n                    return lo;\n                }\n                return hi;\n            };\n            Utils.binarySearchClosest = function(arr, num, key) {\n                var ind = this.binarySearchClosestInd(arr, num, key);\n                return arr[ind];\n            };\n            Utils.rectsIntersect = function(r1, r2) {\n                var left1 = r1[0], top1 = r1[1], width1 = r1[2], height1 = r1[3];\n                var left2 = r2[0], top2 = r2[1], width2 = r2[2], height2 = r2[3];\n                var _a = [ left1 + width1, left2 + width2, top1 + height1, top2 + height2 ], right1 = _a[0], right2 = _a[1], bottom1 = _a[2], bottom2 = _a[3];\n                return !(left2 > right1 || right2 < left1 || top2 > bottom1 || bottom2 < top1);\n            };\n            /**!\r\n\t     * @preserve $.parseColor\r\n\t     * Copyright 2011 THEtheChad Elliott\r\n\t     * Released under the MIT and GPL licenses.\r\n\t     */\n            Utils.parseColor = function(color) {\n                var cache, p = parseInt, color = color.replace(/\\s\\s*/g, \"\");\n                if (cache = /^#([\\da-fA-F]{2})([\\da-fA-F]{2})([\\da-fA-F]{2})/.exec(color)) cache = [ p(cache[1], 16), p(cache[2], 16), p(cache[3], 16) ]; else if (cache = /^#([\\da-fA-F])([\\da-fA-F])([\\da-fA-F])/.exec(color)) cache = [ p(cache[1], 16) * 17, p(cache[2], 16) * 17, p(cache[3], 16) * 17 ]; else if (cache = /^rgba\\(([\\d]+),([\\d]+),([\\d]+),([\\d]+|[\\d]*.[\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3], +cache[4] ]; else if (cache = /^rgb\\(([\\d]+),([\\d]+),([\\d]+)\\)/.exec(color)) cache = [ +cache[1], +cache[2], +cache[3] ]; else throw Error(color + \" is not supported by $.parseColor\");\n                isNaN(cache[3]) && (cache[3] = 1);\n                return cache;\n            };\n            Utils.getHexColor = function(str) {\n                var rgb = this.parseColor(str);\n                return (rgb[0] << 8 * 2) + (rgb[1] << 8) + rgb[2];\n            };\n            Utils.throttle = function(func, ms) {\n                var isThrottled = false, savedArgs, savedThis;\n                function wrapper() {\n                    if (isThrottled) {\n                        savedArgs = arguments;\n                        savedThis = this;\n                        return;\n                    }\n                    func.apply(this, arguments);\n                    isThrottled = true;\n                    setTimeout(function() {\n                        isThrottled = false;\n                        if (savedArgs) {\n                            wrapper.apply(savedThis, savedArgs);\n                            savedArgs = savedThis = null;\n                        }\n                    }, ms);\n                }\n                return wrapper;\n            };\n            Utils.msToTimeString = function(timestamp) {\n                var h = Math.floor(timestamp / 36e4);\n                var m = Math.floor(timestamp / 6e4);\n                var s = Math.floor(timestamp / 1e3);\n                return h + \":\" + m + \":\" + s;\n            };\n            Utils.getRandomItem = function(arr) {\n                var ind = Math.floor(Math.random() * arr.length);\n                return arr[ind];\n            };\n            Utils.copyProps = function(srcObject, dstObject, props, excludeProps) {\n                if (excludeProps === void 0) {\n                    excludeProps = [];\n                }\n                for (var key in props) {\n                    if (excludeProps.indexOf(key) !== -1) continue;\n                    if (srcObject[key] == void 0) continue;\n                    if (deps_1.isPlainObject(props[key]) && dstObject[key] !== void 0) {\n                        this.copyProps(srcObject[key], dstObject[key], props[key]);\n                    } else {\n                        dstObject[key] = this.deepCopy(srcObject[key]);\n                    }\n                }\n            };\n            Utils.currentId = 1;\n            return Utils;\n        }();\n        exports.Utils = Utils;\n    }, function(module, exports) {\n        \"use strict\";\n        var ChartWidget = function() {\n            function ChartWidget(chartState) {\n                this.unsubscribers = [];\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            ChartWidget.prototype.bindEvents = function() {};\n            ChartWidget.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartWidget.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartWidget.getDefaultOptions = function() {\n                return {\n                    enabled: true\n                };\n            };\n            ChartWidget.widgetName = \"\";\n            return ChartWidget;\n        }();\n        exports.ChartWidget = ChartWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Trend_1 = __webpack_require__(19);\n        var EventEmmiter_1 = __webpack_require__(15);\n        var EVENTS = {\n            SEGMENTS_REBUILDED: \"segmentsRebuilded\"\n        };\n        var TrendsManager = function() {\n            function TrendsManager(state, initialState) {\n                this.trends = {};\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.chartState = state;\n                var trendsCalculatedOptions = {};\n                for (var trendName in initialState.trends) {\n                    var trend = this.createTrend(state, trendName, initialState);\n                    trendsCalculatedOptions[trendName] = trend.getCalculatedOptions();\n                }\n                this.calculatedOptions = trendsCalculatedOptions;\n                this.bindEvents();\n            }\n            TrendsManager.prototype.getTrend = function(trendName) {\n                return this.trends[trendName];\n            };\n            TrendsManager.prototype.getEnabledTrends = function() {\n                var enabledTrends = [];\n                var allTrends = this.trends;\n                for (var trendName in allTrends) {\n                    var trend = allTrends[trendName];\n                    trend.getOptions().enabled && enabledTrends.push(trend);\n                }\n                return enabledTrends;\n            };\n            TrendsManager.prototype.getStartXVal = function() {\n                var trends = this.getEnabledTrends();\n                return trends[0].getData()[0].xVal;\n            };\n            TrendsManager.prototype.getEndXVal = function() {\n                var trends = this.getEnabledTrends();\n                var firstTrendData = trends[0].getData();\n                return firstTrendData[firstTrendData.length - 1].xVal;\n            };\n            TrendsManager.prototype.getExtremumYVal = function(extremumIsMax, fromX, toX) {\n                var trends = this.getEnabledTrends();\n                var compareFn;\n                var result;\n                if (extremumIsMax) {\n                    result = -Infinity;\n                    compareFn = Math.max;\n                } else {\n                    result = Infinity;\n                    compareFn = Math.min;\n                }\n                for (var _i = 0, trends_1 = trends; _i < trends_1.length; _i++) {\n                    var trend = trends_1[_i];\n                    var trendData = trend.getData(fromX, toX);\n                    var trendYValues = trendData.map(function(dataItem) {\n                        return dataItem.yVal;\n                    });\n                    result = compareFn.apply(void 0, [ result ].concat(trendYValues));\n                }\n                if (result == Infinity || result == -Infinity) result = NaN;\n                return result;\n            };\n            TrendsManager.prototype.getMaxYVal = function(fromX, toX) {\n                return this.getExtremumYVal(true, fromX, toX);\n            };\n            TrendsManager.prototype.getMinYVal = function(fromX, toX) {\n                return this.getExtremumYVal(false, fromX, toX);\n            };\n            TrendsManager.prototype.onSegmentsRebuilded = function(cb) {\n                return this.ee.subscribe(EVENTS.SEGMENTS_REBUILDED, cb);\n            };\n            TrendsManager.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateAppliedHandler();\n                });\n            };\n            TrendsManager.prototype.onInitialStateAppliedHandler = function() {\n                var _this = this;\n                var _loop_1 = function(trendName) {\n                    this_1.trends[trendName].segments.onRebuild(function() {\n                        return _this.ee.emit(EVENTS.SEGMENTS_REBUILDED, trendName);\n                    });\n                };\n                var this_1 = this;\n                for (var trendName in this.trends) {\n                    _loop_1(trendName);\n                }\n            };\n            TrendsManager.prototype.createTrend = function(state, trendName, initialState) {\n                var trend = new Trend_1.Trend(state, trendName, initialState);\n                this.trends[trendName] = trend;\n                return trend;\n            };\n            return TrendsManager;\n        }();\n        exports.TrendsManager = TrendsManager;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var TrendSegments_1 = __webpack_require__(20);\n        var EventEmmiter_1 = __webpack_require__(15);\n        var deps_1 = __webpack_require__(3);\n        var EVENTS = {\n            CHANGE: \"Change\",\n            PREPEND_REQUEST: \"prependRequest\"\n        };\n        (function(TREND_TYPE) {\n            TREND_TYPE[TREND_TYPE[\"LINE\"] = 0] = \"LINE\";\n            TREND_TYPE[TREND_TYPE[\"CANDLE\"] = 1] = \"CANDLE\";\n        })(exports.TREND_TYPE || (exports.TREND_TYPE = {}));\n        var TREND_TYPE = exports.TREND_TYPE;\n        var DEFAULT_OPTIONS = {\n            enabled: true,\n            type: TREND_TYPE.LINE,\n            data: [],\n            maxSegmentLength: 1e3,\n            lineWidth: 2,\n            lineColor: 16777215,\n            hasGradient: true,\n            hasBeacon: false,\n            settingsForTypes: {\n                CANDLE: {\n                    minSegmentLengthInPx: 20,\n                    maxSegmentLengthInPx: 40\n                },\n                LINE: {\n                    minSegmentLengthInPx: 2,\n                    maxSegmentLengthInPx: 10\n                }\n            }\n        };\n        var Trend = function() {\n            function Trend(chartState, trendName, initialState) {\n                this.minXVal = Infinity;\n                this.minYVal = Infinity;\n                this.maxXVal = -Infinity;\n                this.maxYVal = -Infinity;\n                var options = initialState.trends[trendName];\n                this.name = trendName;\n                this.chartState = chartState;\n                this.calculatedOptions = Utils_1.Utils.deepMerge(DEFAULT_OPTIONS, options);\n                this.calculatedOptions.name = trendName;\n                if (options.dataset) this.calculatedOptions.data = Trend.prepareData(options.dataset);\n                this.calculatedOptions.dataset = [];\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvents();\n            }\n            Trend.prototype.onInitialStateApplied = function() {\n                this.segments = new TrendSegments_1.TrendSegments(this.chartState, this);\n            };\n            Trend.prototype.bindEvents = function() {\n                var _this = this;\n                var chartState = this.chartState;\n                chartState.onInitialStateApplied(function() {\n                    return _this.onInitialStateApplied();\n                });\n                chartState.onScrollStop(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onZoom(function() {\n                    return _this.checkForPrependRequest();\n                });\n                chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    return _this.ee.emit(EVENTS.CHANGE, changedOptions, newData);\n                });\n                chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            Trend.prototype.getCalculatedOptions = function() {\n                return this.calculatedOptions;\n            };\n            Trend.prototype.appendData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData());\n                var updatedTrendData = options.data.concat(newData);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.prependData = function(rawData) {\n                var options = this.getOptions();\n                var newData = Trend.prepareData(rawData, this.getData(), true);\n                var updatedTrendData = newData.concat(options.data);\n                this.changeData(updatedTrendData, newData);\n            };\n            Trend.prototype.changeData = function(allData, newData) {\n                for (var _i = 0, newData_1 = newData; _i < newData_1.length; _i++) {\n                    var item = newData_1[_i];\n                    if (item.xVal < this.minXVal) this.minXVal = item.xVal;\n                    if (item.xVal > this.maxXVal) this.maxXVal = item.xVal;\n                    if (item.yVal < this.minYVal) this.minYVal = item.yVal;\n                    if (item.yVal > this.maxYVal) this.maxYVal = item.yVal;\n                }\n                var options = this.getOptions();\n                var statePatch = {\n                    trends: (_a = {}, _a[options.name] = {\n                        data: allData\n                    }, _a)\n                };\n                this.chartState.setState(statePatch, newData);\n                var _a;\n            };\n            Trend.prototype.getData = function(fromX, toX) {\n                var data = this.getOptions().data;\n                if (fromX == void 0 && toX == void 0) return data;\n                fromX = fromX !== void 0 ? fromX : data[0].xVal;\n                toX = toX !== void 0 ? toX : data[data.length].xVal;\n                var filteredData = [];\n                for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\n                    var item = data_1[_i];\n                    if (item.xVal < fromX) continue;\n                    if (item.xVal > toX) break;\n                    filteredData.push(item);\n                }\n                return filteredData;\n            };\n            Trend.prototype.getFirstItem = function() {\n                return this.getOptions().data[0];\n            };\n            Trend.prototype.getLastItem = function() {\n                var data = this.getOptions().data;\n                return data[data.length - 1];\n            };\n            Trend.prototype.getOptions = function() {\n                return this.chartState.data.trends[this.name];\n            };\n            Trend.prototype.setOptions = function(options) {\n                this.chartState.setState({\n                    trends: (_a = {}, _a[this.name] = options, _a)\n                });\n                var _a;\n            };\n            Trend.prototype.onPrependRequest = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.PREPEND_REQUEST, cb);\n                return function() {\n                    _this.ee.off(EVENTS.PREPEND_REQUEST, cb);\n                };\n            };\n            Trend.prototype.onChange = function(cb) {\n                var _this = this;\n                this.ee.on(EVENTS.CHANGE, cb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, cb);\n                };\n            };\n            Trend.prototype.onDataChange = function(cb) {\n                var _this = this;\n                var onChangeCb = function(changedOptions, newData) {\n                    if (newData) cb(newData);\n                };\n                this.ee.on(EVENTS.CHANGE, onChangeCb);\n                return function() {\n                    _this.ee.off(EVENTS.CHANGE, onChangeCb);\n                };\n            };\n            Trend.prototype.checkForPrependRequest = function() {\n                var _this = this;\n                if (this.prependRequest) return;\n                var chartState = this.chartState;\n                var minXVal = chartState.data.computedData.trends.minXVal;\n                var minScreenX = chartState.getScreenXByValue(minXVal);\n                var needToRequest = minScreenX > 0;\n                var _a = chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                var requestedDataLength = to - from;\n                if (!needToRequest) return;\n                this.prependRequest = new deps_1.Promise(function(resolve, reject) {\n                    _this.ee.emit(EVENTS.PREPEND_REQUEST, requestedDataLength, resolve, reject);\n                });\n                this.prependRequest.then(function(newData) {\n                    _this.prependData(newData);\n                    _this.prependRequest = null;\n                }, function() {\n                    _this.prependRequest = null;\n                });\n            };\n            Trend.prepareData = function(newData, currentData, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var data = [];\n                if (typeof newData[0] == \"number\") {\n                    currentData = currentData || [];\n                    var initialItem = void 0;\n                    var xVal = void 0;\n                    if (isPrepend) {\n                        initialItem = currentData[0];\n                        xVal = initialItem.xVal - newData.length;\n                    } else {\n                        initialItem = currentData[currentData.length - 1];\n                        xVal = initialItem ? initialItem.xVal + 1 : 0;\n                    }\n                    for (var _i = 0, _a = newData; _i < _a.length; _i++) {\n                        var yVal = _a[_i];\n                        data.push({\n                            xVal: xVal,\n                            yVal: yVal,\n                            id: Utils_1.Utils.getUid()\n                        });\n                        xVal++;\n                    }\n                } else {\n                    data = newData;\n                }\n                return data;\n            };\n            return Trend;\n        }();\n        exports.Trend = Trend;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var EventEmmiter_1 = __webpack_require__(15);\n        var Vector3 = THREE.Vector3;\n        var Trend_1 = __webpack_require__(19);\n        var Utils_1 = __webpack_require__(16);\n        var MAX_ANIMATED_SEGMENTS = 100;\n        var EVENTS = {\n            REBUILD: \"rebuild\",\n            DISLPAYED_RANGE_CHANGED: \"displayedRangeChanged\",\n            ANIMATION_FRAME: \"animationFrame\"\n        };\n        var TrendSegments = function() {\n            function TrendSegments(chartState, trend) {\n                this.segmentsById = {};\n                this.segments = [];\n                this.animatedSegmentsIds = [];\n                this.segmentsLength = 0;\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForPrepend = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.trend = trend;\n                this.maxSegmentLength = trend.getOptions().maxSegmentLength;\n                this.tryToRebuildSegments();\n                this.bindEvents();\n            }\n            TrendSegments.prototype.bindEvents = function() {\n                var _this = this;\n                this.trend.onChange(function(changedOptions, newData) {\n                    return _this.onTrendChangeHandler(changedOptions, newData);\n                });\n                this.chartState.onZoom(function() {\n                    return _this.onZoomHandler();\n                });\n                this.chartState.onScroll(function() {\n                    return _this.recalculateDisplayedRange();\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            TrendSegments.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.appendAnimation && this.appendAnimation.kill();\n                this.prependAnimation && this.prependAnimation.kill();\n            };\n            TrendSegments.prototype.onZoomHandler = function() {\n                var segmentsRebuilded = this.tryToRebuildSegments();\n                if (!segmentsRebuilded) {\n                    this.recalculateDisplayedRange();\n                }\n            };\n            TrendSegments.prototype.onTrendChangeHandler = function(changedOptions, newData) {\n                var needToRebuildSegments = changedOptions.type != void 0 || changedOptions.maxSegmentLength != void 0;\n                if (needToRebuildSegments) {\n                    this.tryToRebuildSegments(true);\n                    return;\n                }\n                if (!newData) return;\n                var data = this.trend.getData();\n                var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                isAppend ? this.appendData(newData) : this.prependData(newData);\n                this.recalculateDisplayedRange();\n            };\n            TrendSegments.prototype.getEndSegment = function() {\n                return this.segmentsById[this.endSegmentId];\n            };\n            TrendSegments.prototype.getStartSegment = function() {\n                return this.segmentsById[this.startSegmentId];\n            };\n            TrendSegments.prototype.tryToRebuildSegments = function(force) {\n                if (force === void 0) {\n                    force = false;\n                }\n                var options = this.trend.getOptions();\n                var trendTypeName = Trend_1.TREND_TYPE[options.type];\n                var trendTypesSettings = options.settingsForTypes;\n                var trendTypeSettings = trendTypesSettings[trendTypeName];\n                var minSegmentLengthInPx = trendTypeSettings.minSegmentLengthInPx, maxSegmentLengthInPx = trendTypeSettings.maxSegmentLengthInPx;\n                var needToRebuild = this.segments.length === 0 || force;\n                var segmentLength = this.maxSegmentLength;\n                var currentSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(segmentLength).toFixed(2));\n                var currentMaxSegmentLengthInPx = Number(this.chartState.valueToPxByXAxis(this.maxSegmentLength).toFixed(2));\n                if (currentSegmentLengthInPx < minSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = Math.ceil(this.chartState.pxToValueByXAxis(maxSegmentLengthInPx));\n                } else if (currentMaxSegmentLengthInPx > maxSegmentLengthInPx) {\n                    needToRebuild = true;\n                    segmentLength = this.chartState.pxToValueByXAxis(minSegmentLengthInPx);\n                }\n                if (!needToRebuild) return false;\n                this.maxSegmentLength = segmentLength;\n                this.segmentsById = {};\n                this.segments = [];\n                this.nextEmptyId = 0;\n                this.startSegmentId = 0;\n                this.endSegmentId = 0;\n                this.segmentsLength = 0;\n                this.stopAllAnimations();\n                this.appendData(null, true);\n                this.recalculateDisplayedRange(true);\n                this.ee.emit(EVENTS.REBUILD);\n            };\n            TrendSegments.prototype.stopAllAnimations = function() {\n                this.animatedSegmentsIds = [];\n                this.animatedSegmentsForAppend = [];\n                this.animatedSegmentsForAppend = [];\n                if (this.prependAnimation) this.prependAnimation.kill();\n                if (this.appendAnimation) this.appendAnimation.kill();\n            };\n            TrendSegments.prototype.recalculateDisplayedRange = function(segmentsAreRebuilded) {\n                if (segmentsAreRebuilded === void 0) {\n                    segmentsAreRebuilded = false;\n                }\n                var _a = this.chartState.data.xAxis.range, from = _a.from, to = _a.to;\n                var _b = this, firstDisplayedSegment = _b.firstDisplayedSegment, lastDisplayedSegment = _b.lastDisplayedSegment;\n                var displayedRange = to - from;\n                this.firstDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, from - displayedRange, \"startXVal\");\n                this.lastDisplayedSegment = Utils_1.Utils.binarySearchClosest(this.segments, to + displayedRange, \"endXVal\");\n                if (segmentsAreRebuilded) return;\n                var displayedRangeChanged = firstDisplayedSegment.id !== this.firstDisplayedSegment.id || lastDisplayedSegment.id !== this.lastDisplayedSegment.id;\n                if (displayedRangeChanged) this.ee.emit(EVENTS.DISLPAYED_RANGE_CHANGED);\n            };\n            TrendSegments.prototype.getSegmentsForXValues = function(values) {\n                var valueInd = 0;\n                var value = values[valueInd];\n                var lastValueInd = values.length - 1;\n                var results = [];\n                var segment = this.getStartSegment();\n                if (!segment.hasValue) return [];\n                while (segment) {\n                    while (value < segment.startXVal) {\n                        results.push(void 0);\n                        value = values[++valueInd];\n                    }\n                    while (value > segment.endXVal) {\n                        segment = segment.getNext();\n                        if (!segment) break;\n                    }\n                    var valueInPoint = segment.startXVal == value || segment.endXVal == value || segment.startXVal < value && segment.endXVal > value;\n                    if (valueInPoint) {\n                        results.push(segment);\n                        value = values[++valueInd];\n                    }\n                    if (valueInd > lastValueInd) break;\n                }\n                return results;\n            };\n            TrendSegments.prototype.onAnimationFrame = function(cb) {\n                return this.ee.subscribe(EVENTS.ANIMATION_FRAME, cb);\n            };\n            TrendSegments.prototype.onRebuild = function(cb) {\n                return this.ee.subscribe(EVENTS.REBUILD, cb);\n            };\n            TrendSegments.prototype.onDisplayedRangeChanged = function(cb) {\n                return this.ee.subscribe(EVENTS.DISLPAYED_RANGE_CHANGED, cb);\n            };\n            TrendSegments.prototype.allocateNextSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var prevSegment = this.segmentsById[this.endSegmentId];\n                if (prevSegment && prevSegment.hasValue) {\n                    prevSegment.nextId = id;\n                    segment.prevId = prevSegment.id;\n                }\n                this.endSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.push(segment);\n                return segment;\n            };\n            TrendSegments.prototype.allocatePrevSegment = function() {\n                var id = this.nextEmptyId++;\n                var segment = new TrendSegment(this, id);\n                var nextSegment = this.segmentsById[this.startSegmentId];\n                if (nextSegment && nextSegment.hasValue) {\n                    nextSegment.prevId = id;\n                    segment.nextId = nextSegment.id;\n                }\n                this.startSegmentId = id;\n                this.segmentsLength++;\n                this.segmentsById[id] = segment;\n                this.segments.unshift(segment);\n                return segment;\n            };\n            TrendSegments.prototype.appendData = function(newData, needRebuildSegments) {\n                if (needRebuildSegments === void 0) {\n                    needRebuildSegments = false;\n                }\n                var trendData = this.trend.getData();\n                if (needRebuildSegments) {\n                    newData = trendData;\n                    this.animatedSegmentsForAppend = [];\n                }\n                var startItemInd = trendData.length - newData.length;\n                var segment = this.getEndSegment() || this.allocateNextSegment();\n                var initialSegment = segment.hasValue ? segment : null;\n                var initialAnimationState = segment.createAnimationState();\n                var itemInd = 0;\n                while (itemInd < newData.length) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.appendItem(item);\n                    var isLastItem = itemInd == newData.length - 1;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd++;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForAppend.length > 0) {\n                            segment.initialAnimationState.startXVal = initialAnimationState.endXVal;\n                            segment.initialAnimationState.startYVal = initialAnimationState.endYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForAppend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocateNextSegment();\n                    var prevItem = trendData[startItemInd + itemInd - 1];\n                    segment.appendItem(prevItem);\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (needRebuildSegments) {\n                    for (var _i = 0, _a = this.animatedSegmentsForAppend; _i < _a.length; _i++) {\n                        var segmentId = _a[_i];\n                        var segment_1 = this.segmentsById[segmentId];\n                        segment_1.currentAnimationState = segment_1.createAnimationState();\n                    }\n                    this.animatedSegmentsForAppend = [];\n                    return;\n                }\n                if (this.animatedSegmentsForAppend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time);\n            };\n            TrendSegments.prototype.prependData = function(newData) {\n                var trendData = this.trend.getData();\n                var segment = this.getStartSegment() || this.segmentsById[0];\n                var initialSegment = segment.hasValue ? segment : null;\n                var itemInd = newData.length - 1;\n                var initialAnimationState = segment.createAnimationState();\n                while (itemInd >= 0) {\n                    var item = newData[itemInd];\n                    var itemIsInserted = segment.prependItem(item);\n                    var isLastItem = itemInd == 0;\n                    if (itemIsInserted) {\n                        if (!isLastItem) itemInd--;\n                    } else {\n                        if (!segment.isCompleted) segment.complete();\n                    }\n                    if (isLastItem && itemIsInserted) {\n                        segment.recalculateItems();\n                    }\n                    var segmentIsReadyForAnimate = segment.isCompleted || isLastItem && itemIsInserted;\n                    if (segmentIsReadyForAnimate) {\n                        var id = segment.id;\n                        if (!initialSegment) initialSegment = segment;\n                        if (!initialAnimationState) initialAnimationState = initialSegment.createAnimationState();\n                        segment.initialAnimationState = Utils_1.Utils.deepMerge({}, initialAnimationState);\n                        if (this.animatedSegmentsForPrepend.length > 0) {\n                            segment.initialAnimationState.endXVal = initialAnimationState.startXVal;\n                            segment.initialAnimationState.endYVal = initialAnimationState.startYVal;\n                        }\n                        segment.targetAnimationState = segment.createAnimationState();\n                        this.animatedSegmentsForPrepend.push(id);\n                    }\n                    if (isLastItem && itemIsInserted) break;\n                    if (!segment.isCompleted) continue;\n                    segment = this.allocatePrevSegment();\n                    var nextItem = trendData[itemInd + 1];\n                    segment.prependItem(nextItem);\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var time = animationsOptions.enabled ? animationsOptions.trendChangeSpeed : 0;\n                if (this.animatedSegmentsForPrepend.length > MAX_ANIMATED_SEGMENTS) time = 0;\n                this.animate(time, true);\n            };\n            TrendSegments.prototype.animate = function(time, isPrepend) {\n                var _this = this;\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                var animation = isPrepend ? this.prependAnimation : this.appendAnimation;\n                if (animation && animation.isActive() || time == 0) {\n                    if (animation) animation.kill();\n                    this.onAnimationFrameHandler(1, isPrepend);\n                    animatedSegmentsIds.length = 0;\n                    return;\n                }\n                var animationsOptions = this.chartState.data.animations;\n                var ease = animationsOptions.trendChangeEase;\n                var objectToAnimate = {\n                    animationValue: 0\n                };\n                animation = TweenLite.to(objectToAnimate, time, {\n                    animationValue: 1,\n                    ease: ease\n                });\n                animation.eventCallback(\"onUpdate\", function() {\n                    return _this.onAnimationFrameHandler(objectToAnimate.animationValue, isPrepend);\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animatedSegmentsIds.length = 0;\n                    _this.appendAnimation = null;\n                });\n                if (isPrepend) {\n                    this.prependAnimation = animation;\n                } else {\n                    this.appendAnimation = animation;\n                }\n            };\n            TrendSegments.prototype.onAnimationFrameHandler = function(coefficient, isPrepend) {\n                if (isPrepend === void 0) {\n                    isPrepend = false;\n                }\n                var animatedSegmentsIds = isPrepend ? this.animatedSegmentsForPrepend : this.animatedSegmentsForAppend;\n                for (var _i = 0, animatedSegmentsIds_1 = animatedSegmentsIds; _i < animatedSegmentsIds_1.length; _i++) {\n                    var segmentId = animatedSegmentsIds_1[_i];\n                    var segment = this.segmentsById[segmentId];\n                    for (var key in segment.targetAnimationState) {\n                        var targetValue = segment.targetAnimationState[key];\n                        var initialValue = segment.initialAnimationState[key];\n                        var currentValue = initialValue + (targetValue - initialValue) * coefficient;\n                        segment.currentAnimationState[key] = currentValue;\n                    }\n                }\n                this.animatedSegmentsIds = this.animatedSegmentsForAppend.concat(this.animatedSegmentsForPrepend);\n                this.ee.emit(EVENTS.ANIMATION_FRAME, this);\n            };\n            return TrendSegments;\n        }();\n        exports.TrendSegments = TrendSegments;\n        var TrendSegment = function() {\n            function TrendSegment(trendPoints, id) {\n                this.isCompleted = false;\n                this.items = [];\n                this.initialAnimationState = {};\n                this.targetAnimationState = {};\n                this.currentAnimationState = {};\n                this.trendSegments = trendPoints;\n                this.id = id;\n                this.maxLength = trendPoints.maxSegmentLength;\n            }\n            TrendSegment.prototype.createAnimationState = function() {\n                var _a = this, xVal = _a.xVal, yVal = _a.yVal, startXVal = _a.startXVal, startYVal = _a.startYVal, endXVal = _a.endXVal, endYVal = _a.endYVal, maxYVal = _a.maxYVal, minYVal = _a.minYVal, maxLength = _a.maxLength;\n                return {\n                    xVal: xVal,\n                    yVal: yVal,\n                    startXVal: startXVal,\n                    startYVal: startYVal,\n                    endXVal: endXVal,\n                    endYVal: endYVal,\n                    maxYVal: maxYVal,\n                    minYVal: minYVal,\n                    maxLength: maxLength\n                };\n            };\n            TrendSegment.prototype.appendItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.push(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var startXVal = items[0].xVal;\n                if (item.xVal - startXVal > this.maxLength) return false;\n                items.push(item);\n                return true;\n            };\n            TrendSegment.prototype.prependItem = function(item) {\n                if (this.isCompleted) return false;\n                var items = this.items;\n                if (items.length < 2) {\n                    this.items.unshift(item);\n                    this.hasValue = true;\n                    return true;\n                }\n                var endXVal = items[items.length - 1].xVal;\n                if (endXVal - item.xVal > this.maxLength) return false;\n                items.unshift(item);\n                return true;\n            };\n            TrendSegment.prototype.complete = function() {\n                this.isCompleted = true;\n                this.recalculateItems();\n                this.items = [];\n            };\n            TrendSegment.prototype.recalculateItems = function() {\n                var items = this.items;\n                var itemsLength = items.length;\n                if (itemsLength === 0) Utils_1.Utils.error(\"Unable to create TrendSegment without TrendItems\");\n                var endItem = items[itemsLength - 1];\n                var endXVal = endItem.xVal, endYVal = endItem.yVal;\n                var startXVal, startYVal;\n                var startItem = items[0];\n                startXVal = startItem.xVal;\n                startYVal = startItem.yVal;\n                var minX = Math.min(startXVal, endXVal);\n                var maxX = Math.max(startXVal, endXVal);\n                var middleXVal = minX + (maxX - minX) / 2;\n                var minY = Math.min(startYVal, endYVal);\n                var maxY = Math.max(startYVal, endYVal);\n                var middleYVal = minY + (maxY - minY) / 2;\n                var yVals = items.map(function(item) {\n                    return item.yVal;\n                });\n                this.startXVal = startXVal;\n                this.startYVal = startYVal;\n                this.endXVal = endXVal;\n                this.endYVal = endYVal;\n                this.xVal = middleXVal;\n                this.yVal = middleYVal;\n                this.maxYVal = Math.max.apply(Math, yVals);\n                this.minYVal = Math.min.apply(Math, yVals);\n                if (!this.currentAnimationState) this.currentAnimationState = this.createAnimationState();\n            };\n            TrendSegment.prototype.getNext = function() {\n                var nextPoint = this.trendSegments.segmentsById[this.nextId];\n                return nextPoint && nextPoint.hasValue ? nextPoint : null;\n            };\n            TrendSegment.prototype.getPrev = function() {\n                var prevPoint = this.trendSegments.segmentsById[this.prevId];\n                return prevPoint && prevPoint.hasValue ? prevPoint : null;\n            };\n            TrendSegment.prototype.getFrameVal = function() {\n                var _a = this.createAnimationState(), xVal = _a.xVal, yVal = _a.yVal;\n                return new Vector3(xVal, yVal, 0);\n            };\n            TrendSegment.prototype.getFramePoint = function() {\n                var frameVal = this.getFrameVal();\n                return this.trendSegments.chartState.screen.getPointOnChart(frameVal.x, frameVal.y);\n            };\n            return TrendSegment;\n        }();\n        exports.TrendSegment = TrendSegment;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Vector3 = THREE.Vector3;\n        var EventEmmiter_1 = __webpack_require__(15);\n        var Screen = function() {\n            function Screen(chartState) {\n                this.options = {\n                    scrollXVal: 0,\n                    scrollX: 0,\n                    scrollYVal: 0,\n                    scrollY: 0,\n                    zoomX: 1,\n                    zoomY: 1\n                };\n                this.currentScrollX = {\n                    x: 0\n                };\n                this.currentScrollY = {\n                    y: 0\n                };\n                this.currentZoomX = {\n                    val: 1\n                };\n                this.currentZoomY = {\n                    val: 1\n                };\n                this.chartState = chartState;\n                var _a = chartState.data, w = _a.width, h = _a.height;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.transform({\n                    scrollY: this.valueToPxByYAxis(this.chartState.data.yAxis.range.scroll),\n                    zoomY: 1\n                });\n                this.bindEvents();\n            }\n            Screen.prototype.getCameraSettings = function() {\n                var _a = this.chartState.data, w = _a.width, h = _a.height;\n                var FOV = 75;\n                var vFOV = FOV * (Math.PI / 180);\n                return {\n                    FOV: FOV,\n                    aspect: w / h,\n                    near: .1,\n                    far: 5e3,\n                    z: h / (2 * Math.tan(vFOV / 2)),\n                    x: w / 2,\n                    y: h / 2\n                };\n            };\n            Screen.prototype.onZoomFrame = function(cb) {\n                var _this = this;\n                var eventName = \"zoomFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onScrollFrame = function(cb) {\n                var _this = this;\n                var eventName = \"scrollFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.onTransformationFrame = function(cb) {\n                var _this = this;\n                var eventName = \"transformationFrame\";\n                this.ee.on(eventName, cb);\n                return function() {\n                    _this.ee.off(eventName, cb);\n                };\n            };\n            Screen.prototype.cameraIsMoving = function() {\n                return !!(this.scrollXAnimation && this.scrollXAnimation.isActive() || this.zoomXAnimation && this.zoomXAnimation.isActive());\n            };\n            Screen.prototype.transform = function(options, silent) {\n                if (silent === void 0) {\n                    silent = false;\n                }\n                var scrollX = options.scrollX, scrollY = options.scrollY, zoomX = options.zoomX, zoomY = options.zoomY;\n                if (scrollX != void 0) this.options.scrollX = scrollX;\n                if (scrollY != void 0) this.options.scrollY = scrollY;\n                if (zoomX != void 0) this.options.zoomX = zoomX;\n                if (zoomY != void 0) this.options.zoomY = zoomY;\n                if (scrollX != void 0 || zoomX) {\n                    options.scrollXVal = this.pxToValueByXAxis(scrollX != void 0 ? scrollX : this.options.scrollX);\n                    this.options.scrollXVal = options.scrollXVal;\n                }\n                if (scrollY != void 0 || zoomY) {\n                    options.scrollYVal = this.pxToValueByYAxis(scrollY != void 0 ? scrollY : this.options.scrollY);\n                    this.options.scrollYVal = options.scrollYVal;\n                }\n                if (silent) return;\n                this.ee.emit(\"transformationFrame\", options);\n                if (options.scrollXVal != void 0 || options.scrollYVal != void 0) {\n                    this.ee.emit(\"scrollFrame\", options);\n                }\n                if (options.zoomX != void 0 || options.zoomY != void 0) {\n                    this.ee.emit(\"zoomFrame\", options);\n                }\n            };\n            Screen.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onChange(function(changedProps) {\n                    if (changedProps.xAxis && changedProps.xAxis.range) {\n                        if (changedProps.xAxis.range.scroll != void 0) _this.onScrollXHandler(changedProps);\n                        if (changedProps.xAxis.range.zoom) _this.onZoomXHandler();\n                    }\n                    if (changedProps.yAxis && changedProps.yAxis.range) {\n                        if (changedProps.yAxis.range.scroll != void 0) _this.onScrollYHandler();\n                        if (changedProps.yAxis.range.zoom) _this.onZoomYHandler();\n                    }\n                });\n                state.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                });\n            };\n            Screen.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n                this.scrollXAnimation && this.scrollXAnimation.kill();\n                this.scrollYAnimation && this.scrollYAnimation.kill();\n                this.zoomXAnimation && this.zoomXAnimation.kill();\n                this.zoomYAnimation && this.zoomYAnimation.kill();\n            };\n            Screen.prototype.onScrollXHandler = function(changedProps) {\n                var _this = this;\n                var state = this.chartState;\n                var isDragMode = state.data.cursor.dragMode;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled && !isDragMode;\n                var zoomXChanged = changedProps.xAxis.range.zoom;\n                var isAutoscroll = state.data.autoScroll && !isDragMode && !zoomXChanged;\n                var time = isAutoscroll ? animations.autoScrollSpeed : animations.zoomSpeed;\n                var ease = isAutoscroll ? animations.autoScrollEase : animations.zoomEase;\n                if (this.scrollXAnimation) this.scrollXAnimation.pause();\n                var range = state.data.xAxis.range;\n                var targetX = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollX.x = this.options.scrollX;\n                var cb = function() {\n                    _this.transform({\n                        scrollX: _this.currentScrollX.x\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollXAnimation = TweenLite.to(this.currentScrollX, time, {\n                        x: targetX,\n                        ease: ease\n                    });\n                    this.scrollXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollX.x = targetX;\n                    cb();\n                }\n            };\n            Screen.prototype.onScrollYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                if (this.scrollYAnimation) this.scrollYAnimation.pause();\n                var range = state.data.yAxis.range;\n                var targetY = range.scroll * range.scaleFactor * range.zoom;\n                this.currentScrollY.y = this.options.scrollY;\n                var cb = function() {\n                    _this.transform({\n                        scrollY: _this.currentScrollY.y\n                    });\n                };\n                if (canAnimate) {\n                    this.scrollYAnimation = TweenLite.to(this.currentScrollY, time, {\n                        y: targetY,\n                        ease: animations.zoomEase\n                    });\n                    this.scrollYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentScrollY.y = targetY;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomXHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.data.xAxis.range.zoom;\n                if (this.zoomXAnimation) this.zoomXAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomX: _this.currentZoomX.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomXAnimation = TweenLite.to(this.currentZoomX, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomXAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomX.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.onZoomYHandler = function() {\n                var _this = this;\n                var state = this.chartState;\n                var animations = state.data.animations;\n                var canAnimate = animations.enabled;\n                var time = animations.zoomSpeed;\n                var targetZoom = state.data.yAxis.range.zoom;\n                if (this.zoomYAnimation) this.zoomYAnimation.pause();\n                var cb = function() {\n                    _this.transform({\n                        zoomY: _this.currentZoomY.val\n                    });\n                };\n                if (canAnimate) {\n                    this.zoomYAnimation = TweenLite.to(this.currentZoomY, time, {\n                        val: targetZoom,\n                        ease: animations.zoomEase\n                    });\n                    this.zoomYAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.currentZoomY.val = targetZoom;\n                    cb();\n                }\n            };\n            Screen.prototype.getPointOnXAxis = function(xVal) {\n                var _a = this.chartState.data.xAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomX;\n                return (xVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnYAxis = function(yVal) {\n                var _a = this.chartState.data.yAxis.range, scaleFactor = _a.scaleFactor, zeroVal = _a.zeroVal;\n                var zoom = this.options.zoomY;\n                return (yVal - zeroVal) * scaleFactor * zoom;\n            };\n            Screen.prototype.getPointOnChart = function(xVal, yVal) {\n                return new Vector3(this.getPointOnXAxis(xVal), this.getPointOnYAxis(yVal), 0);\n            };\n            Screen.prototype.getValueOnXAxis = function(x) {\n                return this.chartState.data.xAxis.range.zeroVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.valueToPxByXAxis = function(xVal) {\n                return xVal * this.chartState.data.xAxis.range.scaleFactor * this.options.zoomX;\n            };\n            Screen.prototype.valueToPxByYAxis = function(yVal) {\n                return yVal * this.chartState.data.yAxis.range.scaleFactor * this.options.zoomY;\n            };\n            Screen.prototype.pxToValueByXAxis = function(xVal) {\n                return xVal / this.chartState.data.xAxis.range.scaleFactor / this.options.zoomX;\n            };\n            Screen.prototype.pxToValueByYAxis = function(yVal) {\n                return yVal / this.chartState.data.yAxis.range.scaleFactor / this.options.zoomY;\n            };\n            Screen.prototype.getValueByScreenX = function(x) {\n                return this.chartState.data.xAxis.range.zeroVal + this.options.scrollXVal + this.pxToValueByXAxis(x);\n            };\n            Screen.prototype.getValueByScreenY = function(y) {\n                return this.chartState.data.yAxis.range.zeroVal + this.options.scrollYVal + this.pxToValueByYAxis(y);\n            };\n            Screen.prototype.getScreenXByValue = function(xVal) {\n                var _a = this.chartState.data.xAxis.range, scroll = _a.scroll, zeroVal = _a.zeroVal;\n                return this.valueToPxByXAxis(xVal - zeroVal - scroll);\n            };\n            Screen.prototype.getScreenXByPoint = function(xVal) {\n                return this.getScreenXByValue(this.getValueOnXAxis(xVal));\n            };\n            Screen.prototype.getPointByScreenX = function(screenX) {\n                return this.getPointOnXAxis(this.getValueByScreenX(screenX));\n            };\n            Screen.prototype.getPointByScreenY = function(screenY) {\n                return this.getPointOnYAxis(this.getValueByScreenY(screenY));\n            };\n            Screen.prototype.getTop = function() {\n                return this.getPointByScreenY(this.chartState.data.height);\n            };\n            Screen.prototype.getBottom = function() {\n                return this.getPointByScreenY(0);\n            };\n            Screen.prototype.getLeft = function() {\n                return this.getPointByScreenX(0);\n            };\n            Screen.prototype.getScreenRightVal = function() {\n                return this.getValueByScreenX(this.chartState.data.width);\n            };\n            Screen.prototype.getTopVal = function() {\n                return this.getValueByScreenY(this.chartState.data.height);\n            };\n            Screen.prototype.getBottomVal = function() {\n                return this.getValueByScreenY(0);\n            };\n            Screen.prototype.getCenterYVal = function() {\n                return this.getValueByScreenY(this.chartState.data.height / 2);\n            };\n            return Screen;\n        }();\n        exports.Screen = Screen;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var interfaces_1 = __webpack_require__(23);\n        var EventEmmiter_1 = __webpack_require__(15);\n        var AXIS_MARK_DEFAULT_OPTIONS = {\n            type: \"simple\",\n            lineWidth: 1,\n            value: 0,\n            showValue: false,\n            stickToEdges: false,\n            lineColor: \"#FFFFFF\",\n            title: \"\"\n        };\n        var AxisMarks = function() {\n            function AxisMarks(chartState, axisType) {\n                this.items = {};\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.axisType = axisType;\n                var marks = this.items;\n                var axisMarksOptions = axisType == interfaces_1.AXIS_TYPE.X ? chartState.data.xAxis.marks : chartState.data.yAxis.marks;\n                for (var _i = 0, axisMarksOptions_1 = axisMarksOptions; _i < axisMarksOptions_1.length; _i++) {\n                    var options = axisMarksOptions_1[_i];\n                    var axisMark = void 0;\n                    options = Utils_1.Utils.deepMerge(AXIS_MARK_DEFAULT_OPTIONS, options);\n                    if (!options.name) options.name = Utils_1.Utils.getUid().toString();\n                    if (marks[options.name]) Utils_1.Utils.error(\"duplicated mark name \" + options.name);\n                    if (options.type == \"timeleft\") {\n                        axisMark = new AxisTimeleftMark(chartState, axisType, options);\n                    } else {\n                        axisMark = new AxisMark(chartState, axisType, options);\n                    }\n                    marks[options.name] = axisMark;\n                }\n                this.bindEvents();\n            }\n            AxisMarks.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, newData);\n                });\n                this.chartState.onDestroy(function() {\n                    return _this.ee.removeAllListeners();\n                });\n            };\n            AxisMarks.prototype.onTrendChange = function(trendName, newData) {\n                if (!newData) return;\n                var startVal = newData[0].xVal;\n                var endVal = newData[newData.length - 1].xVal;\n                var marks = this.items;\n                for (var markName in marks) {\n                    var mark = marks[markName];\n                    var markVal = mark.options.value;\n                    var markWasCrossed = startVal == markVal || endVal == markVal || startVal < markVal && endVal > markVal;\n                    if (markWasCrossed) this.ee.emit(\"markCrossed\", trendName, newData);\n                }\n            };\n            AxisMarks.prototype.getItems = function() {\n                return this.items;\n            };\n            AxisMarks.prototype.getItem = function(markName) {\n                return this.items[markName];\n            };\n            return AxisMarks;\n        }();\n        exports.AxisMarks = AxisMarks;\n        var AxisMark = function() {\n            function AxisMark(chartState, axisType, options) {\n                this.renderOnTrendsChange = false;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.options = options;\n                this.axisType = axisType;\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            AxisMark.prototype.bindEvents = function() {};\n            AxisMark.prototype.setOptions = function(newOptions) {\n                var value = this.options.value;\n                this.options = Utils_1.Utils.deepMerge(this.options, newOptions);\n                if (this.options.value !== value) this.ee.emit(\"valueChange\");\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisMark.prototype.getDisplayedVal = function() {\n                var _a = this.options, value = _a.value, displayedValue = _a.displayedValue;\n                return String(displayedValue !== void 0 ? displayedValue : value);\n            };\n            AxisMark.prototype.onMarkCrossed = function(cb) {\n                var _this = this;\n                this.ee.on(\"markCrossed\", cb);\n                return function() {\n                    _this.ee.off(\"markCrossed\", cb);\n                };\n            };\n            AxisMark.prototype.onValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"valueChange\", cb);\n                return function() {\n                    _this.ee.off(\"valueChange\", cb);\n                };\n            };\n            AxisMark.prototype.onDisplayedValueChange = function(cb) {\n                var _this = this;\n                this.ee.on(\"onDisplayedValueChange\", cb);\n                return function() {\n                    _this.ee.off(\"onDisplayedValueChange\", cb);\n                };\n            };\n            AxisMark.typeName = \"simple\";\n            return AxisMark;\n        }();\n        exports.AxisMark = AxisMark;\n        var AxisTimeleftMark = function(_super) {\n            __extends(AxisTimeleftMark, _super);\n            function AxisTimeleftMark() {\n                _super.apply(this, arguments);\n                this.renderOnTrendsChange = true;\n            }\n            AxisTimeleftMark.prototype.getDisplayedVal = function() {\n                var markVal = this.options.value;\n                var maxXVal = this.chartState.data.computedData.trends.maxXVal;\n                var time = markVal - maxXVal;\n                if (time < 0) time = 0;\n                return Utils_1.Utils.msToTimeString(time);\n            };\n            AxisTimeleftMark.prototype.bindEvents = function() {\n                var _this = this;\n                this.chartState.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n            };\n            AxisTimeleftMark.prototype.onTrendsChange = function() {\n                this.ee.emit(\"onDisplayedValueChange\");\n            };\n            AxisTimeleftMark.typeName = \"timeleft\";\n            return AxisTimeleftMark;\n        }(AxisMark);\n        exports.AxisTimeleftMark = AxisTimeleftMark;\n    }, function(module, exports) {\n        \"use strict\";\n        (function(AXIS_RANGE_TYPE) {\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"FIXED\"] = 0] = \"FIXED\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"RELATIVE_END\"] = 1] = \"RELATIVE_END\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"AUTO\"] = 2] = \"AUTO\";\n            AXIS_RANGE_TYPE[AXIS_RANGE_TYPE[\"ALL\"] = 3] = \"ALL\";\n        })(exports.AXIS_RANGE_TYPE || (exports.AXIS_RANGE_TYPE = {}));\n        var AXIS_RANGE_TYPE = exports.AXIS_RANGE_TYPE;\n        (function(AXIS_TYPE) {\n            AXIS_TYPE[AXIS_TYPE[\"X\"] = 0] = \"X\";\n            AXIS_TYPE[AXIS_TYPE[\"Y\"] = 1] = \"Y\";\n        })(exports.AXIS_TYPE || (exports.AXIS_TYPE = {}));\n        var AXIS_TYPE = exports.AXIS_TYPE;\n        (function(AXIS_DATA_TYPE) {\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"NUMBER\"] = 0] = \"NUMBER\";\n            AXIS_DATA_TYPE[AXIS_DATA_TYPE[\"DATE\"] = 1] = \"DATE\";\n        })(exports.AXIS_DATA_TYPE || (exports.AXIS_DATA_TYPE = {}));\n        var AXIS_DATA_TYPE = exports.AXIS_DATA_TYPE;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Mesh = THREE.Mesh;\n        var Object3D = THREE.Object3D;\n        var Widget_1 = __webpack_require__(17);\n        var GridWidget_1 = __webpack_require__(25);\n        var Utils_1 = __webpack_require__(16);\n        var interfaces_1 = __webpack_require__(23);\n        var AxisWidget = function(_super) {\n            __extends(AxisWidget, _super);\n            function AxisWidget(state) {\n                var _this = this;\n                _super.call(this, state);\n                this.isDestroyed = false;\n                this.object3D = new Object3D();\n                this.axisXObject = new Object3D();\n                this.axisYObject = new Object3D();\n                this.object3D.add(this.axisXObject);\n                this.object3D.add(this.axisYObject);\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n                this.updateAxisXRequest = Utils_1.Utils.throttle(function() {\n                    return _this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }, 1e3);\n                this.onScrollChange(state.screen.options.scrollX, state.screen.options.scrollY);\n            }\n            AxisWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                this.bindEvent(state.screen.onTransformationFrame(function(options) {\n                    _this.onScrollChange(options.scrollX, options.scrollY);\n                }), state.screen.onZoomFrame(function(options) {\n                    _this.onZoomFrame(options);\n                }), state.onDestroy(function() {\n                    return _this.onDestroy();\n                }), state.onResize(function() {\n                    return _this.onResize();\n                }));\n            };\n            AxisWidget.prototype.onDestroy = function() {\n                this.isDestroyed = true;\n                this.unbindEvents();\n            };\n            AxisWidget.prototype.onScrollChange = function(x, y) {\n                if (y != void 0) {\n                    this.axisYObject.position.y = y;\n                    this.axisXObject.position.y = y;\n                }\n                if (x != void 0) {\n                    this.axisYObject.position.x = x;\n                    this.updateAxisXRequest();\n                }\n            };\n            AxisWidget.prototype.onResize = function() {\n                this.setupAxis(interfaces_1.AXIS_TYPE.X);\n                this.setupAxis(interfaces_1.AXIS_TYPE.Y);\n            };\n            AxisWidget.prototype.setupAxis = function(orientation) {\n                var _this = this;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                var canvasWidth = 0, canvasHeight = 0;\n                if (isXAxis) {\n                    this.axisXObject.traverse(function(obj) {\n                        return _this.axisXObject.remove(obj);\n                    });\n                    canvasWidth = visibleWidth * 3;\n                    canvasHeight = 50;\n                } else {\n                    this.axisYObject.traverse(function(obj) {\n                        return _this.axisYObject.remove(obj);\n                    });\n                    canvasWidth = 50;\n                    canvasHeight = visibleHeight * 3;\n                }\n                var texture = Utils_1.Utils.createPixelPerfectTexture(canvasWidth, canvasHeight, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                    ctx.fillStyle = \"rgba(255,255,255,0.5)\";\n                    ctx.strokeStyle = \"rgba(255,255,255,0.1)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                var axisMesh = new Mesh(new THREE.PlaneGeometry(canvasWidth, canvasHeight), material);\n                if (isXAxis) {\n                    axisMesh.position.set(canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisXObject.add(axisMesh);\n                } else {\n                    axisMesh.position.set(visibleWidth - canvasWidth / 2, canvasHeight / 2, 0);\n                    this.axisYObject.add(axisMesh);\n                }\n                this.updateAxis(orientation);\n            };\n            AxisWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisWidget.prototype.updateAxis = function(orientation) {\n                if (this.isDestroyed) return;\n                var isXAxis = orientation == interfaces_1.AXIS_TYPE.X;\n                var _a = this.chartState.data, visibleWidth = _a.width, visibleHeight = _a.height;\n                var _b = this.chartState.screen.options, scrollX = _b.scrollX, scrollY = _b.scrollY, zoomX = _b.zoomX, zoomY = _b.zoomY;\n                var axisOptions;\n                var axisMesh;\n                var axisGridParams;\n                if (isXAxis) {\n                    axisMesh = this.axisXObject.children[0];\n                    axisOptions = this.chartState.data.xAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleWidth, zoomX);\n                } else {\n                    axisMesh = this.axisYObject.children[0];\n                    axisOptions = this.chartState.data.yAxis;\n                    axisGridParams = GridWidget_1.GridWidget.getGridParamsForAxis(axisOptions, visibleHeight, zoomY);\n                }\n                var geometry = axisMesh.geometry;\n                var canvasWidth = geometry.parameters.width;\n                var canvasHeight = geometry.parameters.height;\n                var texture = axisMesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n                if (isXAxis) {\n                    axisMesh.position.x = canvasWidth / 2 - visibleWidth + scrollX;\n                }\n                var edgeOffset = axisGridParams.segmentsCount * axisGridParams.step;\n                var startVal = axisGridParams.start - edgeOffset;\n                var endVal = axisGridParams.end + edgeOffset;\n                ctx.beginPath();\n                for (var val = startVal; val <= endVal; val += axisGridParams.step) {\n                    var displayedValue = \"\";\n                    if (isXAxis) {\n                        var pxVal = this.chartState.screen.getPointOnXAxis(val) - scrollX + visibleWidth;\n                        ctx.textAlign = \"center\";\n                        if (axisOptions.dataType == interfaces_1.AXIS_DATA_TYPE.DATE) {\n                            displayedValue = AxisWidget.getDateStr(val, axisGridParams);\n                        } else {\n                            displayedValue = Number(val.toFixed(14)).toString();\n                        }\n                        ctx.fillText(displayedValue, pxVal, canvasHeight - 10);\n                    } else {\n                        var pxVal = canvasHeight - this.chartState.screen.getPointOnYAxis(val) + scrollY;\n                        ctx.textAlign = \"right\";\n                        displayedValue = Number(val.toFixed(14)).toString();\n                        ctx.fillText(displayedValue, canvasWidth - 15, pxVal + 3);\n                    }\n                    ctx.stroke();\n                }\n                ctx.stroke();\n                ctx.closePath();\n                texture.needsUpdate = true;\n            };\n            AxisWidget.prototype.onZoomFrame = function(options) {\n                if (options.zoomX) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.X);\n                }\n                if (options.zoomY) {\n                    this.updateAxis(interfaces_1.AXIS_TYPE.Y);\n                }\n            };\n            AxisWidget.getDateStr = function(timestamp, gridParams) {\n                var sec = 1e3;\n                var min = sec * 60;\n                var hour = min * 60;\n                var day = hour * 60;\n                var step = gridParams.step;\n                var d = new Date(timestamp);\n                var tf = function(num) {\n                    return Utils_1.Utils.toFixed(num, 2);\n                };\n                return tf(d.getHours()) + \":\" + tf(d.getMinutes()) + \":\" + tf(d.getSeconds());\n            };\n            AxisWidget.widgetName = \"Axis\";\n            return AxisWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisWidget = AxisWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Vector3 = THREE.Vector3;\n        var Widget_1 = __webpack_require__(17);\n        var LineSegments = THREE.LineSegments;\n        var Utils_1 = __webpack_require__(16);\n        var GridWidget = function(_super) {\n            __extends(GridWidget, _super);\n            function GridWidget(chartState) {\n                _super.call(this, chartState);\n                this.isDestroyed = false;\n                var _a = chartState.data, width = _a.width, height = _a.height, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                this.gridSizeH = Math.floor(width / xAxis.gridMinSize) * 3;\n                this.gridSizeV = Math.floor(height / yAxis.gridMinSize) * 3;\n                this.initGrid();\n                this.updateGrid();\n            }\n            GridWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var updateGridThrottled = Utils_1.Utils.throttle(function() {\n                    return _this.updateGrid();\n                }, 1e3);\n                this.bindEvent(this.chartState.onScroll(function() {\n                    return updateGridThrottled();\n                }), this.chartState.screen.onZoomFrame(function(options) {\n                    updateGridThrottled();\n                    _this.onZoomFrame(options);\n                }), this.chartState.onDestroy(function() {\n                    _this.isDestroyed = true;\n                    _this.unbindEvents();\n                }), this.chartState.onResize(function() {\n                    _this.updateGrid();\n                }));\n            };\n            GridWidget.prototype.initGrid = function() {\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    opacity: .1,\n                    transparent: true\n                });\n                var xLinesCount = this.gridSizeH;\n                var yLinesCount = this.gridSizeV;\n                while (xLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                while (yLinesCount--) geometry.vertices.push(new Vector3(), new Vector3());\n                this.lineSegments = new LineSegments(geometry, material);\n                this.lineSegments.position.setZ(-1);\n                this.lineSegments.frustumCulled = false;\n            };\n            GridWidget.prototype.updateGrid = function() {\n                if (this.isDestroyed) return;\n                var _a = this.chartState.data, yAxis = _a.yAxis, xAxis = _a.xAxis, width = _a.width, height = _a.height;\n                var axisXGrid = GridWidget.getGridParamsForAxis(xAxis, width, xAxis.range.zoom);\n                var axisYGrid = GridWidget.getGridParamsForAxis(yAxis, height, yAxis.range.zoom);\n                var scrollXInSegments = Math.ceil(xAxis.range.scroll / axisXGrid.step);\n                var scrollYInSegments = Math.ceil(yAxis.range.scroll / axisYGrid.step);\n                var gridScrollXVal = scrollXInSegments * axisXGrid.step;\n                var gridScrollYVal = scrollYInSegments * axisYGrid.step;\n                var startXVal = axisXGrid.start + gridScrollXVal;\n                var startYVal = axisYGrid.start + gridScrollYVal;\n                var geometry = this.lineSegments.geometry;\n                var vertices = geometry.vertices;\n                var lineInd = 0;\n                for (var i = -this.gridSizeH / 3; i < this.gridSizeH * 2 / 3; i++) {\n                    var value = startXVal + i * axisXGrid.step;\n                    var lineSegment = this.getVerticalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                for (var i = -this.gridSizeV / 3; i < this.gridSizeV * 2 / 3; i++) {\n                    var value = startYVal + i * axisYGrid.step;\n                    var lineSegment = this.getHorizontalLineSegment(value, gridScrollXVal, gridScrollYVal);\n                    vertices[lineInd * 2].set(lineSegment[0].x, lineSegment[0].y, 0);\n                    vertices[lineInd * 2 + 1].set(lineSegment[1].x, lineSegment[1].y, 0);\n                    lineInd++;\n                }\n                geometry.verticesNeedUpdate = true;\n                this.lineSegments.scale.set(xAxis.range.scaleFactor * xAxis.range.zoom, yAxis.range.scaleFactor * yAxis.range.zoom, 1);\n            };\n            GridWidget.prototype.getHorizontalLineSegment = function(yVal, scrollXVal, scrollYVal) {\n                var chartState = this.chartState;\n                var localYVal = yVal - chartState.data.yAxis.range.zeroVal - scrollYVal;\n                var widthVal = chartState.pxToValueByXAxis(chartState.data.width);\n                return [ new THREE.Vector3(widthVal * 2 + scrollXVal, localYVal, 0), new THREE.Vector3(-widthVal + scrollXVal, localYVal, 0) ];\n            };\n            GridWidget.prototype.getVerticalLineSegment = function(xVal, scrollXVal, scrollYVal) {\n                var chartState = this.chartState;\n                var localXVal = xVal - chartState.data.xAxis.range.zeroVal - scrollXVal;\n                var heightVal = chartState.pxToValueByYAxis(chartState.data.height);\n                return [ new THREE.Vector3(localXVal, heightVal * 2 + scrollYVal, 0), new THREE.Vector3(localXVal, -heightVal + scrollYVal, 0) ];\n            };\n            GridWidget.prototype.onZoomFrame = function(options) {\n                var _a = this.chartState.data, xAxis = _a.xAxis, yAxis = _a.yAxis;\n                if (options.zoomX) this.lineSegments.scale.setX(xAxis.range.scaleFactor * options.zoomX);\n                if (options.zoomY) this.lineSegments.scale.setY(yAxis.range.scaleFactor * options.zoomY);\n            };\n            GridWidget.getGridParamsForAxis = function(axisOptions, axisWidth, zoom) {\n                var axisRange = axisOptions.range;\n                var from = axisRange.from;\n                var to = axisRange.to;\n                var axisLength = to - from;\n                var gridStep = 0;\n                var gridStepInPixels = 0;\n                var minGridStepInPixels = axisOptions.gridMinSize;\n                var axisLengthStr = String(axisLength);\n                var axisLengthPointPosition = axisLengthStr.indexOf(\".\");\n                var intPartLength = axisLengthPointPosition !== -1 ? axisLengthPointPosition : axisLengthStr.length;\n                var gridStepFound = false;\n                var digitPos = 0;\n                while (!gridStepFound) {\n                    var power = intPartLength - digitPos - 1;\n                    var multiplier = Math.pow(10, power) || 1;\n                    var dividers = [ 1, 2, 5 ];\n                    for (var dividerInd = 0; dividerInd < dividers.length; dividerInd++) {\n                        var nextGridStep = multiplier / dividers[dividerInd];\n                        var nextGridStepInPixels = nextGridStep / axisLength * axisWidth;\n                        if (nextGridStepInPixels >= minGridStepInPixels) {\n                            gridStep = nextGridStep;\n                            gridStepInPixels = nextGridStepInPixels;\n                        } else {\n                            gridStepFound = true;\n                            if (gridStep === 0) {\n                                gridStep = nextGridStep;\n                                gridStepInPixels = nextGridStepInPixels;\n                            }\n                            break;\n                        }\n                    }\n                    if (!gridStepFound) digitPos++;\n                }\n                var gridStart = Math.floor(from / gridStep) * gridStep;\n                var gridEnd = Math.floor(to / gridStep) * gridStep;\n                return {\n                    start: gridStart,\n                    end: gridEnd,\n                    step: gridStep,\n                    stepInPx: gridStepInPixels,\n                    length: gridEnd - gridStart,\n                    segmentsCount: Math.round((gridEnd - gridStart) / gridStep)\n                };\n            };\n            GridWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            GridWidget.widgetName = \"Grid\";\n            return GridWidget;\n        }(Widget_1.ChartWidget);\n        exports.GridWidget = GridWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Trend_1 = __webpack_require__(19);\n        var TrendsLoadingWidget = function(_super) {\n            __extends(TrendsLoadingWidget, _super);\n            function TrendsLoadingWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLoadingWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLoading;\n            };\n            TrendsLoadingWidget.widgetName = \"TrendsLoading\";\n            return TrendsLoadingWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLoadingWidget = TrendsLoadingWidget;\n        var TrendLoading = function(_super) {\n            __extends(TrendLoading, _super);\n            function TrendLoading(state, trendName) {\n                _super.call(this, state, trendName);\n                this.isActive = false;\n                this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendLoading.createTexture(),\n                    transparent: true\n                }));\n                this.deactivate();\n            }\n            TrendLoading.widgetIsEnabled = function(trendOptions, chartState) {\n                return trendOptions.enabled && chartState.data.animations.enabled;\n            };\n            TrendLoading.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendLoading.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.onPrependRequest(function() {\n                    return _this.activate();\n                }));\n            };\n            TrendLoading.prototype.prependData = function() {\n                this.deactivate();\n            };\n            TrendLoading.prototype.activate = function() {\n                var mesh = this.mesh;\n                mesh.material.opacity = 1;\n                mesh.rotation.z = 0;\n                var animation = TweenLite.to(this.mesh.rotation, .5, {\n                    z: Math.PI * 2\n                });\n                animation.eventCallback(\"onComplete\", function() {\n                    animation.restart();\n                });\n                this.animation = animation;\n                this.isActive = true;\n                this.updatePosition();\n            };\n            TrendLoading.prototype.deactivate = function() {\n                this.animation && this.animation.kill();\n                this.mesh.material.opacity = 0;\n                this.isActive = false;\n            };\n            TrendLoading.createTexture = function() {\n                var h = 64, w = 64;\n                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                    ctx.lineWidth = 5;\n                    var center = h / 2;\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, 0, Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 22, Math.PI, Math.PI + Math.PI / 2);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.arc(center, center, 3, 0, Math.PI * 2);\n                    ctx.stroke();\n                });\n            };\n            TrendLoading.prototype.onZoomFrame = function() {\n                this.updatePosition();\n            };\n            TrendLoading.prototype.updatePosition = function() {\n                if (!this.isActive) return;\n                var trend = this.trend;\n                var segment = trend.segments.getStartSegment();\n                var x, y;\n                if (trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n                    x = segment.currentAnimationState.startXVal;\n                    y = segment.currentAnimationState.startYVal;\n                } else {\n                    x = segment.currentAnimationState.xVal - segment.maxLength;\n                    y = segment.currentAnimationState.yVal;\n                }\n                var pointVector = this.chartState.screen.getPointOnChart(x, y);\n                this.mesh.position.set(pointVector.x, pointVector.y, 0);\n            };\n            return TrendLoading;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLoading = TrendLoading;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(17);\n        var Object3D = THREE.Object3D;\n        var TrendsWidget = function(_super) {\n            __extends(TrendsWidget, _super);\n            function TrendsWidget(state) {\n                _super.call(this, state);\n                this.widgets = {};\n                this.object3D = new Object3D();\n                this.onTrendsChange();\n            }\n            TrendsWidget.prototype.bindEvents = function() {\n                var _this = this;\n                var state = this.chartState;\n                state.onTrendsChange(function() {\n                    return _this.onTrendsChange();\n                });\n                state.onTrendChange(function(trendName, changedOptions, newData) {\n                    _this.onTrendChange(trendName, changedOptions, newData);\n                });\n            };\n            TrendsWidget.prototype.onTrendsChange = function() {\n                var trendsOptions = this.chartState.data.trends;\n                var TrendWidgetClass = this.getTrendWidgetClass();\n                for (var trendName in trendsOptions) {\n                    var trendOptions = trendsOptions[trendName];\n                    var widgetCanBeEnabled = TrendWidgetClass.widgetIsEnabled(trendOptions, this.chartState);\n                    if (widgetCanBeEnabled && !this.widgets[trendName]) {\n                        this.createTrendWidget(trendName);\n                    } else if (!widgetCanBeEnabled && this.widgets[trendName]) {\n                        this.destroyTrendWidget(trendName);\n                    }\n                }\n            };\n            TrendsWidget.prototype.onTrendChange = function(trendName, changedOptions, newData) {\n                var widget = this.widgets[trendName];\n                if (!widget) return;\n                widget.onTrendChange(changedOptions);\n                if (newData) {\n                    var data = this.chartState.getTrend(trendName).getData();\n                    var isAppend = !data.length || data[0].xVal < newData[0].xVal;\n                    isAppend ? widget.appendData(newData) : widget.prependData(newData);\n                }\n            };\n            TrendsWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendsWidget.prototype.createTrendWidget = function(trendName) {\n                var WidgetConstructor = this.getTrendWidgetClass();\n                var widget = new WidgetConstructor(this.chartState, trendName);\n                this.widgets[trendName] = widget;\n                var widgetObject = widget.getObject3D();\n                widgetObject.name = trendName;\n                this.object3D.add(widget.getObject3D());\n            };\n            TrendsWidget.prototype.destroyTrendWidget = function(trendName) {\n                this.widgets[trendName].onDestroy();\n                delete this.widgets[trendName];\n                var widgetObject = this.object3D.getObjectByName(trendName);\n                this.object3D.remove(widgetObject);\n            };\n            return TrendsWidget;\n        }(Widget_1.ChartWidget);\n        exports.TrendsWidget = TrendsWidget;\n        var TrendWidget = function() {\n            function TrendWidget(chartState, trendName) {\n                this.chartState = chartState;\n                this.trendName = trendName;\n                this.unsubscribers = [];\n                this.trend = chartState.trendsManager.getTrend(trendName);\n                this.chartState = chartState;\n                this.bindEvents();\n            }\n            TrendWidget.widgetIsEnabled = function(trendOptions, chartState) {\n                return trendOptions.enabled;\n            };\n            TrendWidget.prototype.appendData = function(newData) {};\n            TrendWidget.prototype.prependData = function(newData) {};\n            TrendWidget.prototype.onTrendChange = function(changedOptions) {};\n            TrendWidget.prototype.onDestroy = function() {\n                for (var _i = 0, _a = this.unsubscribers; _i < _a.length; _i++) {\n                    var unsubscriber = _a[_i];\n                    unsubscriber();\n                }\n            };\n            TrendWidget.prototype.onSegmentsAnimate = function(segments) {};\n            TrendWidget.prototype.onZoomFrame = function(options) {};\n            TrendWidget.prototype.onTransformationFrame = function(options) {};\n            TrendWidget.prototype.onZoom = function() {};\n            TrendWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.trend.segments.onAnimationFrame(function(trendPoints) {\n                    return _this.onSegmentsAnimate(trendPoints);\n                }));\n                this.bindEvent(this.chartState.screen.onTransformationFrame(function(options) {\n                    return _this.onTransformationFrame(options);\n                }));\n                this.bindEvent(this.chartState.screen.onZoomFrame(function(options) {\n                    return _this.onZoomFrame(options);\n                }));\n                this.bindEvent(this.chartState.onZoom(function() {\n                    return _this.onZoom();\n                }));\n            };\n            TrendWidget.prototype.bindEvent = function(unsubscriber) {\n                this.unsubscribers.push(unsubscriber);\n            };\n            return TrendWidget;\n        }();\n        exports.TrendWidget = TrendWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(17);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var Utils_1 = __webpack_require__(16);\n        var Line = THREE.Line;\n        var Mesh = THREE.Mesh;\n        var interfaces_1 = __webpack_require__(23);\n        var AxisMarksWidget = function(_super) {\n            __extends(AxisMarksWidget, _super);\n            function AxisMarksWidget(chartState) {\n                _super.call(this, chartState);\n                this.axisMarksWidgets = [];\n                this.object3D = new Object3D();\n                var xAxisMarks = chartState.xAxisMarks, yAxisMarks = chartState.yAxisMarks;\n                var items = xAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n                items = yAxisMarks.getItems();\n                for (var markName in items) {\n                    this.createAxisMark(items[markName]);\n                }\n            }\n            AxisMarksWidget.prototype.createAxisMark = function(axisMark) {\n                var axisMarkWidget = new AxisMarkWidget(this.chartState, axisMark);\n                this.axisMarksWidgets.push(axisMarkWidget);\n                this.object3D.add(axisMarkWidget.getObject3D());\n            };\n            AxisMarksWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.bindEvent(this.chartState.screen.onTransformationFrame(function() {\n                    return _this.updateMarksPositions();\n                }), this.chartState.onResize(function() {\n                    return _this.updateMarksPositions();\n                }));\n            };\n            AxisMarksWidget.prototype.updateMarksPositions = function() {\n                for (var _i = 0, _a = this.axisMarksWidgets; _i < _a.length; _i++) {\n                    var widget = _a[_i];\n                    widget.updatePosition();\n                }\n            };\n            AxisMarksWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarksWidget.widgetName = \"AxisMarks\";\n            return AxisMarksWidget;\n        }(Widget_1.ChartWidget);\n        exports.AxisMarksWidget = AxisMarksWidget;\n        var DEFAULT_INDICATOR_RENDER_FUNCTION = function(axisMarkWidget, ctx) {\n            var axisMark = axisMarkWidget.axisMark;\n            ctx.fillStyle = axisMark.options.lineColor;\n            ctx.clearRect(0, 0, axisMarkWidget.indicatorWidth, axisMarkWidget.indicatorHeight);\n            var xCoord = 15;\n            if (axisMark.axisType == interfaces_1.AXIS_TYPE.Y) {\n                ctx.textAlign = \"end\";\n                xCoord = axisMarkWidget.indicatorWidth;\n            }\n            ctx.fillText(axisMark.options.title, xCoord, 20);\n            if (!axisMark.options.showValue) return;\n            ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n            ctx.fillText(axisMark.getDisplayedVal(), 16, 34);\n        };\n        var INDICATOR_POS_Z = .1;\n        var AxisMarkWidget = function() {\n            function AxisMarkWidget(chartState, axisMark) {\n                this.indicatorWidth = 128;\n                this.indicatorHeight = 64;\n                this.indicatorRenderFunction = DEFAULT_INDICATOR_RENDER_FUNCTION;\n                this.chartState = chartState;\n                this.axisMark = axisMark;\n                this.axisType = axisMark.axisType;\n                this.frameValue = axisMark.options.value;\n                this.object3D = new Object3D();\n                this.object3D.position.setZ(-.1);\n                this.line = this.createLine();\n                this.object3D.add(this.line);\n                this.indicator = this.createIndicator();\n                this.object3D.add(this.indicator);\n                this.renderIndicator();\n                this.updatePosition();\n                this.bindEvents();\n            }\n            AxisMarkWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            AxisMarkWidget.prototype.createLine = function() {\n                var _a = this.axisMark.options, lineWidth = _a.lineWidth, lineColor = _a.lineColor;\n                var lineGeometry = new Geometry();\n                lineGeometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n                return new Line(lineGeometry, new LineBasicMaterial({\n                    color: Utils_1.Utils.getHexColor(lineColor),\n                    linewidth: lineWidth\n                }));\n            };\n            AxisMarkWidget.prototype.createIndicator = function() {\n                var _a = this, width = _a.indicatorWidth, height = _a.indicatorHeight;\n                var texture = Utils_1.Utils.createPixelPerfectTexture(width, height, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"10px Arial\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                return new Mesh(new THREE.PlaneGeometry(width, height), material);\n            };\n            AxisMarkWidget.prototype.renderIndicator = function() {\n                var texture = this.indicator.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                DEFAULT_INDICATOR_RENDER_FUNCTION(this, ctx);\n                texture.needsUpdate = true;\n            };\n            AxisMarkWidget.prototype.bindEvents = function() {\n                var _this = this;\n                this.axisMark.onDisplayedValueChange(function() {\n                    return _this.renderIndicator();\n                });\n                this.axisMark.onValueChange(function() {\n                    return _this.onValueChangeHandler();\n                });\n            };\n            AxisMarkWidget.prototype.onValueChangeHandler = function() {\n                var _this = this;\n                if (this.moveAnimation) this.moveAnimation.kill();\n                var animations = this.chartState.data.animations;\n                var targetValue = this.axisMark.options.value;\n                var cb = function() {\n                    _this.updatePosition();\n                };\n                if (animations.enabled) {\n                    this.moveAnimation = TweenLite.to(this, animations.trendChangeSpeed, {\n                        frameValue: targetValue,\n                        ease: animations.trendChangeEase\n                    });\n                    this.moveAnimation.eventCallback(\"onUpdate\", cb);\n                } else {\n                    this.frameValue = targetValue;\n                    cb();\n                }\n            };\n            AxisMarkWidget.prototype.updatePosition = function() {\n                var chartState = this.chartState;\n                var screen = chartState.screen;\n                var isXAxis = this.axisType == interfaces_1.AXIS_TYPE.X;\n                var lineGeometry = this.line.geometry;\n                var hasStickMode = this.axisMark.options.stickToEdges;\n                var _a = this.chartState.data, width = _a.width, height = _a.height;\n                if (isXAxis) {\n                    this.object3D.position.x = screen.getPointOnXAxis(this.frameValue);\n                    this.object3D.position.y = screen.getBottom();\n                    lineGeometry.vertices[1].setY(height);\n                    this.indicator.position.set(this.indicatorWidth / 2, chartState.data.height - this.indicatorHeight / 2, INDICATOR_POS_Z);\n                } else {\n                    var val = this.frameValue;\n                    var bottomVal = screen.getBottomVal();\n                    var topVal = screen.getTopVal();\n                    var needToStickOnTop = hasStickMode && val > topVal;\n                    var needToStickOnBottom = hasStickMode && val < bottomVal;\n                    var centerYVal = screen.getCenterYVal();\n                    this.object3D.position.x = screen.getLeft();\n                    if (needToStickOnTop) {\n                        this.object3D.position.y = screen.getTop();\n                    } else if (needToStickOnBottom) {\n                        this.object3D.position.y = screen.getBottom();\n                    } else {\n                        this.object3D.position.y = screen.getPointOnYAxis(this.frameValue);\n                    }\n                    lineGeometry.vertices[1].setX(width);\n                    var indicatorPosY = val > centerYVal ? -35 : 10;\n                    this.indicator.position.set(width - this.indicatorWidth / 2 - 50, indicatorPosY, INDICATOR_POS_Z);\n                }\n                lineGeometry.verticesNeedUpdate = true;\n            };\n            AxisMarkWidget.typeName = \"simple\";\n            return AxisMarkWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Widget_1 = __webpack_require__(17);\n        var LineSegments = THREE.LineSegments;\n        var Vector3 = THREE.Vector3;\n        var BorderWidget = function(_super) {\n            __extends(BorderWidget, _super);\n            function BorderWidget(chartState) {\n                _super.call(this, chartState);\n                var _a = chartState.data, width = _a.width, height = _a.height;\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial({\n                    linewidth: 1,\n                    opacity: 0,\n                    transparent: true\n                });\n                geometry.vertices.push(new Vector3(0, 0, 0), new Vector3(0, height, 0), new Vector3(0, height, 0), new Vector3(width, height, 0), new Vector3(width, height, 0), new Vector3(width, 0, 0), new Vector3(width, 0, 0), new Vector3(0, 0, 0), new Vector3(width / 2, height, 0), new Vector3(width / 2, 0, 0));\n                this.lineSegments = new LineSegments(geometry, material);\n            }\n            BorderWidget.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            BorderWidget.widgetName = \"Border\";\n            return BorderWidget;\n        }(Widget_1.ChartWidget);\n        exports.BorderWidget = BorderWidget;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var Mesh = THREE.Mesh;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Color = THREE.Color;\n        var CANVAS_WIDTH = 128;\n        var CANVAS_HEIGHT = 64;\n        var OFFSET_X = 15;\n        var TrendsIndicatorWidget = function(_super) {\n            __extends(TrendsIndicatorWidget, _super);\n            function TrendsIndicatorWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsIndicatorWidget.prototype.getTrendWidgetClass = function() {\n                return TrendIndicator;\n            };\n            TrendsIndicatorWidget.widgetName = \"TrendsIndicator\";\n            return TrendsIndicatorWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsIndicatorWidget = TrendsIndicatorWidget;\n        var TrendIndicator = function(_super) {\n            __extends(TrendIndicator, _super);\n            function TrendIndicator(state, trendName) {\n                _super.call(this, state, trendName);\n                this.initObject();\n                this.onTrendChange();\n            }\n            TrendIndicator.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasIndicator;\n            };\n            TrendIndicator.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendIndicator.prototype.onTrendChange = function() {\n                var trendData = this.trend.getData();\n                var lastItem = trendData[trendData.length - 1];\n                var texture = this.mesh.material.map;\n                var ctx = texture.image.getContext(\"2d\");\n                ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n                ctx.fillText(lastItem.yVal.toFixed(4), 0, 15);\n                texture.needsUpdate = true;\n            };\n            TrendIndicator.prototype.initObject = function() {\n                var color = new Color(this.trend.getOptions().lineColor);\n                var texture = Utils_1.Utils.createPixelPerfectTexture(CANVAS_WIDTH, CANVAS_HEIGHT, function(ctx) {\n                    ctx.beginPath();\n                    ctx.font = \"15px Arial\";\n                    ctx.fillStyle = color.getStyle();\n                    ctx.strokeStyle = \"rgba(255,255,255,0.95)\";\n                });\n                var material = new THREE.MeshBasicMaterial({\n                    map: texture,\n                    side: THREE.FrontSide\n                });\n                material.transparent = true;\n                this.mesh = new Mesh(new THREE.PlaneGeometry(CANVAS_WIDTH, CANVAS_HEIGHT), material);\n            };\n            TrendIndicator.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.onSegmentsAnimate = function(segments) {\n                this.segment = segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendIndicator.prototype.updatePosition = function() {\n                var state = this.chartState;\n                var _a = this.segment.currentAnimationState, segmentEndXVal = _a.endXVal, segmentEndYVal = _a.endYVal;\n                var endPointVector = state.screen.getPointOnChart(segmentEndXVal, segmentEndYVal);\n                var screenWidth = state.data.width;\n                var x = endPointVector.x + OFFSET_X;\n                var y = endPointVector.y;\n                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                var indicatorIsOutOfScreen = screenX < 0 || screenX > screenWidth;\n                if (indicatorIsOutOfScreen) {\n                    if (screenX < 0) x = state.screen.getPointByScreenX(0) + 20;\n                    if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth) - CANVAS_WIDTH / 2 - 10;\n                    y -= 25;\n                }\n                this.mesh.position.set(x + CANVAS_WIDTH / 2, y + CANVAS_HEIGHT / 2 - 30, .1);\n            };\n            return TrendIndicator;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendIndicator = TrendIndicator;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Geometry = THREE.Geometry;\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Vector3 = THREE.Vector3;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var LineSegments = THREE.LineSegments;\n        var Trend_1 = __webpack_require__(19);\n        var Utils_1 = __webpack_require__(16);\n        var MAX_DISPLAYED_SEGMENTS = 2e3;\n        var TrendsLineWidget = function(_super) {\n            __extends(TrendsLineWidget, _super);\n            function TrendsLineWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsLineWidget.prototype.getTrendWidgetClass = function() {\n                return TrendLine;\n            };\n            TrendsLineWidget.widgetName = \"TrendsLine\";\n            return TrendsLineWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsLineWidget = TrendsLineWidget;\n        var TrendLine = function(_super) {\n            __extends(TrendLine, _super);\n            function TrendLine(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeSegmentsInds = [];\n                this.displayedSegments = {};\n                var options = this.trend.getOptions();\n                this.material = new LineBasicMaterial({\n                    color: options.lineColor,\n                    linewidth: options.lineWidth\n                });\n                this.initLine();\n            }\n            TrendLine.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendLine.prototype.getObject3D = function() {\n                return this.lineSegments;\n            };\n            TrendLine.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segments.onRebuild(function() {\n                    _this.destroySegments();\n                    _this.setupSegments();\n                }));\n                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n                    _this.setupSegments();\n                }));\n            };\n            TrendLine.prototype.initLine = function() {\n                var geometry = new Geometry();\n                var _a = this.chartState.data.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = this.chartState.data.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.lineSegments = new LineSegments(geometry, this.material);\n                this.lineSegments.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.lineSegments.frustumCulled = false;\n                for (var i = 0; i < MAX_DISPLAYED_SEGMENTS; i++) {\n                    geometry.vertices.push(new Vector3(), new Vector3());\n                    this.freeSegmentsInds.push(i);\n                }\n                this.vertices = geometry.vertices;\n                this.setupSegments();\n            };\n            TrendLine.prototype.setupSegments = function() {\n                var geometry = this.lineSegments.geometry;\n                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.displayedSegments) {\n                    var lineSegment = this.displayedSegments[segmentId];\n                    var segment_1 = this.trend.segments.segments[lineSegment.segmentId];\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroySegment(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupSegment(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.setupSegment = function(segmentId, segmentState) {\n                var lineSegment = this.displayedSegments[segmentId];\n                if (!lineSegment) {\n                    if (this.freeSegmentsInds.length == 0) Utils_1.Utils.error(\"Max allocated segments reached\");\n                    var ind = this.freeSegmentsInds.pop();\n                    lineSegment = this.displayedSegments[segmentId] = {\n                        segmentId: segmentId,\n                        ind: ind\n                    };\n                }\n                var segmentInd = lineSegment.ind;\n                var lineStartVertex = this.vertices[segmentInd * 2];\n                var lineEndVertex = this.vertices[segmentInd * 2 + 1];\n                lineStartVertex.set(this.toLocalX(segmentState.startXVal), this.toLocalY(segmentState.startYVal), 0);\n                lineEndVertex.set(this.toLocalX(segmentState.endXVal), this.toLocalY(segmentState.endYVal), 0);\n            };\n            TrendLine.prototype.destroySegments = function() {\n                for (var segmentId in this.displayedSegments) this.destroySegment(Number(segmentId));\n            };\n            TrendLine.prototype.destroySegment = function(segmentId) {\n                var lineSegment = this.displayedSegments[segmentId];\n                var lineStartVertex = this.vertices[lineSegment.ind * 2];\n                var lineEndVertex = this.vertices[lineSegment.ind * 2 + 1];\n                lineStartVertex.set(0, 0, 0);\n                lineEndVertex.set(0, 0, 0);\n                delete this.displayedSegments[segmentId];\n                this.freeSegmentsInds.push(lineSegment.ind);\n            };\n            TrendLine.prototype.onZoomFrame = function(options) {\n                var currentScale = this.lineSegments.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendLine.prototype.onSegmentsAnimate = function(trendSegments) {\n                var geometry = this.lineSegments.geometry;\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.displayedSegments[segmentId]) continue;\n                    this.setupSegment(segmentId, trendSegments.segmentsById[segmentId].currentAnimationState);\n                }\n                geometry.verticesNeedUpdate = true;\n            };\n            TrendLine.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            TrendLine.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendLine;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendLine = TrendLine;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Object3D = THREE.Object3D;\n        var Geometry = THREE.Geometry;\n        var Vector3 = THREE.Vector3;\n        var Mesh = THREE.Mesh;\n        var Line = THREE.Line;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var PlaneGeometry = THREE.PlaneGeometry;\n        var Trend_1 = __webpack_require__(19);\n        var LineBasicMaterial = THREE.LineBasicMaterial;\n        var Utils_1 = __webpack_require__(16);\n        var RISE_COLOR = 2927680;\n        var FALL_COLOR = 15619379;\n        var MARGIN_PERCENT = .3;\n        var MAX_CANDLES = 100;\n        var TrendsCandlesWidget = function(_super) {\n            __extends(TrendsCandlesWidget, _super);\n            function TrendsCandlesWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsCandlesWidget.prototype.getTrendWidgetClass = function() {\n                return TrendCandlesWidget;\n            };\n            TrendsCandlesWidget.widgetName = \"TrendsCandles\";\n            return TrendsCandlesWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsCandlesWidget = TrendsCandlesWidget;\n        var TrendCandlesWidget = function(_super) {\n            __extends(TrendCandlesWidget, _super);\n            function TrendCandlesWidget(chartState, trendName) {\n                _super.call(this, chartState, trendName);\n                this.freeCandlesInds = [];\n                this.candlesPool = [];\n                this.candles = {};\n                this.initObject();\n            }\n            TrendCandlesWidget.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.type == Trend_1.TREND_TYPE.CANDLE;\n            };\n            TrendCandlesWidget.prototype.getObject3D = function() {\n                return this.object3D;\n            };\n            TrendCandlesWidget.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.trend.segments.onRebuild(function() {\n                    _this.destroyCandles();\n                    _this.setupCandles();\n                }));\n                this.bindEvent(this.trend.segments.onDisplayedRangeChanged(function() {\n                    _this.setupCandles();\n                }));\n            };\n            TrendCandlesWidget.prototype.initObject = function() {\n                var stateData = this.chartState.data;\n                var _a = stateData.xAxis.range, scaleXFactor = _a.scaleFactor, zoomX = _a.zoom;\n                var _b = stateData.yAxis.range, scaleYFactor = _b.scaleFactor, zoomY = _b.zoom;\n                this.scaleXFactor = scaleXFactor;\n                this.scaleYFactor = scaleYFactor;\n                this.object3D = new Object3D();\n                this.object3D.scale.set(scaleXFactor * zoomX, scaleYFactor * zoomY, 1);\n                this.object3D.frustumCulled = false;\n                for (var i = 0; i < MAX_CANDLES; i++) this.freeCandlesInds.push(i);\n                this.setupCandles();\n            };\n            TrendCandlesWidget.prototype.setupCandles = function() {\n                var _a = this.trend.segments, firstDisplayedSegment = _a.firstDisplayedSegment, lastDisplayedSegment = _a.lastDisplayedSegment;\n                for (var segmentId in this.candles) {\n                    var segment_1 = this.candles[segmentId].segment;\n                    var segmentIsNotDisplayed = segment_1.startXVal < firstDisplayedSegment.startXVal || segment_1.endXVal > lastDisplayedSegment.endXVal;\n                    if (segmentIsNotDisplayed) this.destroyCandle(Number(segmentId));\n                }\n                var segment = firstDisplayedSegment;\n                while (segment && segment.xVal <= lastDisplayedSegment.xVal) {\n                    this.setupCandle(segment.id, segment.currentAnimationState);\n                    segment = segment.getNext();\n                }\n            };\n            TrendCandlesWidget.prototype.destroyCandles = function() {\n                for (var segmentId in this.candles) this.destroyCandle(Number(segmentId));\n            };\n            TrendCandlesWidget.prototype.destroyCandle = function(segmentId) {\n                var candle = this.candles[segmentId];\n                this.object3D.remove(candle.getObject3D());\n                delete this.candles[segmentId];\n            };\n            TrendCandlesWidget.prototype.onZoomFrame = function(options) {\n                var currentScale = this.object3D.scale;\n                if (options.zoomX) currentScale.setX(this.scaleXFactor * options.zoomX);\n                if (options.zoomY) currentScale.setY(this.scaleYFactor * options.zoomY);\n            };\n            TrendCandlesWidget.prototype.onSegmentsAnimate = function(trendSegments) {\n                for (var _i = 0, _a = trendSegments.animatedSegmentsIds; _i < _a.length; _i++) {\n                    var segmentId = _a[_i];\n                    if (!this.candles[segmentId]) continue;\n                    var segmentState = trendSegments.segmentsById[segmentId].currentAnimationState;\n                    this.setupCandle(segmentId, segmentState);\n                }\n            };\n            TrendCandlesWidget.prototype.setupCandle = function(candleId, segmentState) {\n                var candleInd = candleId % MAX_CANDLES;\n                var candle = this.candlesPool[candleInd];\n                if (!candle) {\n                    candle = this.candlesPool[candleInd] = new CandleWidget();\n                }\n                if (!this.candles[candleId]) {\n                    this.candles[candleId] = candle;\n                    this.object3D.add(candle.getObject3D());\n                }\n                candle.getObject3D().position.set(this.toLocalX(segmentState.xVal), this.toLocalY(segmentState.yVal), 0);\n                candle.setSegment(segmentState);\n            };\n            TrendCandlesWidget.prototype.toLocalX = function(xVal) {\n                return xVal - this.chartState.data.xAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalY = function(yVal) {\n                return yVal - this.chartState.data.yAxis.range.zeroVal;\n            };\n            TrendCandlesWidget.prototype.toLocalVec = function(vec) {\n                return new Vector3(this.toLocalX(vec.x), this.toLocalY(vec.y), 0);\n            };\n            return TrendCandlesWidget;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendCandlesWidget = TrendCandlesWidget;\n        var CandleWidget = function() {\n            function CandleWidget() {\n                this.initObject();\n            }\n            CandleWidget.prototype.getObject3D = function() {\n                return this.rect;\n            };\n            CandleWidget.prototype.setSegment = function(segment) {\n                this.segment = segment;\n                var color = segment.endYVal < segment.startYVal ? FALL_COLOR : RISE_COLOR;\n                var geometry = this.rect.geometry;\n                var material = this.rect.material;\n                var width = segment.endXVal - segment.startXVal;\n                width -= width * MARGIN_PERCENT;\n                var height = Math.max(segment.startYVal, segment.endYVal) - Math.min(segment.startYVal, segment.endYVal);\n                var _a = geometry.vertices, leftTop = _a[0], rightTop = _a[1], leftBottom = _a[2], rightBottom = _a[3];\n                leftTop.set(-width / 2, height / 2, 0);\n                rightTop.set(width / 2, height / 2, 0);\n                leftBottom.set(-width / 2, -height / 2, 0);\n                rightBottom.set(width / 2, -height / 2, 0);\n                if (Utils_1.Utils.getDistance(leftTop.y, leftBottom.y) < 1) {\n                    leftBottom.setY(leftBottom.y + 1);\n                    rightBottom.setY(rightBottom.y + 1);\n                }\n                material.color.set(color);\n                geometry.verticesNeedUpdate = true;\n                var vLineGeometry = this.vLine.geometry;\n                var vLineMaterial = this.vLine.material;\n                var lineTop = segment.maxYVal - segment.yVal;\n                var lineBottom = segment.minYVal - segment.yVal;\n                vLineGeometry.vertices[0].set(0, lineTop, 0);\n                vLineGeometry.vertices[1].set(0, lineBottom, 0);\n                vLineMaterial.color.set(color);\n                vLineGeometry.verticesNeedUpdate = true;\n                var hLineGeometry = this.hLine.geometry;\n                var hLineMaterial = this.hLine.material;\n                var lineLeft = -width / 2;\n                var lineRight = width / 2;\n                hLineGeometry.vertices[0].set(lineLeft, 0, 0);\n                hLineGeometry.vertices[1].set(lineRight, 0, 0);\n                hLineMaterial.color.set(color);\n                hLineGeometry.verticesNeedUpdate = true;\n            };\n            CandleWidget.prototype.initObject = function() {\n                this.rect = new Mesh(new PlaneGeometry(1, 1), new MeshBasicMaterial());\n                var vLineGeometry = new Geometry();\n                var hLineGeometry = new Geometry();\n                vLineGeometry.vertices.push(new Vector3(), new Vector3());\n                hLineGeometry.vertices.push(new Vector3(), new Vector3());\n                this.vLine = new Line(vLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.hLine = new Line(hLineGeometry, new LineBasicMaterial({\n                    linewidth: 1\n                }));\n                this.rect.add(this.vLine);\n                this.rect.add(this.hLine);\n            };\n            return CandleWidget;\n        }();\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var __extends = this && this.__extends || function(d, b) {\n            for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n            function __() {\n                this.constructor = d;\n            }\n            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n        };\n        var Utils_1 = __webpack_require__(16);\n        var Mesh = THREE.Mesh;\n        var PlaneBufferGeometry = THREE.PlaneBufferGeometry;\n        var MeshBasicMaterial = THREE.MeshBasicMaterial;\n        var TrendsWidget_1 = __webpack_require__(27);\n        var Trend_1 = __webpack_require__(19);\n        var TrendsBeaconWidget = function(_super) {\n            __extends(TrendsBeaconWidget, _super);\n            function TrendsBeaconWidget() {\n                _super.apply(this, arguments);\n            }\n            TrendsBeaconWidget.prototype.getTrendWidgetClass = function() {\n                return TrendBeacon;\n            };\n            TrendsBeaconWidget.widgetName = \"TrendsBeacon\";\n            return TrendsBeaconWidget;\n        }(TrendsWidget_1.TrendsWidget);\n        exports.TrendsBeaconWidget = TrendsBeaconWidget;\n        var TrendBeacon = function(_super) {\n            __extends(TrendBeacon, _super);\n            function TrendBeacon(state, trendName) {\n                _super.call(this, state, trendName);\n                this.initObject();\n                if (state.data.animations.enabled) {\n                    this.animate();\n                }\n                this.updatePosition();\n            }\n            TrendBeacon.widgetIsEnabled = function(trendOptions) {\n                return trendOptions.enabled && trendOptions.hasBeacon && trendOptions.type == Trend_1.TREND_TYPE.LINE;\n            };\n            TrendBeacon.prototype.getObject3D = function() {\n                return this.mesh;\n            };\n            TrendBeacon.prototype.onTrendChange = function() {\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.bindEvents = function() {\n                var _this = this;\n                _super.prototype.bindEvents.call(this);\n                this.bindEvent(this.chartState.onScroll(function() {\n                    return _this.updatePosition();\n                }));\n                this.bindEvent(this.chartState.onChange(function(changedProps) {\n                    return _this.onStateChange(changedProps);\n                }));\n                this.bindEvent(this.chartState.onDestroy(function() {\n                    return _this.stopAnimation();\n                }));\n            };\n            TrendBeacon.prototype.initObject = function() {\n                var light = this.mesh = new Mesh(new PlaneBufferGeometry(32, 32), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture(),\n                    transparent: true\n                }));\n                light.scale.set(.2, .2, 1);\n                light.add(new Mesh(new PlaneBufferGeometry(5, 5), new MeshBasicMaterial({\n                    map: TrendBeacon.createTexture()\n                })));\n                this.segment = this.trend.segments.getEndSegment();\n            };\n            TrendBeacon.prototype.animate = function() {\n                var _this = this;\n                this.animated = true;\n                var object = this.mesh;\n                var animationObject = {\n                    scale: object.scale.x,\n                    opacity: object.material.opacity\n                };\n                this.mesh.scale.set(.1, .1, 1);\n                setTimeout(function() {\n                    var animation = _this.animation = TweenLite.to(animationObject, 1, {\n                        scale: 1,\n                        opacity: 0\n                    });\n                    animation.eventCallback(\"onUpdate\", function() {\n                        object.scale.set(animationObject.scale, animationObject.scale, 1);\n                        object.material.opacity = animationObject.opacity;\n                    }).eventCallback(\"onComplete\", function() {\n                        _this.animation && animation.restart();\n                    });\n                }, 500);\n            };\n            TrendBeacon.prototype.stopAnimation = function() {\n                this.animated = false;\n                this.animation && this.animation.kill();\n                this.animation = null;\n            };\n            TrendBeacon.createTexture = function() {\n                var h = 32, w = 32;\n                return Utils_1.Utils.createTexture(h, w, function(ctx) {\n                    ctx.beginPath();\n                    ctx.arc(w / 2, h / 2, w / 2, 0, 2 * Math.PI, false);\n                    ctx.fillStyle = \"white\";\n                    ctx.fill();\n                });\n            };\n            TrendBeacon.prototype.onTransformationFrame = function() {\n                this.segment = this.trend.segments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onSegmentsAnimate = function(trendsSegments) {\n                this.segment = trendsSegments.getEndSegment();\n                this.updatePosition();\n            };\n            TrendBeacon.prototype.onStateChange = function(changedProps) {\n                if (!changedProps.animations) return;\n                if (changedProps.animations.enabled == void 0 || changedProps.animations.enabled == this.animated) return;\n                if (changedProps.animations.enabled) {\n                    this.animate();\n                } else {\n                    this.stopAnimation();\n                }\n            };\n            TrendBeacon.prototype.updatePosition = function() {\n                var state = this.chartState;\n                var xVal, yVal;\n                var currentAnimationState = this.segment.currentAnimationState;\n                if (this.trend.getOptions().type == Trend_1.TREND_TYPE.LINE) {\n                    xVal = currentAnimationState.endXVal;\n                    yVal = currentAnimationState.endYVal;\n                } else {\n                    xVal = currentAnimationState.xVal;\n                    yVal = currentAnimationState.endYVal;\n                }\n                var endPointVector = state.screen.getPointOnChart(xVal, yVal);\n                var screenWidth = state.data.width;\n                var x = endPointVector.x;\n                var screenX = state.screen.getScreenXByPoint(endPointVector.x);\n                if (screenX < 0) x = state.screen.getPointByScreenX(0);\n                if (screenX > screenWidth) x = state.screen.getPointByScreenX(screenWidth);\n                this.mesh.position.set(x, endPointVector.y, .1);\n            };\n            return TrendBeacon;\n        }(TrendsWidget_1.TrendWidget);\n        exports.TrendBeacon = TrendBeacon;\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        function __export(m) {\n            for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n        }\n        __export(__webpack_require__(3));\n    }, function(module, exports, __webpack_require__) {\n        \"use strict\";\n        var Utils_1 = __webpack_require__(16);\n        var EventEmmiter_1 = __webpack_require__(15);\n        exports.DEFAULT_CONFIG = {\n            installPluginWidgets: true\n        };\n        var ChartPlugin = function() {\n            function ChartPlugin(options, config) {\n                if (config === void 0) {\n                    config = {};\n                }\n                this.unsubscribers = [];\n                this.initialState = options;\n                this.config = Utils_1.Utils.deepMerge(exports.DEFAULT_CONFIG, config);\n                this.name = this.constructor.NAME;\n                if (!this.name) Utils_1.Utils.error(\"Unnamed plugin detected\");\n            }\n            ChartPlugin.prototype.setupChartState = function(chartState) {\n                var _this = this;\n                this.chartState = chartState;\n                this.ee = new EventEmmiter_1.EventEmitter();\n                this.bindEvent(this.chartState.onInitialStateApplied(function(initialState) {\n                    return _this.onInitialStateAppliedHandler(initialState);\n                }), this.chartState.onReady(function() {\n                    return _this.onChartReadyHandler();\n                }), this.chartState.onDestroy(function() {\n                    return _this.onDestroyHandler();\n                }), this.chartState.onPluginsStateChange(function(changedPluginsStates) {\n                    return changedPluginsStates[_this.name] && _this.onStateChanged(changedPluginsStates[_this.name]);\n                }));\n            };\n            ChartPlugin.prototype.getOptions = function() {\n                return this.chartState.data.pluginsState[this.name];\n            };\n            ChartPlugin.prototype.onInitialStateAppliedHandler = function(initialState) {};\n            ChartPlugin.prototype.onChartReadyHandler = function() {};\n            ChartPlugin.prototype.onStateChanged = function(changedState) {};\n            ChartPlugin.prototype.onDestroyHandler = function() {\n                this.ee.removeAllListeners();\n            };\n            ChartPlugin.prototype.bindEvent = function() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i - 0] = arguments[_i];\n                }\n                var unsubscribers = [];\n                if (!Array.isArray(args[0])) {\n                    unsubscribers.push(args[0]);\n                } else {\n                    unsubscribers.push.apply(unsubscribers, args);\n                }\n                (_a = this.unsubscribers).push.apply(_a, unsubscribers);\n                var _a;\n            };\n            ChartPlugin.prototype.unbindEvents = function() {\n                this.unsubscribers.forEach(function(unsubscriber) {\n                    return unsubscriber();\n                });\n                this.unsubscribers.length = 0;\n            };\n            ChartPlugin.NAME = \"\";\n            ChartPlugin.pluginWidgets = [];\n            return ChartPlugin;\n        }();\n        exports.ChartPlugin = ChartPlugin;\n    } ]);\n});\n\n\n//# sourceMappingURL=ThreeChart.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-chart/build/ThreeChart.js\n ** module id = 3\n ** module chunks = 0\n **/","import {ChartState, Utils, TrendsWidget, TrendWidget } from 'three-chart';\nimport Geometry = THREE.Geometry;\nimport Mesh = THREE.Mesh;\nimport LineBasicMaterial = THREE.LineBasicMaterial;\nimport Material = THREE.Material;\nimport Vector3 = THREE.Vector3;\nimport Line = THREE.Line;\nimport Object3D = THREE.Object3D;\nimport Face3 = THREE.Face3;\nimport Texture = THREE.Texture;\nimport Vector2 = THREE.Vector2;\nimport LineSegments = THREE.LineSegments;\nimport LineDashedMaterial = THREE.LineDashedMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport { TrendMark, TREND_MARK_SIDE, TrendsMarksPlugin } from \"./TrendsMarksPlugin\";\n\n\nconst MAX_MARKS_IN_ROW = 3;\n\n/**\n * widget for drawing trends marks for all trends\n */\nexport class TrendsMarksWidget extends TrendsWidget<TrendMarksWidget> {\n\tstatic widgetName = \"TrendsMarks\";\n\tprotected getTrendWidgetClass() {\n\t\treturn TrendMarksWidget;\n\t}\n}\n\n/**\n * widget for drawing trend marks for one trend\n */\nexport class TrendMarksWidget extends TrendWidget {\n\n\tprivate trendsMarksPlugin: TrendsMarksPlugin;\n\tprivate object3D: Object3D;\n\tprivate marksWidgets: {[name: string]: TrendMarkWidget} = {};\n\n\tconstructor (chartState: ChartState, trendName: string) {\n\t\tsuper(chartState, trendName);\n\t\tthis.object3D = new Object3D();\n\t\tthis.onMarksChange();\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\t\n\tprotected bindEvents() {\n\t\tsuper.bindEvents();\n\t\tthis.getTrendsMarksPlugin().onChange(() => this.onMarksChange());\n\t}\n\n\tprivate getTrendsMarksPlugin(): TrendsMarksPlugin {\n\t\treturn this.chartState.getPlugin(TrendsMarksPlugin.NAME) as TrendsMarksPlugin;\n\t}\n\n\tprivate onMarksChange() {\n\t\tlet marksItems = this.getTrendsMarksPlugin().getItems();\n\t\tlet widgets = this.marksWidgets;\n\t\tlet actualMarksNames: string[] = [];\n\t\tfor (let markName in marksItems) {\n\t\t\tactualMarksNames.push(markName);\n\t\t\tif (!widgets[markName]) this.createMarkWidget(marksItems[markName]);\n\t\t}\n\t\tfor (let markName in this.marksWidgets) {\n\t\t\tif (actualMarksNames.indexOf(markName) !== -1) continue;\n\t\t\tthis.destroyMarkWidget(markName);\n\t\t}\n\n\t}\n\t\n\tprivate createMarkWidget(mark: TrendMark) {\n\t\tif (!mark.segment) return;\n\t\tlet markWidget = new TrendMarkWidget(this.chartState, mark);\n\t\tthis.marksWidgets[mark.options.name] = markWidget;\n\t\tthis.object3D.add(markWidget.getObject3D());\n\t}\n\n\tprivate destroyMarkWidget(markName: string) {\n\t\tthis.object3D.remove(this.marksWidgets[markName].getObject3D());\n\t\tdelete this.marksWidgets[markName];\n\t}\n\n\tprotected onZoomFrame() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onZoomFrameHandler();\n\t\t}\n\t}\n\n\tprotected onSegmentsAnimate() {\n\t\tvar widgets = this.marksWidgets;\n\t\tfor (let markName in widgets) {\n\t\t\twidgets[markName].onSegmentsAnimate();\n\t\t}\n\t}\n}\n\n/**\n * widget for drawing one trend mark\n */\nclass TrendMarkWidget {\n\tprivate chartState: ChartState;\n\tprivate mark: TrendMark;\n\tprivate object3D: Object3D;\n\tprivate line: Line;\n\tprivate markMesh: Mesh;\n\tprivate markHeight = 74;\n\tprivate markWidth = 150;\n\tprivate position = {lineHeight: 30, x: 0, y: 0};\n\n\tconstructor(chartState: ChartState, trendMark: TrendMark) {\n\t\tthis.chartState = chartState;\n\t\tthis.mark = trendMark;\n\t\tthis.initObject();\n\t\tthis.show();\n\t}\n\t\n\tprotected initObject() {\n\t\tthis.object3D = new Object3D();\n\t\tthis.markMesh = this.createMarkMesh();\n\t\tthis.line = this.createMarkLine();\n\t\tthis.object3D.add(this.markMesh);\n\t\tthis.object3D.add(this.line);\n\t}\n\n\tprotected createMarkMesh(): Mesh {\n\t\tvar {markHeight, markWidth} = this;\n\t\tvar mark = this.mark.options;\n\t\tvar isTopSide = mark.orientation == TREND_MARK_SIDE.TOP;\n\n\t\tvar texture = Utils.createPixelPerfectTexture(markWidth, markHeight, (ctx) => {\n\n\t\t\tvar circleOffset = isTopSide ? 30 : 0;\n\t\t\tvar circleR = 22;\n\t\t\tvar circleX = markWidth / 2;\n\t\t\tvar circleY = circleOffset + circleR;\n\t\t\tvar textOffset = isTopSide ? 10 : circleR * 2 + 15;\n\n\t\t\t// title and description\n\t\t\tctx.beginPath();\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.font = \"11px Arial\";\n\t\t\tctx.fillStyle = 'rgba(255,255,255, 0.6)';\n\t\t\tctx.fillText(mark.title, circleX, textOffset);\n\t\t\tctx.fillStyle = mark.descriptionColor;\n\t\t\tctx.fillText(mark.description, circleX, textOffset + 12);\n\n\t\t\t// icon circle\n\t\t\tctx.beginPath();\n\t\t\tctx.fillStyle = mark.iconColor;\n\t\t\tctx.arc(circleX, circleY, circleR, 0, 2 * Math.PI);\n\t\t\tctx.fill();\n\n\t\t\t// icon text\n\t\t\tctx.font = \"19px Arial\";\n\t\t\tctx.fillStyle = 'rgb(255, 255, 255)';\n\t\t\tctx.fillText(mark.icon, circleX, circleY + 7);\n\n\t\t});\n\n\t\tvar material = new THREE.MeshBasicMaterial( {map: texture, side: THREE.FrontSide} );\n\t\tmaterial.transparent = true;\n\n\t\tvar mesh = new Mesh(\n\t\t\tnew THREE.PlaneGeometry(markWidth, markHeight),\n\t\t\tmaterial\n\t\t);\n\n\t\tlet offset = this.mark.options.orientation == TREND_MARK_SIDE.TOP ? this.mark.offset : -this.mark.offset;\n\t\t// mesh.position.setY(markHeight / 2 + offset);\n\n\t\treturn mesh;\n\t}\n\n\tprotected createMarkLine() {\n\t\tlet lineGeometry = new Geometry();\n\t\tlineGeometry.vertices.push( new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, this.mark.offset, 0) );\n\t\tlineGeometry.computeLineDistances();\n\t\tlet lineMaterial = new THREE.LineDashedMaterial( {dashSize: 1, gapSize: 4, transparent: true, opacity: 0.6 } );\n\t\tlet line = new THREE.Line( lineGeometry, lineMaterial );\n\t\tline.position.setZ(-0.1);\n\t\treturn line\n\t}\n\n\tgetObject3D() {\n\t\treturn this.object3D;\n\t}\n\n\tonSegmentsAnimate() {\n\t\tthis.updatePosition();\n\t}\n\n\tonZoomFrameHandler() {\n\t\tthis.updatePosition();\n\t}\n\n\tprivate updatePosition() {\n\t\tif (!this.mark.segment) return;\n\t\tlet mark = this.mark;\n\t\tlet meshMaterial = this.markMesh.material as MeshBasicMaterial;\n\t\tlet lineMaterial = this.line.material as LineBasicMaterial;\n\t\tif (mark.row >= MAX_MARKS_IN_ROW - 1) {\n\t\t\tmeshMaterial.opacity = 0;\n\t\t\tlineMaterial.opacity = 0;\n\t\t} else {\n\t\t\tmeshMaterial.opacity = 1;\n\t\t\tlineMaterial.opacity = 1;\n\t\t}\n\n\t\tlet screen = this.chartState.screen;\n\t\tlet posX = screen.getPointOnXAxis(mark.xVal);\n\t\tlet posY = screen.getPointOnYAxis(mark.yVal);\n\t\tlet lineGeometry = this.line.geometry as Geometry;\n\n\t\tif (mark.options.orientation == TREND_MARK_SIDE.TOP) {\n\t\t\tthis.markMesh.position.setY(this.markHeight / 2 + mark.offset);\n\t\t\tlineGeometry.vertices[1].setY(mark.offset);\n\t\t} else {\n\t\t\tthis.markMesh.position.setY(-mark.offset - this.markHeight / 2);\n\t\t\tlineGeometry.vertices[1].setY(-mark.offset);\n\t\t}\n\t\tlineGeometry.verticesNeedUpdate = true;\n\t\tlineGeometry.lineDistancesNeedUpdate = true;\n\t\tlineGeometry.computeLineDistances();\n\t\tthis.object3D.position.set(posX, posY, 0);\n\t}\n\n\tprivate show() {\n\t\tif (!this.mark.segment) return;\n\t\tthis.updatePosition();\n\t\tvar animations = this.chartState.data.animations;\n\t\tvar time = animations.enabled ? 1 : 0;\n\t\tthis.object3D.scale.set(0.01, 0.01, 1);\n\t\tTweenLite.to(this.object3D.scale, time, {x: 1, y: 1, ease: Elastic.easeOut});\n\t}\n}\n\n\n/** WEBPACK FOOTER **\n ** ./plugins/src/TrendsMarksPlugin/TrendsMarksWidget.ts\n **/"],"sourceRoot":""}